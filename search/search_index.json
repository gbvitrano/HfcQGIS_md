{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"autore/","text":"Bio \u21b5 Salvatore FIANDACA ( aka pigreco , per gli amici Tot\u00f2 ) Usa spesso, nei vari social, il nickname pigreco ma \u00e8 nel titolo del suo blog - Pigrecoinfinito - che si cela il suo nome in siciliano. Per capire quale sia occorre osservare con attenzione il logo che lo rappresenta: sono sovrapposti i simboli di pi greco, dell'infinito e della derivata prima: tre simboli matematici che hanno rivoluzionato la scienza; se osservate bene vedrete scritto il suo nome. Prima di iniziare l'attivit\u00e0 di divulgatore del Open Source (OS), Salvatore ha utilizzato - per anni - software proprietari, solo dopo la scoperta del OS abbandon\u00f2 definitivamente il mondo Close Source e decise di divulgare la filosofia OS tramite blog post e video su youtube. Attualmente il blog \u00e8 seguito in tutto il mondo ed il canale youtube ha oltre 2800 iscritti (giu-2021). Cura il Blog ' Pigrecoinfinito ' e il canale YouTube dove scrive e parla di QGIS,Qfield, SpatiaLite, PostegreSQL/PostGIS, GDAL/OGR, GRASS GIS, SAGA GIS, GitHub, OSGeo4W, ed altri FOSS; ama usare, nella professione e non solo, software OS come LibreOffice, InkSCAPE, GIMP ecc... Libero Professionista, attualmente \u00e8 socio GFOSS.it dal 2017, membro di QGIS Italia dal 2015 e di QGIS.org dal 2020, moderatore di vari forum con argomenti GFOSS. Partecipa, nel 2014, alla fondazione di Open Data Sicilia realizzando uno dei primi progetti del gruppo (Balneazione Palermo 2014, Piano regolatore del Comune di Palermo 2015 ), nel 2016 \u00e8 tra i relatori del #ODS16 OpenDataSicilia Summer Edition Messina, in cui parla di QGIS. Salvatore \u00e8 disponibile per nuovi progetti di divulgazione, oltre a consulenze private. Puoi raggiungere Salvatore all'indirizzo @pigrecoinfinito Molto attivo nella comunit\u00e0 di QGIS: ha partecipato alla realizzazione di un plugin ( Select by Relationship ); utilizza la OSGeo4W Network installer per fare testing sulle versione dev di QGIS; ha aperto numerosi ticket nel QGIS Issue Tracking ; scrive nelle mailing list di: QGIS-it-user, GFOSS, Spatialite, gvSIG; \u00e8 co-admin della pagina ufficiale di QGIS Italia ; ha collaborato per i testing di nuove feature di QGIS; si diverte a compilare la versione QGIS dev su GNU/Linux MINT; ha realizzato Pull request (PR) nel progetto princiaple di QGIS ; \u00e8 iscritto a gis.stackexchange . Ha organizzato e partecipato alle prime due Hack Fest QGIS Italia realizzate a Bologna e Padova (2017) e parteciper\u00e0 alla prossima a Viterbo (2018) . Foto : Hack Fest QGIS ITA Bologna 2017, da sinistra: Luca Mandolesi, Giuseppe Guarino, Salvatore Fiandaca, Pierluigi de Rosa e Enrico Ferreguti (uno dei pi\u00f9 attivi sviluppatori di plugin italiani Foto : Hack Fest QGIS ITA Padova 2017, da sinistra: Salvatore Fiandaca, Amedeo Fadini, Federico Gianoli, Matteo Ghetta,prof. Massimo De Marchi, Stefano Campus, Alessandro Sarretta, Enrico Ferreguti Foto : Hack Fest QGIS ITA Viterbo 2018 Foto : Hack Fest QGIS ITA Padova 2019 QGIS Summer Camp \u21b5 Padova luglio 2019 Foto : QGIS Summer Camp Padova 2019 5/7 luglio Certificate of Appreciation Foto da sinistra: Rocco Pispico, Enrico Ferreguti, Federico Gianoli, Matteo Ghetta, Stefano Campus, Tot\u00f2 (io) e Paolo Cavallini. Workshop e Seminari \u21b5 Alla scoperta delle espressioni di QGIS: come e dove usarle Dagli Open Data all'Open Source: lavorare in QGIS con le mappe catastali COVID: Analisi geografica con strumenti GIS Open Source ODS16 Messina Ama ascoltare E. Morricone Contatti \u21b5","title":"Autore HfcQGIS"},{"location":"autore/#bio","text":"Salvatore FIANDACA ( aka pigreco , per gli amici Tot\u00f2 ) Usa spesso, nei vari social, il nickname pigreco ma \u00e8 nel titolo del suo blog - Pigrecoinfinito - che si cela il suo nome in siciliano. Per capire quale sia occorre osservare con attenzione il logo che lo rappresenta: sono sovrapposti i simboli di pi greco, dell'infinito e della derivata prima: tre simboli matematici che hanno rivoluzionato la scienza; se osservate bene vedrete scritto il suo nome. Prima di iniziare l'attivit\u00e0 di divulgatore del Open Source (OS), Salvatore ha utilizzato - per anni - software proprietari, solo dopo la scoperta del OS abbandon\u00f2 definitivamente il mondo Close Source e decise di divulgare la filosofia OS tramite blog post e video su youtube. Attualmente il blog \u00e8 seguito in tutto il mondo ed il canale youtube ha oltre 2800 iscritti (giu-2021). Cura il Blog ' Pigrecoinfinito ' e il canale YouTube dove scrive e parla di QGIS,Qfield, SpatiaLite, PostegreSQL/PostGIS, GDAL/OGR, GRASS GIS, SAGA GIS, GitHub, OSGeo4W, ed altri FOSS; ama usare, nella professione e non solo, software OS come LibreOffice, InkSCAPE, GIMP ecc... Libero Professionista, attualmente \u00e8 socio GFOSS.it dal 2017, membro di QGIS Italia dal 2015 e di QGIS.org dal 2020, moderatore di vari forum con argomenti GFOSS. Partecipa, nel 2014, alla fondazione di Open Data Sicilia realizzando uno dei primi progetti del gruppo (Balneazione Palermo 2014, Piano regolatore del Comune di Palermo 2015 ), nel 2016 \u00e8 tra i relatori del #ODS16 OpenDataSicilia Summer Edition Messina, in cui parla di QGIS. Salvatore \u00e8 disponibile per nuovi progetti di divulgazione, oltre a consulenze private. Puoi raggiungere Salvatore all'indirizzo @pigrecoinfinito Molto attivo nella comunit\u00e0 di QGIS: ha partecipato alla realizzazione di un plugin ( Select by Relationship ); utilizza la OSGeo4W Network installer per fare testing sulle versione dev di QGIS; ha aperto numerosi ticket nel QGIS Issue Tracking ; scrive nelle mailing list di: QGIS-it-user, GFOSS, Spatialite, gvSIG; \u00e8 co-admin della pagina ufficiale di QGIS Italia ; ha collaborato per i testing di nuove feature di QGIS; si diverte a compilare la versione QGIS dev su GNU/Linux MINT; ha realizzato Pull request (PR) nel progetto princiaple di QGIS ; \u00e8 iscritto a gis.stackexchange . Ha organizzato e partecipato alle prime due Hack Fest QGIS Italia realizzate a Bologna e Padova (2017) e parteciper\u00e0 alla prossima a Viterbo (2018) . Foto : Hack Fest QGIS ITA Bologna 2017, da sinistra: Luca Mandolesi, Giuseppe Guarino, Salvatore Fiandaca, Pierluigi de Rosa e Enrico Ferreguti (uno dei pi\u00f9 attivi sviluppatori di plugin italiani Foto : Hack Fest QGIS ITA Padova 2017, da sinistra: Salvatore Fiandaca, Amedeo Fadini, Federico Gianoli, Matteo Ghetta,prof. Massimo De Marchi, Stefano Campus, Alessandro Sarretta, Enrico Ferreguti Foto : Hack Fest QGIS ITA Viterbo 2018 Foto : Hack Fest QGIS ITA Padova 2019","title":"Bio"},{"location":"autore/#qgis-summer-camp","text":"Padova luglio 2019 Foto : QGIS Summer Camp Padova 2019 5/7 luglio Certificate of Appreciation Foto da sinistra: Rocco Pispico, Enrico Ferreguti, Federico Gianoli, Matteo Ghetta, Stefano Campus, Tot\u00f2 (io) e Paolo Cavallini.","title":"QGIS Summer Camp"},{"location":"autore/#workshop-e-seminari","text":"Alla scoperta delle espressioni di QGIS: come e dove usarle Dagli Open Data all'Open Source: lavorare in QGIS con le mappe catastali COVID: Analisi geografica con strumenti GIS Open Source ODS16 Messina Ama ascoltare E. Morricone","title":"Workshop e Seminari"},{"location":"autore/#contatti","text":"","title":"Contatti"},{"location":"bla/","text":"BENVENUTI \u21b5","title":"BENVENUTI"},{"location":"bla/#benvenuti","text":"","title":"BENVENUTI"},{"location":"contributing/","text":"Contribuire a HfcQGIS \u21b5 Prima di tutto, grazie per aver dedicato del tempo a questo progetto! \ud83d\udc4d Quella che segue \u00e8 una serie di linee guida per contribuire a HfcQGIS . Queste sono principalmente linee guida, non regole. Usa il buon senso e sentiti libero di proporre modifiche a questo documento in una pull request. Come puoi contribuire \u21b5 Donazione \u21b5 Per realizzare questa guida ho impiegato del tempo e messo a disposizione tutta la mia conoscenza sullo strumento. Divulgando \u21b5 Per favore usa i tasti di condivisione social inserendo alcuni hastag: #hfcqgis #qgis @opendatasicilia (se hai attivo un ad blocker , i tasti di condivisione non verranno visualizzati). Segnalando \u21b5 Se trovi qualche malfunzionamento segnalalo, cos\u00ec da migliorare la guida. Suggerendo \u21b5 Se hai suggerimenti o migliorie segnalali. Esercizi \u21b5 Se vuoi che la sezione esempi cresca, suggerisci degli esempi/esercizi che vorresti vedere. Pull Requests \u21b5 Includere screenshot e GIF animate nella richiesta di pull, quando possibile. Documenta bene Terminare tutti i file con una nuova riga Evita il codice dipendente dalla piattaforma da documentare \u21b5 Elenco funzione/variabili da documentare tramite donazione Apri elenco","title":"Contribuire"},{"location":"contributing/#contribuire-a-hfcqgis","text":"Prima di tutto, grazie per aver dedicato del tempo a questo progetto! \ud83d\udc4d Quella che segue \u00e8 una serie di linee guida per contribuire a HfcQGIS . Queste sono principalmente linee guida, non regole. Usa il buon senso e sentiti libero di proporre modifiche a questo documento in una pull request.","title":"Contribuire a HfcQGIS"},{"location":"contributing/#come-puoi-contribuire","text":"","title":"Come puoi contribuire"},{"location":"contributing/#donazione","text":"Per realizzare questa guida ho impiegato del tempo e messo a disposizione tutta la mia conoscenza sullo strumento.","title":"Donazione"},{"location":"contributing/#divulgando","text":"Per favore usa i tasti di condivisione social inserendo alcuni hastag: #hfcqgis #qgis @opendatasicilia (se hai attivo un ad blocker , i tasti di condivisione non verranno visualizzati).","title":"Divulgando"},{"location":"contributing/#segnalando","text":"Se trovi qualche malfunzionamento segnalalo, cos\u00ec da migliorare la guida.","title":"Segnalando"},{"location":"contributing/#suggerendo","text":"Se hai suggerimenti o migliorie segnalali.","title":"Suggerendo"},{"location":"contributing/#esercizi","text":"Se vuoi che la sezione esempi cresca, suggerisci degli esempi/esercizi che vorresti vedere.","title":"Esercizi"},{"location":"contributing/#pull-requests","text":"Includere screenshot e GIF animate nella richiesta di pull, quando possibile. Documenta bene Terminare tutti i file con una nuova riga Evita il codice dipendente dalla piattaforma","title":"Pull Requests"},{"location":"contributing/#da-documentare","text":"Elenco funzione/variabili da documentare tramite donazione Apri elenco","title":"da documentare"},{"location":"disclaimer/","text":"Disclaimer \u21b5 Questa guida NON sostituisce il manuale online di QGIS, cerca solo di rendere pi\u00f9 facile la comprensione dello strumento. Il marchio QGIS \u00e8 stato realizzato da Anita Graser , l\u2019immagine HfcQGIS \u00e8 stata realizzata da Tot\u00f2 Fiandaca (autore del manuale) usando InkSCAPE e il carattere Trueno Bold . I colori utilizzati in questo RTD sono fedeli alla Visual Style Guide di QGIS","title":"Disclaimer"},{"location":"disclaimer/#disclaimer","text":"Questa guida NON sostituisce il manuale online di QGIS, cerca solo di rendere pi\u00f9 facile la comprensione dello strumento. Il marchio QGIS \u00e8 stato realizzato da Anita Graser , l\u2019immagine HfcQGIS \u00e8 stata realizzata da Tot\u00f2 Fiandaca (autore del manuale) usando InkSCAPE e il carattere Trueno Bold . I colori utilizzati in questo RTD sono fedeli alla Visual Style Guide di QGIS","title":"Disclaimer"},{"location":"mettiti_alla_prova/","text":"Mettiti alla prova con le espressioni di QGIS \u21b5 Provaci Tu \u21b5 Risolvi questi quesiti e scopri il tuo livello di conoscenza del Field Calc Dati utilizzati \u21b5 Gli shapefile ISTAT 2021 generalizzati scaricabili da qui Esercizi e quesiti da svolgere con QGIS 3.16 Hannover o superiore: Quesiti \u21b5 1.Usando il layer Reg01012020_g_WGS84 , tracciare il Bounding Box (poligono) delle regioni, usando il Generatore di geometrie: 2.segue esempio 1), visualizzare etichetta solo nel Bounding Box della Puglia, nell'angolo in alto a destra: 3.Usando i layer Reg01012021_g_WGS84 e RipGeo01012021_WGS84 creare un vettore lineare usando il geo-algoritmo Geometria tramite espressione che colleghi i centroidi delle ripartizioni geografiche con i centroidi delle relative regioni, vedi sotto: 4.Usando il layer ProvCM01012021_WGS84 , calcolare la lunghezza della linea che collega tutti i point_on_surface delle province ordinate per regione; poi etichettare lo stesso strato in modo da visualizzare in basso a sinistra la lunghezza totale formattata, vedi sotto: 5.Come selezionare la provincia italiana che ha il maggior numero di province confinanti?; 6.Come selezionare la terza provincia pi\u00f9 estesa della ripartizione geografica Nord-Est ; 7.Creare un campo numerico e popolarlo con la classifica (1,2,3,4\u2026.) delle province pi\u00f9 estese raggruppate per ripartizione geografica (ovvero, 5 classifiche, una per ogni ripartizione, in modo che possa leggere quale sia l'ordine delle province pi\u00f9 estese per ogni ripartizione); 8.Perch\u00e9 in generale $area <> area($geometry) ? 9.Con quale espressione \u00e8 possibile tracciare il centroide lungo una linea (non rettilinea)? 10.Perch\u00e9 sono utili i campi virtuali? 11.In che condizioni \u00e8 vera questa uguaglianza $x = x($geometry)) ? 12.Usando i layer Reg01012021_g_WGS84 e ProvCM01012021_WGS84 (filtro per cod_reg=9) creare l'effetto visualizzabile nello screenshot di sotto (spostando il mouse, \u00e8 visibile il layer sottostante e la relativa etichetta): 13.I Raster possono essere utilizzati nel Field Calc? motivare la risposta. 14.Posso richiamare i valori di un altro layer usando le espressioni di QGIS? Se s\u00ec, con quali funzioni? 15.Per fare la concatenazione di stringhe \u00e8 possibile utilizzare sia || che + , ma che differenza c'\u00e8 tra i due ? 16.Utilizzando lo shapefile Reg01012021_g_WGS84 quale espressione permette di selezionare le feature pari? 17.All'interno della Finestra di dialogo del Field Calc (dove scriviamo le espressioni) \u00e8 possibile scrivere dei commenti, in quale modo? 18.Utilizzando lo shapefile Reg01012021_g_WGS84 , quale elemento restituisce questa espressione array_agg(\"COD_REG\")[-1] (il primo, l'ultimo, nessuno, \u2026)? 19.Utilizzando lo shapefile ProvCM01012021_WGS84 , quale valore devo sostituire al posto della X affinch\u00e9 l'uguaglianza sia soddisfatta: array_first(array_agg(\"COD_PROV\")) = array_agg(\"COD_PROV\")[X] ? 20.Nella Selezione per Espressione , quale tipo di output (numero, testo, booleano) deve dare l'espressione utilizzata nella finestra di dialogo sottostante (stesso concetto vale per i filtri) ? 21.Usando i layer Reg01012021_g_WGS84 e RipGeo01012021_WGS84 etichettare il layer RipGeo01012021_WGS84 con il numero delle regioni corrispondenti, come sotto (utilizzare solo espressioni): 22.Dove posso utilizzare la variabile @parent ? (ovunque o solo in?) 23.Le variabili dipendono dal contesto in cui lavoriamo (field calc, seleziona per espressione, compositore di stampe, ecc\u2026) ? motivare la risposta; 24.Posso utilizzare le espressioni nel compositore di stampe ? fai qualche esempio 25.La variabile @atlas_geometry \u00e8 sempre disponibile? motivare la risposta. 26.Nel Field Calc \u00e8 possibile aggiornare un attributo, cosa significa aggiornare l'attributo geometria tramite espressione, fai un esempio ? 27.Cosa sono e a che servono i parametri denominati nelle espressioni ? 28.Mettiti alla prova, rispondi prima di verificare in QGIS: '1' + '20' = 21 \u00e8 corretta questa uguaglianza ? motiva la risposta. 29.Il Field Calc popola un attributo alla volta, \u00e8 vera questa affermazione ? motiva risposta. 30.A partire dalla colonna \"cod_rip\", come ottenere la colonna \"INVERTI\" ? che espressione useresti ? vedi sotto: 31.Usando il layer ProvCM01012021_WGS84 selezionare le province che hanno il nome (\"den_uts\") con meno di 5 lettere: 32.Supponiamo di avere, in una tabella degli attributi, due colonne: la prima ( field_1 ) \u00e8 una descrizione caratterizzata da un lungo testo; un secondo campo ( field_2 ) in cui c'\u00e8 una parola; come verificare che la parola sia presente nel attributo descrizione ? 33.Usando il layer ProvCM01012021_WGS84 come scoprire il suo EPSG usando le espressioni ? 34.Usando i layer RipGeo01012021_WGS84 e in particolare la sua tabella degli attributi, aggiungere un campo ( cum ) e popolarlo con la somma cumulativa del campo \"cod_rip\", in modo da ottenere: 35.Alla variabile @parent \u00e8 assegnata una feature o un valore ? motivare la risposta. 36.La seguente uguaglianza $id = @rownumber relativamente alla prima feature, \u00e8 vera quando? 37.Usando uno shapefile, $id inizia da 1 o 0 ? 38.Usando un GeoPackage, @row_number inizia da 0 o 1 ? 39.\u00c8 possibile realizzare una JOIN tabellare (al volo) usando solo espressioni ? motivare la risposta. (esempio: fare una join tabellare tra il vettore RipGeo01012021_WGS84 e il file CSV sottostante) id valore 1 ciao 2 viva 3 QGIS 4 3.16.6 5 Hannover 40.\u00c8 uno dei geo-algoritmi pi\u00f9 famosi in ambito GIS Conta punti nel Poligono , \u00e8 possibile fare la stessa cosa usando solo le espressioni del Field Calc di QGIS ? motivare la risposta 41.Con quale espressione \u00e8 possibile aggiungere il numero di pagine in un atlante (nel formato nro pagina/totale pagine) ? 42.Quale valore memorizza la variabile @project_folder ? 43.\u00c8 possibile associare a una variabile una immagine SVG ? se s\u00ec, in quali casi ? 44.Se definissi una variabile Globale con nome my_var = 5 e poi definissi la stessa variabile a livello di Progetto my_var = 50; quale valore verrebbe associato alla variabile ? motivare la risposta 45.Le espressioni di QGIS sono utilizzabili ovunque in QGIS, per esempio: tabella attributi , tematizzazione , etichettatura , strumenti di processing , compositore di stampe , atlanti , report , moduli inserimento dati , widget , legenda , azioni , plugin , modellatore grafico , diagrammi , filtri , selezione , decorazioni , copyright , ecc.. lo sapevi ? motivare la risposta!\ud83d\ude01 46.Quattro vettori da 4 provider differenti (PostGIS, Spatialite, GeoPackage e shapefile), dove funzionano meglio le espressioni di QGIS ? motivare la risposta 47.La funzione array_agg() permette di trasformare un campo in un array , quale funzione trasforma una feature in un array ? 48.Nella finestra del Calcolatore di Campi , nella sezioni Gruppi (dove ci sono tutti le funzioni suddivise per gruppi), alcuni gruppi sono presenti solo in certe condizioni, per esempio il gruppo Relazioni quando \u00e8 visibile ? 49.Supponiamo di avere il seguente CSV con tre attributi, l'ultimo GPS contiene la coppia di coordinate separate da , come da tabella sotto: DATA NOME GPS 01/02/20 cucu 44.852747416606434,10.028176383697463 02/02/20 ciao 44.044566892850995,12.055562011167229 03/02/20 arrivederci 41.83774391119999,13.131616192302847 04/02/20 pluto 41.08389804418973,16.013252812971114 05/02/20 paperino 38.336008270894254,16.06188803019758 domanda 1 : come ottenere quest'altra tabella, dividendo i campi latitudine e longitudine ? DATA NOME GPS latitude longitude 01/02/20 cucu 44.852747416606434,10.028176383697463 44.852747416606434 10.028176383697463 02/02/20 ciao 44.044566892850995,12.055562011167229 44.044566892850995 12.055562011167229 03/02/20 arrivederci 41.83774391119999,13.131616192302847 41.8377439119999 13.131616192302847 04/02/20 pluto 41.08389804418973,16.013252812971114 41.08389804418973 16.013252812971114 05/02/20 paperino 38.336008270894254,16.06188803019758 38.336008270894254 16.06188803019758 domanda 2 : come ottenere solo sei cifre decimali per gli ultimi due campi ? DATA NOME GPS latitude longitude 01/02/20 cucu 44.852747416606434,10.028176383697463 44.852747 10.028176 02/02/20 ciao 44.044566892850995,12.055562011167229 44.044566 12.055562 03/02/20 arrivederci 41.83774391119999,13.131616192302847 41.837743 13.131616 04/02/20 pluto 41.08389804418973,16.013252812971114 41.083898 16.013252 05/02/20 paperino 38.336008270894254,16.06188803019758 38.336008 16.061888 50.A cosa serve l'operatore '\\n' ? Esito esercizi \u21b5 Per chi volesse sapere l'esito degli esercizi svolti, inviare le risposte alla mail: pigrecoinfinito@gmail.com con OGGETTO: Test #HfcQGIS Risultati \u21b5 Sono 50 quesiti di difficolt\u00e0 variabile ( media-alta ), sotto i consigli di Pigreco nro range (risposte esatte) significato 1 tra 0 e 10 occorre urgentemente seguire il Corso HfcQGIS \ud83d\ude01 2 tra 11 e 25 seguire il Corso ti permetterebbe di rispondere bene quasi a tutte \ud83d\ude0a 3 tra 26 e 40 hai qualche lacuna che potresti colmare seguendo il Corso HfcQGIS \ud83d\ude0e 4 tra 41 e 50 conosci bene il Field Calc ! \ud83d\ude0d Contatto : \u2709 pigrecoinfinito@gmail.com","title":"Provaci tu"},{"location":"mettiti_alla_prova/#mettiti-alla-prova-con-le-espressioni-di-qgis","text":"","title":"Mettiti alla prova con le espressioni di QGIS"},{"location":"mettiti_alla_prova/#provaci-tu","text":"Risolvi questi quesiti e scopri il tuo livello di conoscenza del Field Calc","title":"Provaci Tu"},{"location":"mettiti_alla_prova/#dati-utilizzati","text":"Gli shapefile ISTAT 2021 generalizzati scaricabili da qui Esercizi e quesiti da svolgere con QGIS 3.16 Hannover o superiore:","title":"Dati utilizzati"},{"location":"mettiti_alla_prova/#quesiti","text":"1.Usando il layer Reg01012020_g_WGS84 , tracciare il Bounding Box (poligono) delle regioni, usando il Generatore di geometrie: 2.segue esempio 1), visualizzare etichetta solo nel Bounding Box della Puglia, nell'angolo in alto a destra: 3.Usando i layer Reg01012021_g_WGS84 e RipGeo01012021_WGS84 creare un vettore lineare usando il geo-algoritmo Geometria tramite espressione che colleghi i centroidi delle ripartizioni geografiche con i centroidi delle relative regioni, vedi sotto: 4.Usando il layer ProvCM01012021_WGS84 , calcolare la lunghezza della linea che collega tutti i point_on_surface delle province ordinate per regione; poi etichettare lo stesso strato in modo da visualizzare in basso a sinistra la lunghezza totale formattata, vedi sotto: 5.Come selezionare la provincia italiana che ha il maggior numero di province confinanti?; 6.Come selezionare la terza provincia pi\u00f9 estesa della ripartizione geografica Nord-Est ; 7.Creare un campo numerico e popolarlo con la classifica (1,2,3,4\u2026.) delle province pi\u00f9 estese raggruppate per ripartizione geografica (ovvero, 5 classifiche, una per ogni ripartizione, in modo che possa leggere quale sia l'ordine delle province pi\u00f9 estese per ogni ripartizione); 8.Perch\u00e9 in generale $area <> area($geometry) ? 9.Con quale espressione \u00e8 possibile tracciare il centroide lungo una linea (non rettilinea)? 10.Perch\u00e9 sono utili i campi virtuali? 11.In che condizioni \u00e8 vera questa uguaglianza $x = x($geometry)) ? 12.Usando i layer Reg01012021_g_WGS84 e ProvCM01012021_WGS84 (filtro per cod_reg=9) creare l'effetto visualizzabile nello screenshot di sotto (spostando il mouse, \u00e8 visibile il layer sottostante e la relativa etichetta): 13.I Raster possono essere utilizzati nel Field Calc? motivare la risposta. 14.Posso richiamare i valori di un altro layer usando le espressioni di QGIS? Se s\u00ec, con quali funzioni? 15.Per fare la concatenazione di stringhe \u00e8 possibile utilizzare sia || che + , ma che differenza c'\u00e8 tra i due ? 16.Utilizzando lo shapefile Reg01012021_g_WGS84 quale espressione permette di selezionare le feature pari? 17.All'interno della Finestra di dialogo del Field Calc (dove scriviamo le espressioni) \u00e8 possibile scrivere dei commenti, in quale modo? 18.Utilizzando lo shapefile Reg01012021_g_WGS84 , quale elemento restituisce questa espressione array_agg(\"COD_REG\")[-1] (il primo, l'ultimo, nessuno, \u2026)? 19.Utilizzando lo shapefile ProvCM01012021_WGS84 , quale valore devo sostituire al posto della X affinch\u00e9 l'uguaglianza sia soddisfatta: array_first(array_agg(\"COD_PROV\")) = array_agg(\"COD_PROV\")[X] ? 20.Nella Selezione per Espressione , quale tipo di output (numero, testo, booleano) deve dare l'espressione utilizzata nella finestra di dialogo sottostante (stesso concetto vale per i filtri) ? 21.Usando i layer Reg01012021_g_WGS84 e RipGeo01012021_WGS84 etichettare il layer RipGeo01012021_WGS84 con il numero delle regioni corrispondenti, come sotto (utilizzare solo espressioni): 22.Dove posso utilizzare la variabile @parent ? (ovunque o solo in?) 23.Le variabili dipendono dal contesto in cui lavoriamo (field calc, seleziona per espressione, compositore di stampe, ecc\u2026) ? motivare la risposta; 24.Posso utilizzare le espressioni nel compositore di stampe ? fai qualche esempio 25.La variabile @atlas_geometry \u00e8 sempre disponibile? motivare la risposta. 26.Nel Field Calc \u00e8 possibile aggiornare un attributo, cosa significa aggiornare l'attributo geometria tramite espressione, fai un esempio ? 27.Cosa sono e a che servono i parametri denominati nelle espressioni ? 28.Mettiti alla prova, rispondi prima di verificare in QGIS: '1' + '20' = 21 \u00e8 corretta questa uguaglianza ? motiva la risposta. 29.Il Field Calc popola un attributo alla volta, \u00e8 vera questa affermazione ? motiva risposta. 30.A partire dalla colonna \"cod_rip\", come ottenere la colonna \"INVERTI\" ? che espressione useresti ? vedi sotto: 31.Usando il layer ProvCM01012021_WGS84 selezionare le province che hanno il nome (\"den_uts\") con meno di 5 lettere: 32.Supponiamo di avere, in una tabella degli attributi, due colonne: la prima ( field_1 ) \u00e8 una descrizione caratterizzata da un lungo testo; un secondo campo ( field_2 ) in cui c'\u00e8 una parola; come verificare che la parola sia presente nel attributo descrizione ? 33.Usando il layer ProvCM01012021_WGS84 come scoprire il suo EPSG usando le espressioni ? 34.Usando i layer RipGeo01012021_WGS84 e in particolare la sua tabella degli attributi, aggiungere un campo ( cum ) e popolarlo con la somma cumulativa del campo \"cod_rip\", in modo da ottenere: 35.Alla variabile @parent \u00e8 assegnata una feature o un valore ? motivare la risposta. 36.La seguente uguaglianza $id = @rownumber relativamente alla prima feature, \u00e8 vera quando? 37.Usando uno shapefile, $id inizia da 1 o 0 ? 38.Usando un GeoPackage, @row_number inizia da 0 o 1 ? 39.\u00c8 possibile realizzare una JOIN tabellare (al volo) usando solo espressioni ? motivare la risposta. (esempio: fare una join tabellare tra il vettore RipGeo01012021_WGS84 e il file CSV sottostante) id valore 1 ciao 2 viva 3 QGIS 4 3.16.6 5 Hannover 40.\u00c8 uno dei geo-algoritmi pi\u00f9 famosi in ambito GIS Conta punti nel Poligono , \u00e8 possibile fare la stessa cosa usando solo le espressioni del Field Calc di QGIS ? motivare la risposta 41.Con quale espressione \u00e8 possibile aggiungere il numero di pagine in un atlante (nel formato nro pagina/totale pagine) ? 42.Quale valore memorizza la variabile @project_folder ? 43.\u00c8 possibile associare a una variabile una immagine SVG ? se s\u00ec, in quali casi ? 44.Se definissi una variabile Globale con nome my_var = 5 e poi definissi la stessa variabile a livello di Progetto my_var = 50; quale valore verrebbe associato alla variabile ? motivare la risposta 45.Le espressioni di QGIS sono utilizzabili ovunque in QGIS, per esempio: tabella attributi , tematizzazione , etichettatura , strumenti di processing , compositore di stampe , atlanti , report , moduli inserimento dati , widget , legenda , azioni , plugin , modellatore grafico , diagrammi , filtri , selezione , decorazioni , copyright , ecc.. lo sapevi ? motivare la risposta!\ud83d\ude01 46.Quattro vettori da 4 provider differenti (PostGIS, Spatialite, GeoPackage e shapefile), dove funzionano meglio le espressioni di QGIS ? motivare la risposta 47.La funzione array_agg() permette di trasformare un campo in un array , quale funzione trasforma una feature in un array ? 48.Nella finestra del Calcolatore di Campi , nella sezioni Gruppi (dove ci sono tutti le funzioni suddivise per gruppi), alcuni gruppi sono presenti solo in certe condizioni, per esempio il gruppo Relazioni quando \u00e8 visibile ? 49.Supponiamo di avere il seguente CSV con tre attributi, l'ultimo GPS contiene la coppia di coordinate separate da , come da tabella sotto: DATA NOME GPS 01/02/20 cucu 44.852747416606434,10.028176383697463 02/02/20 ciao 44.044566892850995,12.055562011167229 03/02/20 arrivederci 41.83774391119999,13.131616192302847 04/02/20 pluto 41.08389804418973,16.013252812971114 05/02/20 paperino 38.336008270894254,16.06188803019758 domanda 1 : come ottenere quest'altra tabella, dividendo i campi latitudine e longitudine ? DATA NOME GPS latitude longitude 01/02/20 cucu 44.852747416606434,10.028176383697463 44.852747416606434 10.028176383697463 02/02/20 ciao 44.044566892850995,12.055562011167229 44.044566892850995 12.055562011167229 03/02/20 arrivederci 41.83774391119999,13.131616192302847 41.8377439119999 13.131616192302847 04/02/20 pluto 41.08389804418973,16.013252812971114 41.08389804418973 16.013252812971114 05/02/20 paperino 38.336008270894254,16.06188803019758 38.336008270894254 16.06188803019758 domanda 2 : come ottenere solo sei cifre decimali per gli ultimi due campi ? DATA NOME GPS latitude longitude 01/02/20 cucu 44.852747416606434,10.028176383697463 44.852747 10.028176 02/02/20 ciao 44.044566892850995,12.055562011167229 44.044566 12.055562 03/02/20 arrivederci 41.83774391119999,13.131616192302847 41.837743 13.131616 04/02/20 pluto 41.08389804418973,16.013252812971114 41.083898 16.013252 05/02/20 paperino 38.336008270894254,16.06188803019758 38.336008 16.061888 50.A cosa serve l'operatore '\\n' ?","title":"Quesiti"},{"location":"mettiti_alla_prova/#esito-esercizi","text":"Per chi volesse sapere l'esito degli esercizi svolti, inviare le risposte alla mail: pigrecoinfinito@gmail.com con OGGETTO: Test #HfcQGIS","title":"Esito esercizi"},{"location":"mettiti_alla_prova/#risultati","text":"Sono 50 quesiti di difficolt\u00e0 variabile ( media-alta ), sotto i consigli di Pigreco nro range (risposte esatte) significato 1 tra 0 e 10 occorre urgentemente seguire il Corso HfcQGIS \ud83d\ude01 2 tra 11 e 25 seguire il Corso ti permetterebbe di rispondere bene quasi a tutte \ud83d\ude0a 3 tra 26 e 40 hai qualche lacuna che potresti colmare seguendo il Corso HfcQGIS \ud83d\ude0e 4 tra 41 e 50 conosci bene il Field Calc ! \ud83d\ude0d Contatto : \u2709 pigrecoinfinito@gmail.com","title":"Risultati"},{"location":"ods/","text":"OpenDataSicilia \u21b5 OpenDataSicilia \u00e8 una iniziativa civica che si propone di far conoscere e diffondere le prassi dell' open data e la cultura dell' open government e nel territorio e aprire una discussione pubblica partecipata. \u00c8 un gruppo di cittadini con diverse storie, competenze, professioni, accomunate dalla volont\u00e0 di contribuire a migliorare la qualit\u00e0 della vita delle persone, con spirito di collaborazione e concretezza. La genesi di questo sito \u21b5 La forza delle comunit\u00e0 sono le persone , le loro idee , le intuizioni , l' energia che hanno dentro e la capacit\u00e0 di fare insieme tesoro di tutto questo. Questa guida nasce da questa frase \"buttata\" in una chat: guardando il video che Tot\u00f2 ha fatto sul suo mega lavoro HfcQGIS mi \u00e8 sembrato un p\u00f2 scoraggiato, vorrei provare a trasformarlo per lui e dargli molta pi\u00f9 visibilit\u00e0. Capita spesso, con tutte le buone intenzioni, di scrivere frasi come questa, ma nel 99% dei casi si perdono, senza che ci sia alcuna evoluzione. OpenDataSicilia \u00e8 un'\" infrastrattura di persone \" dove una bella intenzione - come quella di sopra di Giovan Battista Vitrano - si pu\u00f2 trasformare in un passaparola e poi in un progetto; specie quando alle spalle c'\u00e8 una \" mega lavoro \" da valorizzare come quello di Salvatore Fiandaca. Anagrafica \u21b5 OpenDataSicilia fa scruscio (\"rumore\" in siciliano) qui: Twitter Gruppo Telegram Gruppo Facebook Mailing List opendatasicilia.it","title":"OpenDataSicilia"},{"location":"ods/#opendatasicilia","text":"OpenDataSicilia \u00e8 una iniziativa civica che si propone di far conoscere e diffondere le prassi dell' open data e la cultura dell' open government e nel territorio e aprire una discussione pubblica partecipata. \u00c8 un gruppo di cittadini con diverse storie, competenze, professioni, accomunate dalla volont\u00e0 di contribuire a migliorare la qualit\u00e0 della vita delle persone, con spirito di collaborazione e concretezza.","title":"OpenDataSicilia"},{"location":"ods/#la-genesi-di-questo-sito","text":"La forza delle comunit\u00e0 sono le persone , le loro idee , le intuizioni , l' energia che hanno dentro e la capacit\u00e0 di fare insieme tesoro di tutto questo. Questa guida nasce da questa frase \"buttata\" in una chat: guardando il video che Tot\u00f2 ha fatto sul suo mega lavoro HfcQGIS mi \u00e8 sembrato un p\u00f2 scoraggiato, vorrei provare a trasformarlo per lui e dargli molta pi\u00f9 visibilit\u00e0. Capita spesso, con tutte le buone intenzioni, di scrivere frasi come questa, ma nel 99% dei casi si perdono, senza che ci sia alcuna evoluzione. OpenDataSicilia \u00e8 un'\" infrastrattura di persone \" dove una bella intenzione - come quella di sopra di Giovan Battista Vitrano - si pu\u00f2 trasformare in un passaparola e poi in un progetto; specie quando alle spalle c'\u00e8 una \" mega lavoro \" da valorizzare come quello di Salvatore Fiandaca.","title":"La genesi di questo sito"},{"location":"ods/#anagrafica","text":"OpenDataSicilia fa scruscio (\"rumore\" in siciliano) qui: Twitter Gruppo Telegram Gruppo Facebook Mailing List opendatasicilia.it","title":"Anagrafica"},{"location":"parlano_di_noi/","text":"Parlano di noi \u21b5 16/12/2020 YouTube Presentazione #HfcQGIS in Francia dal minuto 5:07 (Grazie Pier Serafini) 16/12/2020 Twitter 01/08/2020 Lista QGIS-it-user Marco S. 24/06/2020 Facebook EstateGIS2020 06/07/2019 Twitter Skampus 29/04/2019 Facebook GTer 29/04/2019 Twitter Master GIS Droni 29/04/2019 Facebook Master in GIScience e droni per la gestione del territorio 20/03/2019 Facebook Risposta ad un post 22/02/2019 Twitter QGIS M\u00e9xico 22/02/2019 - Twitter GeObserver 14/012/2018 - Twitter Gter 01/11/2018 - Facebook Master in GIScience e droni per la gestione del territorio 01/09/2018 - Facebook openoikos 25/07/2018 - Facebook Lezioni GIS 23/07/2018 - Facebook QGIS Costa Rica 23/07/2018 - Facebook QGIS Italia mag/giu/lug/2018 - GitHub GitHub","title":"Parlano di noi"},{"location":"parlano_di_noi/#parlano-di-noi","text":"16/12/2020 YouTube Presentazione #HfcQGIS in Francia dal minuto 5:07 (Grazie Pier Serafini) 16/12/2020 Twitter 01/08/2020 Lista QGIS-it-user Marco S. 24/06/2020 Facebook EstateGIS2020 06/07/2019 Twitter Skampus 29/04/2019 Facebook GTer 29/04/2019 Twitter Master GIS Droni 29/04/2019 Facebook Master in GIScience e droni per la gestione del territorio 20/03/2019 Facebook Risposta ad un post 22/02/2019 Twitter QGIS M\u00e9xico 22/02/2019 - Twitter GeObserver 14/012/2018 - Twitter Gter 01/11/2018 - Facebook Master in GIScience e droni per la gestione del territorio 01/09/2018 - Facebook openoikos 25/07/2018 - Facebook Lezioni GIS 23/07/2018 - Facebook QGIS Costa Rica 23/07/2018 - Facebook QGIS Italia mag/giu/lug/2018 - GitHub GitHub","title":"Parlano di noi"},{"location":"privacy/","text":"Informativa privacy estesa \u21b5 In linea con la legislazione Europea, \u00e8 fondamentale che ogni utente del sito web comprenda cosa sono i cookie e per quale motivo vengono utilizzati, in modo che gli utenti stessi possano decidere consapevolmente se accettarne l\u2019utilizzo o no sui loro dispositivi. Un cookie \u00e8 un piccolo file di testo contenente un numero di identificazione univoco che viene trasferito dal sito web sul disco rigido del vostro computer attraverso un codice anonimo in grado di identificare il computer ma non l\u2019utente e di monitorare passivamente le vostre attivit\u00e0 sul sito. I cookie possono essere classificati in due categorie, in base alle loro funzionalit\u00e0: Cookie tecnici (di cui fanno parte i cookie sulle prestazioni e i cookie funzionali) Cookie profilanti (di cui fanno parte i cookie legati alle pubblicit\u00e0) Il sito utilizza solo il primo tipo di cookie, di tipo tecnico, per i quali non \u00e8 richiesto alcun consenso. Nel dettaglio vengono utlizzati le seguenti tipologie di cookie: Cookie strettamente necessari Questi cookie sono essenziali al fine di permettere la navigazione del sito web e l\u2019utilizzo delle sue funzionalit\u00e0, come ad esempio l\u2019accesso ad alcune aree protette. Senza questi cookie, alcune funzionalit\u00e0 richieste come ad esempio il login al sito o l\u2019inserimento degli articoli da parte dei collaboratori non potrebbero essere fornite. Cookie sulle prestazioni Questi cookie raccolgono informazioni su come gli utenti utilizzano il sito web, ad esempio quali pagine vengono visitate pi\u00f9 spesso e se gli utenti ricevono messaggi di errore da queste pagine. Questi cookie non raccolgono informazioni che identificano un visitatore specifico. Tutte le informazioni raccolte da questi cookie sono aggregate e quindi anonime. Vengono utilizzate unicamente per migliorare il funzionamento del sito web. Cookie di analisi di traffico anonimizzati Questo sito web utilizza inoltre i cookie di Google Analytics , un servizio di analisi web fornito da Google. Le informazioni generate dal cookie sull\u2019utilizzo del sito web da parte vostra (compreso il vostro indirizzo IP) verranno trasmesse e depositate presso i server di Google che utilizzer\u00e0 queste informazioni allo scopo di tracciare ed esaminare il vostro utilizzo del sito web, compilare report sulle attivit\u00e0 svolte sul sito web e fornire altri servizi relativi alle attivit\u00e0 e all\u2019utilizzo di Internet. I dati generati da Google Analytics sono conservati da Google cos\u00ec come indicato nella Informativa reperibile al seguente link. L\u2019utente pu\u00f2 disabilitare in modo selettivo l\u2019azione di Google Analytics installando sul proprio browser la componente di opt-out fornito da Google. Per disabilitare l\u2019azione di Google Analytics, si rinvia al link di seguito indicato: https://tools.google.com/dlpage/gaoptout Cookie funzionali Questi cookie consentono al sito web di ricordare le scelte che avete effettuato (come il vostro username, la vostra lingua o l\u2019area geografica in cui vivete) al fine di ottimizzare e fornire funzionalit\u00e0 pi\u00f9 avanzate. Questi cookie possono inoltre essere utilizzati per fornire funzionalit\u00e0 da voi richieste come ad esempio la visualizzazione di un video o la possibilit\u00e0 di commentare sul sito. Queste informazioni raccolte dai cookie possono essere anonime e non devono tracciare la navigazione e le attivit\u00e0 dell\u2019utente su altri siti web. Vi preghiamo di considerare che alcune funzionalit\u00e0 del sito web potrebbero essere ridotte o non disponibili disabilitando i cookie. Nel dettaglio, gli utenti possono controllare, eliminare o impedire il caricamento di cookie agendo sui loro browser cos\u00ec come sotto indicato. Cookie di terze parti \u21b5 Google Analytics Il Sito impiega Google Analytics. Si tratta di un servizio di analisi web fornito da Google Inc. (\u201cGoogle\u201d) che utilizza cookie depositati sul computer dell\u2019utente per consentire analisi statistiche in forma aggregata in ordine all\u2019utilizzo del sito web visitato. I dati generati da Google Analytics sono conservati da Google cos\u00ec come indicato nella Informativa reperibile al seguente link \u2013 https://developers.google.com/analytics/devguides/collection/analyticsjs/cookie-usage Per consultare l\u2019informativa privacy della societ\u00e0 Google Inc., titolare autonomo del trattamento dei dati relativi al servizio Google Analytics, si rinvia al sito Internet. Google Fonts (What does using the Google Fonts API mean for the privacy of my users?) Questo sito web utilizza API di Google Fonts, l\u2019uso di Google Fonts non \u00e8 autenticato. Nessun cookie viene inviato dai visitatori del sito web all\u2019API di Google Fonts. Le richieste all\u2019API di Google Fonts vengono eseguite su domini specifici delle risorse, come fonts.googleapis.com o fonts.gstatic.com , in modo che le richieste per i caratteri siano separate e non contengano credenziali inviate a google.com mentre utilizzando altri servizi Google autenticati, come Gmail. Le richieste per le risorse CSS vengono memorizzate nella cache per 1 giorno. Per ulteriori informazioni sulle informazioni raccolte da Google e su come vengono utilizzate e protette, consulta le Norme sulla privacy di Google Widget Social Network \u21b5 I widget dei social network sono quei particolari \u201cpulsanti\u201d o \u201cblocchi\u201d presenti sul sito che raffigurano le icone di social network (esempio, Facebook e Twitter) e consentono agli utenti che stanno navigando di interagire con un \u201cclick\u201d direttamente con le piattaforme social. Si riportano i link ove l\u2019utente pu\u00f2 prendere visione dell\u2019informativa privacy relativa alla gestione dei dati da parte dei social cui i pulsanti e le widget rinviano. Nessuna informazione viene condivisa dal sito in cui il widget \u00e8 incorporato. Per maggiori informazioni, anche sulla disattivazione di tali cookie, si consiglia di consultare i seguenti link: Twitter Facebook LinkedIn Google Plus AddThis Pubblicit\u00e0 \u21b5 Sono presenti annunci di pubblicit\u00e0 etica di Read the Docs che rispetta la privacy degli utenti. La pubblicit\u00e0 etica \u00e8 la fonte princiaple del progetto Read the Docs . Come disabilitare i cookie mediante configurazione del browser \u21b5 Fermo restando quanto sopra indicato in ordine ai cookie strettamente necessari alla navigazione, l\u2019utente pu\u00f2 eliminare gli altri cookie attraverso la funzionalit\u00e0 a tal fine messa a disposizione dal Titolare tramite la presente informativa oppure direttamente tramite il proprio browser. Ciascun browser presenta procedure diverse per la gestione delle impostazioni. L\u2019utente pu\u00f2 ottenere istruzioni specifiche attraverso i link sottostanti. Google Chrome Mozilla Firefox Internet Explorer Safari Safari IOs Opera Google Chrome Eseguire il Browser Chrome Fare click sul men\u00f9 presente nella barra degli strumenti del browser a fianco della finestra di inserimento url per la navigazione Selezionare Impostazioni Fare clic su Mostra Impostazioni Avanzate Nella sezione \u201cPrivacy\u201d fare clic su bottone \u201cImpostazioni contenuti\u201c Nella sezione \u201cCookie\u201d \u00e8 possibile modificare le seguenti impostazioni relative ai cookie: Consentire il salvataggio dei dati in locale Modificare i dati locali solo fino alla chiusura del browser Impedire ai siti di impostare i cookie Bloccare i cookie di terze parti e i dati dei siti Gestire le eccezioni per alcuni siti internet Eliminazione di uno o tutti i cookie Mozilla Firefox - Eseguire il Browser Mozilla Firefox - Fare click sul men\u00f9 presente nella barra degli strumenti del browser a fianco della finestra di inserimento url per la navigazione - Selezionare Opzioni - Seleziona il pannello Privacy - Fare clic su Mostra Impostazioni Avanzate - Nella sezione \u201cPrivacy\u201d fare clic su bottone \u201cImpostazioni contenuti\u201c - Nella sezione \u201cTracciamento\u201d \u00e8 possibile modificare le seguenti impostazioni relative ai cookie: - Richiedi ai siti di non effettuare alcun tracciamento - Comunica ai siti la disponibilit\u00e0 ad essere tracciato - Non comunicare alcuna preferenza relativa al tracciamento dei dati personali - Dalla sezione \u201cCronologia\u201d \u00e8 possibile: - Abilitando \u201cUtilizza impostazioni personalizzate\u201d selezionare di accettare i cookie di terze parti (sempre, dai siti pi\u00f9 visitato o mai) e di conservarli per un periodo determinato (fino alla loro scadenza, alla chiusura di Firefox o di chiedere ogni volta) - Rimuovere i singoli cookie immagazzinati Internet Explorer Eseguire il Browser Internet Explorer Fare click sul pulsante Strumenti e scegliere Opzioni Internet Fare click sulla scheda Privacy e nella sezione Impostazioni modificare il dispositivo di scorrimento in funzione dell\u2019azione desiderata per i cookie: Bloccare tutti i cookie Consentire tutti i cookie Selezione dei siti da cui ottenere cookie: spostare il cursore in una posizione intermedia in modo da non bloccare o consentire tutti i cookie, premere quindi su Siti, nella casella Indirizzo Sito Web inserire un sito internet e quindi premere su Blocca o Consenti Safari Eseguire il Browser Safari Fare click su Safari, selezionare Preferenze e premere su Privacy Nella sezione Blocca Cookie specificare come Safari deve accettare i cookie dai siti internet. Per visionare quali siti hanno immagazzinato i cookie cliccare su Dettagli Safari IOs (Dispositivi Mobile) Eseguire il Browser Safari iOS Tocca su Impostazioni e poi Safari Tocca su Blocca Cookie e scegli tra le varie opzioni: \u201cMai\u201d, \u201cDi terze parti e inserzionisti\u201d o \u201cSempre\u201d Per cancellare tutti i cookie immagazzinati da Safari, tocca su Impostazioni, poi su Safari e infine suCancella Cookie e dati Opera Eseguire il Browser Opera Fare click sul Preferenze poi su Avanzate e infine su Cookie Selezionare una delle seguenti opzioni: Accetta tutti i cookie Accetta i cookie solo dal sito che si visita: i cookie di terze parti e che vengono inviati da un dominio diverso da quello che si sta visitando verranno rifiutati Non accettare mai i cookie: tutti i cookie non verranno mai salvati Come indicato, l\u2019Utente potr\u00e0 negare il consenso all\u2019installazione dei cookie per il mezzo del browser di navigazione in uso seguendo le istruzioni ivi fornite o accedendo al sito http://www.youronlinechoices.com/it/le-tue-scelte/. Per ulteriori informazioni su come cancellare e controllare i cookie archiviati sul computer, si prega di consultare http://www.allaboutcookies.org/manage-cookies/index. Non possiamo tuttavia garantire la correttezza e l\u2019aggiornamento delle informazioni ivi contenute.","title":"Informativa privacy estesa"},{"location":"privacy/#informativa-privacy-estesa","text":"In linea con la legislazione Europea, \u00e8 fondamentale che ogni utente del sito web comprenda cosa sono i cookie e per quale motivo vengono utilizzati, in modo che gli utenti stessi possano decidere consapevolmente se accettarne l\u2019utilizzo o no sui loro dispositivi. Un cookie \u00e8 un piccolo file di testo contenente un numero di identificazione univoco che viene trasferito dal sito web sul disco rigido del vostro computer attraverso un codice anonimo in grado di identificare il computer ma non l\u2019utente e di monitorare passivamente le vostre attivit\u00e0 sul sito. I cookie possono essere classificati in due categorie, in base alle loro funzionalit\u00e0: Cookie tecnici (di cui fanno parte i cookie sulle prestazioni e i cookie funzionali) Cookie profilanti (di cui fanno parte i cookie legati alle pubblicit\u00e0) Il sito utilizza solo il primo tipo di cookie, di tipo tecnico, per i quali non \u00e8 richiesto alcun consenso. Nel dettaglio vengono utlizzati le seguenti tipologie di cookie: Cookie strettamente necessari Questi cookie sono essenziali al fine di permettere la navigazione del sito web e l\u2019utilizzo delle sue funzionalit\u00e0, come ad esempio l\u2019accesso ad alcune aree protette. Senza questi cookie, alcune funzionalit\u00e0 richieste come ad esempio il login al sito o l\u2019inserimento degli articoli da parte dei collaboratori non potrebbero essere fornite. Cookie sulle prestazioni Questi cookie raccolgono informazioni su come gli utenti utilizzano il sito web, ad esempio quali pagine vengono visitate pi\u00f9 spesso e se gli utenti ricevono messaggi di errore da queste pagine. Questi cookie non raccolgono informazioni che identificano un visitatore specifico. Tutte le informazioni raccolte da questi cookie sono aggregate e quindi anonime. Vengono utilizzate unicamente per migliorare il funzionamento del sito web. Cookie di analisi di traffico anonimizzati Questo sito web utilizza inoltre i cookie di Google Analytics , un servizio di analisi web fornito da Google. Le informazioni generate dal cookie sull\u2019utilizzo del sito web da parte vostra (compreso il vostro indirizzo IP) verranno trasmesse e depositate presso i server di Google che utilizzer\u00e0 queste informazioni allo scopo di tracciare ed esaminare il vostro utilizzo del sito web, compilare report sulle attivit\u00e0 svolte sul sito web e fornire altri servizi relativi alle attivit\u00e0 e all\u2019utilizzo di Internet. I dati generati da Google Analytics sono conservati da Google cos\u00ec come indicato nella Informativa reperibile al seguente link. L\u2019utente pu\u00f2 disabilitare in modo selettivo l\u2019azione di Google Analytics installando sul proprio browser la componente di opt-out fornito da Google. Per disabilitare l\u2019azione di Google Analytics, si rinvia al link di seguito indicato: https://tools.google.com/dlpage/gaoptout Cookie funzionali Questi cookie consentono al sito web di ricordare le scelte che avete effettuato (come il vostro username, la vostra lingua o l\u2019area geografica in cui vivete) al fine di ottimizzare e fornire funzionalit\u00e0 pi\u00f9 avanzate. Questi cookie possono inoltre essere utilizzati per fornire funzionalit\u00e0 da voi richieste come ad esempio la visualizzazione di un video o la possibilit\u00e0 di commentare sul sito. Queste informazioni raccolte dai cookie possono essere anonime e non devono tracciare la navigazione e le attivit\u00e0 dell\u2019utente su altri siti web. Vi preghiamo di considerare che alcune funzionalit\u00e0 del sito web potrebbero essere ridotte o non disponibili disabilitando i cookie. Nel dettaglio, gli utenti possono controllare, eliminare o impedire il caricamento di cookie agendo sui loro browser cos\u00ec come sotto indicato.","title":"Informativa privacy estesa"},{"location":"privacy/#cookie-di-terze-parti","text":"Google Analytics Il Sito impiega Google Analytics. Si tratta di un servizio di analisi web fornito da Google Inc. (\u201cGoogle\u201d) che utilizza cookie depositati sul computer dell\u2019utente per consentire analisi statistiche in forma aggregata in ordine all\u2019utilizzo del sito web visitato. I dati generati da Google Analytics sono conservati da Google cos\u00ec come indicato nella Informativa reperibile al seguente link \u2013 https://developers.google.com/analytics/devguides/collection/analyticsjs/cookie-usage Per consultare l\u2019informativa privacy della societ\u00e0 Google Inc., titolare autonomo del trattamento dei dati relativi al servizio Google Analytics, si rinvia al sito Internet. Google Fonts (What does using the Google Fonts API mean for the privacy of my users?) Questo sito web utilizza API di Google Fonts, l\u2019uso di Google Fonts non \u00e8 autenticato. Nessun cookie viene inviato dai visitatori del sito web all\u2019API di Google Fonts. Le richieste all\u2019API di Google Fonts vengono eseguite su domini specifici delle risorse, come fonts.googleapis.com o fonts.gstatic.com , in modo che le richieste per i caratteri siano separate e non contengano credenziali inviate a google.com mentre utilizzando altri servizi Google autenticati, come Gmail. Le richieste per le risorse CSS vengono memorizzate nella cache per 1 giorno. Per ulteriori informazioni sulle informazioni raccolte da Google e su come vengono utilizzate e protette, consulta le Norme sulla privacy di Google","title":"Cookie di terze parti"},{"location":"privacy/#widget-social-network","text":"I widget dei social network sono quei particolari \u201cpulsanti\u201d o \u201cblocchi\u201d presenti sul sito che raffigurano le icone di social network (esempio, Facebook e Twitter) e consentono agli utenti che stanno navigando di interagire con un \u201cclick\u201d direttamente con le piattaforme social. Si riportano i link ove l\u2019utente pu\u00f2 prendere visione dell\u2019informativa privacy relativa alla gestione dei dati da parte dei social cui i pulsanti e le widget rinviano. Nessuna informazione viene condivisa dal sito in cui il widget \u00e8 incorporato. Per maggiori informazioni, anche sulla disattivazione di tali cookie, si consiglia di consultare i seguenti link: Twitter Facebook LinkedIn Google Plus AddThis","title":"Widget Social Network"},{"location":"privacy/#pubblicita","text":"Sono presenti annunci di pubblicit\u00e0 etica di Read the Docs che rispetta la privacy degli utenti. La pubblicit\u00e0 etica \u00e8 la fonte princiaple del progetto Read the Docs .","title":"Pubblicit\u00e0"},{"location":"privacy/#come-disabilitare-i-cookie-mediante-configurazione-del-browser","text":"Fermo restando quanto sopra indicato in ordine ai cookie strettamente necessari alla navigazione, l\u2019utente pu\u00f2 eliminare gli altri cookie attraverso la funzionalit\u00e0 a tal fine messa a disposizione dal Titolare tramite la presente informativa oppure direttamente tramite il proprio browser. Ciascun browser presenta procedure diverse per la gestione delle impostazioni. L\u2019utente pu\u00f2 ottenere istruzioni specifiche attraverso i link sottostanti. Google Chrome Mozilla Firefox Internet Explorer Safari Safari IOs Opera Google Chrome Eseguire il Browser Chrome Fare click sul men\u00f9 presente nella barra degli strumenti del browser a fianco della finestra di inserimento url per la navigazione Selezionare Impostazioni Fare clic su Mostra Impostazioni Avanzate Nella sezione \u201cPrivacy\u201d fare clic su bottone \u201cImpostazioni contenuti\u201c Nella sezione \u201cCookie\u201d \u00e8 possibile modificare le seguenti impostazioni relative ai cookie: Consentire il salvataggio dei dati in locale Modificare i dati locali solo fino alla chiusura del browser Impedire ai siti di impostare i cookie Bloccare i cookie di terze parti e i dati dei siti Gestire le eccezioni per alcuni siti internet Eliminazione di uno o tutti i cookie Mozilla Firefox - Eseguire il Browser Mozilla Firefox - Fare click sul men\u00f9 presente nella barra degli strumenti del browser a fianco della finestra di inserimento url per la navigazione - Selezionare Opzioni - Seleziona il pannello Privacy - Fare clic su Mostra Impostazioni Avanzate - Nella sezione \u201cPrivacy\u201d fare clic su bottone \u201cImpostazioni contenuti\u201c - Nella sezione \u201cTracciamento\u201d \u00e8 possibile modificare le seguenti impostazioni relative ai cookie: - Richiedi ai siti di non effettuare alcun tracciamento - Comunica ai siti la disponibilit\u00e0 ad essere tracciato - Non comunicare alcuna preferenza relativa al tracciamento dei dati personali - Dalla sezione \u201cCronologia\u201d \u00e8 possibile: - Abilitando \u201cUtilizza impostazioni personalizzate\u201d selezionare di accettare i cookie di terze parti (sempre, dai siti pi\u00f9 visitato o mai) e di conservarli per un periodo determinato (fino alla loro scadenza, alla chiusura di Firefox o di chiedere ogni volta) - Rimuovere i singoli cookie immagazzinati Internet Explorer Eseguire il Browser Internet Explorer Fare click sul pulsante Strumenti e scegliere Opzioni Internet Fare click sulla scheda Privacy e nella sezione Impostazioni modificare il dispositivo di scorrimento in funzione dell\u2019azione desiderata per i cookie: Bloccare tutti i cookie Consentire tutti i cookie Selezione dei siti da cui ottenere cookie: spostare il cursore in una posizione intermedia in modo da non bloccare o consentire tutti i cookie, premere quindi su Siti, nella casella Indirizzo Sito Web inserire un sito internet e quindi premere su Blocca o Consenti Safari Eseguire il Browser Safari Fare click su Safari, selezionare Preferenze e premere su Privacy Nella sezione Blocca Cookie specificare come Safari deve accettare i cookie dai siti internet. Per visionare quali siti hanno immagazzinato i cookie cliccare su Dettagli Safari IOs (Dispositivi Mobile) Eseguire il Browser Safari iOS Tocca su Impostazioni e poi Safari Tocca su Blocca Cookie e scegli tra le varie opzioni: \u201cMai\u201d, \u201cDi terze parti e inserzionisti\u201d o \u201cSempre\u201d Per cancellare tutti i cookie immagazzinati da Safari, tocca su Impostazioni, poi su Safari e infine suCancella Cookie e dati Opera Eseguire il Browser Opera Fare click sul Preferenze poi su Avanzate e infine su Cookie Selezionare una delle seguenti opzioni: Accetta tutti i cookie Accetta i cookie solo dal sito che si visita: i cookie di terze parti e che vengono inviati da un dominio diverso da quello che si sta visitando verranno rifiutati Non accettare mai i cookie: tutti i cookie non verranno mai salvati Come indicato, l\u2019Utente potr\u00e0 negare il consenso all\u2019installazione dei cookie per il mezzo del browser di navigazione in uso seguendo le istruzioni ivi fornite o accedendo al sito http://www.youronlinechoices.com/it/le-tue-scelte/. Per ulteriori informazioni su come cancellare e controllare i cookie archiviati sul computer, si prega di consultare http://www.allaboutcookies.org/manage-cookies/index. Non possiamo tuttavia garantire la correttezza e l\u2019aggiornamento delle informazioni ivi contenute.","title":"Come disabilitare i cookie mediante configurazione del browser"},{"location":"supporter/","text":"Supporter \u21b5 Questa pagina raccoglie i nominativi delle persone che hanno contribuito alla guida in termini finanziari o di conoscenza : Contributi finanziari \u21b5 tramite nro contributo luogo messaggio 1 Enrico Bertonati Italia Come sempre ottimo lavoro Doc!!! Saluti; 2 Carlo Tinalli Italia Un piccolo contributo, in quanto ritengo che la rete non sia una fonte da cui attingere tutto gratis.; 3 Andrea Bortoluzzi Italia W Qgis e w Tot\u00f2!; 4 Federico Gianoli Italia Grazie per quello che fai per la comunit\u00e0 di QGIS. Il mio \u00e8, purtroppo, solo un gesto simbolico per dimostrarti che apprezzo moltissimo il tuo lavoro ed i tuoi sforzi per la comunit\u00e0.; 5 Giacomo Amerio Italia -- 6 Luca Bellami Messico un contributo davvero piccolo per l'enorme lavoro che fai per la comunit\u00e1! un abbraccio Luca 7 Roberto Montagnetti Inghilterra Un piccolo modesto supporto alle attivit\u00e0 di Pigrecoinfinito Contributi in conoscenza \u21b5 tramite esercizi, pull request e funzioni personalizzate nro contributo Luogo sito sezione 1 Stefano Campus Italia PR update funzione concat() 2 Ludovico Frate Italia lezionigis.it es: 11 - Calcolo della core area (area interna al poligono al netto di un'area di buffer interna ) 3 Martina Savarese Italia es: 17 - Contare i punti nel poligono per categorie 4 Giulio Fattori Italia Fattoriale 5 Matteo Ghetta Italia Faunalia add_col_z 6 Valerio Pinna Italia es: 35 , es: 41 , es: 42","title":"Supporter"},{"location":"supporter/#supporter","text":"Questa pagina raccoglie i nominativi delle persone che hanno contribuito alla guida in termini finanziari o di conoscenza :","title":"Supporter"},{"location":"supporter/#contributi-finanziari","text":"tramite nro contributo luogo messaggio 1 Enrico Bertonati Italia Come sempre ottimo lavoro Doc!!! Saluti; 2 Carlo Tinalli Italia Un piccolo contributo, in quanto ritengo che la rete non sia una fonte da cui attingere tutto gratis.; 3 Andrea Bortoluzzi Italia W Qgis e w Tot\u00f2!; 4 Federico Gianoli Italia Grazie per quello che fai per la comunit\u00e0 di QGIS. Il mio \u00e8, purtroppo, solo un gesto simbolico per dimostrarti che apprezzo moltissimo il tuo lavoro ed i tuoi sforzi per la comunit\u00e0.; 5 Giacomo Amerio Italia -- 6 Luca Bellami Messico un contributo davvero piccolo per l'enorme lavoro che fai per la comunit\u00e1! un abbraccio Luca 7 Roberto Montagnetti Inghilterra Un piccolo modesto supporto alle attivit\u00e0 di Pigrecoinfinito","title":"Contributi finanziari"},{"location":"supporter/#contributi-in-conoscenza","text":"tramite esercizi, pull request e funzioni personalizzate nro contributo Luogo sito sezione 1 Stefano Campus Italia PR update funzione concat() 2 Ludovico Frate Italia lezionigis.it es: 11 - Calcolo della core area (area interna al poligono al netto di un'area di buffer interna ) 3 Martina Savarese Italia es: 17 - Contare i punti nel poligono per categorie 4 Giulio Fattori Italia Fattoriale 5 Matteo Ghetta Italia Faunalia add_col_z 6 Valerio Pinna Italia es: 35 , es: 41 , es: 42","title":"Contributi in conoscenza"},{"location":"tags/","text":"Tags \u21b5 Di seguito \u00e8 riportato un elenco di tag rilevanti: [TAGS]","title":"Tags"},{"location":"tags/#tags","text":"Di seguito \u00e8 riportato un elenco di tag rilevanti: [TAGS]","title":"Tags"},{"location":"traduzione/","text":"Traduzione \u21b5 La descrizione delle funzioni in italiano \u00e8 stata realizzata dal gruppo di traduttori diretti da Stefano Campus Marco Braida, Stefano Campus, Roberta Castelli, Francesco D'Amore, Eleonora D'Elia, Simone Falceri, Giulio Fattori, Matteo Ghetta, Federico Gianoli, Marco Grisolia, Italang, Luca76, Pipep, Valerio Pinna, Alberto Vallortigara, Salvatore Fiandaca (reporter)*, Giuseppe Mattiozzi (documentation) * PR","title":"Traduzione"},{"location":"traduzione/#traduzione","text":"La descrizione delle funzioni in italiano \u00e8 stata realizzata dal gruppo di traduttori diretti da Stefano Campus Marco Braida, Stefano Campus, Roberta Castelli, Francesco D'Amore, Eleonora D'Elia, Simone Falceri, Giulio Fattori, Matteo Ghetta, Federico Gianoli, Marco Grisolia, Italang, Luca76, Pipep, Valerio Pinna, Alberto Vallortigara, Salvatore Fiandaca (reporter)*, Giuseppe Mattiozzi (documentation) * PR","title":"Traduzione "},{"location":"calcolatore_campi/concetti/","text":"Concetti fondamentali sul calcolatore di campi di QGIS \u21b5 il calcolatore di campi \u00e8 attivabile solo per layer vettoriale e tabelle editabili ; la creazione di un nuovo campo \u00e8 relativo al layer selezionato nella TOC (Pannello Layer); il calcolatore popola un campo per volta (la modifica multipla \u00e8 un caso particolare); l'output del calcolatore popola, in generale, tutte le celle (della colonna) della tabella attributi o solo quelle selezionate (caso particolare); nella tabella attributi tutte le operazioni agiscono riga per riga (questo \u00e8 uno dei motivi della lentezza di alcuni processi); \u00e8 possibile richiamare altri layer tramite le funzione get_feature , get_feature_by_id e aggregate e overlay *_; il risultato delle funzioni di aggregazione verr\u00e0 ripetuto in tutte le righe (questo \u00e8 uno dei motivi della lentezza di alcuni processi); \u00e8 possibile aggiornare la geometry >= QGIS 2.14; $area , $perimeter ecc.. il $ davanti ad una funzione significa che riguarda la geometry corrente; i nomi dei layer vanno scritti tra apici semplici ('nome_layer') mentre i nomi dei campi con doppi apici (\"nome_campo\"); i valori numerici vanno scritti senza apici es: 10, mentre i valori alfanumerici vanno scritti tra apici semplici es: 'Sicilia'; l'anteprima del calcolatore (pto 17 - vedi screenshot) \u00e8 utile ma non sempre corretta o completa; provate la funzione to_datetime ; con il doppio clic \u00e8 possibile aggiungere funzioni o valori nelle espressioni nell'area di editing; \u00e8 possibile aggiungere funzioni personalizzate tramite codice Python nel gruppo Custom ; \u00e8 possibile aggiungere altri gruppi di funzioni tramite plugin es:refFunction \u2192 gruppo Reference; \u00e8 possibile editare/salvare/importare/esportare e condividere espressioni utente; >= QGIS 3.12; \u00e8 possibile cambiare l'attributo visualizzabile in Elemento dalle propriet\u00e0 Suggerimenti del layer; \u00e8 possibile aumentare la dimenzione del testo all'interno dell'editor tramite la rotellina del mouse ( Ctrl+rotellina ) Video 1 Video 2 Video 3","title":"Concetti Field Calc"},{"location":"calcolatore_campi/concetti/#concetti-fondamentali-sul-calcolatore-di-campi-di-qgis","text":"il calcolatore di campi \u00e8 attivabile solo per layer vettoriale e tabelle editabili ; la creazione di un nuovo campo \u00e8 relativo al layer selezionato nella TOC (Pannello Layer); il calcolatore popola un campo per volta (la modifica multipla \u00e8 un caso particolare); l'output del calcolatore popola, in generale, tutte le celle (della colonna) della tabella attributi o solo quelle selezionate (caso particolare); nella tabella attributi tutte le operazioni agiscono riga per riga (questo \u00e8 uno dei motivi della lentezza di alcuni processi); \u00e8 possibile richiamare altri layer tramite le funzione get_feature , get_feature_by_id e aggregate e overlay *_; il risultato delle funzioni di aggregazione verr\u00e0 ripetuto in tutte le righe (questo \u00e8 uno dei motivi della lentezza di alcuni processi); \u00e8 possibile aggiornare la geometry >= QGIS 2.14; $area , $perimeter ecc.. il $ davanti ad una funzione significa che riguarda la geometry corrente; i nomi dei layer vanno scritti tra apici semplici ('nome_layer') mentre i nomi dei campi con doppi apici (\"nome_campo\"); i valori numerici vanno scritti senza apici es: 10, mentre i valori alfanumerici vanno scritti tra apici semplici es: 'Sicilia'; l'anteprima del calcolatore (pto 17 - vedi screenshot) \u00e8 utile ma non sempre corretta o completa; provate la funzione to_datetime ; con il doppio clic \u00e8 possibile aggiungere funzioni o valori nelle espressioni nell'area di editing; \u00e8 possibile aggiungere funzioni personalizzate tramite codice Python nel gruppo Custom ; \u00e8 possibile aggiungere altri gruppi di funzioni tramite plugin es:refFunction \u2192 gruppo Reference; \u00e8 possibile editare/salvare/importare/esportare e condividere espressioni utente; >= QGIS 3.12; \u00e8 possibile cambiare l'attributo visualizzabile in Elemento dalle propriet\u00e0 Suggerimenti del layer; \u00e8 possibile aumentare la dimenzione del testo all'interno dell'editor tramite la rotellina del mouse ( Ctrl+rotellina ) Video 1 Video 2 Video 3","title":"Concetti fondamentali sul calcolatore di campi di QGIS"},{"location":"calcolatore_campi/field_calc/","text":"Calcolatore di campi \u21b5 Il pulsante nella tabella degli attributi consente di eseguire calcoli sulla base di valori di attributo esistenti o funzioni definite, ad esempio, per calcolare la lunghezza o l'area delle caratteristiche geometriche. I risultati possono essere scritti in un nuovo campo di attributo, un campo virtuale, oppure possono essere utilizzati per aggiornare i valori in un campo esistente. Dove usarlo \u21b5 Il calcolatore di campi \u00e8 ora disponibile su qualsiasi livello che supporti la modifica. Il Calcolatore in realt\u00e0 \u00e8 solo una interfaccia che ci permette di accedere alle funzioni e ci da la possibilit\u00e0 di creare semplici o complesse espressioni. Le espressioni di QGIS vengono utilizzate ovunque, per esempio: tabella degli attributi; tematizzazione; etichettatura; sovrascrittura definita dai dati; selezione; compositore di stampe, atlas e report; legenda; strumenti di processing; moduli inserimento dati e widget; azioni; modellatore grafico; diagrammi; filtri; decorazioni; propriet\u00e0 layer: variabili; statistiche; suggerimenti mappa; plugin; ecc.. Campo virtuale \u21b5 Un campo virtuale \u00e8 un campo basato su un'espressione calcolata al volo, il che significa che il suo valore viene automaticamente aggiornato non appena il parametro sottostante cambia. L'espressione \u00e8 impostata una volta; non \u00e8 pi\u00f9 necessario calcolare nuovamente il campo se i valori sottostanti cambiano. Ad esempio, \u00e8 possibile utilizzare un campo virtuale se \u00e8 necessario calcolare i valori dell'area durante un processo di digitalizzazione (creazione, unione, divisione di feature) o calcolare una durata che deve essere aggiornata di volta in volta. Aggiorna geometria \u21b5 Attraverso il calcolatore di campi \u00e8 possibile aggiornare tutti gli attributi di un layer editabile, ma \u00e8 possibile anche aggiornare la gemetria , per esempio diminuire il numero di vertici di una linea o di un poligono; spostare/traslare i punti ecc... Field Calc rapido \u21b5 La barra di calcolo del campo rapido nella parte superiore della tabella degli attributi \u00e8 visibile solo se il livello \u00e8 modificabile:","title":"Calcolatore di Campi"},{"location":"calcolatore_campi/field_calc/#calcolatore-di-campi","text":"Il pulsante nella tabella degli attributi consente di eseguire calcoli sulla base di valori di attributo esistenti o funzioni definite, ad esempio, per calcolare la lunghezza o l'area delle caratteristiche geometriche. I risultati possono essere scritti in un nuovo campo di attributo, un campo virtuale, oppure possono essere utilizzati per aggiornare i valori in un campo esistente.","title":"Calcolatore di campi"},{"location":"calcolatore_campi/field_calc/#dove-usarlo","text":"Il calcolatore di campi \u00e8 ora disponibile su qualsiasi livello che supporti la modifica. Il Calcolatore in realt\u00e0 \u00e8 solo una interfaccia che ci permette di accedere alle funzioni e ci da la possibilit\u00e0 di creare semplici o complesse espressioni. Le espressioni di QGIS vengono utilizzate ovunque, per esempio: tabella degli attributi; tematizzazione; etichettatura; sovrascrittura definita dai dati; selezione; compositore di stampe, atlas e report; legenda; strumenti di processing; moduli inserimento dati e widget; azioni; modellatore grafico; diagrammi; filtri; decorazioni; propriet\u00e0 layer: variabili; statistiche; suggerimenti mappa; plugin; ecc..","title":"Dove usarlo"},{"location":"calcolatore_campi/field_calc/#campo-virtuale","text":"Un campo virtuale \u00e8 un campo basato su un'espressione calcolata al volo, il che significa che il suo valore viene automaticamente aggiornato non appena il parametro sottostante cambia. L'espressione \u00e8 impostata una volta; non \u00e8 pi\u00f9 necessario calcolare nuovamente il campo se i valori sottostanti cambiano. Ad esempio, \u00e8 possibile utilizzare un campo virtuale se \u00e8 necessario calcolare i valori dell'area durante un processo di digitalizzazione (creazione, unione, divisione di feature) o calcolare una durata che deve essere aggiornata di volta in volta.","title":"Campo virtuale"},{"location":"calcolatore_campi/field_calc/#aggiorna-geometria","text":"Attraverso il calcolatore di campi \u00e8 possibile aggiornare tutti gli attributi di un layer editabile, ma \u00e8 possibile anche aggiornare la gemetria , per esempio diminuire il numero di vertici di una linea o di un poligono; spostare/traslare i punti ecc...","title":"Aggiorna geometria"},{"location":"calcolatore_campi/field_calc/#field-calc-rapido","text":"La barra di calcolo del campo rapido nella parte superiore della tabella degli attributi \u00e8 visibile solo se il livello \u00e8 modificabile:","title":"Field Calc rapido"},{"location":"calcolatore_campi/interfaccia/","text":"Interfaccia calcolatore di campi \u21b5 se attivato aggiorna solo le geometrie selezionate (indica anche il numero delle feature selezionate); se attivato crea un nuovo campo; se attivato crea un campo virtuale; permette di digitare nome del campo (per shapefile NON pi\u00f9 di 10 caratteri); permette di selezionare il Tipo di campo in uscita; permette di digitare la Lunghezzacampo in uscita e relativa precisione in caso di numeri Reali; permette di accedere al tab Editor delle Funzioni personalizzate (occorre conoscere il linguaggio Python); icone che permettono di: cancellare l'editor delle espressioni; salvare le espressioni utente; modificare le espressioni utente salvate; cancellare le espressioni utente salvate; importa espressioni utente; esporta funzioni utente. operatori pi\u00f9 usati: = uguale; + somma; - differenza; / divisione; * moltiplicazione; ^ potenza; || unione stringhe (doppio pipe); () parentesi; '\\n' nuova riga; editore delle espressioni; se attivato aggiorna campo esistente (anche la geometria); elenco di tutti i campi aggiornabili relativi al layer selezionato; permette di cercare le funzioni, il bottone Mostra Guida permette di abilitare l'area dell'Help; area dei gruppi funzione; gruppo Campi e valori relativi al layer selezionato; permette di visualizzare i valori dei campi presenti nel gruppo Campi e valori; permette di selezionare l'Elemento per cui visualizzare l'Anteprima; tasto OK per applicare l'espressione; Help sulla funzione selezionata. Commenti per documentare espressione \u21b5 \u00c8 possibile aggiungere commenti alle espressioni nell'area dell'editor espressioni: 1. per riga intera /*commento*/ 2. per commentare una riga --commento Interfaccia calcolatore di campi e finestre nascoste \u21b5 Nel caso risulti nascosta la sezione Gruppi funzioni (vale fino alla QGIS 3.4): Nel caso risulti nascosta la sezione help in linea: Per aumentare dimensione caratteri:","title":"Interfaccia Field Calc"},{"location":"calcolatore_campi/interfaccia/#interfaccia-calcolatore-di-campi","text":"se attivato aggiorna solo le geometrie selezionate (indica anche il numero delle feature selezionate); se attivato crea un nuovo campo; se attivato crea un campo virtuale; permette di digitare nome del campo (per shapefile NON pi\u00f9 di 10 caratteri); permette di selezionare il Tipo di campo in uscita; permette di digitare la Lunghezzacampo in uscita e relativa precisione in caso di numeri Reali; permette di accedere al tab Editor delle Funzioni personalizzate (occorre conoscere il linguaggio Python); icone che permettono di: cancellare l'editor delle espressioni; salvare le espressioni utente; modificare le espressioni utente salvate; cancellare le espressioni utente salvate; importa espressioni utente; esporta funzioni utente. operatori pi\u00f9 usati: = uguale; + somma; - differenza; / divisione; * moltiplicazione; ^ potenza; || unione stringhe (doppio pipe); () parentesi; '\\n' nuova riga; editore delle espressioni; se attivato aggiorna campo esistente (anche la geometria); elenco di tutti i campi aggiornabili relativi al layer selezionato; permette di cercare le funzioni, il bottone Mostra Guida permette di abilitare l'area dell'Help; area dei gruppi funzione; gruppo Campi e valori relativi al layer selezionato; permette di visualizzare i valori dei campi presenti nel gruppo Campi e valori; permette di selezionare l'Elemento per cui visualizzare l'Anteprima; tasto OK per applicare l'espressione; Help sulla funzione selezionata.","title":"Interfaccia calcolatore di campi"},{"location":"calcolatore_campi/interfaccia/#commenti-per-documentare-espressione","text":"\u00c8 possibile aggiungere commenti alle espressioni nell'area dell'editor espressioni: 1. per riga intera /*commento*/ 2. per commentare una riga --commento","title":"Commenti per documentare espressione"},{"location":"calcolatore_campi/interfaccia/#interfaccia-calcolatore-di-campi-e-finestre-nascoste","text":"Nel caso risulti nascosta la sezione Gruppi funzioni (vale fino alla QGIS 3.4): Nel caso risulti nascosta la sezione help in linea: Per aumentare dimensione caratteri:","title":"Interfaccia calcolatore di campi e finestre nascoste"},{"location":"calcolatore_campi/operatori/","text":"Operatori interfaccia \u21b5 L'interfaccia del calcolatore rende immediatamente disponibili alcuni operatori: 1. uguale : - uguaglianza tra numeri 10 = 10; - uguaglianza tra lettere 'A' = 'A' ; - uguaglianza tra parole 'Ciao' = 'Ciao'; - ugualgianza tra stringhe 'Viva QGIS' = 'Viva QGIS'; - uguaglianza tra campi \"field1\" = \"field2\"; - uguaglianza tra espressioni $area = area($geometry); 2. somma : - somma di numeri 10 + 15.4 ; - somma di stringhe (unione) 'QGIS' + '3.0' ; - somma di campi \"fied1\" + \"field2\" - somma di espressioni $perimeter + 500; 3. differenza : - differenza tra numeri 250 -200; - differenza tra campi \"field1\"-\"field2\" - differenza tra espressioni length(\"field1\") - length(\"field2\"); 4. divisione : - divisione tra numeri 125/5; - divisione tra campi \"field1\"/\"field2\"; - divisione tra espressioni $area/$perimeter; 5. moltiplicazione : - moltiplicazione tra numeri 12*22; - moltiplicazione tra campi \"field1\"*\"field2\"; - moltiplicazione tra espressioni $perimeter*length($area); 6. potenza : - potenza tra numeri 10^2; - potenza tra campi \"field1\"^\"field2\"; - potenza tra espressioni $area^length($area); 7. unione di stringhe : - unione di numeri (che trasforma in stringhe) 12 || 24 \u2192 '1224'; - unione tra lettere 'A'||'b' \u2192 'Ab'; - unione tra parole 'Ciao' || 'Mondo' \u2192 'CiamoMondo' ; - unione tra stringhe 'Viva QGIS' || 'Viva Pigreco' \u2192 'Viva QGISViva Pigreco'; - unione tra campi \"field1\" = \"field2\"; - unione tra espressioni \\$area || area($geometry); - unione tra simboli 'A'||'=>'||'B' \u2192 'A=>B'; 8. parentesi aperta : - il calcolatore indica se una parentesi \u00e8 rimasta aperta; 9. parentesi chiusa : - il calcolatore indica se una parentesi \u00e8 rimasta chiusa; 10. nuova riga : - aggiunge una nuova riga: (12 || 24 ) ||'\\n' ||( '12' || '24' ) \u2192 stamper\u00e0 '1224' su 1224' in due righe; - molto utile per le etichette su due o pi\u00f9 righe; Un altro operatore nascosto \u00e8 '\\t' tabulazione: utile per esempio nelle legende, legi qui","title":"Operatori interfaccia"},{"location":"calcolatore_campi/operatori/#operatori-interfaccia","text":"L'interfaccia del calcolatore rende immediatamente disponibili alcuni operatori: 1. uguale : - uguaglianza tra numeri 10 = 10; - uguaglianza tra lettere 'A' = 'A' ; - uguaglianza tra parole 'Ciao' = 'Ciao'; - ugualgianza tra stringhe 'Viva QGIS' = 'Viva QGIS'; - uguaglianza tra campi \"field1\" = \"field2\"; - uguaglianza tra espressioni $area = area($geometry); 2. somma : - somma di numeri 10 + 15.4 ; - somma di stringhe (unione) 'QGIS' + '3.0' ; - somma di campi \"fied1\" + \"field2\" - somma di espressioni $perimeter + 500; 3. differenza : - differenza tra numeri 250 -200; - differenza tra campi \"field1\"-\"field2\" - differenza tra espressioni length(\"field1\") - length(\"field2\"); 4. divisione : - divisione tra numeri 125/5; - divisione tra campi \"field1\"/\"field2\"; - divisione tra espressioni $area/$perimeter; 5. moltiplicazione : - moltiplicazione tra numeri 12*22; - moltiplicazione tra campi \"field1\"*\"field2\"; - moltiplicazione tra espressioni $perimeter*length($area); 6. potenza : - potenza tra numeri 10^2; - potenza tra campi \"field1\"^\"field2\"; - potenza tra espressioni $area^length($area); 7. unione di stringhe : - unione di numeri (che trasforma in stringhe) 12 || 24 \u2192 '1224'; - unione tra lettere 'A'||'b' \u2192 'Ab'; - unione tra parole 'Ciao' || 'Mondo' \u2192 'CiamoMondo' ; - unione tra stringhe 'Viva QGIS' || 'Viva Pigreco' \u2192 'Viva QGISViva Pigreco'; - unione tra campi \"field1\" = \"field2\"; - unione tra espressioni \\$area || area($geometry); - unione tra simboli 'A'||'=>'||'B' \u2192 'A=>B'; 8. parentesi aperta : - il calcolatore indica se una parentesi \u00e8 rimasta aperta; 9. parentesi chiusa : - il calcolatore indica se una parentesi \u00e8 rimasta chiusa; 10. nuova riga : - aggiunge una nuova riga: (12 || 24 ) ||'\\n' ||( '12' || '24' ) \u2192 stamper\u00e0 '1224' su 1224' in due righe; - molto utile per le etichette su due o pi\u00f9 righe; Un altro operatore nascosto \u00e8 '\\t' tabulazione: utile per esempio nelle legende, legi qui","title":"Operatori interfaccia"},{"location":"calcolatore_campi/tabella_attributi/","text":"Concetti fondamentali sulla tabella degli attributi di QGIS \u21b5 https://docs.qgis.org/3.16/it/docs/user_manual/working_with_vector/attribute_table.html La tabella degli attributi ( F6 ) \u00e8 una tabella che contiene i dati alfanumerici (attributi) dello strato vettoriale e rappresenta una delle differenze fondamentali tra un vettore CAD e uno GIS. Negli shapefile la tabella degli attributi rappresenta il file .dbf che \u00e8 uno dei tre file fondamentali che caratterizzano lo shapefile (.shp, .shx, .dbf) la mancanza di uno di questi rende inutilizzabile lo strato. Una tabella \u00e8 caratterizzata da righe (rosso) e colonne (verde), le righe rappresentano i record (nello specifico una feature), le colonne (o campi) rappresentano gli attributi: Osservazione : la geometria \u00e8 anch'essa un attributo (speciale) ma non viene visualizzato nella tabella degli attributi per scelta degli sviluppatori. Per richimare tale attributo basta utilizzare $geometry . Elementi della tabella \u21b5 La tabella attributi di QGIS \u00e8 caratterizzata da vari elementi: nell'intestazione della tabella \u00e8 presente una stringa che da informazioni su: nome della tabella; totale degli elementi/record/feature; numero dei record filtrati ; numero dei record selezionati . barra degli strumenti; matita per attivare modifica; modifica multipla; salva modifiche; aggiorna; aggiungi elemento (solo alfanumerico): cancella elemento/i; taglia; copia elemento/i; incolla elemento/i; seleziona elementi tramite espressione; seleziona tutto; inverti selezione; cancella selezione; seleziona/filtra; sposta la selezione in cima alla tabella; sposta mappa alle righe selezionate; zooma mappa alle righe selezionate; nuovo campo; elimina campo esistente; apre il calcolatore di campi; formattazione condizionale; da finestra a dock e viceversa ( >= QGIS 3.4 ) azioni. menu filtro: Mostra tutti gli Elementi; Mostra gli Elementi Selezionati; Mostra gli Elementi Visibili nella Mappa; Mostra gli Elementi Modificati ed i Nuovi; Filtro Campo (elenca tutti i campi presenti nella tabella); Filtro Avanzato (tramite espressione); Espressioni Filtro Salvate. modalit\u00e0 di visualizzazione della tabella: vista tabella; vista modulo: nella Vista Modulo \u00e8 presente un ulterione menu: Espressione, permette di creare un filtro tramite una espressione; anteprima colonna; Ordina...; storico. Calcolatore di campi rapido \u21b5 Questa barra \u00e8 visibile solo se \u00e8 attiva la modalit\u00e0 modifica e consente di applicare rapidamente calcoli a tutte o parte delle feature del livello. Questa barra utilizza le stesse espressioni del calcolatore di campi Esempio di uso della barra (vedi screenshot sotto): raccoglie tutti i campi della tabella; apre la finestra di dialogo delle espressioni; campo dove digitare numeri, stringhe e forimule/espressioni; aggiorna tutti i record con il valore immesso nella 3; aggiorna solo le righe selezionate con il valore immesso nella 3; nel nostro caso (vedi screenshot sotto), se cliccassi su 4 (aggiorna tutto) aggiornerei tutti i valori del campo \"COD_REG\" con il valore 19; se cliccassi su 5 (Aggiorna selezione) aggiornerei solo le quattro righe selezionate. Corpo della tabella \u21b5 \u00c8 possibile interagire con il corpo della tabella usando il tasto destro del mouse: sulla intestazione dei campi oppure sulle celle: nel caso dell' intestazione colonna compare un tendina con la possibilit\u00e0 di: 1. nascondere la colonna; 2. definire la larghezza della colonna; 3. Imposta Tutte le larghezze di Colonna (>= QGIS 3.18) 4. autodimensiona la larghezza colonna; 5. Autodimensione Tutte le Colonne (>= QGIS 3.18) 6. Organizza le colonne; 7. Ordina. nel caso delle celle (vedi screen sotto) compare un tendina con la possibilit\u00e0 di: 1. selezionare tutte le righe (Ctrl+A); 2. Copiare il contenuto della cella; 3. Zoom alla Geometria; 4. Sposta alla Geometria; 5. Lampeggia Geometria; 6. Apri modalit\u00e0 Modulo PS: Find/Replace \u00e8 un plugin! dockify tabella \u21b5 nuovo pulsante (Novit\u00e0 introdotta nella QGIS 3.4) nella barra degli strumenti della tabella degli attributi per passare dalla modalit\u00e0 docked alla modalit\u00e0 finestra","title":"Concetti tabella attributi"},{"location":"calcolatore_campi/tabella_attributi/#concetti-fondamentali-sulla-tabella-degli-attributi-di-qgis","text":"https://docs.qgis.org/3.16/it/docs/user_manual/working_with_vector/attribute_table.html La tabella degli attributi ( F6 ) \u00e8 una tabella che contiene i dati alfanumerici (attributi) dello strato vettoriale e rappresenta una delle differenze fondamentali tra un vettore CAD e uno GIS. Negli shapefile la tabella degli attributi rappresenta il file .dbf che \u00e8 uno dei tre file fondamentali che caratterizzano lo shapefile (.shp, .shx, .dbf) la mancanza di uno di questi rende inutilizzabile lo strato. Una tabella \u00e8 caratterizzata da righe (rosso) e colonne (verde), le righe rappresentano i record (nello specifico una feature), le colonne (o campi) rappresentano gli attributi: Osservazione : la geometria \u00e8 anch'essa un attributo (speciale) ma non viene visualizzato nella tabella degli attributi per scelta degli sviluppatori. Per richimare tale attributo basta utilizzare $geometry .","title":"Concetti fondamentali sulla tabella degli attributi di QGIS"},{"location":"calcolatore_campi/tabella_attributi/#elementi-della-tabella","text":"La tabella attributi di QGIS \u00e8 caratterizzata da vari elementi: nell'intestazione della tabella \u00e8 presente una stringa che da informazioni su: nome della tabella; totale degli elementi/record/feature; numero dei record filtrati ; numero dei record selezionati . barra degli strumenti; matita per attivare modifica; modifica multipla; salva modifiche; aggiorna; aggiungi elemento (solo alfanumerico): cancella elemento/i; taglia; copia elemento/i; incolla elemento/i; seleziona elementi tramite espressione; seleziona tutto; inverti selezione; cancella selezione; seleziona/filtra; sposta la selezione in cima alla tabella; sposta mappa alle righe selezionate; zooma mappa alle righe selezionate; nuovo campo; elimina campo esistente; apre il calcolatore di campi; formattazione condizionale; da finestra a dock e viceversa ( >= QGIS 3.4 ) azioni. menu filtro: Mostra tutti gli Elementi; Mostra gli Elementi Selezionati; Mostra gli Elementi Visibili nella Mappa; Mostra gli Elementi Modificati ed i Nuovi; Filtro Campo (elenca tutti i campi presenti nella tabella); Filtro Avanzato (tramite espressione); Espressioni Filtro Salvate. modalit\u00e0 di visualizzazione della tabella: vista tabella; vista modulo: nella Vista Modulo \u00e8 presente un ulterione menu: Espressione, permette di creare un filtro tramite una espressione; anteprima colonna; Ordina...; storico.","title":"Elementi della tabella"},{"location":"calcolatore_campi/tabella_attributi/#calcolatore-di-campi-rapido","text":"Questa barra \u00e8 visibile solo se \u00e8 attiva la modalit\u00e0 modifica e consente di applicare rapidamente calcoli a tutte o parte delle feature del livello. Questa barra utilizza le stesse espressioni del calcolatore di campi Esempio di uso della barra (vedi screenshot sotto): raccoglie tutti i campi della tabella; apre la finestra di dialogo delle espressioni; campo dove digitare numeri, stringhe e forimule/espressioni; aggiorna tutti i record con il valore immesso nella 3; aggiorna solo le righe selezionate con il valore immesso nella 3; nel nostro caso (vedi screenshot sotto), se cliccassi su 4 (aggiorna tutto) aggiornerei tutti i valori del campo \"COD_REG\" con il valore 19; se cliccassi su 5 (Aggiorna selezione) aggiornerei solo le quattro righe selezionate.","title":"Calcolatore di campi rapido"},{"location":"calcolatore_campi/tabella_attributi/#corpo-della-tabella","text":"\u00c8 possibile interagire con il corpo della tabella usando il tasto destro del mouse: sulla intestazione dei campi oppure sulle celle: nel caso dell' intestazione colonna compare un tendina con la possibilit\u00e0 di: 1. nascondere la colonna; 2. definire la larghezza della colonna; 3. Imposta Tutte le larghezze di Colonna (>= QGIS 3.18) 4. autodimensiona la larghezza colonna; 5. Autodimensione Tutte le Colonne (>= QGIS 3.18) 6. Organizza le colonne; 7. Ordina. nel caso delle celle (vedi screen sotto) compare un tendina con la possibilit\u00e0 di: 1. selezionare tutte le righe (Ctrl+A); 2. Copiare il contenuto della cella; 3. Zoom alla Geometria; 4. Sposta alla Geometria; 5. Lampeggia Geometria; 6. Apri modalit\u00e0 Modulo PS: Find/Replace \u00e8 un plugin!","title":"Corpo della tabella"},{"location":"calcolatore_campi/tabella_attributi/#dockify-tabella","text":"nuovo pulsante (Novit\u00e0 introdotta nella QGIS 3.4) nella barra degli strumenti della tabella degli attributi per passare dalla modalit\u00e0 docked alla modalit\u00e0 finestra","title":"dockify tabella"},{"location":"corso_formazione/corso_di_formazione/","text":"Corso di formazione \u21b5 A chi \u00e8 rivolto \u21b5 Il corso \u00e8 rivolto agli utenti che conoscono l'uso generale di QGIS e desiderano approfondire l'uso della tabella attributi e del calcolatore di campi . Durata del corso \u21b5 Il corso \u00e8 strutturato per durare almeno 16 ore IN PRESENZA - preferibilmente fulltime (due giorni da otto ore) Programma Corso \u21b5 Tabella attributi ; Concetti fondamentali sulla Tabella attributi che cosa \u00e8 la tabella attributi; campi e record, come definirli; Icone e funzioni tabella attributi; calcolatore di campi rapido; tabella attributi e tipo formato GIS cosa cambia: shapefile; geojson; geopackage; spatialite. Vista tabella e vista modulo, le relazioni; riorganizzazione campi tabella - processing; selezione per espressione; esercitazioni. Calcolatore di campi ; Concetti fondamentali sul Calcolatore di campi; Interfaccia; gruppo funzioni; guida in linea e #HfcQGIS; le funzioni geometriche; come creare delle espressioni complesse; come richiamare altri layer; come aggiungere attributi geometrici alla tabella; le funzioni di aggregazione; le variabili; aggiornare un campo esistente; campi virtuali, utilit\u00e0; filtro; cenni sull'editor delle funzioni python; esercitazione. Novit\u00e0 introdotte in QGIS 3.x Esercitazioni . Video-Corso \u21b5 Sul Field Calc QGIS 3.x - 30 video lezioni (23 ore) Per maggiori Info contattatemi Docente \u21b5 Ing. Salvatore Fiandaca Membro attivo di QGIS Italia e gruppo utenti QGIS.it ; Co-Admin pagina Facebook ufficiale di QGIS Italia ; Co-Admin canale Twitter Ufficiale di QGIS.it ; Socio GFOSS.it ; Membro @qgis organization : https://github.com/qgis Contatti \u21b5 Mail : pigrecoinfinito@gmail.com Facebook : https://www.facebook.com/pigreco314 Twitter : https://twitter.com/totofiandaca Telegram : https://t.me/pigreco71 Sitografia \u21b5 blog : https://pigrecoinfinito.com/ canale youtube : http://www.youtube.com/c/Tot\u00f2Fiandaca HfcQGIS : http://hfcqgis.opendatasicilia.it/it/latest/index.html Tansignari : http://tansignari.opendatasicilia.it/it/latest/# data.world : https://data.world/pigrecoinfinito github : https://github.com/pigreco gitlab : https://gitlab.com/pigr3co Canale Telegram : https://t.me/pigrecoinfinito Certificato di partecipazione \u21b5 Alla fine del corso ( solo se in presenza ) verr\u00e0 rilasciato un certificato di partecipazione.","title":"Corso di Formazione"},{"location":"corso_formazione/corso_di_formazione/#corso-di-formazione","text":"","title":"Corso di formazione"},{"location":"corso_formazione/corso_di_formazione/#a-chi-e-rivolto","text":"Il corso \u00e8 rivolto agli utenti che conoscono l'uso generale di QGIS e desiderano approfondire l'uso della tabella attributi e del calcolatore di campi .","title":"A chi \u00e8 rivolto"},{"location":"corso_formazione/corso_di_formazione/#durata-del-corso","text":"Il corso \u00e8 strutturato per durare almeno 16 ore IN PRESENZA - preferibilmente fulltime (due giorni da otto ore)","title":"Durata del corso"},{"location":"corso_formazione/corso_di_formazione/#programma-corso","text":"Tabella attributi ; Concetti fondamentali sulla Tabella attributi che cosa \u00e8 la tabella attributi; campi e record, come definirli; Icone e funzioni tabella attributi; calcolatore di campi rapido; tabella attributi e tipo formato GIS cosa cambia: shapefile; geojson; geopackage; spatialite. Vista tabella e vista modulo, le relazioni; riorganizzazione campi tabella - processing; selezione per espressione; esercitazioni. Calcolatore di campi ; Concetti fondamentali sul Calcolatore di campi; Interfaccia; gruppo funzioni; guida in linea e #HfcQGIS; le funzioni geometriche; come creare delle espressioni complesse; come richiamare altri layer; come aggiungere attributi geometrici alla tabella; le funzioni di aggregazione; le variabili; aggiornare un campo esistente; campi virtuali, utilit\u00e0; filtro; cenni sull'editor delle funzioni python; esercitazione. Novit\u00e0 introdotte in QGIS 3.x Esercitazioni .","title":"Programma Corso"},{"location":"corso_formazione/corso_di_formazione/#video-corso","text":"Sul Field Calc QGIS 3.x - 30 video lezioni (23 ore) Per maggiori Info contattatemi","title":"Video-Corso"},{"location":"corso_formazione/corso_di_formazione/#docente","text":"Ing. Salvatore Fiandaca Membro attivo di QGIS Italia e gruppo utenti QGIS.it ; Co-Admin pagina Facebook ufficiale di QGIS Italia ; Co-Admin canale Twitter Ufficiale di QGIS.it ; Socio GFOSS.it ; Membro @qgis organization : https://github.com/qgis","title":"Docente"},{"location":"corso_formazione/corso_di_formazione/#contatti","text":"Mail : pigrecoinfinito@gmail.com Facebook : https://www.facebook.com/pigreco314 Twitter : https://twitter.com/totofiandaca Telegram : https://t.me/pigreco71","title":"Contatti"},{"location":"corso_formazione/corso_di_formazione/#sitografia","text":"blog : https://pigrecoinfinito.com/ canale youtube : http://www.youtube.com/c/Tot\u00f2Fiandaca HfcQGIS : http://hfcqgis.opendatasicilia.it/it/latest/index.html Tansignari : http://tansignari.opendatasicilia.it/it/latest/# data.world : https://data.world/pigrecoinfinito github : https://github.com/pigreco gitlab : https://gitlab.com/pigr3co Canale Telegram : https://t.me/pigrecoinfinito","title":"Sitografia"},{"location":"corso_formazione/corso_di_formazione/#certificato-di-partecipazione","text":"Alla fine del corso ( solo se in presenza ) verr\u00e0 rilasciato un certificato di partecipazione.","title":"Certificato di partecipazione"},{"location":"esempi/add_campo_sum_cumulativo/","text":"Aggiungere campo somma cumulativa \u21b5 Siamo nella seguente ipotesi, una tabella ordinata per fid e un campo l che rappresenta delle lunghezze, come realizzare - usando il calcolatore di campi e le espressioni - un campo cum popolato con la somma cumulativa?? Ecco un esempio: +-----+----+-----+ | fid | l | cum | +-----+----+-----+ | 1 | 0 | 0 | | 2 | 10 | 10 | | 3 | 20 | 30 | | 4 | 30 | 60 | | 5 | 40 | 100 | | 6 | 50 | 150 | +-----+----+-----+ Le soluzioni trovate sono pi\u00f9 di una e dipende anche dalla versione di QGIS installata in quanto utilizza funzioni certamente presenti dalla 3.x in avanti. Prima soluzione \u21b5 Questa soluzione fa uso di funzioni presenti nel core di QGIS: Nella maggior parte dei casi il primo record di un layer ha $id =1 ; in alcuni casi, per esempio gli shapefile, il primo record ha $id = 0 , quindi la condizione di test di if dovrebbe essere modificata di conseguenza affinch\u00e9 l'espressione funzioni come previsto: if( $id = 1, attribute($currentfeature, 'l'), attribute($currentfeature, 'l') + attribute(get_feature_by_id(@layer_name, $id-1), 'cum')) Alternativamente si potrebbe usare, invece che la funzione $id , la variabile @row_number , in quanto quest'ultima dovrebbe iniziare sempre da 1 e quindi la seguente espressione dovrebbe funzionare in ogni caso : if( $id = 1, attribute($currentfeature, 'l'), attribute($currentfeature, 'l') + attribute(get_feature_by_id(@layer_name, @row_number-1), 'cum')) NB: La somma cumulativa avviene in ordine per feature id , quindi i record del layer devono essere gi\u00e0 intrinsecamente ordinati secondo l'ordine con cui si vuole che i valori vengano sommati. Seconda soluzione \u21b5 In questa soluzione valgono sempre gli Alert della prima, ma utilizzeremo altre funzioni come gli Array: if( $id = 1, array_agg( \"l\")[0], eval( replace( array_to_string( array_slice( array_agg( \"l\"),0,$id-1)), ',','+')) ) Terza soluzione \u21b5 In questa soluzione valgono sempre gli Alert della prima, ma utilizzeremo le funzioni del gruppo Array , in particolare la funzione array_sum presente in QGIS a partire dalla 3.18 if( $id = 1, array_agg( \"l\")[0], array_sum( array_slice( array_agg( \"l\"),0,$id-1)) ) Nello screenshot di sotto, i campi: cum : \u00e8 relativo al primo esempio; cum_2 : \u00e8 relativo al secondo esempio; cum_3 : \u00e8 relativo al terzo esempio. Note finali \u21b5 Il tutto \u00e8 nato da qui Prova tu \u21b5","title":"Add campo sum cumulativo"},{"location":"esempi/add_campo_sum_cumulativo/#aggiungere-campo-somma-cumulativa","text":"Siamo nella seguente ipotesi, una tabella ordinata per fid e un campo l che rappresenta delle lunghezze, come realizzare - usando il calcolatore di campi e le espressioni - un campo cum popolato con la somma cumulativa?? Ecco un esempio: +-----+----+-----+ | fid | l | cum | +-----+----+-----+ | 1 | 0 | 0 | | 2 | 10 | 10 | | 3 | 20 | 30 | | 4 | 30 | 60 | | 5 | 40 | 100 | | 6 | 50 | 150 | +-----+----+-----+ Le soluzioni trovate sono pi\u00f9 di una e dipende anche dalla versione di QGIS installata in quanto utilizza funzioni certamente presenti dalla 3.x in avanti.","title":"Aggiungere campo somma cumulativa"},{"location":"esempi/add_campo_sum_cumulativo/#prima-soluzione","text":"Questa soluzione fa uso di funzioni presenti nel core di QGIS: Nella maggior parte dei casi il primo record di un layer ha $id =1 ; in alcuni casi, per esempio gli shapefile, il primo record ha $id = 0 , quindi la condizione di test di if dovrebbe essere modificata di conseguenza affinch\u00e9 l'espressione funzioni come previsto: if( $id = 1, attribute($currentfeature, 'l'), attribute($currentfeature, 'l') + attribute(get_feature_by_id(@layer_name, $id-1), 'cum')) Alternativamente si potrebbe usare, invece che la funzione $id , la variabile @row_number , in quanto quest'ultima dovrebbe iniziare sempre da 1 e quindi la seguente espressione dovrebbe funzionare in ogni caso : if( $id = 1, attribute($currentfeature, 'l'), attribute($currentfeature, 'l') + attribute(get_feature_by_id(@layer_name, @row_number-1), 'cum')) NB: La somma cumulativa avviene in ordine per feature id , quindi i record del layer devono essere gi\u00e0 intrinsecamente ordinati secondo l'ordine con cui si vuole che i valori vengano sommati.","title":"Prima soluzione"},{"location":"esempi/add_campo_sum_cumulativo/#seconda-soluzione","text":"In questa soluzione valgono sempre gli Alert della prima, ma utilizzeremo altre funzioni come gli Array: if( $id = 1, array_agg( \"l\")[0], eval( replace( array_to_string( array_slice( array_agg( \"l\"),0,$id-1)), ',','+')) )","title":"Seconda soluzione"},{"location":"esempi/add_campo_sum_cumulativo/#terza-soluzione","text":"In questa soluzione valgono sempre gli Alert della prima, ma utilizzeremo le funzioni del gruppo Array , in particolare la funzione array_sum presente in QGIS a partire dalla 3.18 if( $id = 1, array_agg( \"l\")[0], array_sum( array_slice( array_agg( \"l\"),0,$id-1)) ) Nello screenshot di sotto, i campi: cum : \u00e8 relativo al primo esempio; cum_2 : \u00e8 relativo al secondo esempio; cum_3 : \u00e8 relativo al terzo esempio.","title":"Terza soluzione"},{"location":"esempi/add_campo_sum_cumulativo/#note-finali","text":"Il tutto \u00e8 nato da qui","title":"Note finali"},{"location":"esempi/add_campo_sum_cumulativo/#prova-tu","text":"","title":"Prova tu"},{"location":"esempi/add_campo_virtuale/","text":"Come aggiungere un campo virtuale \u21b5 Facciamo un esempio, geopackage con vettore lineare: selezionare il layer (presente nel Layer Panel ), tasto destro mouse 'Apri tabella attributi' oppure cliccare sull'icona oppure tasto funzione F6 attivare editing; aprire calcolatore di campi crea nuovo campo, crea campo virtuale; digittare nome campo lunghezza_dinamica ; tipo campo uscita Real e lunghezza uscita 10 e 2; nella casella ricerca digitiamo il nome della funzione: \\$length doppio clic sulla funzione \\$lenght per aggiungerla; OK per eseguire; verr\u00e0 aggiunta la colonna lunghezza_dimanica popolata con la funzione \\$lenght Osservazioni \u21b5 Un campo virtuale \u00e8 un campo che si aggiorna dimanicamente e non modifica la tabella attributi in quanto viene memorizzata nel progetto e non nel layer. video youtube il geopackage \u00e8 scaricabile qui","title":"Come aggiungere un campo virtuale"},{"location":"esempi/add_campo_virtuale/#come-aggiungere-un-campo-virtuale","text":"Facciamo un esempio, geopackage con vettore lineare: selezionare il layer (presente nel Layer Panel ), tasto destro mouse 'Apri tabella attributi' oppure cliccare sull'icona oppure tasto funzione F6 attivare editing; aprire calcolatore di campi crea nuovo campo, crea campo virtuale; digittare nome campo lunghezza_dinamica ; tipo campo uscita Real e lunghezza uscita 10 e 2; nella casella ricerca digitiamo il nome della funzione: \\$length doppio clic sulla funzione \\$lenght per aggiungerla; OK per eseguire; verr\u00e0 aggiunta la colonna lunghezza_dimanica popolata con la funzione \\$lenght","title":"Come aggiungere un campo virtuale"},{"location":"esempi/add_campo_virtuale/#osservazioni","text":"Un campo virtuale \u00e8 un campo che si aggiorna dimanicamente e non modifica la tabella attributi in quanto viene memorizzata nel progetto e non nel layer. video youtube il geopackage \u00e8 scaricabile qui","title":"Osservazioni"},{"location":"esempi/add_col_area/","text":"Come aggiungere colonna con area [mq] \u21b5 Facciamo un esempio, geopackage con vettore poligonale: selezionare il layer (presente nel Layer Panel ), tasto destro mouse 'Apri tabella attributi' oppure cliccare sull'icona oppure tasto funzione F6 attivare editing; aprire calcolatore di campi crea nuovo campo; digittare nome campo area ; tipo campo uscita Real; lunghezza uscita 10 e 2; nella casella ricerca digitiamo il nome della funzione: area doppio clic sulla funzione \\$area per aggiungerla; OK per eseguire; verr\u00e0 aggiunta la colonna area e popolata con la funzione \\$area il geopackage \u00e8 scaricabile qui","title":"Come aggiungere colonna con area [mq]"},{"location":"esempi/add_col_area/#come-aggiungere-colonna-con-area-mq","text":"Facciamo un esempio, geopackage con vettore poligonale: selezionare il layer (presente nel Layer Panel ), tasto destro mouse 'Apri tabella attributi' oppure cliccare sull'icona oppure tasto funzione F6 attivare editing; aprire calcolatore di campi crea nuovo campo; digittare nome campo area ; tipo campo uscita Real; lunghezza uscita 10 e 2; nella casella ricerca digitiamo il nome della funzione: area doppio clic sulla funzione \\$area per aggiungerla; OK per eseguire; verr\u00e0 aggiunta la colonna area e popolata con la funzione \\$area il geopackage \u00e8 scaricabile qui","title":"Come aggiungere colonna con area [mq]"},{"location":"esempi/add_col_z/","text":"Come aggiungere la quota z alla tabella attributi \u21b5 Facciamo un esempio, geopackage con vettore MultiLinestringZ: selezionare il layer (presente nel Layer Panel ), tasto destro mouse 'Apri tabella attributi' oppure cliccare sull'icona oppure tasto funzione F6 attivare editing; aprire calcolatore di campi crea nuovo campo e digitare nome campo quota ; tipo campo uscita Real e lunghezza uscita 13 e 2; cercare la funzione z ; doppio clic sul risultato della ricerca per inserire la funzione; aggiungere la funzione start_point e poi $geometry come argomento delle z(start_point()) ; OK per eseguire; verr\u00e0 aggiunta la colonna quotaz e popolata; evidenziata la colonna con le quote z riassunto \u21b5 in caso di PointZ \u2192 z($geometry) in caso di (Multi)LinestringZ \u2192 z( start_point ( $geometry )) isoipse; in caso di PoligonZ z( point_n ($geometry,1)) il geopackage \u00e8 scaricabile qui","title":"Come aggiungere la quota z alla tabella attributi"},{"location":"esempi/add_col_z/#come-aggiungere-la-quota-z-alla-tabella-attributi","text":"Facciamo un esempio, geopackage con vettore MultiLinestringZ: selezionare il layer (presente nel Layer Panel ), tasto destro mouse 'Apri tabella attributi' oppure cliccare sull'icona oppure tasto funzione F6 attivare editing; aprire calcolatore di campi crea nuovo campo e digitare nome campo quota ; tipo campo uscita Real e lunghezza uscita 13 e 2; cercare la funzione z ; doppio clic sul risultato della ricerca per inserire la funzione; aggiungere la funzione start_point e poi $geometry come argomento delle z(start_point()) ; OK per eseguire; verr\u00e0 aggiunta la colonna quotaz e popolata; evidenziata la colonna con le quote z","title":"Come aggiungere la quota z alla tabella attributi"},{"location":"esempi/add_col_z/#riassunto","text":"in caso di PointZ \u2192 z($geometry) in caso di (Multi)LinestringZ \u2192 z( start_point ( $geometry )) isoipse; in caso di PoligonZ z( point_n ($geometry,1)) il geopackage \u00e8 scaricabile qui","title":"riassunto"},{"location":"esempi/add_coord_xy/","text":"Come aggiungere le coordinate x e y alla tabella attributi \u21b5 Facciamo un esempio, geopackage con vettore puntuale: selezionare il layer (presente nel Layer Panel ), tasto destro mouse 'Apri tabella attributi' oppure cliccare sull'icona oppure tasto funzione F6 attivare editing; aprire calcolatore di campi crea nuovo campo e digittare nome campo coord_x ; tipo campo uscita Real e lunghezza uscita 13 e 2; cercare la funzione $x ; doppio clic sul risultato della ricerca per inserire la funzione; OK per eseguire; verr\u00e0 aggiunta la colonna coord_x e popolata; ripere gli stessi passi per la coord_y e usare la funzione \\$y : ecco evidenziate le due colonne con le coordinate: il geopackage \u00e8 scaricabile qui","title":"Come aggiungere le coordinate x e y alla tabella attributi"},{"location":"esempi/add_coord_xy/#come-aggiungere-le-coordinate-x-e-y-alla-tabella-attributi","text":"Facciamo un esempio, geopackage con vettore puntuale: selezionare il layer (presente nel Layer Panel ), tasto destro mouse 'Apri tabella attributi' oppure cliccare sull'icona oppure tasto funzione F6 attivare editing; aprire calcolatore di campi crea nuovo campo e digittare nome campo coord_x ; tipo campo uscita Real e lunghezza uscita 13 e 2; cercare la funzione $x ; doppio clic sul risultato della ricerca per inserire la funzione; OK per eseguire; verr\u00e0 aggiunta la colonna coord_x e popolata; ripere gli stessi passi per la coord_y e usare la funzione \\$y : ecco evidenziate le due colonne con le coordinate: il geopackage \u00e8 scaricabile qui","title":"Come aggiungere le coordinate x e y alla tabella attributi"},{"location":"esempi/agg_geom/","text":"Aggiornare l'attributo geometry \u21b5 Il campo geometry \u00e8 un attributo come gli altri per\u00f2 non \u00e8 visibile nella tabella attributi, questo non \u00e8 un limite e quindi \u00e8 possibile aggiornarlo tramite il calcolatore di campi. l'aggiornamento non significa che da punto diventa linea o poligono, ma \u00e8 possibile aggiornale le coordinate dei punti, semplificare una geometria (in termini di numero di vertici). NB: se una geometria \u00e8 2D non possiamo aggiornarla a 3D. Geopackage \u00e8 qui","title":"Aggiornare l'attributo _geometry_"},{"location":"esempi/agg_geom/#aggiornare-lattributo-geometry","text":"Il campo geometry \u00e8 un attributo come gli altri per\u00f2 non \u00e8 visibile nella tabella attributi, questo non \u00e8 un limite e quindi \u00e8 possibile aggiornarlo tramite il calcolatore di campi. l'aggiornamento non significa che da punto diventa linea o poligono, ma \u00e8 possibile aggiornale le coordinate dei punti, semplificare una geometria (in termini di numero di vertici). NB: se una geometria \u00e8 2D non possiamo aggiornarla a 3D. Geopackage \u00e8 qui","title":"Aggiornare l'attributo geometry"},{"location":"esempi/aggiungere_punto_a_linea/","text":"Come aggiungere un punto ad una linea \u21b5 Alcune volte pu\u00f2 essere utile aggiungere un nodo di disegno ad una linea, per esempio quando occorre spezzarla proprio in quel punto o in altri casi di sovrapposizione con altre linee. L' aggiornamento delle geometria \u00e8 possibile farla usando il calcolatore di campi. Supponiamo di avere due linee sovrapposte parzialmente ( linea A e linea B ) e di volere aggingere alla linea B un nodo di disegno in corrispondenza del punto A che \u00e8 il vertice finale della linea A : l'espressione da usare \u00e8: make_line( start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',1))), end_point($geometry))","title":"Aggiungere punto a linea"},{"location":"esempi/aggiungere_punto_a_linea/#come-aggiungere-un-punto-ad-una-linea","text":"Alcune volte pu\u00f2 essere utile aggiungere un nodo di disegno ad una linea, per esempio quando occorre spezzarla proprio in quel punto o in altri casi di sovrapposizione con altre linee. L' aggiornamento delle geometria \u00e8 possibile farla usando il calcolatore di campi. Supponiamo di avere due linee sovrapposte parzialmente ( linea A e linea B ) e di volere aggingere alla linea B un nodo di disegno in corrispondenza del punto A che \u00e8 il vertice finale della linea A : l'espressione da usare \u00e8: make_line( start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',1))), end_point($geometry))","title":"Come aggiungere un punto ad una linea"},{"location":"esempi/aggregare_con_sr_differenti/","text":"Aggregare con SR differenti \u21b5 La funzione aggregate del gruppo aggrega lavora solo con vettori che hanno stesso SR (Sistema di Riferimento) altrimenti restituisce NULL , in questo esempio useremo la funzione transform per ovviare a questo apparente problema. Esempio: supponiamo di avere due layer: i centroid-comuni (EPSG 4326) e province ISTAT (EPSG 32632) della sola Sicilia; aggiungere un campo nro_com nel layer province e popolarlo con il numero dei comuni. avviare il calcolatore di campi e creare un nuovo campo 'nro_com' Integer (9) e popolarlo con la seguente espressione: aggregate( layer:='centroid_comuni_4326', aggregate:= 'count', expression:=\"fid\", filter:= intersects ($geometry, transform(geometry (@parent), 'EPSG:32632', 'EPSG:4326'))) oppure con questa espressione, il risultato \u00e8 lo stesso: aggregate( layer:='centroid_comuni_4326', aggregate:= 'count', expression:=\"fid\", filter:= intersects (transform($geometry, 'EPSG:4326', 'EPSG:32632'), geometry (@parent))) Nota bene La funzione $geometry , all'interno della funzione di aggregazione, \u00e8 la geometria corrente del layer:='centroid_comuni_4326' e quindi la geometry (@parent) rappresenta la geometria del layer poligonale. Osservazioni \u21b5 Nella funzione aggregate tutto ci\u00f2 che si trova entro le sue parentesi riguarda il relativo layer:= , quindi se utilizzassimo la funzione $geometry questa sarebbe relativa al layer:= , mentre per richiamare una geometria esterna (relativa al layer genitore, cio\u00e8 quello in cui abbiamo avviato il costruttore di espressioni) occorre utulizzare l'espressione geometry(@parent) . In questo esempio $geometry \u00e8 la geometria del layer:=centroid_comuni_4326 mentre l'altra geometria \u00e8 geometry(@parent) relativa al layer province .","title":"Aggregare con sr differenti"},{"location":"esempi/aggregare_con_sr_differenti/#aggregare-con-sr-differenti","text":"La funzione aggregate del gruppo aggrega lavora solo con vettori che hanno stesso SR (Sistema di Riferimento) altrimenti restituisce NULL , in questo esempio useremo la funzione transform per ovviare a questo apparente problema. Esempio: supponiamo di avere due layer: i centroid-comuni (EPSG 4326) e province ISTAT (EPSG 32632) della sola Sicilia; aggiungere un campo nro_com nel layer province e popolarlo con il numero dei comuni. avviare il calcolatore di campi e creare un nuovo campo 'nro_com' Integer (9) e popolarlo con la seguente espressione: aggregate( layer:='centroid_comuni_4326', aggregate:= 'count', expression:=\"fid\", filter:= intersects ($geometry, transform(geometry (@parent), 'EPSG:32632', 'EPSG:4326'))) oppure con questa espressione, il risultato \u00e8 lo stesso: aggregate( layer:='centroid_comuni_4326', aggregate:= 'count', expression:=\"fid\", filter:= intersects (transform($geometry, 'EPSG:4326', 'EPSG:32632'), geometry (@parent))) Nota bene La funzione $geometry , all'interno della funzione di aggregazione, \u00e8 la geometria corrente del layer:='centroid_comuni_4326' e quindi la geometry (@parent) rappresenta la geometria del layer poligonale.","title":"Aggregare con SR differenti"},{"location":"esempi/aggregare_con_sr_differenti/#osservazioni","text":"Nella funzione aggregate tutto ci\u00f2 che si trova entro le sue parentesi riguarda il relativo layer:= , quindi se utilizzassimo la funzione $geometry questa sarebbe relativa al layer:= , mentre per richiamare una geometria esterna (relativa al layer genitore, cio\u00e8 quello in cui abbiamo avviato il costruttore di espressioni) occorre utulizzare l'espressione geometry(@parent) . In questo esempio $geometry \u00e8 la geometria del layer:=centroid_comuni_4326 mentre l'altra geometria \u00e8 geometry(@parent) relativa al layer province .","title":"Osservazioni"},{"location":"esempi/aggregare_elementi_contigui/","text":"Aggregare elementi adiacenti \u21b5 Qual \u00e8 la regione italiana che ha pi\u00f9 regioni confinanti?? Qual \u00e8 la regione italiana (tranne le isole) che ha meno regioni confinanti?? Qual \u00e8 la regione italiana che ha una sola regione confinante?? Per ogni regione quali sono le regioni confinante?? a questa e altre domande \u00e8 possibile rispondere utilizzando le funzioni di aggregazione del calcolatore di campi di QGIS. Numero di regioni: espressione da usare: aggregate( layer:= 'regioni_g', aggregate:='count', expression:=to_string(\"COD_REG\") filter:=touches($geometry, geometry(@parent)) ) Regioni confinanti: aggregate( layer:= 'regioni_g', aggregate:='concatenate', expression:=to_string(\"DEN_REG\"), concatenator:=', ', filter:=touches($geometry, geometry(@parent)) ) funzione aggregate Prova tu Geopackage","title":"Aggregare elementi contigui"},{"location":"esempi/aggregare_elementi_contigui/#aggregare-elementi-adiacenti","text":"Qual \u00e8 la regione italiana che ha pi\u00f9 regioni confinanti?? Qual \u00e8 la regione italiana (tranne le isole) che ha meno regioni confinanti?? Qual \u00e8 la regione italiana che ha una sola regione confinante?? Per ogni regione quali sono le regioni confinante?? a questa e altre domande \u00e8 possibile rispondere utilizzando le funzioni di aggregazione del calcolatore di campi di QGIS. Numero di regioni: espressione da usare: aggregate( layer:= 'regioni_g', aggregate:='count', expression:=to_string(\"COD_REG\") filter:=touches($geometry, geometry(@parent)) ) Regioni confinanti: aggregate( layer:= 'regioni_g', aggregate:='concatenate', expression:=to_string(\"DEN_REG\"), concatenator:=', ', filter:=touches($geometry, geometry(@parent)) ) funzione aggregate Prova tu Geopackage","title":"Aggregare elementi adiacenti"},{"location":"esempi/assegnare_cat_prevalente/","text":"Assegnare categoria prevalente \u21b5 Dati due shapefile poligonali, fabbricati e circorscrizioni . I fabbricati hanno un attributo (categoria) che li categorizza come A,B,C,D. Come attribuire alle circoscrizioni la categoria prevalente dei fabbricati? cio\u00e8, se ci fossero, in una circoscrizione, pi\u00f9 fabbricati con categorie B, rispetto agli altri, allora assegnare la categoria B, oppure A se, la maggioranza dei fabbricati, fosse la categoria A. Avviare il calcolatore di campi relativamente al layer circoscrizioni e creiare un campo testuale: popolare con la seguente espressione: array_majority( string_to_array( aggregate( layer:='fabbricati_pa', aggregate:='concatenate', expression:=\"categoria\", filter:=intersects( $geometry, geometry(@parent)), concatenator:=',') ) ) PS: occorre installare il plugin ArrayPlus per poter usare la funzione array_majority nelle versioni <= QGIS 3.16; La funzione array_majority \u00e8 disponibile nativamente a partire da QGIS 3.18 Prova tu Geopackage Funzioni e variabili utilizzate: array_majority string_to_array aggregate","title":"Assegnare cat prevalente"},{"location":"esempi/assegnare_cat_prevalente/#assegnare-categoria-prevalente","text":"Dati due shapefile poligonali, fabbricati e circorscrizioni . I fabbricati hanno un attributo (categoria) che li categorizza come A,B,C,D. Come attribuire alle circoscrizioni la categoria prevalente dei fabbricati? cio\u00e8, se ci fossero, in una circoscrizione, pi\u00f9 fabbricati con categorie B, rispetto agli altri, allora assegnare la categoria B, oppure A se, la maggioranza dei fabbricati, fosse la categoria A. Avviare il calcolatore di campi relativamente al layer circoscrizioni e creiare un campo testuale: popolare con la seguente espressione: array_majority( string_to_array( aggregate( layer:='fabbricati_pa', aggregate:='concatenate', expression:=\"categoria\", filter:=intersects( $geometry, geometry(@parent)), concatenator:=',') ) ) PS: occorre installare il plugin ArrayPlus per poter usare la funzione array_majority nelle versioni <= QGIS 3.16; La funzione array_majority \u00e8 disponibile nativamente a partire da QGIS 3.18 Prova tu Geopackage Funzioni e variabili utilizzate: array_majority string_to_array aggregate","title":"Assegnare categoria prevalente"},{"location":"esempi/calcolo_area_poligoni_reticolo/","text":"Calcolo area poligoni all'interno di un reticoli \u21b5 Calcolare l\u2019area delle porzioni di poligoni che ricadono dentro ad una cella di un reticolo. Esempio : lo strato \u00e8 un dusaf (Destinazione d\u2019Uso dei Suoli Agricoli e forestali ndr), la domanda a cui rispondere \u00e8: quanta superficie di quegli usi del suolo ricadono nella singola maglia del reticolo? Aggiungere un campo sup (tipo Real) nella tabella attributi del layer reticolo e popolarlo \u2013 usando il calcolatore di campi di QGIS \u2013 con la seguente espressione: aggregate( layer:='dusaf_5', aggregate:='sum', expression:=area(intersection(geometry(@parent),$geometry )), filter:=intersects( $geometry,geometry(@parent))) La funzione di aggregazione calcola l\u2019area della porzione di dusaf che interseca ogni rettangolo del reticolo e poi somma per ogni rettangolo. Funzione il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: aggregate","title":"Calcolo area poligoni reticolo"},{"location":"esempi/calcolo_area_poligoni_reticolo/#calcolo-area-poligoni-allinterno-di-un-reticoli","text":"Calcolare l\u2019area delle porzioni di poligoni che ricadono dentro ad una cella di un reticolo. Esempio : lo strato \u00e8 un dusaf (Destinazione d\u2019Uso dei Suoli Agricoli e forestali ndr), la domanda a cui rispondere \u00e8: quanta superficie di quegli usi del suolo ricadono nella singola maglia del reticolo? Aggiungere un campo sup (tipo Real) nella tabella attributi del layer reticolo e popolarlo \u2013 usando il calcolatore di campi di QGIS \u2013 con la seguente espressione: aggregate( layer:='dusaf_5', aggregate:='sum', expression:=area(intersection(geometry(@parent),$geometry )), filter:=intersects( $geometry,geometry(@parent))) La funzione di aggregazione calcola l\u2019area della porzione di dusaf che interseca ogni rettangolo del reticolo e poi somma per ogni rettangolo. Funzione il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: aggregate","title":"Calcolo area poligoni all'interno di un reticoli"},{"location":"esempi/calcolo_incrementi_giornalieri/","text":"Calcolo incrementi giornalieri di un attributo \u21b5 Supponiamo di avere un campo ( tot_att_pos ) popolato con valori aggregati giornalieri, per esempio il numero totale di contagiati da CoronaVirus , ecco un tabella di esempio: data tot_att_pos delta 2020-03-09 7985 1598 2020-03-08 6387 1326 2020-03-07 5061 1145 2020-03-06 3916 620 2020-03-05 3296 590 2020-03-04 2706 443 2020-03-03 2263 428 2020-03-02 1835 258 2020-03-01 1577 528 2020-02-29 1049 228 2020-02-28 821 233 2020-02-27 588 203 2020-02-26 385 74 2020-02-25 311 90 2020-02-24 221 221 come calcolare la colonna delta , popolata con gli incrementi giornalieri? Per esempio, negli ultimi due giorni il campo tot_att_pos \u00e8 passato da 6387 a 7985 , il delta \u00e8 1598 . L'espressione usata per popolare il campo delta \u00e8 la seguente: with_variable( 'my_exp', array_find( array_agg( expression:= \"data\" , order_by:= \"data\"),\"data\" ), if( @my_exp = 0, -- condizione (array_agg( expression:= \"tot_att_pos\" , order_by:= \"data\" )[0]), -- se vero (\"tot_att_pos\" - (array_agg( expression:= \"tot_att_pos\" , order_by:= \"data\" )[@my_exp-1])) -- altrimenti ) ) In termini umani significa: Se il primo elemento dell'array \u00e8 0 associa il primo elemento dell'array dell'attributo tot_att_pos ordinato per data, altrimenti fai la differenza tra il valore corrente e il valore precedente. questo ci permette di creare questi due grafici: Funzioni e variabili utilizzate: with_variable if array_find array_agg","title":"Calcolo incrementi giornalieri"},{"location":"esempi/calcolo_incrementi_giornalieri/#calcolo-incrementi-giornalieri-di-un-attributo","text":"Supponiamo di avere un campo ( tot_att_pos ) popolato con valori aggregati giornalieri, per esempio il numero totale di contagiati da CoronaVirus , ecco un tabella di esempio: data tot_att_pos delta 2020-03-09 7985 1598 2020-03-08 6387 1326 2020-03-07 5061 1145 2020-03-06 3916 620 2020-03-05 3296 590 2020-03-04 2706 443 2020-03-03 2263 428 2020-03-02 1835 258 2020-03-01 1577 528 2020-02-29 1049 228 2020-02-28 821 233 2020-02-27 588 203 2020-02-26 385 74 2020-02-25 311 90 2020-02-24 221 221 come calcolare la colonna delta , popolata con gli incrementi giornalieri? Per esempio, negli ultimi due giorni il campo tot_att_pos \u00e8 passato da 6387 a 7985 , il delta \u00e8 1598 . L'espressione usata per popolare il campo delta \u00e8 la seguente: with_variable( 'my_exp', array_find( array_agg( expression:= \"data\" , order_by:= \"data\"),\"data\" ), if( @my_exp = 0, -- condizione (array_agg( expression:= \"tot_att_pos\" , order_by:= \"data\" )[0]), -- se vero (\"tot_att_pos\" - (array_agg( expression:= \"tot_att_pos\" , order_by:= \"data\" )[@my_exp-1])) -- altrimenti ) ) In termini umani significa: Se il primo elemento dell'array \u00e8 0 associa il primo elemento dell'array dell'attributo tot_att_pos ordinato per data, altrimenti fai la differenza tra il valore corrente e il valore precedente. questo ci permette di creare questi due grafici: Funzioni e variabili utilizzate: with_variable if array_find array_agg","title":"Calcolo incrementi giornalieri di un attributo"},{"location":"esempi/campo_coord_in_lat_lon/","text":"Da un campo di coordinate a due campi \u21b5 Alcune volte abbiamo a che fare con un campo che contiene entrambe le coordinate separate da una virgola 44.8636937,10.0077403 , come questa di sotto: DATA NOME GPS 01/02/20 cucu 44.852747416606434,10.028176383697463 02/02/20 ciao 44.044566892850995,12.055562011167229 03/02/20 arrivederci 41.83774391119999,13.131616192302847 04/02/20 pluto 41.08389804418973,16.013252812971114 05/02/20 paperino 38.336008270894254,16.06188803019758 Una tabella cosi fatta non \u00e8 immediatamente utilizzabile in un GIS, occorre separare le due coordinate in due campi distinti, come sotto: DATA NOME GPS latitude longitude 01/02/20 cucu 44.852747416606434,10.028176383697463 44.852747416606434 10.028176383697463 02/02/20 ciao 44.044566892850995,12.055562011167229 44.044566892850995 12.055562011167229 03/02/20 arrivederci 41.83774391119999,13.131616192302847 41.83774391119999 13.131616192302847 04/02/20 pluto 41.08389804418973,16.013252812971114 41.08389804418973 16.013252812971114 05/02/20 paperino 38.336008270894254,16.06188803019758 38.336008270894254 16.06188803019758 vediamo come farlo usando il calcolatore di campi: aggiungere un nuovo campo latitude , tipo Real con lunghezza 10 e precisione 7; utilizzare la seguente espressione: regexp_matches( \"GPS\" , '(.+),(.+)')[0] ; aggiungere un nuovo campo longitude , tipo Real con lunghezza 10 e precisione 7; utilizzare la seguente espressione: regexp_matches( \"GPS\" , '(.+),(.+)')[1] ; Infine, per tracciare i punti, utilizzare l'algoritmo Create points layer from table ed utilizzare i due campi longitude e latitude . Funzioni e variabili utilizzate: regexp_match","title":"Campo coord in lat lon"},{"location":"esempi/campo_coord_in_lat_lon/#da-un-campo-di-coordinate-a-due-campi","text":"Alcune volte abbiamo a che fare con un campo che contiene entrambe le coordinate separate da una virgola 44.8636937,10.0077403 , come questa di sotto: DATA NOME GPS 01/02/20 cucu 44.852747416606434,10.028176383697463 02/02/20 ciao 44.044566892850995,12.055562011167229 03/02/20 arrivederci 41.83774391119999,13.131616192302847 04/02/20 pluto 41.08389804418973,16.013252812971114 05/02/20 paperino 38.336008270894254,16.06188803019758 Una tabella cosi fatta non \u00e8 immediatamente utilizzabile in un GIS, occorre separare le due coordinate in due campi distinti, come sotto: DATA NOME GPS latitude longitude 01/02/20 cucu 44.852747416606434,10.028176383697463 44.852747416606434 10.028176383697463 02/02/20 ciao 44.044566892850995,12.055562011167229 44.044566892850995 12.055562011167229 03/02/20 arrivederci 41.83774391119999,13.131616192302847 41.83774391119999 13.131616192302847 04/02/20 pluto 41.08389804418973,16.013252812971114 41.08389804418973 16.013252812971114 05/02/20 paperino 38.336008270894254,16.06188803019758 38.336008270894254 16.06188803019758 vediamo come farlo usando il calcolatore di campi: aggiungere un nuovo campo latitude , tipo Real con lunghezza 10 e precisione 7; utilizzare la seguente espressione: regexp_matches( \"GPS\" , '(.+),(.+)')[0] ; aggiungere un nuovo campo longitude , tipo Real con lunghezza 10 e precisione 7; utilizzare la seguente espressione: regexp_matches( \"GPS\" , '(.+),(.+)')[1] ; Infine, per tracciare i punti, utilizzare l'algoritmo Create points layer from table ed utilizzare i due campi longitude e latitude . Funzioni e variabili utilizzate: regexp_match","title":"Da un campo di coordinate a due campi"},{"location":"esempi/centroid_linee/","text":"Ottenere i centroidi lungo le linee \u21b5 Come ottenere i centroidi di linee curve lungo le linee stesse? avviare il calcolatore di campi e creare un nuovo campo coord_WKT testuale e popolarlo con la seguente espressione: geom_to_wkt( line_interpolate_point( $geometry, $length/2) ) ecco la tabella attributi: Esportare lo strato in formato CSV: Importialo il nuovo strato CSV come testo delimitato: Ecco il risultato finale, i centroidi sono lungo le linee: il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: $geometry $length line_interpolate_point geom_to_wkt","title":"Centroid linee"},{"location":"esempi/centroid_linee/#ottenere-i-centroidi-lungo-le-linee","text":"Come ottenere i centroidi di linee curve lungo le linee stesse? avviare il calcolatore di campi e creare un nuovo campo coord_WKT testuale e popolarlo con la seguente espressione: geom_to_wkt( line_interpolate_point( $geometry, $length/2) ) ecco la tabella attributi: Esportare lo strato in formato CSV: Importialo il nuovo strato CSV come testo delimitato: Ecco il risultato finale, i centroidi sono lungo le linee: il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: $geometry $length line_interpolate_point geom_to_wkt","title":"Ottenere i centroidi lungo le linee"},{"location":"esempi/conta_punti_in_poligono/","text":"Conta i punti nel poligono \u21b5 Contare i features di un layer puntuale che ricadono dentro poligoni, e \u2018appendere\u2019 i valori nella tabella attributi del layer poligonale. Esiste una geo-algoritmo in processing (Conta i punti nel poligono) che fa questo lavoro in modo brillante ma crea un altro strato. Un modo rapido per evitare la creazione di un nuovo layer \u00e8 quello di utilizzare il calcolatore di campi: creare un nuovo campo ' nro ' nel layer poligonale; popolarlo utilizzando la seguente espressione: aggregate(layer:='punti', aggregate:='count', expression:=\"id\", filter:=intersects( $geometry, geometry(@parent))) risultato: Geopackage \u00e8 qui QUI VIDEO Funzioni e variabili utilizzate: aggregate","title":"Conta punti in poligono"},{"location":"esempi/conta_punti_in_poligono/#conta-i-punti-nel-poligono","text":"Contare i features di un layer puntuale che ricadono dentro poligoni, e \u2018appendere\u2019 i valori nella tabella attributi del layer poligonale. Esiste una geo-algoritmo in processing (Conta i punti nel poligono) che fa questo lavoro in modo brillante ma crea un altro strato. Un modo rapido per evitare la creazione di un nuovo layer \u00e8 quello di utilizzare il calcolatore di campi: creare un nuovo campo ' nro ' nel layer poligonale; popolarlo utilizzando la seguente espressione: aggregate(layer:='punti', aggregate:='count', expression:=\"id\", filter:=intersects( $geometry, geometry(@parent))) risultato: Geopackage \u00e8 qui QUI VIDEO Funzioni e variabili utilizzate: aggregate","title":"Conta  i punti nel poligono"},{"location":"esempi/conteggio/","text":"Conteggio valori in un campo \u21b5 Supponiamo di voler contare il numero di valori all'interno di un campo cio\u00e8 ottenere il numero di volte che, un valore, si ripete. Per risolvere il problema utilizzeremo il gruppo di funzioni Aggrega e in particolare la funzione Count creare un campo numerico conteggio ; popolarlo con l'espressione: count(expression:=\"nome\",group_by:=\"nome\") \"nome\" \u00e8 il campo che contiene i valori da contare e raggruppare; Osservazione : la tabella attributi non puo' essere modificata, quindi se un valore \u00e8 presente 10 volte avremmo - in corrispondenza ad ognuno - il valore 10 ripetuto 10 volte. il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: Count","title":"Conteggio valori in un campo"},{"location":"esempi/conteggio/#conteggio-valori-in-un-campo","text":"Supponiamo di voler contare il numero di valori all'interno di un campo cio\u00e8 ottenere il numero di volte che, un valore, si ripete. Per risolvere il problema utilizzeremo il gruppo di funzioni Aggrega e in particolare la funzione Count creare un campo numerico conteggio ; popolarlo con l'espressione: count(expression:=\"nome\",group_by:=\"nome\") \"nome\" \u00e8 il campo che contiene i valori da contare e raggruppare; Osservazione : la tabella attributi non puo' essere modificata, quindi se un valore \u00e8 presente 10 volte avremmo - in corrispondenza ad ognuno - il valore 10 ripetuto 10 volte. il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: Count","title":"Conteggio valori in un campo"},{"location":"esempi/conteggio_caratteri_diversi/","text":"Conteggio caratteri diversi \u21b5 Problema : come posso classificare in automatico i codici (tipo 133114 ecc.) per identificare il numero dei cambiamenti, cio\u00e8 il numero di caratteri diversi? Per esempio, nella stringa 133114 ci sono \"1\" tre volte, \"3\" due volte, \"4\" una volta, dunque ci sono tre caratteri diversi. Nella stringa 222222 c'\u00e8 un solo carattere (\"2\") ecc. Quesito preso dalla ML QGIS-user-it Tabella di esempio: ID field output 1 133114 3 2 222222 1 3 ABBACD 4 Una soluzione passa per l'uso degli array : array_length( array_distinct( string_to_array( regexp_replace(regexp_replace( 133114,'(.)','\\\\1,'),',$','')))) \u2192 3 nel caso in esame utilizzando il campo field array_length( array_distinct( string_to_array( regexp_replace(regexp_replace( \"field\",'(.)','\\\\1,'),',$','')))) oppure per evitare il doppio regex_replace (Grazie Andrea Giudiceandrea ) array_length( array_distinct( string_to_array( substr(regexp_replace( \"field\",'(.)',',\\\\1'),2)))) oppure possiamo evitare anche la funzione substr array_length( array_distinct( string_to_array( regexp_replace( \"field\",'(.)\\\\B','\\\\1,')))) Funzioni e variabili utilizzate: array_length array_distinct string_to_array substr regexp_replace","title":"Conteggio caratteri diversi"},{"location":"esempi/conteggio_caratteri_diversi/#conteggio-caratteri-diversi","text":"Problema : come posso classificare in automatico i codici (tipo 133114 ecc.) per identificare il numero dei cambiamenti, cio\u00e8 il numero di caratteri diversi? Per esempio, nella stringa 133114 ci sono \"1\" tre volte, \"3\" due volte, \"4\" una volta, dunque ci sono tre caratteri diversi. Nella stringa 222222 c'\u00e8 un solo carattere (\"2\") ecc. Quesito preso dalla ML QGIS-user-it Tabella di esempio: ID field output 1 133114 3 2 222222 1 3 ABBACD 4 Una soluzione passa per l'uso degli array : array_length( array_distinct( string_to_array( regexp_replace(regexp_replace( 133114,'(.)','\\\\1,'),',$','')))) \u2192 3 nel caso in esame utilizzando il campo field array_length( array_distinct( string_to_array( regexp_replace(regexp_replace( \"field\",'(.)','\\\\1,'),',$','')))) oppure per evitare il doppio regex_replace (Grazie Andrea Giudiceandrea ) array_length( array_distinct( string_to_array( substr(regexp_replace( \"field\",'(.)',',\\\\1'),2)))) oppure possiamo evitare anche la funzione substr array_length( array_distinct( string_to_array( regexp_replace( \"field\",'(.)\\\\B','\\\\1,')))) Funzioni e variabili utilizzate: array_length array_distinct string_to_array substr regexp_replace","title":"Conteggio caratteri diversi"},{"location":"esempi/conversione/","text":"Etichettare punti EPSG 4326 sessadecimali in sessagesimali GMS \u21b5 La conversione tra i due sistemi \u00e8 abbastanza semplice e quindi vado direttamente alla espressione da usare nel calcolatore di campi: 'lon :' || floor($x) || '\u00b0 ' || floor( ($x - floor($x))*60) ||''' '|| format_number( to_real((($x - floor($x))*60) -floor((($x - floor($x))*60 )))*60 ,2)||'\" E' || '_' || 'lat :' || floor($y) || '\u00b0 ' || floor( ($y - floor($y))*60) ||''' '|| format_number( to_real((($y - floor($y))*60) -floor((($y - floor($y))*60 )))*60 ,2) ||'\" N' Geopackage \u00e8 qui Nota bene \u21b5 Dalla versione QGIS 3.4 \u00e8 possibile usare le funzioni to_dm o to_dms Funzioni e variabili utilizzate: floor format_number to_real \\$x \\$y","title":"Etichettare punti EPSG 4326 sessadecimali in sessagesimali GMS"},{"location":"esempi/conversione/#etichettare-punti-epsg-4326-sessadecimali-in-sessagesimali-gms","text":"La conversione tra i due sistemi \u00e8 abbastanza semplice e quindi vado direttamente alla espressione da usare nel calcolatore di campi: 'lon :' || floor($x) || '\u00b0 ' || floor( ($x - floor($x))*60) ||''' '|| format_number( to_real((($x - floor($x))*60) -floor((($x - floor($x))*60 )))*60 ,2)||'\" E' || '_' || 'lat :' || floor($y) || '\u00b0 ' || floor( ($y - floor($y))*60) ||''' '|| format_number( to_real((($y - floor($y))*60) -floor((($y - floor($y))*60 )))*60 ,2) ||'\" N' Geopackage \u00e8 qui","title":"Etichettare punti EPSG 4326 sessadecimali in sessagesimali GMS"},{"location":"esempi/conversione/#nota-bene","text":"Dalla versione QGIS 3.4 \u00e8 possibile usare le funzioni to_dm o to_dms Funzioni e variabili utilizzate: floor format_number to_real \\$x \\$y","title":"Nota bene"},{"location":"esempi/core_area/","text":"Calcolo della core area (area interna al poligono al netto di un'area di buffer interna ) \u21b5 La core area \u00e8 l'area interna di un poligono al netto di una superfcie determinata da un buffer interno. E' un indice importante utilizzato in ecologia. In questo esempio si vuole calcolare la core area (in ettari) di un poligono di bosco, considerando una distanza dal margine di 20 metri. Caricare il layer bosco, selezionarlo e aprire il Calcolatore dei Campi. Aggiungere un nuovo campo denominato \"core_area\": 1. Tipo campo in uscita: Numero decimale 2. Lunghezza campo in uscita: 10 3. Precisione: 2 Nella finestra delle espressioni digitare: area(buffer($geometry, -20))/10000 Il risultato sar\u00e0 17.08 ha Vediamo l'espressione utilizzata: buffer($geometry,-20) : Crea un buffer del poligono utilizzando la funzione $geometry , con una profondit\u00e0 negativa di 20 metri (buffer interno) area : Calcola l' area della geometria appena definita, in ettari (/10000) Il GeoPackage, con il vettore bosco, \u00e8 disponibile qui Funzioni e variabili utilizzate: area buffer","title":"Calcolo della core area (area interna al poligono al netto di un'area di buffer interna )"},{"location":"esempi/core_area/#calcolo-della-core-area-area-interna-al-poligono-al-netto-di-unarea-di-buffer-interna","text":"La core area \u00e8 l'area interna di un poligono al netto di una superfcie determinata da un buffer interno. E' un indice importante utilizzato in ecologia. In questo esempio si vuole calcolare la core area (in ettari) di un poligono di bosco, considerando una distanza dal margine di 20 metri. Caricare il layer bosco, selezionarlo e aprire il Calcolatore dei Campi. Aggiungere un nuovo campo denominato \"core_area\": 1. Tipo campo in uscita: Numero decimale 2. Lunghezza campo in uscita: 10 3. Precisione: 2 Nella finestra delle espressioni digitare: area(buffer($geometry, -20))/10000 Il risultato sar\u00e0 17.08 ha Vediamo l'espressione utilizzata: buffer($geometry,-20) : Crea un buffer del poligono utilizzando la funzione $geometry , con una profondit\u00e0 negativa di 20 metri (buffer interno) area : Calcola l' area della geometria appena definita, in ettari (/10000) Il GeoPackage, con il vettore bosco, \u00e8 disponibile qui Funzioni e variabili utilizzate: area buffer","title":"Calcolo della core area (area interna al poligono al netto di un'area di buffer interna )"},{"location":"esempi/distanze_progressive_chilometriche/","text":"Formattare le distanze chilometriche progressive \u21b5 Vettore lineare (strade) e vettore puntuale con distanze progressive, la tabella degli attributi ha un campo distance che rappresenta le distanze progressive espresse in metri, in questo esempio popoleremo - usando il calcolatore di campi di QGIS - un nuovo campo (prog_km) con le distanze chilometriche progressive in stile autostrade. espressione \u21b5 CASE WHEN \"prog\" <10 THEN '0+00' ||\"prog\" WHEN \"prog\" <100 THEN '0+0' ||\"prog\" WHEN \"prog\" <1000 THEN '0+' ||\"prog\" WHEN \"prog\" <10000 THEN left( \"prog\",1)||'+'|| right( \"prog\" ,3) WHEN \"prog\" <100000 THEN left( \"prog\",2)||'+'|| right( \"prog\" ,3) WHEN \"prog\" <1000000 THEN left( \"prog\",3)||'+'|| right( \"prog\" ,3) ELSE 'valore oltre 1000 km' END Prova tu \u21b5 dati e progetto Funzioni e variabili utilizzate: CASE","title":"Formattare le distanze chilometriche progressive"},{"location":"esempi/distanze_progressive_chilometriche/#formattare-le-distanze-chilometriche-progressive","text":"Vettore lineare (strade) e vettore puntuale con distanze progressive, la tabella degli attributi ha un campo distance che rappresenta le distanze progressive espresse in metri, in questo esempio popoleremo - usando il calcolatore di campi di QGIS - un nuovo campo (prog_km) con le distanze chilometriche progressive in stile autostrade.","title":"Formattare le distanze chilometriche progressive"},{"location":"esempi/distanze_progressive_chilometriche/#espressione","text":"CASE WHEN \"prog\" <10 THEN '0+00' ||\"prog\" WHEN \"prog\" <100 THEN '0+0' ||\"prog\" WHEN \"prog\" <1000 THEN '0+' ||\"prog\" WHEN \"prog\" <10000 THEN left( \"prog\",1)||'+'|| right( \"prog\" ,3) WHEN \"prog\" <100000 THEN left( \"prog\",2)||'+'|| right( \"prog\" ,3) WHEN \"prog\" <1000000 THEN left( \"prog\",3)||'+'|| right( \"prog\" ,3) ELSE 'valore oltre 1000 km' END","title":"espressione"},{"location":"esempi/distanze_progressive_chilometriche/#prova-tu","text":"dati e progetto Funzioni e variabili utilizzate: CASE","title":"Prova tu"},{"location":"esempi/drilldown_form_multiple/","text":"Creare moduli con filtro dinamico (anche multi-selezione) \u21b5 Una delle novit\u00e0 introdotte nella QGIS 3.2 \u00e8 la Form drill-down (a cascata) WIDGET Value Relation (Relazione valore) che permette di creare delle Form con filtro dinamico, in questo esercizio vedremo come realizzare una Form semplice e una multiselezione. Form semplice selezione 1:1 \u21b5 espressione da usare: \"cod_prov\" = current_value('provincia') Form avanzato n:m \u21b5 espressione da usare: eval( ' \"cod_prov\" in' || replace(current_value('provincia'),array('{','}', '\"'),array('(',')', '\\''))) Espressione di Pedro Ven\u00e2ncio con suggerimento di Alexandre Neto - Lista QGIS dev Form avanzato con spatial join 1:m \u21b5 espressione da scrivere in Espressione filtro nel primo campo della form: aggregate( layer:='province_siciliane', aggregate:='concatenate', expression:= \"DEN_PCM\", filter:= intersects(@current_geometry, geometry(@parent) ) ) o pi\u00f9 semplicemente (e anche pi\u00f9 performante) intersects( @current_geometry ,$geometry) Nel caso volessimo filtrare la feature pi\u00f9 vicina (quindi non necessariamnete intersecante): minimum(distance(@current_geometry ,$geometry)) = distance(@current_geometry ,$geometry) espressione da scrivere in Espressione filtro nel secondo campo della form: eval( ' \"cod_prov\" in' || replace(current_value('provincia'),array('{','}', '\"'),array('(',')', '\\''))) Espressione di Pedro Ven\u00e2ncio con suggerimento di Alexandre Neto - Lista QGIS dev funzione aggregate Prova tu \u21b5 Geopackage con dati e progetto Nel GeoPackage sono state memorizzate i tre stili usati per il form!!! Riferimenti \u21b5 Lista QGIS dev Issue: https://github.com/qgis/QGIS/issues/33046 Funzioni e variabili utilizzate: aggregate eval array","title":"Creare moduli con filtro dinamico (anche multi-selezione)"},{"location":"esempi/drilldown_form_multiple/#creare-moduli-con-filtro-dinamico-anche-multi-selezione","text":"Una delle novit\u00e0 introdotte nella QGIS 3.2 \u00e8 la Form drill-down (a cascata) WIDGET Value Relation (Relazione valore) che permette di creare delle Form con filtro dinamico, in questo esercizio vedremo come realizzare una Form semplice e una multiselezione.","title":"Creare moduli con filtro dinamico (anche multi-selezione)"},{"location":"esempi/drilldown_form_multiple/#form-semplice-selezione-11","text":"espressione da usare: \"cod_prov\" = current_value('provincia')","title":"Form semplice selezione 1:1"},{"location":"esempi/drilldown_form_multiple/#form-avanzato-nm","text":"espressione da usare: eval( ' \"cod_prov\" in' || replace(current_value('provincia'),array('{','}', '\"'),array('(',')', '\\''))) Espressione di Pedro Ven\u00e2ncio con suggerimento di Alexandre Neto - Lista QGIS dev","title":"Form avanzato n:m"},{"location":"esempi/drilldown_form_multiple/#form-avanzato-con-spatial-join-1m","text":"espressione da scrivere in Espressione filtro nel primo campo della form: aggregate( layer:='province_siciliane', aggregate:='concatenate', expression:= \"DEN_PCM\", filter:= intersects(@current_geometry, geometry(@parent) ) ) o pi\u00f9 semplicemente (e anche pi\u00f9 performante) intersects( @current_geometry ,$geometry) Nel caso volessimo filtrare la feature pi\u00f9 vicina (quindi non necessariamnete intersecante): minimum(distance(@current_geometry ,$geometry)) = distance(@current_geometry ,$geometry) espressione da scrivere in Espressione filtro nel secondo campo della form: eval( ' \"cod_prov\" in' || replace(current_value('provincia'),array('{','}', '\"'),array('(',')', '\\''))) Espressione di Pedro Ven\u00e2ncio con suggerimento di Alexandre Neto - Lista QGIS dev funzione aggregate","title":"Form avanzato con spatial join 1:m"},{"location":"esempi/drilldown_form_multiple/#prova-tu","text":"Geopackage con dati e progetto Nel GeoPackage sono state memorizzate i tre stili usati per il form!!!","title":"Prova tu"},{"location":"esempi/drilldown_form_multiple/#riferimenti","text":"Lista QGIS dev Issue: https://github.com/qgis/QGIS/issues/33046 Funzioni e variabili utilizzate: aggregate eval array","title":"Riferimenti"},{"location":"esempi/elenco_comuni_attraversati_fiume/","text":"elenco comuni \u21b5 Come ottenere l'elenco dei Comuni attraversati da un fiume. Esempio: Dato il vettore dei Comuni toscani e il vettore dei fiumi (Arno e Ombrone) aggiungere un campo (al vettore fiumi) con tutti i nomi dei comuni attraversati dai due fiumi avviare il calcolatore di campi e creare un nuovo campo 'comuni' testo (255) e popolarlo con la seguente espressione: aggregate( layer:='comuni_rt', aggregate:='concatenate', expression:= \"nome\", filter:= crosses($geometry, geometry(@parent) ), concatenator:='-') Step: seleziono il layer _fiumi_rt, clicco sull'icona del calcolatore di campi: nome del campo in uscita: comuni tipo di campo in uscita: testo; lunghezza campo: 255 scrivo espressione di sopra; ecco la tabella attributi: prova tu \u21b5 dati e progetto QGIS 3.4 Funzioni e variabili utilizzate: aggregate","title":"Elenco comuni attraversati fiume"},{"location":"esempi/elenco_comuni_attraversati_fiume/#elenco-comuni","text":"Come ottenere l'elenco dei Comuni attraversati da un fiume. Esempio: Dato il vettore dei Comuni toscani e il vettore dei fiumi (Arno e Ombrone) aggiungere un campo (al vettore fiumi) con tutti i nomi dei comuni attraversati dai due fiumi avviare il calcolatore di campi e creare un nuovo campo 'comuni' testo (255) e popolarlo con la seguente espressione: aggregate( layer:='comuni_rt', aggregate:='concatenate', expression:= \"nome\", filter:= crosses($geometry, geometry(@parent) ), concatenator:='-') Step: seleziono il layer _fiumi_rt, clicco sull'icona del calcolatore di campi: nome del campo in uscita: comuni tipo di campo in uscita: testo; lunghezza campo: 255 scrivo espressione di sopra; ecco la tabella attributi:","title":"elenco comuni"},{"location":"esempi/elenco_comuni_attraversati_fiume/#prova-tu","text":"dati e progetto QGIS 3.4 Funzioni e variabili utilizzate: aggregate","title":"prova tu"},{"location":"esempi/elenco_ordinato_comuni_attraversati/","text":"Elenco ordinato di Comuni attraversati da un itinerario \u21b5 Come ottenere l'elenco ordinato dei Comuni attraversati da un itinerario. Esempio: A partire da un itinerario ciclabile, determinare i Comuni attraversati da questa linea, in ordine di intersezione, partendo da un origine seguendo il percorso per arrivare alla destinazione, avendo quindi una lista ordinata. avviare il calcolatore di campi (dopo aver selezionato il layer poligonale) e creare un nuovo campo sort_D-A numerico e popolarlo con la seguente espressione: with_variable('toto', reverse( geometry(get_feature('percorso','fid',1))), array_find( array_filter( array_sort( array_agg( line_locate_point(@toto, line_interpolate_point( intersection($geometry,@toto ), length(intersection($geometry,@toto))*0.1 )) ) ), @element >0), line_locate_point(@toto, line_interpolate_point( intersection($geometry,@toto ), length(intersection($geometry,@toto)) *0.1 )) ) ) L'espressione popoler\u00e0 solo le celle in cui esiste l'intersezione tra percorso e poligono comunale, le altre celle rimarranno NULL . Il valore rappresenter\u00e0, a partire da 0 , l'ordine dei Comuni (0,1,2,3....50...). Logica dell'espressione: Per ogni intersezione, tra linea percorso e poligoni comunali, calolo un punto lungo la linea posto ad una distanza pari al 10% dell'intera intersezione e la uso per determinare la lunghezza totale a partire dall'origine dell'intero percorso. Lunghezze maggiori indicano poligoni comunali attraversati dopo rispetto a quelli con lunghezza minore. Step: seleziono il layer itinerario_cicloturistico_domosossola_aosta ambiti_amministrativi_comuni presente nella TOC, clicco sull'icona del calcolatore di campi: nome del campo in uscita: sort_D-A tipo di campo in uscita: integer ; scrivo espressione di sopra; ecco la tabella attributi: Poligoni comunali Maggiori dettagli nel blog post su Pigrecoinfinito: prova tu \u21b5 dati e progetto QGIS 3.12 Funzioni e variabili utilizzate: with_variable array_find array_filter array_agg line_locate_point line_interpolate_point intersection length \\$geometry","title":"Elenco ordinato di Comuni attraversati da un itinerario"},{"location":"esempi/elenco_ordinato_comuni_attraversati/#elenco-ordinato-di-comuni-attraversati-da-un-itinerario","text":"Come ottenere l'elenco ordinato dei Comuni attraversati da un itinerario. Esempio: A partire da un itinerario ciclabile, determinare i Comuni attraversati da questa linea, in ordine di intersezione, partendo da un origine seguendo il percorso per arrivare alla destinazione, avendo quindi una lista ordinata. avviare il calcolatore di campi (dopo aver selezionato il layer poligonale) e creare un nuovo campo sort_D-A numerico e popolarlo con la seguente espressione: with_variable('toto', reverse( geometry(get_feature('percorso','fid',1))), array_find( array_filter( array_sort( array_agg( line_locate_point(@toto, line_interpolate_point( intersection($geometry,@toto ), length(intersection($geometry,@toto))*0.1 )) ) ), @element >0), line_locate_point(@toto, line_interpolate_point( intersection($geometry,@toto ), length(intersection($geometry,@toto)) *0.1 )) ) ) L'espressione popoler\u00e0 solo le celle in cui esiste l'intersezione tra percorso e poligono comunale, le altre celle rimarranno NULL . Il valore rappresenter\u00e0, a partire da 0 , l'ordine dei Comuni (0,1,2,3....50...). Logica dell'espressione: Per ogni intersezione, tra linea percorso e poligoni comunali, calolo un punto lungo la linea posto ad una distanza pari al 10% dell'intera intersezione e la uso per determinare la lunghezza totale a partire dall'origine dell'intero percorso. Lunghezze maggiori indicano poligoni comunali attraversati dopo rispetto a quelli con lunghezza minore. Step: seleziono il layer itinerario_cicloturistico_domosossola_aosta ambiti_amministrativi_comuni presente nella TOC, clicco sull'icona del calcolatore di campi: nome del campo in uscita: sort_D-A tipo di campo in uscita: integer ; scrivo espressione di sopra; ecco la tabella attributi: Poligoni comunali Maggiori dettagli nel blog post su Pigrecoinfinito:","title":"Elenco ordinato di Comuni attraversati da un itinerario"},{"location":"esempi/elenco_ordinato_comuni_attraversati/#prova-tu","text":"dati e progetto QGIS 3.12 Funzioni e variabili utilizzate: with_variable array_find array_filter array_agg line_locate_point line_interpolate_point intersection length \\$geometry","title":"prova tu"},{"location":"esempi/espressione_regolare/","text":"Espressione regolare: inserire automaticamente un carattere speciale \u21b5 Ho delle label composte da 4-5 parole e vorrei mandare a capo ogni 2 parole circa. Se uso lo spazio ovviamente mi impila le 4-5 parole e non \u00e8 quello che vorrei ottenere. E' possibile inserire automaticamente un carattere speciale dopo ogni due parole? Utilizzerei poi quel carattere per mandare a capo il testo nel compositore di stampa di QGIS 2.18. Inserire il carattere speciale a mano \u00e8 impensabile...sono pi\u00f9 di 1000 feature.. CASE WHEN length (\"TRIM_STR_C\" ) >34 THEN regexp_replace( \"TRIM_STR_C\" , '(\\\\S+\\\\s+\\\\S+\\\\s+\\\\S+)(\\\\s+)(.*)','\\\\1$\\\\3') else regexp_replace( \"TRIM_STR_C\" , '(\\\\S+\\\\s+\\\\S+)(\\\\s+)(.*)','\\\\1$\\\\3') END Questa espressione condizionale controlla prima la lunghezza della stringa (label) e se >34 applica la prima regexp_replace altrimenti la seconda; la regexp_replace : (\\\\S+\\\\s+\\\\S+\\\\s+\\\\S+)(\\\\s+)(.*) acchiappa il terzo spazio presente in tutta la frase e per sostituirgli un carattere spaciale: \\\\1$\\\\3 dove \\\\1 \u00e8 la prima parte prima del terzo spazio mentre \\\\3 \u00e8 la terza parte contando anche lo spazio; (\\\\S+\\\\s+\\\\S+)(\\\\s+)(.*) acchiappa il secondo spazio presente in tutta la frase e per sostituirgli un carattere spaciale: \\\\1$\\\\3 dove \\\\1 \u00e8 la prima parte prima del terzo spazio mentre \\\\3 \u00e8 la terza parte contando anche lo spazio; thread ML Gfoss Altra possibile soluzione, molto pi\u00f9 elegante \u00e8 la seguente (grazie Andrea Borruso ): ^((\\\\S+\\\\s*?){3})(\\\\s+)(.*?)$ e per la sostituzione \\\\1#\\\\4 ovvero, il numero tra parentesi graffe indica la parola oltre la quale inserire il carattere speciale: regexp_replace('Via Mario Miglioranza detto Pinto','^((\\\\S+\\\\s*?){3})(\\\\s+)(.*?)$','\\\\1#\\\\4') \u2192 Via Mario Miglioranza#detto Pinto Funzioni e variabili utilizzate: regexp_replace","title":"Espressione regolare: inserire automaticamente un carattere speciale"},{"location":"esempi/espressione_regolare/#espressione-regolare-inserire-automaticamente-un-carattere-speciale","text":"Ho delle label composte da 4-5 parole e vorrei mandare a capo ogni 2 parole circa. Se uso lo spazio ovviamente mi impila le 4-5 parole e non \u00e8 quello che vorrei ottenere. E' possibile inserire automaticamente un carattere speciale dopo ogni due parole? Utilizzerei poi quel carattere per mandare a capo il testo nel compositore di stampa di QGIS 2.18. Inserire il carattere speciale a mano \u00e8 impensabile...sono pi\u00f9 di 1000 feature.. CASE WHEN length (\"TRIM_STR_C\" ) >34 THEN regexp_replace( \"TRIM_STR_C\" , '(\\\\S+\\\\s+\\\\S+\\\\s+\\\\S+)(\\\\s+)(.*)','\\\\1$\\\\3') else regexp_replace( \"TRIM_STR_C\" , '(\\\\S+\\\\s+\\\\S+)(\\\\s+)(.*)','\\\\1$\\\\3') END Questa espressione condizionale controlla prima la lunghezza della stringa (label) e se >34 applica la prima regexp_replace altrimenti la seconda; la regexp_replace : (\\\\S+\\\\s+\\\\S+\\\\s+\\\\S+)(\\\\s+)(.*) acchiappa il terzo spazio presente in tutta la frase e per sostituirgli un carattere spaciale: \\\\1$\\\\3 dove \\\\1 \u00e8 la prima parte prima del terzo spazio mentre \\\\3 \u00e8 la terza parte contando anche lo spazio; (\\\\S+\\\\s+\\\\S+)(\\\\s+)(.*) acchiappa il secondo spazio presente in tutta la frase e per sostituirgli un carattere spaciale: \\\\1$\\\\3 dove \\\\1 \u00e8 la prima parte prima del terzo spazio mentre \\\\3 \u00e8 la terza parte contando anche lo spazio; thread ML Gfoss Altra possibile soluzione, molto pi\u00f9 elegante \u00e8 la seguente (grazie Andrea Borruso ): ^((\\\\S+\\\\s*?){3})(\\\\s+)(.*?)$ e per la sostituzione \\\\1#\\\\4 ovvero, il numero tra parentesi graffe indica la parola oltre la quale inserire il carattere speciale: regexp_replace('Via Mario Miglioranza detto Pinto','^((\\\\S+\\\\s*?){3})(\\\\s+)(.*?)$','\\\\1#\\\\4') \u2192 Via Mario Miglioranza#detto Pinto Funzioni e variabili utilizzate: regexp_replace","title":"Espressione regolare: inserire automaticamente un carattere speciale"},{"location":"esempi/etichettare_chiave_valore/","text":"Etichettare usando struttura a mappa chiave-valore \u21b5 Alcune volte nasce la necessit\u00e0 di etichettare le feature facendo vedere sia il nome del campo che il corrispondente valore (classico caso chiave:valore ). Shapefile regioni ISTAT, creare l'etichetta in modo da visualizzare, per ogni regione, tutti i campi e relativi valori, vedi screenshot: Espressione da usare: replace ( replace ( map_to_hstore ( attributes ()) , '\"' , '' ) , '=>' , ' = ' ) dove l'espressione che crea una struttura a mappa \u00e8: map_to_hstore( attributes()) \u2192 '\"cod_reg\"=>\"1\",\"cod_rip\"=>\"1\",\"den_reg\"=>\"Piemonte\",\"fid\"=>\"\u2026' le funzioni replace() servono a modificare l'output, cio\u00e8 a togliere i doppi apici e la freccia. NB: I campi sono ordinati alfabeticamente! Funzioni e variabili utilizzate: replace map_to_hstore attributes","title":"Etichettare chiave valore"},{"location":"esempi/etichettare_chiave_valore/#etichettare-usando-struttura-a-mappa-chiave-valore","text":"Alcune volte nasce la necessit\u00e0 di etichettare le feature facendo vedere sia il nome del campo che il corrispondente valore (classico caso chiave:valore ). Shapefile regioni ISTAT, creare l'etichetta in modo da visualizzare, per ogni regione, tutti i campi e relativi valori, vedi screenshot: Espressione da usare: replace ( replace ( map_to_hstore ( attributes ()) , '\"' , '' ) , '=>' , ' = ' ) dove l'espressione che crea una struttura a mappa \u00e8: map_to_hstore( attributes()) \u2192 '\"cod_reg\"=>\"1\",\"cod_rip\"=>\"1\",\"den_reg\"=>\"Piemonte\",\"fid\"=>\"\u2026' le funzioni replace() servono a modificare l'output, cio\u00e8 a togliere i doppi apici e la freccia. NB: I campi sono ordinati alfabeticamente! Funzioni e variabili utilizzate: replace map_to_hstore attributes","title":"Etichettare usando struttura a mappa chiave-valore"},{"location":"esempi/etichettare_itinerario_elenco_comuni_attraversati/","text":"Etichettare un itinerario con l\u2019elenco ordinato dei Comuni attraversati \u21b5 Qualche giorno fa in queste pagine \u00e9 stato pubblicato un esempio su come creare, tramite calcolatore di campi, un elenco ordinato di Comuni attraversati da un itinerario ( esempio 39 ). Nell\u2019esempio citato l\u2019espressione utilizzata permetteva di creare un nuovo campo con numerazione progressiva all\u2019interno del layer poligonale contenente i limiti comunali. In questo esempio vedremo invece come sia possibile, sempre utilizzando iI calcolatore di campi, intervenire direttamente sul layer lineare rappresentante l\u2019itinerario e creare una etichetta (o un nuovo campo testuale della tabella attributi) contenente un elenco ordinato e numerato dei comuni attraversati. L\u2019espressione da utilizzare \u00e9 la seguente: array_to_string( array_foreach( generate_series(1, num_geometries( collect_geometries( aggregate( layer:= 'poligoni', aggregate:='array_agg', expression:= start_point(intersection($geometry, geometry(@parent))), filter:=intersects($geometry, geometry(@parent))) ) ) ) , concat (@element,'. ', array_get( aggregate( layer:= 'poligoni', aggregate:='array_agg', expression:= \"nome\", filter:=intersects($geometry, geometry(@parent)), order_by:= line_locate_point(geometry(@parent),start_point(intersection($geometry,geometry(@parent))))) ,@element-1) ) ) , ', ') Vediamo le diverse parti che compongono l\u2019espressione e la sua logica. Il calcolo dei Comuni attraversati dall\u2019itinerario viene fatto utilizzando la seguente espressione: start_point(intersection($geometry, geometry(@parent))) la quale, dopo aver spezzato l\u2019itinerario in segmenti corrispondenti ai territori comunali attraversati, crea una nuova geometria puntuale calcolando il punto iniziale di ciascun segmento, corrispondente, in questo esempio, al primo ingresso dell\u2019itinerario all\u2019interno di un Comune. Aggiungendovi la funzione line_locate_point , la quale calcola la distanza tra il punto iniziale di una linea (per noi l\u2019itinerario) e un dato punto (i diversi punti equivalenti agli ingressi nei territori comunali), \u00e9 possibile ordinare la geometria puntuale secondo l\u2019ordine di ingresso del percorso nei diversi Comuni. L\u2019espressione si compone di due parti principali le quali creano, rispettivamente, la serie numerica e l\u2019elenco ordinato di nomi che comporranno l\u2019etichetta. La serie numerica viene creata ricorrendo alla funzione generate_series , con primo valore 1 e per valore ultimo il numero di punti che compongono la geometria puntuale generata dall\u2019espressione: start_point(intersection($geometry, geometry(@parent))) calcolato tramite funzione num_geometries . Nella seconda parte dell\u2019espressione, l\u2019elenco di nomi viene creato tramite funzione aggregate ed ordinato usando la suddescritta funzione line_locate_point . Utilizzando poi la funzione array_get , a ciascun nome dell\u2019elenco viene convertito in valore numerico corrispondente alla sua posizione nell\u2019elenco, cosi da poterlo associare alla serie di numeri precedentemente creata. In entrambe, ricorrendo all\u2019argomento filter della funzione aggregate, \u00e9 possibile limitare il calcolo ai soli poligoni comunali intersecati dall\u2019itinerario: filter:=intersects($geometry, geometry(@parent))) La concatenazione dei due elementi (numero e nome) viene fatta tramite funzione array_foreach , applicando a ciascun elemento della prima serie numerale l\u2019espressione concat() . Il risultato di questa operazione \u00e9 ancora un\u2019array di dati, la quale viene convertita in stringa tramite array_to_string . Procedura 1. Seleziona il layer contenente l\u2019itinerario; 2. Nel Pannelo Stile Layer seleziona la scheda Etichette; 3. In Valore clicca sul simbolo a destra per aprire la finestra di dialogo delle espressioni; 4. Copia l\u2019espressione nel riquadro; 5. Conferma premendo OK . Realizzato da Valerio Pinna (grazie mille!) prova tu \u21b5 dati e progetto QGIS 3.12 Funzioni e variabili utilizzate: @parent aggregate array_to_string array_get array_foreach generate_series num_geometries collect_geometries intersection start_point concat \\$geometry","title":"Etichettare itinerario elenco comuni attraversati"},{"location":"esempi/etichettare_itinerario_elenco_comuni_attraversati/#etichettare-un-itinerario-con-lelenco-ordinato-dei-comuni-attraversati","text":"Qualche giorno fa in queste pagine \u00e9 stato pubblicato un esempio su come creare, tramite calcolatore di campi, un elenco ordinato di Comuni attraversati da un itinerario ( esempio 39 ). Nell\u2019esempio citato l\u2019espressione utilizzata permetteva di creare un nuovo campo con numerazione progressiva all\u2019interno del layer poligonale contenente i limiti comunali. In questo esempio vedremo invece come sia possibile, sempre utilizzando iI calcolatore di campi, intervenire direttamente sul layer lineare rappresentante l\u2019itinerario e creare una etichetta (o un nuovo campo testuale della tabella attributi) contenente un elenco ordinato e numerato dei comuni attraversati. L\u2019espressione da utilizzare \u00e9 la seguente: array_to_string( array_foreach( generate_series(1, num_geometries( collect_geometries( aggregate( layer:= 'poligoni', aggregate:='array_agg', expression:= start_point(intersection($geometry, geometry(@parent))), filter:=intersects($geometry, geometry(@parent))) ) ) ) , concat (@element,'. ', array_get( aggregate( layer:= 'poligoni', aggregate:='array_agg', expression:= \"nome\", filter:=intersects($geometry, geometry(@parent)), order_by:= line_locate_point(geometry(@parent),start_point(intersection($geometry,geometry(@parent))))) ,@element-1) ) ) , ', ') Vediamo le diverse parti che compongono l\u2019espressione e la sua logica. Il calcolo dei Comuni attraversati dall\u2019itinerario viene fatto utilizzando la seguente espressione: start_point(intersection($geometry, geometry(@parent))) la quale, dopo aver spezzato l\u2019itinerario in segmenti corrispondenti ai territori comunali attraversati, crea una nuova geometria puntuale calcolando il punto iniziale di ciascun segmento, corrispondente, in questo esempio, al primo ingresso dell\u2019itinerario all\u2019interno di un Comune. Aggiungendovi la funzione line_locate_point , la quale calcola la distanza tra il punto iniziale di una linea (per noi l\u2019itinerario) e un dato punto (i diversi punti equivalenti agli ingressi nei territori comunali), \u00e9 possibile ordinare la geometria puntuale secondo l\u2019ordine di ingresso del percorso nei diversi Comuni. L\u2019espressione si compone di due parti principali le quali creano, rispettivamente, la serie numerica e l\u2019elenco ordinato di nomi che comporranno l\u2019etichetta. La serie numerica viene creata ricorrendo alla funzione generate_series , con primo valore 1 e per valore ultimo il numero di punti che compongono la geometria puntuale generata dall\u2019espressione: start_point(intersection($geometry, geometry(@parent))) calcolato tramite funzione num_geometries . Nella seconda parte dell\u2019espressione, l\u2019elenco di nomi viene creato tramite funzione aggregate ed ordinato usando la suddescritta funzione line_locate_point . Utilizzando poi la funzione array_get , a ciascun nome dell\u2019elenco viene convertito in valore numerico corrispondente alla sua posizione nell\u2019elenco, cosi da poterlo associare alla serie di numeri precedentemente creata. In entrambe, ricorrendo all\u2019argomento filter della funzione aggregate, \u00e9 possibile limitare il calcolo ai soli poligoni comunali intersecati dall\u2019itinerario: filter:=intersects($geometry, geometry(@parent))) La concatenazione dei due elementi (numero e nome) viene fatta tramite funzione array_foreach , applicando a ciascun elemento della prima serie numerale l\u2019espressione concat() . Il risultato di questa operazione \u00e9 ancora un\u2019array di dati, la quale viene convertita in stringa tramite array_to_string . Procedura 1. Seleziona il layer contenente l\u2019itinerario; 2. Nel Pannelo Stile Layer seleziona la scheda Etichette; 3. In Valore clicca sul simbolo a destra per aprire la finestra di dialogo delle espressioni; 4. Copia l\u2019espressione nel riquadro; 5. Conferma premendo OK . Realizzato da Valerio Pinna (grazie mille!)","title":"Etichettare un itinerario con l\u2019elenco ordinato dei Comuni attraversati"},{"location":"esempi/etichettare_itinerario_elenco_comuni_attraversati/#prova-tu","text":"dati e progetto QGIS 3.12 Funzioni e variabili utilizzate: @parent aggregate array_to_string array_get array_foreach generate_series num_geometries collect_geometries intersection start_point concat \\$geometry","title":"prova tu"},{"location":"esempi/etichette/","text":"Etichettare usando attibuto geometry \u21b5 L'attributo geometry \u00e8 l'unico campo non visibile nella tabella attributi, ma c'\u00e8!!! La geometry \u00e8 espressa in un modo non comprensibile dall'uomo e quindi si evita di farla vedere, questo attibuto porta con se altri attibuti impliciti alla geometria stessa come: nel caso di geometry (MULTI)POINT(ZM): le coordinate x,y,z,m; nel caso di geometry (MULTI)LINESTRING(ZM): lunghezza della linea e coordinate dei nodi/vertici; nel caso di geometry (MULTI)POLYGON(ZM): area, perimetro e coordinate dei vertici; le caratteristiche sono sempre richiamabili (se presenti, cio\u00e8 se ha la Z o m) e quindi non occorre esplicitarle, anzi se esplicitate creano un dataset ridontate. Un modo per richiamarle \u00e8 attraverso l'etichettatura: caso (MULTI)POINT(ZM): espressione da scrivere nel calcolatore di campi 'x= ' || to_int($x) || '\\n' || 'y= ' || to_int($y) || '\\n' || 'z= ' || z($geometry) || '\\n' || 'm= ' || m($geometry) caso (MULTI)LINESTRING(ZM): espressione da scrivere nel calcolatore di campi to_int($length) ||'/'|| z(start_point($geometry)) caso (MULTI)POLYGON(ZM): espressione da scrivere nel calcolatore di campi 'Area= ' || format_number( $area,1) || ' mq' Geopackage \u00e8 qui Funzioni e variabili utilizzate: to_int format_number \\$x \\$y z m \\$length start_point \\$geometry","title":"Etichettare usando attibuto _geometry_"},{"location":"esempi/etichette/#etichettare-usando-attibuto-geometry","text":"L'attributo geometry \u00e8 l'unico campo non visibile nella tabella attributi, ma c'\u00e8!!! La geometry \u00e8 espressa in un modo non comprensibile dall'uomo e quindi si evita di farla vedere, questo attibuto porta con se altri attibuti impliciti alla geometria stessa come: nel caso di geometry (MULTI)POINT(ZM): le coordinate x,y,z,m; nel caso di geometry (MULTI)LINESTRING(ZM): lunghezza della linea e coordinate dei nodi/vertici; nel caso di geometry (MULTI)POLYGON(ZM): area, perimetro e coordinate dei vertici; le caratteristiche sono sempre richiamabili (se presenti, cio\u00e8 se ha la Z o m) e quindi non occorre esplicitarle, anzi se esplicitate creano un dataset ridontate. Un modo per richiamarle \u00e8 attraverso l'etichettatura: caso (MULTI)POINT(ZM): espressione da scrivere nel calcolatore di campi 'x= ' || to_int($x) || '\\n' || 'y= ' || to_int($y) || '\\n' || 'z= ' || z($geometry) || '\\n' || 'm= ' || m($geometry) caso (MULTI)LINESTRING(ZM): espressione da scrivere nel calcolatore di campi to_int($length) ||'/'|| z(start_point($geometry)) caso (MULTI)POLYGON(ZM): espressione da scrivere nel calcolatore di campi 'Area= ' || format_number( $area,1) || ' mq' Geopackage \u00e8 qui Funzioni e variabili utilizzate: to_int format_number \\$x \\$y z m \\$length start_point \\$geometry","title":"Etichettare usando attibuto geometry"},{"location":"esempi/etichette_formattate_diversi_stili/","text":"Etichette formattate con diversi stili all'interno del testo \u21b5 Una richiesta che spesso si ritrova nei canali social della Comunit\u00e1 QGIS \u00e9 quella di poter creare delle etichette al cui interno solo una parte del testo \u00e9 formattata con uno stile diverso dal resto della stringa. In QGIS , infatti, \u00e9 possibile utilizzare gli strumenti offerti dal sistema per formattare in grassetto o corsivo l\u2019intera etichetta ma non \u00e9 possibile, di default, applicare lo stile ad una sola parte del testo. Una soluzione a questo problema \u00e9 offerta dal Calcolatore di campi , dimostrando ancora una volta la potenza di questo strumento. Esistono in rete diversi siti che offrono la possibilit\u00e1 di formattare automaticamente un testo e di espostarlo con un semplice copia-incolla. Qui verranno utilizzati Boldtext (LINK 1) per il grassetto e Lingojam (LINK 2) per il corsivo e per alcuni altri esempi di stili per per creare stringhe alfabetiche formattate da utilizzare nella nostra espressione. L\u2019espressione da utilizzare nell\u2019etichetta in corrispondenza della casella Valore \u00e9 la seguente: with_variable( 'caratteri_normali', array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','0','1','2','3','4','5','6','7','8','9'), with_variable( 'corsivo', array('\ud835\ude22','\ud835\ude23','\ud835\ude24','\ud835\ude25','\ud835\ude26','\ud835\ude27','\ud835\ude28','\ud835\ude29','\ud835\ude2a','\ud835\ude2b','\ud835\ude2c','\ud835\ude2d','\ud835\ude2e','\ud835\ude2f','\ud835\ude30','\ud835\ude31','\ud835\ude32','\ud835\ude33','\ud835\ude34','\ud835\ude35','\ud835\ude36','\ud835\ude37','\ud835\ude38','\ud835\ude39','\ud835\ude3a','\ud835\ude3b','\ud835\ude08','\ud835\ude09','\ud835\ude0a','\ud835\ude0b','\ud835\ude0c','\ud835\ude0d','\ud835\ude0e','\ud835\ude0f','\ud835\ude10','\ud835\ude11','\ud835\ude12','\ud835\ude13','\ud835\ude14','\ud835\ude15','\ud835\ude16','\ud835\ude17','\ud835\ude18','\ud835\ude19','\ud835\ude1a','\ud835\ude1b','\ud835\ude1c','\ud835\ude1d','\ud835\ude1e','\ud835\ude1f','\ud835\ude20','\ud835\ude21','0','1','2','3','4','5','6','7','8','9'), with_variable( 'grassetto', array('\ud835\uddee','\ud835\uddef','\ud835\uddf0','\ud835\uddf1','\ud835\uddf2','\ud835\uddf3','\ud835\uddf4','\ud835\uddf5','\ud835\uddf6','\ud835\uddf7','\ud835\uddf8','\ud835\uddf9','\ud835\uddfa','\ud835\uddfb','\ud835\uddfc','\ud835\uddfd','\ud835\uddfe','\ud835\uddff','\ud835\ude00','\ud835\ude01','\ud835\ude02','\ud835\ude03','\ud835\ude04','\ud835\ude05','\ud835\ude06','\ud835\ude07','\ud835\uddd4','\ud835\uddd5','\ud835\uddd6','\ud835\uddd7','\ud835\uddd8','\ud835\uddd9','\ud835\uddda','\ud835\udddb','\ud835\udddc','\ud835\udddd','\ud835\uddde','\ud835\udddf','\ud835\udde0','\ud835\udde1','\ud835\udde2','\ud835\udde3','\ud835\udde4','\ud835\udde5','\ud835\udde6','\ud835\udde7','\ud835\udde8','\ud835\udde9','\ud835\uddea','\ud835\uddeb','\ud835\uddec','\ud835\udded','\ud835\udfec','\ud835\udfed','\ud835\udfee','\ud835\udfef','\ud835\udff0','\ud835\udff1','\ud835\udff2','\ud835\udff3','\ud835\udff4','\ud835\udff5'), with_variable('scrittura_a_mano', array('\ud835\udcb6','\ud835\udcb7','\ud835\udcb8','\ud835\udcb9','\ud835\udc52','\ud835\udcbb','\ud835\udc54','\ud835\udcbd','\ud835\udcbe','\ud835\udcbf','\ud835\udcc0','\ud835\udcc1','\ud835\udcc2','\ud835\udcc3','\ud835\udc5c','\ud835\udcc5','\ud835\udcc6','\ud835\udcc7','\ud835\udcc8','\ud835\udcc9','\ud835\udcca','\ud835\udccb','\ud835\udccc','\ud835\udccd','\ud835\udcce','\ud835\udccf','\ud835\udc9c','\ud835\udc35','\ud835\udc9e','\ud835\udc9f','\ud835\udc38','\ud835\udc39','\ud835\udca2','\ud835\udc3b','\ud835\udc3c','\ud835\udca5','\ud835\udca6','\ud835\udc3f','\ud835\udc40','\ud835\udca9','\ud835\udcaa','\ud835\udcab','\ud835\udcac','\ud835\udc45','\ud835\udcae','\ud835\udcaf','\ud835\udcb0','\ud835\udcb1','\ud835\udcb2','\ud835\udcb3','\ud835\udcb4','\ud835\udcb5','\ud835\udfe2','\ud835\udfe3','\ud835\udfe4','\ud835\udfe5','\ud835\udfe6','5','\ud835\udfe8','\ud835\udfe9','\ud835\udfea','\ud835\udfeb'), with_variable('stiloso', array('\ud835\udd52','\ud835\udd53','\ud835\udd54','\ud835\udd55','\ud835\udd56','\ud835\udd57','\ud835\udd58','\ud835\udd59','\ud835\udd5a','\ud835\udd5b','\ud835\udd5c','\ud835\udd5d','\ud835\udd5e','\ud835\udd5f','\ud835\udd60','\ud835\udd61','\ud835\udd62','\ud835\udd63','\ud835\udd64','\ud835\udd65','\ud835\udd66','\ud835\udd67','\ud835\udd68','\ud835\udd69','\ud835\udd6a','\ud835\udd6b','\ud835\udd38','\ud835\udd39','\u2102','\ud835\udd3b','\ud835\udd3c','\ud835\udd3d','\ud835\udd3e','\u210d','\ud835\udd40','\ud835\udd41','\ud835\udd42','\ud835\udd43','\ud835\udd44','\u2115','\ud835\udd46','\u2119','\u211a','\u211d','\ud835\udd4a','\ud835\udd4b','\ud835\udd4c','\ud835\udd4d','\ud835\udd4e','\ud835\udd4f','\ud835\udd50','\u2124','\ud835\udfd8','\ud835\udfd9','\ud835\udfda','\ud835\udfdb','\ud835\udfdc','\ud835\udfdd','\ud835\udfde','\ud835\udfdf','\ud835\udfe0','\ud835\udfe1'), replace(\"Name\", @caratteri_normali, @grassetto) || '\\n' || replace(\"Name\", @caratteri_normali, @corsivo) || '\\n' || replace(\"Name\", @caratteri_normali, @scrittura_a_mano) || '\\n' || replace(\"Name\", @caratteri_normali, @stiloso) ))))) Vediamo come opera \u21b5 Per ogni stile che si vuole utilizzare \u00e9 necessario creare una variabile usando la funzione with_variable contenente un\u2019 array composta da tutti i caratteri (maiuscolo, minuscolo e numeri). La prima variabile creata contiene i caratteri normali, non formattati, mentre le altre variabili nell\u2019espressione contengono serie di caratteri formattati nei diversi stili. Per creare queste array si deve semplicemente copiare e incollare il contenuto della prima array coi caratteri normali in uno dei siti suddescritti e una volta creato il testo formattato copiarlo nella nuova array. Una volta preparato il gruppo di variabili con gli stili a propria scelta, passiamo alla seconda parte dell\u2019espressione. replace(\"Name\", @caratteri_normali, @grassetto) Utilizzando la funzione replace , semplicemente chiediamo al sistema di restituirci la stringa qui rappresentata da \"den_reg\" sostituendo ai caratteri normali (@caratteri_normali) i caratteri corrispondenti contenuti nella seconda variabile (@grassetto). Per applicare un diverso stile si deve semplicemente sostituire seconda variabile con lo stile scelto. Utilizzando la funzione concat o il simbolo di concatenazione || si possono costruire anche etichette complesse con diversi stili di formattazione all\u2019interno della stessa stringa. Un esempio di questo \u00e9 presentato poco pi\u00fa avanti dove vedremo una soluzione alternativa allo stesso problema. Soluzione con variabili di progetto Per rendere gli stili disponibili a tutti i layer del progetto \u00e9 possibile utilizzare le variabili personalizzate di progetto, cos\u00ed da richiamare i diversi stili velocemente all\u2019interno dell\u2019espressione. Step 1 All\u2019interno delle propriet\u00e1 del progetto, nella scheda Variabili, creare una nuova variabile per ciascuno degli stili, contenente l\u2019intera serie di caratteri separati dalla virgola. Step 2 L\u2019espressione in questo caso sar\u00e1 semplificata, semplicemente richiamando la stringa contenuta nella variabile di progetto e convertendola in array con la funzione string_to_array . with_variable('caratteri_normali', string_to_array(@stile_normale) , with_variable('grassetto', string_to_array(@stile_grassetto) , with_variable('corsivo', string_to_array(@stile_corsivo) , replace(\"DEN_REG\", @caratteri_normali, @grassetto ) || ' non \u00e9 in ' || replace('corsivo', @caratteri_normali, @corsivo ) ))) L\u2019idea di questo esempio e stata suggerita da una risposta su GIS.Stackexchange (LINK 3) data dall\u2019utente bugmenot123 che ringrazio per la geniale soluzione proposta. Grazie a Salvatore Fiandaca per avermi proposto di scrivere questo esempio e per il suo suggerimento per proporre anche la soluzione con variabili di progetto. Link utili: https://boldtext.io/ https://lingojam.com/ItalicTextGenerator https://gis.stackexchange.com/questions/357234/styling-substring-of-label-with-different-style-without-creating-two-separate-la?fbclid=IwAR3n94vGBAe9MMoayzLTkGjdlimq7Dkbefm0lAzuSPSbS_kLpxq88w6Eixk Realizzato da Valerio Pinna (grazie mille!) Prova tu \u21b5 Geopackage \u00e8 qui Funzioni e variabili utilizzate: with_variable array string_to_array replace","title":"Etichette formattate con diversi stili all'interno del testo"},{"location":"esempi/etichette_formattate_diversi_stili/#etichette-formattate-con-diversi-stili-allinterno-del-testo","text":"Una richiesta che spesso si ritrova nei canali social della Comunit\u00e1 QGIS \u00e9 quella di poter creare delle etichette al cui interno solo una parte del testo \u00e9 formattata con uno stile diverso dal resto della stringa. In QGIS , infatti, \u00e9 possibile utilizzare gli strumenti offerti dal sistema per formattare in grassetto o corsivo l\u2019intera etichetta ma non \u00e9 possibile, di default, applicare lo stile ad una sola parte del testo. Una soluzione a questo problema \u00e9 offerta dal Calcolatore di campi , dimostrando ancora una volta la potenza di questo strumento. Esistono in rete diversi siti che offrono la possibilit\u00e1 di formattare automaticamente un testo e di espostarlo con un semplice copia-incolla. Qui verranno utilizzati Boldtext (LINK 1) per il grassetto e Lingojam (LINK 2) per il corsivo e per alcuni altri esempi di stili per per creare stringhe alfabetiche formattate da utilizzare nella nostra espressione. L\u2019espressione da utilizzare nell\u2019etichetta in corrispondenza della casella Valore \u00e9 la seguente: with_variable( 'caratteri_normali', array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z','0','1','2','3','4','5','6','7','8','9'), with_variable( 'corsivo', array('\ud835\ude22','\ud835\ude23','\ud835\ude24','\ud835\ude25','\ud835\ude26','\ud835\ude27','\ud835\ude28','\ud835\ude29','\ud835\ude2a','\ud835\ude2b','\ud835\ude2c','\ud835\ude2d','\ud835\ude2e','\ud835\ude2f','\ud835\ude30','\ud835\ude31','\ud835\ude32','\ud835\ude33','\ud835\ude34','\ud835\ude35','\ud835\ude36','\ud835\ude37','\ud835\ude38','\ud835\ude39','\ud835\ude3a','\ud835\ude3b','\ud835\ude08','\ud835\ude09','\ud835\ude0a','\ud835\ude0b','\ud835\ude0c','\ud835\ude0d','\ud835\ude0e','\ud835\ude0f','\ud835\ude10','\ud835\ude11','\ud835\ude12','\ud835\ude13','\ud835\ude14','\ud835\ude15','\ud835\ude16','\ud835\ude17','\ud835\ude18','\ud835\ude19','\ud835\ude1a','\ud835\ude1b','\ud835\ude1c','\ud835\ude1d','\ud835\ude1e','\ud835\ude1f','\ud835\ude20','\ud835\ude21','0','1','2','3','4','5','6','7','8','9'), with_variable( 'grassetto', array('\ud835\uddee','\ud835\uddef','\ud835\uddf0','\ud835\uddf1','\ud835\uddf2','\ud835\uddf3','\ud835\uddf4','\ud835\uddf5','\ud835\uddf6','\ud835\uddf7','\ud835\uddf8','\ud835\uddf9','\ud835\uddfa','\ud835\uddfb','\ud835\uddfc','\ud835\uddfd','\ud835\uddfe','\ud835\uddff','\ud835\ude00','\ud835\ude01','\ud835\ude02','\ud835\ude03','\ud835\ude04','\ud835\ude05','\ud835\ude06','\ud835\ude07','\ud835\uddd4','\ud835\uddd5','\ud835\uddd6','\ud835\uddd7','\ud835\uddd8','\ud835\uddd9','\ud835\uddda','\ud835\udddb','\ud835\udddc','\ud835\udddd','\ud835\uddde','\ud835\udddf','\ud835\udde0','\ud835\udde1','\ud835\udde2','\ud835\udde3','\ud835\udde4','\ud835\udde5','\ud835\udde6','\ud835\udde7','\ud835\udde8','\ud835\udde9','\ud835\uddea','\ud835\uddeb','\ud835\uddec','\ud835\udded','\ud835\udfec','\ud835\udfed','\ud835\udfee','\ud835\udfef','\ud835\udff0','\ud835\udff1','\ud835\udff2','\ud835\udff3','\ud835\udff4','\ud835\udff5'), with_variable('scrittura_a_mano', array('\ud835\udcb6','\ud835\udcb7','\ud835\udcb8','\ud835\udcb9','\ud835\udc52','\ud835\udcbb','\ud835\udc54','\ud835\udcbd','\ud835\udcbe','\ud835\udcbf','\ud835\udcc0','\ud835\udcc1','\ud835\udcc2','\ud835\udcc3','\ud835\udc5c','\ud835\udcc5','\ud835\udcc6','\ud835\udcc7','\ud835\udcc8','\ud835\udcc9','\ud835\udcca','\ud835\udccb','\ud835\udccc','\ud835\udccd','\ud835\udcce','\ud835\udccf','\ud835\udc9c','\ud835\udc35','\ud835\udc9e','\ud835\udc9f','\ud835\udc38','\ud835\udc39','\ud835\udca2','\ud835\udc3b','\ud835\udc3c','\ud835\udca5','\ud835\udca6','\ud835\udc3f','\ud835\udc40','\ud835\udca9','\ud835\udcaa','\ud835\udcab','\ud835\udcac','\ud835\udc45','\ud835\udcae','\ud835\udcaf','\ud835\udcb0','\ud835\udcb1','\ud835\udcb2','\ud835\udcb3','\ud835\udcb4','\ud835\udcb5','\ud835\udfe2','\ud835\udfe3','\ud835\udfe4','\ud835\udfe5','\ud835\udfe6','5','\ud835\udfe8','\ud835\udfe9','\ud835\udfea','\ud835\udfeb'), with_variable('stiloso', array('\ud835\udd52','\ud835\udd53','\ud835\udd54','\ud835\udd55','\ud835\udd56','\ud835\udd57','\ud835\udd58','\ud835\udd59','\ud835\udd5a','\ud835\udd5b','\ud835\udd5c','\ud835\udd5d','\ud835\udd5e','\ud835\udd5f','\ud835\udd60','\ud835\udd61','\ud835\udd62','\ud835\udd63','\ud835\udd64','\ud835\udd65','\ud835\udd66','\ud835\udd67','\ud835\udd68','\ud835\udd69','\ud835\udd6a','\ud835\udd6b','\ud835\udd38','\ud835\udd39','\u2102','\ud835\udd3b','\ud835\udd3c','\ud835\udd3d','\ud835\udd3e','\u210d','\ud835\udd40','\ud835\udd41','\ud835\udd42','\ud835\udd43','\ud835\udd44','\u2115','\ud835\udd46','\u2119','\u211a','\u211d','\ud835\udd4a','\ud835\udd4b','\ud835\udd4c','\ud835\udd4d','\ud835\udd4e','\ud835\udd4f','\ud835\udd50','\u2124','\ud835\udfd8','\ud835\udfd9','\ud835\udfda','\ud835\udfdb','\ud835\udfdc','\ud835\udfdd','\ud835\udfde','\ud835\udfdf','\ud835\udfe0','\ud835\udfe1'), replace(\"Name\", @caratteri_normali, @grassetto) || '\\n' || replace(\"Name\", @caratteri_normali, @corsivo) || '\\n' || replace(\"Name\", @caratteri_normali, @scrittura_a_mano) || '\\n' || replace(\"Name\", @caratteri_normali, @stiloso) )))))","title":"Etichette formattate con diversi stili all'interno del testo"},{"location":"esempi/etichette_formattate_diversi_stili/#vediamo-come-opera","text":"Per ogni stile che si vuole utilizzare \u00e9 necessario creare una variabile usando la funzione with_variable contenente un\u2019 array composta da tutti i caratteri (maiuscolo, minuscolo e numeri). La prima variabile creata contiene i caratteri normali, non formattati, mentre le altre variabili nell\u2019espressione contengono serie di caratteri formattati nei diversi stili. Per creare queste array si deve semplicemente copiare e incollare il contenuto della prima array coi caratteri normali in uno dei siti suddescritti e una volta creato il testo formattato copiarlo nella nuova array. Una volta preparato il gruppo di variabili con gli stili a propria scelta, passiamo alla seconda parte dell\u2019espressione. replace(\"Name\", @caratteri_normali, @grassetto) Utilizzando la funzione replace , semplicemente chiediamo al sistema di restituirci la stringa qui rappresentata da \"den_reg\" sostituendo ai caratteri normali (@caratteri_normali) i caratteri corrispondenti contenuti nella seconda variabile (@grassetto). Per applicare un diverso stile si deve semplicemente sostituire seconda variabile con lo stile scelto. Utilizzando la funzione concat o il simbolo di concatenazione || si possono costruire anche etichette complesse con diversi stili di formattazione all\u2019interno della stessa stringa. Un esempio di questo \u00e9 presentato poco pi\u00fa avanti dove vedremo una soluzione alternativa allo stesso problema. Soluzione con variabili di progetto Per rendere gli stili disponibili a tutti i layer del progetto \u00e9 possibile utilizzare le variabili personalizzate di progetto, cos\u00ed da richiamare i diversi stili velocemente all\u2019interno dell\u2019espressione. Step 1 All\u2019interno delle propriet\u00e1 del progetto, nella scheda Variabili, creare una nuova variabile per ciascuno degli stili, contenente l\u2019intera serie di caratteri separati dalla virgola. Step 2 L\u2019espressione in questo caso sar\u00e1 semplificata, semplicemente richiamando la stringa contenuta nella variabile di progetto e convertendola in array con la funzione string_to_array . with_variable('caratteri_normali', string_to_array(@stile_normale) , with_variable('grassetto', string_to_array(@stile_grassetto) , with_variable('corsivo', string_to_array(@stile_corsivo) , replace(\"DEN_REG\", @caratteri_normali, @grassetto ) || ' non \u00e9 in ' || replace('corsivo', @caratteri_normali, @corsivo ) ))) L\u2019idea di questo esempio e stata suggerita da una risposta su GIS.Stackexchange (LINK 3) data dall\u2019utente bugmenot123 che ringrazio per la geniale soluzione proposta. Grazie a Salvatore Fiandaca per avermi proposto di scrivere questo esempio e per il suo suggerimento per proporre anche la soluzione con variabili di progetto. Link utili: https://boldtext.io/ https://lingojam.com/ItalicTextGenerator https://gis.stackexchange.com/questions/357234/styling-substring-of-label-with-different-style-without-creating-two-separate-la?fbclid=IwAR3n94vGBAe9MMoayzLTkGjdlimq7Dkbefm0lAzuSPSbS_kLpxq88w6Eixk Realizzato da Valerio Pinna (grazie mille!)","title":"Vediamo come opera"},{"location":"esempi/etichette_formattate_diversi_stili/#prova-tu","text":"Geopackage \u00e8 qui Funzioni e variabili utilizzate: with_variable array string_to_array replace","title":"Prova tu"},{"location":"esempi/fill-down/","text":"fill-down con le espressioni di QGIS \u21b5 Il fill-down \u00e8 un filtro molto usato da chi lavora con i dati e risolve il segunete problema: \" Se un dato record di una tabella ha un valore mancante per un dato campo, riempilo con il valore corrispondente da un record precedente, se presente \". Molti tool lo hanno implementato come Visidata , Miller , OpenRifine , GeoPandas ecc...; vediamo come ottenere questa funzione usando solo le espressioni di QGIS. Tabella di esempio: data nuts2 zona zona_fill 2020-11-09T17:00:00 ITF1 2020-11-10T17:00:00 ITF1 arancione arancione 2020-11-11T17:00:00 ITF1 arancione 2020-11-12T17:00:00 ITF1 arancione 2020-11-20T17:00:00 ITF1 arancione 2020-11-21T17:00:00 ITF1 arancione 2020-11-22T17:00:00 ITF1 rossa rossa 2020-11-23T17:00:00 ITF1 rossa 2020-11-24T17:00:00 ITF1 rossa 2020-12-04T17:00:00 ITF1 rossa 2020-11-09T17:00:00 ITF5 rossa 2020-11-10T17:00:00 ITF5 arancione arancione 2020-11-11T17:00:00 ITF5 arancione 2020-11-12T17:00:00 ITF5 arancione 2020-11-13T17:00:00 ITF5 arancione 2020-11-14T17:00:00 ITF5 arancione 2020-11-24T17:00:00 ITF5 arancione arancione 2020-11-25T17:00:00 ITF5 arancione 2020-11-26T17:00:00 ITF5 arancione come ottenere la colonna zona_fill a partire dalla colonna zona : in pratica occorre popolare le celle con il primo valore non nullo partendo dall'alto e procedendo verso il basso. Ecco una soluzione: crare il campo zona_fill come testo, lunghezza 20; con il calcolatore di campi, aggiornale il campo appena creato con l'espressione: if( \"zona\" is NULL, attribute( get_feature_by_id(@layer, $id -1), 'zona_fill') , \"zona\") PS: potremmo direttamente aggiornare il campo zona senza necessariamente creare un nuovo campo, usando questa espressione: if( \"zona\" is NULL, attribute( get_feature_by_id(@layer, $id -1), 'zona') , \"zona\") Nel linguaggio umano significa : partendo dalla prima riga ( $id=1 ) della tabella, se il campo zona \u00e8 non vuoto allora popolalo con il valore corrispondente se invece \u00e8 vuoto ( NULL ) prendi il valore corrispondente alla riga precedente ( $id -1 ). Il quesito \u00e8 stato posto in lista QGIS-user internazionale e la soluzione \u00e8 di Andrea Giudiceandrea (grazie mille) Funzioni e variabili utilizzate: @layer if attribute \\$id get_feature_by_id","title":"Fill down"},{"location":"esempi/fill-down/#fill-down-con-le-espressioni-di-qgis","text":"Il fill-down \u00e8 un filtro molto usato da chi lavora con i dati e risolve il segunete problema: \" Se un dato record di una tabella ha un valore mancante per un dato campo, riempilo con il valore corrispondente da un record precedente, se presente \". Molti tool lo hanno implementato come Visidata , Miller , OpenRifine , GeoPandas ecc...; vediamo come ottenere questa funzione usando solo le espressioni di QGIS. Tabella di esempio: data nuts2 zona zona_fill 2020-11-09T17:00:00 ITF1 2020-11-10T17:00:00 ITF1 arancione arancione 2020-11-11T17:00:00 ITF1 arancione 2020-11-12T17:00:00 ITF1 arancione 2020-11-20T17:00:00 ITF1 arancione 2020-11-21T17:00:00 ITF1 arancione 2020-11-22T17:00:00 ITF1 rossa rossa 2020-11-23T17:00:00 ITF1 rossa 2020-11-24T17:00:00 ITF1 rossa 2020-12-04T17:00:00 ITF1 rossa 2020-11-09T17:00:00 ITF5 rossa 2020-11-10T17:00:00 ITF5 arancione arancione 2020-11-11T17:00:00 ITF5 arancione 2020-11-12T17:00:00 ITF5 arancione 2020-11-13T17:00:00 ITF5 arancione 2020-11-14T17:00:00 ITF5 arancione 2020-11-24T17:00:00 ITF5 arancione arancione 2020-11-25T17:00:00 ITF5 arancione 2020-11-26T17:00:00 ITF5 arancione come ottenere la colonna zona_fill a partire dalla colonna zona : in pratica occorre popolare le celle con il primo valore non nullo partendo dall'alto e procedendo verso il basso. Ecco una soluzione: crare il campo zona_fill come testo, lunghezza 20; con il calcolatore di campi, aggiornale il campo appena creato con l'espressione: if( \"zona\" is NULL, attribute( get_feature_by_id(@layer, $id -1), 'zona_fill') , \"zona\") PS: potremmo direttamente aggiornare il campo zona senza necessariamente creare un nuovo campo, usando questa espressione: if( \"zona\" is NULL, attribute( get_feature_by_id(@layer, $id -1), 'zona') , \"zona\") Nel linguaggio umano significa : partendo dalla prima riga ( $id=1 ) della tabella, se il campo zona \u00e8 non vuoto allora popolalo con il valore corrispondente se invece \u00e8 vuoto ( NULL ) prendi il valore corrispondente alla riga precedente ( $id -1 ). Il quesito \u00e8 stato posto in lista QGIS-user internazionale e la soluzione \u00e8 di Andrea Giudiceandrea (grazie mille) Funzioni e variabili utilizzate: @layer if attribute \\$id get_feature_by_id","title":"fill-down con le espressioni di QGIS"},{"location":"esempi/finestra_temporale/","text":"Calcolo incidenza cumulativa settimanale \u21b5 Questo calcolo \u00e8 interessante in quanto permette di calcolare l\u2019 incidenza cumulativa settimanale , ovvero, fissata una data, calcolare la somma di un attributo relativo ai 6 giorni precedenti (finestra temporale). /*incidenza cumulativa settimanale*/ with_variable('pos', array_find(array_agg( expression:=\"campodata\"),\"campodata\"), with_variable('dat', array_length(array_agg(\"campodata\")), array_length( array_slice( array_agg(\"campo1\",group_by:=\"campo2\"), -@dat+@pos-6, -@dat+@pos))) NB: la funzione array_sum \u00e8 presente nel core di QGIS a partire da QGIS 3.18 Z\u00fcrich, in alternativa \u00e8 presente nel plugin ArrayPlus Ecco un esempio usando i dati sul COVID-19 \u21b5 dataset: https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale.csv blog post su pigrecoinfinito: https://pigrecoinfinito.com/2021/03/16/qgis-e-il-calcolo-incidenza-cumulativa-settimanale-dei-contagi-regionale-dl-13-marzo-2021-n-30/ Fissata una data, calcolare la somma dei nuovi_positivi dei 6 giorni precedenti e poi normalizzarli rispetto la popolazione (campo j_OBS_VALUE messo in join). /*incidenza cumulativa settimanale*/ (with_variable('pos', array_find(array_agg( expression:=\"data\"),\"data\"), with_variable('dat', array_length(array_agg(\"data\")), array_sum( array_slice( array_agg(\"nuovi_positivi\",\"denominazione_regione\"), -@dat+@pos-6, -@dat+@pos))) ) / \"j_OBS_VALUE\") * 100000 Funzioni e variabili utilizzate: with_variable array_find array_filter array_agg array_length array_sum array_slice","title":"Finestra temporale"},{"location":"esempi/finestra_temporale/#calcolo-incidenza-cumulativa-settimanale","text":"Questo calcolo \u00e8 interessante in quanto permette di calcolare l\u2019 incidenza cumulativa settimanale , ovvero, fissata una data, calcolare la somma di un attributo relativo ai 6 giorni precedenti (finestra temporale). /*incidenza cumulativa settimanale*/ with_variable('pos', array_find(array_agg( expression:=\"campodata\"),\"campodata\"), with_variable('dat', array_length(array_agg(\"campodata\")), array_length( array_slice( array_agg(\"campo1\",group_by:=\"campo2\"), -@dat+@pos-6, -@dat+@pos))) NB: la funzione array_sum \u00e8 presente nel core di QGIS a partire da QGIS 3.18 Z\u00fcrich, in alternativa \u00e8 presente nel plugin ArrayPlus","title":"Calcolo incidenza cumulativa settimanale"},{"location":"esempi/finestra_temporale/#ecco-un-esempio-usando-i-dati-sul-covid-19","text":"dataset: https://raw.githubusercontent.com/pcm-dpc/COVID-19/master/dati-andamento-nazionale/dpc-covid19-ita-andamento-nazionale.csv blog post su pigrecoinfinito: https://pigrecoinfinito.com/2021/03/16/qgis-e-il-calcolo-incidenza-cumulativa-settimanale-dei-contagi-regionale-dl-13-marzo-2021-n-30/ Fissata una data, calcolare la somma dei nuovi_positivi dei 6 giorni precedenti e poi normalizzarli rispetto la popolazione (campo j_OBS_VALUE messo in join). /*incidenza cumulativa settimanale*/ (with_variable('pos', array_find(array_agg( expression:=\"data\"),\"data\"), with_variable('dat', array_length(array_agg(\"data\")), array_sum( array_slice( array_agg(\"nuovi_positivi\",\"denominazione_regione\"), -@dat+@pos-6, -@dat+@pos))) ) / \"j_OBS_VALUE\") * 100000 Funzioni e variabili utilizzate: with_variable array_find array_filter array_agg array_length array_sum array_slice","title":"Ecco un esempio usando i dati sul COVID-19"},{"location":"esempi/generalizzare_linee/","text":"Vestizione generalizzata delle linee di contorno \u21b5 Quando si creano linee di contorno a partire da un modello digitale del terreno spesso la geometria lineare risultante si presenta ricca di asperit\u00e1. Esistono diversi algoritmi o plugin che permettono di generalizzare e semplificare le linee al fine di renderle pi\u00fa adatte ad un loro uso su mappe stampate o schermate. In questo esempio l'operazione di semplificazione e smussamento della vestizione delle linee verr\u00e1 fatto ricorrendo alle espressioni e al generatore di geometrie , cosi da non intervenire direttamente sulla geometria e mantenere il dataset originario del vettore. espressione da usare: CASE WHEN $length > 25 THEN smooth(simplify($geometry,10),21,0.2) END spiegazioni \u21b5 Vediamo le diverse parti che compongono l'espressione: $length > 25 : seleziona e visualizza solamente le linee di lunghezza maggiore di 25 m. Questo consente di eliminare piccoli oggetti areali. simplify($geometry,10) : semplifica una geometria rimuovendo alcuni dei nodi usando una soglia basata sulla distanza. Il valore 10 corrisponde alla tolleranza, ossia la deviazione massima dai segmenti rettilinei per i punti da rimuovere smooth(simplify($geometry,10),21,0.2) : smussa la geometria semplificata dall'espressione precedente. 21 corrisponde al numero di iterazioni di smussatura, mentre 0.2 \u00e9 il valore di offset che controlla che controlla quanto la geometria smussata seguir\u00e1 strettamente la geometria originale. Seleziona il layer contenente le curve di livello. Nel Pannelo Stile Layer seleziona la scheda Simbologia In Tipo simbolo del vettore seleziona Generatore Geometria In Tipo di geometria seleziona LineString/MultiLineString Copia l\u2019espressione nel riquadro La simbologia del layer si aggiorner\u00e1 automaticamente. In questo modo \u00e9 possibile cambiare alcuni dei valori inseriti e verificare in tempo reale il risultato. Una volta trovata la combinazione migliore di valori che restituisce la simbologia che si preferisce, \u00e9 possibile utilizzare la stessa espessione nel Calcolatore di campi per aggiornare la Geometria: Seleziona il layer contenente le curve di livello. Apri il Calcolatore di campi Spunta l'opzione Aggiorna un campo esistente Nel men\u00fa a tendina seleziona geometry . Copia l\u2019espressione nel riquadro Clicca ok Prova tu \u21b5 Il geopackage \u00e8 scaricabile qui -- Realizzato da Valerio Pinna Funzioni e variabili utilizzate: CASE \\$length simplify smooth \\$geometry","title":"Vestizione generalizzata delle linee di contorno"},{"location":"esempi/generalizzare_linee/#vestizione-generalizzata-delle-linee-di-contorno","text":"Quando si creano linee di contorno a partire da un modello digitale del terreno spesso la geometria lineare risultante si presenta ricca di asperit\u00e1. Esistono diversi algoritmi o plugin che permettono di generalizzare e semplificare le linee al fine di renderle pi\u00fa adatte ad un loro uso su mappe stampate o schermate. In questo esempio l'operazione di semplificazione e smussamento della vestizione delle linee verr\u00e1 fatto ricorrendo alle espressioni e al generatore di geometrie , cosi da non intervenire direttamente sulla geometria e mantenere il dataset originario del vettore. espressione da usare: CASE WHEN $length > 25 THEN smooth(simplify($geometry,10),21,0.2) END","title":"Vestizione generalizzata delle linee di contorno"},{"location":"esempi/generalizzare_linee/#spiegazioni","text":"Vediamo le diverse parti che compongono l'espressione: $length > 25 : seleziona e visualizza solamente le linee di lunghezza maggiore di 25 m. Questo consente di eliminare piccoli oggetti areali. simplify($geometry,10) : semplifica una geometria rimuovendo alcuni dei nodi usando una soglia basata sulla distanza. Il valore 10 corrisponde alla tolleranza, ossia la deviazione massima dai segmenti rettilinei per i punti da rimuovere smooth(simplify($geometry,10),21,0.2) : smussa la geometria semplificata dall'espressione precedente. 21 corrisponde al numero di iterazioni di smussatura, mentre 0.2 \u00e9 il valore di offset che controlla che controlla quanto la geometria smussata seguir\u00e1 strettamente la geometria originale. Seleziona il layer contenente le curve di livello. Nel Pannelo Stile Layer seleziona la scheda Simbologia In Tipo simbolo del vettore seleziona Generatore Geometria In Tipo di geometria seleziona LineString/MultiLineString Copia l\u2019espressione nel riquadro La simbologia del layer si aggiorner\u00e1 automaticamente. In questo modo \u00e9 possibile cambiare alcuni dei valori inseriti e verificare in tempo reale il risultato. Una volta trovata la combinazione migliore di valori che restituisce la simbologia che si preferisce, \u00e9 possibile utilizzare la stessa espessione nel Calcolatore di campi per aggiornare la Geometria: Seleziona il layer contenente le curve di livello. Apri il Calcolatore di campi Spunta l'opzione Aggiorna un campo esistente Nel men\u00fa a tendina seleziona geometry . Copia l\u2019espressione nel riquadro Clicca ok","title":"spiegazioni"},{"location":"esempi/generalizzare_linee/#prova-tu","text":"Il geopackage \u00e8 scaricabile qui -- Realizzato da Valerio Pinna Funzioni e variabili utilizzate: CASE \\$length simplify smooth \\$geometry","title":"Prova tu"},{"location":"esempi/hub_lines/","text":"Unisci con linee Hub lines \u21b5 Come creare hub lines usando il calcolatore di campi di QGIS #QGISUserConf2019 A Coru\u00f1a Tabella di partenza: A Coru\u00f1a da usare come hub City Nation Latitude Longitude Carballo Spain 43.2128129 -8.6915927 Barcelona Spain 41.3850639 2.1734035 Krasnodar Russia 45.0392674 38.9872209 Luserna San Giovanni Italy 44.8170347 7.2445882 Cascais Portugal 38.6967571 -9.4207438 A Coru\u00f1a Spain 43.3623436 -8.4115401 Gij\u00f3n Spain 43.5322015 -5.6611195 A Coru\u00f1a Spain 43.3623436 -8.4115401 Gr\u00fct (Gossau ZH) Swizerland 47.31 8.78436 Berlin Germany 52.5200066 13.404954 A Coru\u00f1a Spain 43.3623436 -8.4115401 Valencia Spain 39.4699075 -0.3762881 Madrid Spain 40.4167754 -3.7037902 Oviedo Spain 43.3619145 -5.8493887 Creare un campo WKT testuale di 50 caratteri e popolare il campo con la seguente espressione: 'LINESTRING (-8.4115401 43.3623436 ,' || \"Longitude\" || ' ' || \"Latitude\" || ')' otterremo la tabella: successivamente importata in QGIS come testo delimitato e geometria di tipo WKT Prova tu \u21b5 dati Funzioni e variabili utilizzate: doppio-pipe","title":"Hub lines"},{"location":"esempi/hub_lines/#unisci-con-linee-hub-lines","text":"Come creare hub lines usando il calcolatore di campi di QGIS #QGISUserConf2019 A Coru\u00f1a Tabella di partenza: A Coru\u00f1a da usare come hub City Nation Latitude Longitude Carballo Spain 43.2128129 -8.6915927 Barcelona Spain 41.3850639 2.1734035 Krasnodar Russia 45.0392674 38.9872209 Luserna San Giovanni Italy 44.8170347 7.2445882 Cascais Portugal 38.6967571 -9.4207438 A Coru\u00f1a Spain 43.3623436 -8.4115401 Gij\u00f3n Spain 43.5322015 -5.6611195 A Coru\u00f1a Spain 43.3623436 -8.4115401 Gr\u00fct (Gossau ZH) Swizerland 47.31 8.78436 Berlin Germany 52.5200066 13.404954 A Coru\u00f1a Spain 43.3623436 -8.4115401 Valencia Spain 39.4699075 -0.3762881 Madrid Spain 40.4167754 -3.7037902 Oviedo Spain 43.3619145 -5.8493887 Creare un campo WKT testuale di 50 caratteri e popolare il campo con la seguente espressione: 'LINESTRING (-8.4115401 43.3623436 ,' || \"Longitude\" || ' ' || \"Latitude\" || ')' otterremo la tabella: successivamente importata in QGIS come testo delimitato e geometria di tipo WKT","title":"Unisci con linee Hub lines"},{"location":"esempi/hub_lines/#prova-tu","text":"dati Funzioni e variabili utilizzate: doppio-pipe","title":"Prova tu"},{"location":"esempi/linea_min_distanza/","text":"Tracciare segmento di minima distanza usando il generatore di geometria \u21b5 Dati due layer puntuali (ma potrebbero essere di qualsiasi tipologia), tracciare il segmento di minima distanza tra gli oggetti dei due layer usando il generatore di geometrie Carico due layer puntuali: puntiA e puntiB Tematizzo il layer puntiA usando il generatore di geometrie espressione da usare -- crea un segmento di minima distanza tra il layer puntiA e puntiB shortest_line($geometry, -- geometria puntoA aggregate( layer:='puntiB', aggregate:= 'collect', -- crea multiPoint expression:=$geometry) -- geometria puntoB ) 3. carico poligonoC e lineaD , altri due layer 4. utilizzo stessa espresione di sopra, cambio solamente il nome del layer ( poligonoC o lineaD al posto di puntiB ) ecco il risultato: poi, con un po' di magia \u00e8 possibile aggiungere l'etichetta con il valore della lunghezza (ma questa \u00e8 altra storia!!!) Prova tu \u21b5 Geopackage \u00e8 qui NB: occorre >= QGIS 3.8, nel gpkg trovare anche il progetto QGIS!!! Funzioni e variabili utilizzate: aggregate shortest_line \\$geometry","title":"Tracciare segmento di minima distanza usando il generatore di geometria"},{"location":"esempi/linea_min_distanza/#tracciare-segmento-di-minima-distanza-usando-il-generatore-di-geometria","text":"Dati due layer puntuali (ma potrebbero essere di qualsiasi tipologia), tracciare il segmento di minima distanza tra gli oggetti dei due layer usando il generatore di geometrie Carico due layer puntuali: puntiA e puntiB Tematizzo il layer puntiA usando il generatore di geometrie espressione da usare -- crea un segmento di minima distanza tra il layer puntiA e puntiB shortest_line($geometry, -- geometria puntoA aggregate( layer:='puntiB', aggregate:= 'collect', -- crea multiPoint expression:=$geometry) -- geometria puntoB ) 3. carico poligonoC e lineaD , altri due layer 4. utilizzo stessa espresione di sopra, cambio solamente il nome del layer ( poligonoC o lineaD al posto di puntiB ) ecco il risultato: poi, con un po' di magia \u00e8 possibile aggiungere l'etichetta con il valore della lunghezza (ma questa \u00e8 altra storia!!!)","title":"Tracciare segmento di minima distanza usando il generatore di geometria"},{"location":"esempi/linea_min_distanza/#prova-tu","text":"Geopackage \u00e8 qui NB: occorre >= QGIS 3.8, nel gpkg trovare anche il progetto QGIS!!! Funzioni e variabili utilizzate: aggregate shortest_line \\$geometry","title":"Prova tu"},{"location":"esempi/linea_min_distanza2/","text":"Calcolo distanza minima tra due vettori \u21b5 Dati due layer (es_uno puntuale e l'altro lineare), calcolare la lunghezza del segmento di minima distanza tra gli elementi dei due layer usando il calcolatore di campi: Carico i due layer: alberi e fiumi Traccio la linea di minima distanza solo per visualizzarla a schermo tramite il generatore di geometrie, usando l'espressione: shortest_line( $geometry, overlay_nearest( layer:='fiumi', expression:=$geometry)[0] ) per calcolare la lunghezza e aggiungerla come campo nella tabella attributi del layer alberi : aprire tabella attributi; aprire field calc; aggiungere un nuovo campo numerico; popolarlo con l'espressione: length( shortest_line( $geometry, overlay_nearest( layer:='fiumi', expression:=$geometry)[0] ) ) Osservazione: la funzione overlay_nearest \u00e8 presente in QGIS a partire dalla 3.16 Hannover Funzioni e variabili utilizzate: aggregate shortest_line overlay_nearest \\$geometry","title":"Calcolo distanza minima tra due vettori"},{"location":"esempi/linea_min_distanza2/#calcolo-distanza-minima-tra-due-vettori","text":"Dati due layer (es_uno puntuale e l'altro lineare), calcolare la lunghezza del segmento di minima distanza tra gli elementi dei due layer usando il calcolatore di campi: Carico i due layer: alberi e fiumi Traccio la linea di minima distanza solo per visualizzarla a schermo tramite il generatore di geometrie, usando l'espressione: shortest_line( $geometry, overlay_nearest( layer:='fiumi', expression:=$geometry)[0] ) per calcolare la lunghezza e aggiungerla come campo nella tabella attributi del layer alberi : aprire tabella attributi; aprire field calc; aggiungere un nuovo campo numerico; popolarlo con l'espressione: length( shortest_line( $geometry, overlay_nearest( layer:='fiumi', expression:=$geometry)[0] ) ) Osservazione: la funzione overlay_nearest \u00e8 presente in QGIS a partire dalla 3.16 Hannover Funzioni e variabili utilizzate: aggregate shortest_line overlay_nearest \\$geometry","title":"Calcolo distanza minima tra due vettori"},{"location":"esempi/lista_esempi/","text":"Abstract Questa sezione raccoglie degli esempi pratici e svolti step by step, con molti screenshot per rendere facile la comprensione di alcune funzioni di base come Area, lunghezza, Buffer ecc... | La sezione \u00e8 in continua evoluzione e sono benvenuti contributi esterni Elenco esempi \u21b5 (Livello di difficolt\u00e0: 1 -> Facile -- 5 -> Difficile) nro Esempio Descrizione Autore Livello 1 campo area aggiungere colonna area per calcolo superficie Pigreco 2 2 campi coordinate aggiungere colonne coordinate x e y Pigreco 2 3 campo virtuale aggiungere campo virtuale Pigreco 2 4 campo quota z aggingere colonna quota con valori z Pigreco 2 5 etichettare etichettare usando il campo geometry Pigreco 2 6 aggiornare geometria aggiornare il campo geometry Pigreco 2 7 conversione etichettare punti da sessadecimali a sessagesimali Pigreco 2 8 tematizzare Tematizzare utilizzando la sovrascrittura definita dai dati Pigreco 2 9 legenda Legenda con testo lungo, inserimento carattere speciale Pigreco 2 10 selezione Seleziona usando le funzioni di aggregazione Pigreco 2 11 core area Calcola la core area di un poligono Ludovico Frate 2 12 sposta etichette Sposta etichetta e genera segmento Pigreco 3 13 conteggio valori Conteggio valori in un campo Pigreco 2 14 centroidi linee curve Centroide lungo le linee curve Pigreco 2 15 conta i punti nel poligono Conta i punti nel poligono Pigreco 2 16 Somma lunghezze nel poligono Somma le lunghezze delle linee dentro il poligono Pigreco 2 17 conta punti nel poligono per categorie Contare i punti nel poligono per categorie Martina Savarese 2 18 nascondi etichette Nasconde etichette non desiderate Pigreco 2 19 calcolo area poligoni nel reticolo Calcolare l\u2019area delle porzioni di poligoni che ricadono dentro ad una cella di un reticolo Pigreco 2 20 spatial join Trasferire un attributo usando le relazioni spaziali Pigreco 2 21 unica label Unica label per pi\u00f9 poligoni Pigreco 2 22 elenco comuni Come ottenere l'elenco dei Comuni attraversati da un fiume Pigreco 2 23 rotazione pattern lineare Come ruotare un pattern lineare in funzione della feature Pigreco 2 24 numerazione poligoni in base a relazione spaziale Numerazione poligoni in base a relazioni spaziali Pigreco 3 25 assegnare categoria prevalente Assegnare categoria prevalente Pigreco 2 26 Creare Hub lines Creare Hub lines Pigreco 2 27 Aggrega con SR differenti Aggrega con SR differenti Pigreco 3 28 Distanze progressive chilometriche Formatta le distanze progressive chilometriche tipo Autostrade Pigreco 2 29 Aggregare elementi adiacenti Aggrega elementi adiacenti Pigreco 3 30 Linea minima distanza tra due punti Traccia una linea di minima distanza usando il generatore di geometrie Pigreco 2 31 Creare campo somma cumulativa Espressione per popolare campo con somma cumulativa Pigreco 2 32 aggiungere_punto_a_linea Aggiunge un nodo di disegno ad una linea Pigreco 2 33 drilldown form multiple Creare Form con filtro dinamico drillDown (cascade) Pigreco 3 34 selezionare primi n valori Come selezionare i primi n poligoni pi\u00f9 grandi Pigreco 2 35 Generalizzare isoipse Generalizzare le linee di contorno Valerio Pinna 3 36 Campo coord in lat lon Generare due campi lon lat a partire da un unico campo Pigreco 2 37 calcolo incrementi giornalieri Calcola gli incrementi giornalieri di un attributo Pigreco 4 38 Tracciare un grafico Come tracciare un grafico per ogni feature usando il generatore di geometrie Pigreco 4 39 Elenco ordinato di Comuni Come ottenere l'elenco ordinato dei Comuni attraversati da un itinerario Pigreco 3 40 Etichettare con chiave-valore Etichettare facendo vedere sia il nome del campo che il corrispondente valore Pigreco 2 41 Etichettare itinerario con elenco ordinato Comuni Etichettare itinerario con elenco ordinato di Comuni attraversti Valerio Pinna 4 42 etichette_formattate_diversi_stili Etichette formattate con diversi stili Valerio Pinna 2 43 Selezionare vertici duplicati Selezionare vertici duplicati Pigreco 3 44 Conteggio caratteri diversi Conta i caratteri diversi in un testo Pigreco 2 45 Distanza minima tra due vettori Lunghezza della linea di minima distanza tra due vettori Pigreco 2 46 Lunghezze segmenti di un poligono Lunghezze dei segmenti di un poligono Pigreco 3 47 Fill-down con QGIS riempire le celle sottostanti con il primo valore non nullo Pigreco 3 48 Finestra temporale Fissata una data, calcolare la somma di un attributo relativo ai 6 giorni precedenti Pigreco 4 49 Rotazione simbolo parallelo ad una linea Lunghezze dei segmenti di un poligono Pigreco 3 50 Livello acqua Effetto riempimento recipiente d'acqua Pigreco 4 Partecipa \u21b5 Se hai un esempio svolto e vuoi condividerlo puoi farlo, vedi sezione Lavora con Noi : per maggiori info scrivi all'autore","title":"Esempi svolti"},{"location":"esempi/lista_esempi/#elenco-esempi","text":"(Livello di difficolt\u00e0: 1 -> Facile -- 5 -> Difficile) nro Esempio Descrizione Autore Livello 1 campo area aggiungere colonna area per calcolo superficie Pigreco 2 2 campi coordinate aggiungere colonne coordinate x e y Pigreco 2 3 campo virtuale aggiungere campo virtuale Pigreco 2 4 campo quota z aggingere colonna quota con valori z Pigreco 2 5 etichettare etichettare usando il campo geometry Pigreco 2 6 aggiornare geometria aggiornare il campo geometry Pigreco 2 7 conversione etichettare punti da sessadecimali a sessagesimali Pigreco 2 8 tematizzare Tematizzare utilizzando la sovrascrittura definita dai dati Pigreco 2 9 legenda Legenda con testo lungo, inserimento carattere speciale Pigreco 2 10 selezione Seleziona usando le funzioni di aggregazione Pigreco 2 11 core area Calcola la core area di un poligono Ludovico Frate 2 12 sposta etichette Sposta etichetta e genera segmento Pigreco 3 13 conteggio valori Conteggio valori in un campo Pigreco 2 14 centroidi linee curve Centroide lungo le linee curve Pigreco 2 15 conta i punti nel poligono Conta i punti nel poligono Pigreco 2 16 Somma lunghezze nel poligono Somma le lunghezze delle linee dentro il poligono Pigreco 2 17 conta punti nel poligono per categorie Contare i punti nel poligono per categorie Martina Savarese 2 18 nascondi etichette Nasconde etichette non desiderate Pigreco 2 19 calcolo area poligoni nel reticolo Calcolare l\u2019area delle porzioni di poligoni che ricadono dentro ad una cella di un reticolo Pigreco 2 20 spatial join Trasferire un attributo usando le relazioni spaziali Pigreco 2 21 unica label Unica label per pi\u00f9 poligoni Pigreco 2 22 elenco comuni Come ottenere l'elenco dei Comuni attraversati da un fiume Pigreco 2 23 rotazione pattern lineare Come ruotare un pattern lineare in funzione della feature Pigreco 2 24 numerazione poligoni in base a relazione spaziale Numerazione poligoni in base a relazioni spaziali Pigreco 3 25 assegnare categoria prevalente Assegnare categoria prevalente Pigreco 2 26 Creare Hub lines Creare Hub lines Pigreco 2 27 Aggrega con SR differenti Aggrega con SR differenti Pigreco 3 28 Distanze progressive chilometriche Formatta le distanze progressive chilometriche tipo Autostrade Pigreco 2 29 Aggregare elementi adiacenti Aggrega elementi adiacenti Pigreco 3 30 Linea minima distanza tra due punti Traccia una linea di minima distanza usando il generatore di geometrie Pigreco 2 31 Creare campo somma cumulativa Espressione per popolare campo con somma cumulativa Pigreco 2 32 aggiungere_punto_a_linea Aggiunge un nodo di disegno ad una linea Pigreco 2 33 drilldown form multiple Creare Form con filtro dinamico drillDown (cascade) Pigreco 3 34 selezionare primi n valori Come selezionare i primi n poligoni pi\u00f9 grandi Pigreco 2 35 Generalizzare isoipse Generalizzare le linee di contorno Valerio Pinna 3 36 Campo coord in lat lon Generare due campi lon lat a partire da un unico campo Pigreco 2 37 calcolo incrementi giornalieri Calcola gli incrementi giornalieri di un attributo Pigreco 4 38 Tracciare un grafico Come tracciare un grafico per ogni feature usando il generatore di geometrie Pigreco 4 39 Elenco ordinato di Comuni Come ottenere l'elenco ordinato dei Comuni attraversati da un itinerario Pigreco 3 40 Etichettare con chiave-valore Etichettare facendo vedere sia il nome del campo che il corrispondente valore Pigreco 2 41 Etichettare itinerario con elenco ordinato Comuni Etichettare itinerario con elenco ordinato di Comuni attraversti Valerio Pinna 4 42 etichette_formattate_diversi_stili Etichette formattate con diversi stili Valerio Pinna 2 43 Selezionare vertici duplicati Selezionare vertici duplicati Pigreco 3 44 Conteggio caratteri diversi Conta i caratteri diversi in un testo Pigreco 2 45 Distanza minima tra due vettori Lunghezza della linea di minima distanza tra due vettori Pigreco 2 46 Lunghezze segmenti di un poligono Lunghezze dei segmenti di un poligono Pigreco 3 47 Fill-down con QGIS riempire le celle sottostanti con il primo valore non nullo Pigreco 3 48 Finestra temporale Fissata una data, calcolare la somma di un attributo relativo ai 6 giorni precedenti Pigreco 4 49 Rotazione simbolo parallelo ad una linea Lunghezze dei segmenti di un poligono Pigreco 3 50 Livello acqua Effetto riempimento recipiente d'acqua Pigreco 4","title":"Elenco esempi"},{"location":"esempi/lista_esempi/#partecipa","text":"Se hai un esempio svolto e vuoi condividerlo puoi farlo, vedi sezione Lavora con Noi : per maggiori info scrivi all'autore","title":"Partecipa"},{"location":"esempi/livello_acqua/","text":"Effetto riempimento recipiente d'acqua \u21b5 In questo breve tutorial vedremo come realizzare una tematizzazione, tramite espressioni geometriche, che simuli il riempimento di un recipente di acqua, e lo applicheremo ai nostri poligoni. espressione utilizzata nel generatore di geometrie: difference( $geometry, -- bounding Box make_rectangle_3points( point_n(bounds($geometry),4), point_n(bounds($geometry),3), -- punto altezza rettangolo make_point(x(point_n(bounds($geometry),1)), (y(point_n(bounds($geometry),1))) + bounds_height($geometry)*(second(now()))/60),1)) espressione utilizzate per le etichette: format_number(( -- area intersezione area(intersection( $geometry, -- bounding Box make_rectangle_3points( point_n(bounds($geometry),2), point_n(bounds($geometry),1), -- punto altezza rettangolo make_point(x(point_n(bounds($geometry),1)), (y(point_n(bounds($geometry),1))) + bounds_height($geometry)*(second(now()))/60),1))) -- area feature corrente /area($geometry))*100,1)||' %' NB: per ottenere l'effetto dinamico occorre attivare, da propriet\u00e0 layer | Visualizzazione, Aggiorna layer a intervalli . qui video demo: https://youtu.be/uUEGSdWraPY Funzioni e variabili utilizzate: difference make_rectangle_3points point_n bounds make_point x y bounds_height intersection area second now area format_number \\$geometry","title":"Effetto riempimento recipiente d'acqua"},{"location":"esempi/livello_acqua/#effetto-riempimento-recipiente-dacqua","text":"In questo breve tutorial vedremo come realizzare una tematizzazione, tramite espressioni geometriche, che simuli il riempimento di un recipente di acqua, e lo applicheremo ai nostri poligoni. espressione utilizzata nel generatore di geometrie: difference( $geometry, -- bounding Box make_rectangle_3points( point_n(bounds($geometry),4), point_n(bounds($geometry),3), -- punto altezza rettangolo make_point(x(point_n(bounds($geometry),1)), (y(point_n(bounds($geometry),1))) + bounds_height($geometry)*(second(now()))/60),1)) espressione utilizzate per le etichette: format_number(( -- area intersezione area(intersection( $geometry, -- bounding Box make_rectangle_3points( point_n(bounds($geometry),2), point_n(bounds($geometry),1), -- punto altezza rettangolo make_point(x(point_n(bounds($geometry),1)), (y(point_n(bounds($geometry),1))) + bounds_height($geometry)*(second(now()))/60),1))) -- area feature corrente /area($geometry))*100,1)||' %' NB: per ottenere l'effetto dinamico occorre attivare, da propriet\u00e0 layer | Visualizzazione, Aggiorna layer a intervalli . qui video demo: https://youtu.be/uUEGSdWraPY Funzioni e variabili utilizzate: difference make_rectangle_3points point_n bounds make_point x y bounds_height intersection area second now area format_number \\$geometry","title":"Effetto riempimento recipiente d'acqua"},{"location":"esempi/lunghezze_segmenti_poligono/","text":"Lunghezze dei lati di un poligono \u21b5 Dato un layer poligonale, come ottenere una lista di valori delle lunghezze dei lati del poligono. Creare un campo testuale (nello screenshot \u00e8 test ) sufficientemente lungo e popolarlo con la seguente espressione: Espressione: array_to_string( array_foreach( array_foreach( generate_series(1, num_geometries( segments_to_lines($geometry))), geometry_n(segments_to_lines($geometry),@element)), round(length(@element),2)) ) Nel linguaggio umano significa: crea,per ogni poligono, un array e popolalo con la geometria dei singoli lati del poligono, infine calcola la loro lunghezza e mettili in una lista. Osservazioni: l'epsressione \u00e8 generica, si puo' usare con qualsiasi poligono; per poligoni con molti lati, i calcoli richiesti sono lunghi. Geometrie: Generare, per ogni poligono, un array con le geometrie dei lati del poligono: array_foreach( generate_series(1, num_geometries( segments_to_lines($geometry))), geometry_n(segments_to_lines($geometry),@element) ) questa espressione ci permette di fare una serie di interrogazioni come: qual \u00e8 il lato pi\u00f9 lungo e quanto vale la lunghezza; applicare tutte le funzioni geometriche relative alla geometria del lato, esempio: azimuth di un lato; centroide di un lato; coordinate di un vertice del lato n; ecc... Funzioni e variabili utilizzate: segments_to_lines num_geometries length round geometry_n segments_to_lines array_to_string generate_series array_foreach \\$geometry","title":"Lunghezze dei lati di un poligono"},{"location":"esempi/lunghezze_segmenti_poligono/#lunghezze-dei-lati-di-un-poligono","text":"Dato un layer poligonale, come ottenere una lista di valori delle lunghezze dei lati del poligono. Creare un campo testuale (nello screenshot \u00e8 test ) sufficientemente lungo e popolarlo con la seguente espressione: Espressione: array_to_string( array_foreach( array_foreach( generate_series(1, num_geometries( segments_to_lines($geometry))), geometry_n(segments_to_lines($geometry),@element)), round(length(@element),2)) ) Nel linguaggio umano significa: crea,per ogni poligono, un array e popolalo con la geometria dei singoli lati del poligono, infine calcola la loro lunghezza e mettili in una lista. Osservazioni: l'epsressione \u00e8 generica, si puo' usare con qualsiasi poligono; per poligoni con molti lati, i calcoli richiesti sono lunghi. Geometrie: Generare, per ogni poligono, un array con le geometrie dei lati del poligono: array_foreach( generate_series(1, num_geometries( segments_to_lines($geometry))), geometry_n(segments_to_lines($geometry),@element) ) questa espressione ci permette di fare una serie di interrogazioni come: qual \u00e8 il lato pi\u00f9 lungo e quanto vale la lunghezza; applicare tutte le funzioni geometriche relative alla geometria del lato, esempio: azimuth di un lato; centroide di un lato; coordinate di un vertice del lato n; ecc... Funzioni e variabili utilizzate: segments_to_lines num_geometries length round geometry_n segments_to_lines array_to_string generate_series array_foreach \\$geometry","title":"Lunghezze dei lati di un poligono"},{"location":"esempi/nascondi_etichette/","text":"Nascondi etichette \u21b5 Appena attiviamo le etichette queste sono sempre al top e sempre visibili, vediamo in questo esempio come nascondere alcune etichette utilizzando le opzioni di visualizzazione delle etichette e le funzioni di aggregazione. Carico due layer poligonali: circoscrizioni e quartieri di Palermo Etichetto il layer quartieri: Le etichette sono visibili e in certi casi sono anche fastidiose; applico un filtro al layer circoscrizioni, in modo tale da visualizzare solo alcune circoscrizioni: \"CIR_ID\" > 5 risultato: Ora nascender\u00f2 le etichette, del layer quartieri, che sono sotto le circorscrizioni: espressione usata: not aggregate('circoscrizioni', 'count', 'PK_UID', intersects ($geometry, point_on_surface( geometry(@parent)))) il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: @parent not aggregate intersects point_on_surface \\$geometry","title":"Nascondi etichette"},{"location":"esempi/nascondi_etichette/#nascondi-etichette","text":"Appena attiviamo le etichette queste sono sempre al top e sempre visibili, vediamo in questo esempio come nascondere alcune etichette utilizzando le opzioni di visualizzazione delle etichette e le funzioni di aggregazione. Carico due layer poligonali: circoscrizioni e quartieri di Palermo Etichetto il layer quartieri: Le etichette sono visibili e in certi casi sono anche fastidiose; applico un filtro al layer circoscrizioni, in modo tale da visualizzare solo alcune circoscrizioni: \"CIR_ID\" > 5 risultato: Ora nascender\u00f2 le etichette, del layer quartieri, che sono sotto le circorscrizioni: espressione usata: not aggregate('circoscrizioni', 'count', 'PK_UID', intersects ($geometry, point_on_surface( geometry(@parent)))) il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: @parent not aggregate intersects point_on_surface \\$geometry","title":"Nascondi etichette"},{"location":"esempi/numerazione_poligoni_rel_spaziale/","text":"Numerazione dei poligoni in base alla relazione spaziale \u21b5 Etichettare le regioni italiane ISTAT in funzione della superficie, per esempio: la regione pi\u00f9 estesa deve avere come etichetta 1 e poi via via aumentare al decrescere dell' area. espressione da usare: array_find( array_reverse( array_sort(array_agg($Area)) ), $Area)+1 L'espressione significa: Crea un array (un vettore) e mettici dentro tutti i valori delle aree delle regioni, ordinali in senso crescente (dal pi\u00f9 piccolo al pi\u00f9 grande) e poi fai l'inverso, cio\u00e8, ordinali dal pi\u00f9 grande al pi\u00f9 piccolo; infine assegna l'indice della posizione del valore dell'area. PS : +1 serve solo a far iniziare il conteggio da 1 in quanto gli array iniziano da zero. Altro esempio: Etichettare in funzione della longitudine, cio\u00e8 mettere la label 1 nella regione pi\u00f9 a Ovest e cosi via per le altre: espressione da usare: array_find( array_sort(array_agg(x_min( $geometry))) ,x_min( $geometry))+1 Altro esempio: Etichettare, per ogni regione, le province in ordine alfabetico: espressione da usare: \"sigla\" || '-' || (array_find( array_sort( array_agg(expression:=\"sigla\" , group_by:=\"cod_reg\" )), \"sigla\" )+1) Altro esempio: Creata una griglia regolare formata da circa 4000 poligoni. Nominare tutti i poligoni partendo da destra verso sinistra e dall'alto verso il basso con lettere e numeri in sequenza. Quindi la prima maglia della griglia sar\u00e0 A1, A2, A3 ecc, la seconda B1 B2 B3 e cos\u00ec via. espressione da usare: array_get( with_variable( 'cucu', string_to_array('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z'), array_cat( array_foreach( @cucu ,upper(@element)), -- alfabeto a,b,c... array_foreach( @cucu ,upper(@element || @element)))), -- alfabeto raddoppiato aa,bb,cc... to_int((array_find( array_reverse( array_sort( array_agg( y_min($geometry)))), y_min($geometry)))/ count( expression:=y_min($geometry),group_by:=y_min($geometry)))) || -- aggiunge il numero finale AA1, ZZ10 (to_int((array_find( array_reverse( array_sort( array_agg( x_min($geometry)))), x_min($geometry)))/ count( expression:=y_min($geometry),group_by:=x_min($geometry)))+1 ) PS. L'espressione di sopra copre solo i casi a,b,c,....aa,bb,cc... per aggiungere anche aaa,bbb,ccc.... occorre aggiungere la stringa: array_foreach( @cucu ,upper(@element || @element|| @element)) ovvero tre volte la variabile @element . Prova tu \u21b5 Geopackage Funzioni e variabili utilizzate: @element array_agg array_sort string_to_array array_get array_find array_reverse \\$Area count array_foreach upper to_int \\$geometry","title":"Numerazione dei poligoni in base alla relazione spaziale"},{"location":"esempi/numerazione_poligoni_rel_spaziale/#numerazione-dei-poligoni-in-base-alla-relazione-spaziale","text":"Etichettare le regioni italiane ISTAT in funzione della superficie, per esempio: la regione pi\u00f9 estesa deve avere come etichetta 1 e poi via via aumentare al decrescere dell' area. espressione da usare: array_find( array_reverse( array_sort(array_agg($Area)) ), $Area)+1 L'espressione significa: Crea un array (un vettore) e mettici dentro tutti i valori delle aree delle regioni, ordinali in senso crescente (dal pi\u00f9 piccolo al pi\u00f9 grande) e poi fai l'inverso, cio\u00e8, ordinali dal pi\u00f9 grande al pi\u00f9 piccolo; infine assegna l'indice della posizione del valore dell'area. PS : +1 serve solo a far iniziare il conteggio da 1 in quanto gli array iniziano da zero. Altro esempio: Etichettare in funzione della longitudine, cio\u00e8 mettere la label 1 nella regione pi\u00f9 a Ovest e cosi via per le altre: espressione da usare: array_find( array_sort(array_agg(x_min( $geometry))) ,x_min( $geometry))+1 Altro esempio: Etichettare, per ogni regione, le province in ordine alfabetico: espressione da usare: \"sigla\" || '-' || (array_find( array_sort( array_agg(expression:=\"sigla\" , group_by:=\"cod_reg\" )), \"sigla\" )+1) Altro esempio: Creata una griglia regolare formata da circa 4000 poligoni. Nominare tutti i poligoni partendo da destra verso sinistra e dall'alto verso il basso con lettere e numeri in sequenza. Quindi la prima maglia della griglia sar\u00e0 A1, A2, A3 ecc, la seconda B1 B2 B3 e cos\u00ec via. espressione da usare: array_get( with_variable( 'cucu', string_to_array('a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z'), array_cat( array_foreach( @cucu ,upper(@element)), -- alfabeto a,b,c... array_foreach( @cucu ,upper(@element || @element)))), -- alfabeto raddoppiato aa,bb,cc... to_int((array_find( array_reverse( array_sort( array_agg( y_min($geometry)))), y_min($geometry)))/ count( expression:=y_min($geometry),group_by:=y_min($geometry)))) || -- aggiunge il numero finale AA1, ZZ10 (to_int((array_find( array_reverse( array_sort( array_agg( x_min($geometry)))), x_min($geometry)))/ count( expression:=y_min($geometry),group_by:=x_min($geometry)))+1 ) PS. L'espressione di sopra copre solo i casi a,b,c,....aa,bb,cc... per aggiungere anche aaa,bbb,ccc.... occorre aggiungere la stringa: array_foreach( @cucu ,upper(@element || @element|| @element)) ovvero tre volte la variabile @element .","title":"Numerazione dei poligoni in base alla relazione spaziale"},{"location":"esempi/numerazione_poligoni_rel_spaziale/#prova-tu","text":"Geopackage Funzioni e variabili utilizzate: @element array_agg array_sort string_to_array array_get array_find array_reverse \\$Area count array_foreach upper to_int \\$geometry","title":"Prova tu"},{"location":"esempi/punti_in_poligoni_categorie/","text":"Contare i punti nel poligono per categorie \u21b5 Contare solo alcuni degli elementi di un vettore puntuale che ricadono all'interno delle geometrie di un vettore poligonale, e \u2018appendere\u2019 i valori nella tabella attributi del layer poligonale. Possiamo utilizzare l'operatore AND per filtrare il conteggio dei punti del poligono in modo da includere in tale conteggio solo quei punti che hanno determinate caratteristiche. Utilizzare il calcolatore di campi: creiamo un nuovo campo virtuale (Tipo: integer) nel layer poligonale; popolarlo utilizzando un'espressione tipo: aggregate(layer:='punti', aggregate:='count', expression:=\"nome_campo\", filter:=(\"nome_campo\"='valore_campo' AND intersects( $geometry, geometry(@parent)))) Per fare un esempio concreto usiamo i dataset utilizzati nel manuale utente di QGIS scaricabili da qui caricando il vettore poligonale 'regions' e quello puntuale 'airports'. Poniamo ad esempio di voler conteggiare il numero di aeroporti sd uso civile ricadenti in ciascuna regione: possiamo utilizzare la funzione aggregate e imporre che siano soddisfatte due condizioni nell\u2019argomento del filtro tramite l\u2019operatore AND . risultato: Partendo da qui possiamo costruire un\u2019espressione pi\u00f9 complessa che ci restituisca il numero di aeroporti, per ciascun uso, presenti in ciascuna regione. risultato: Last but not least\u2026 Implicazioni dell\u2019uso della funzione aggregate con la variabile @parent per contare i punti nel poligono Ho usato questi dataset poich\u00e9 utilizzati anche nella documentazione per spiegare le relazioni 1:N. Solo che in questo caso non c\u2019\u00e8 stato neppure bisogno di impostare una relazione di progetto tra i vettori \u201cregions\u201d (1) e \u201cairports\u201d (N)! Realizzato da Martina Savarese Funzioni e variabili utilizzate: @parent aggregate AND geometry","title":"Contare  i punti nel poligono per categorie"},{"location":"esempi/punti_in_poligoni_categorie/#contare-i-punti-nel-poligono-per-categorie","text":"Contare solo alcuni degli elementi di un vettore puntuale che ricadono all'interno delle geometrie di un vettore poligonale, e \u2018appendere\u2019 i valori nella tabella attributi del layer poligonale. Possiamo utilizzare l'operatore AND per filtrare il conteggio dei punti del poligono in modo da includere in tale conteggio solo quei punti che hanno determinate caratteristiche. Utilizzare il calcolatore di campi: creiamo un nuovo campo virtuale (Tipo: integer) nel layer poligonale; popolarlo utilizzando un'espressione tipo: aggregate(layer:='punti', aggregate:='count', expression:=\"nome_campo\", filter:=(\"nome_campo\"='valore_campo' AND intersects( $geometry, geometry(@parent)))) Per fare un esempio concreto usiamo i dataset utilizzati nel manuale utente di QGIS scaricabili da qui caricando il vettore poligonale 'regions' e quello puntuale 'airports'. Poniamo ad esempio di voler conteggiare il numero di aeroporti sd uso civile ricadenti in ciascuna regione: possiamo utilizzare la funzione aggregate e imporre che siano soddisfatte due condizioni nell\u2019argomento del filtro tramite l\u2019operatore AND . risultato: Partendo da qui possiamo costruire un\u2019espressione pi\u00f9 complessa che ci restituisca il numero di aeroporti, per ciascun uso, presenti in ciascuna regione. risultato: Last but not least\u2026 Implicazioni dell\u2019uso della funzione aggregate con la variabile @parent per contare i punti nel poligono Ho usato questi dataset poich\u00e9 utilizzati anche nella documentazione per spiegare le relazioni 1:N. Solo che in questo caso non c\u2019\u00e8 stato neppure bisogno di impostare una relazione di progetto tra i vettori \u201cregions\u201d (1) e \u201cairports\u201d (N)! Realizzato da Martina Savarese Funzioni e variabili utilizzate: @parent aggregate AND geometry","title":"Contare  i punti nel poligono per categorie"},{"location":"esempi/rotazione_pattern/","text":"Rotazione di pattern lineare \u21b5 Campire degli edifici con pattern lineari e rotazione dipendente dalle feature in questo screenshot si nota che il pattern lineare ha una rotazione costante di 45\u00b0 per tutti gli edifici, per edifici con lato a 45\u00b0 (vedi frecia) il pattern risulta parallelo e quindi non bello a vedersi. Vediamo come calcolare un angolo diverso per ogni edificio in modo da limitare il parallelismo del pattern lineare: l'espressione da usare \u00e8: angle_at_vertex(shortest_line(centroid(oriented_bbox($geometry)), boundary(oriented_bbox($geometry))),0) nel linguaggio umano significa: \u21b5 calcola l'angolo del segmento (in blue) pi\u00f9 corto tra il centroide del bounding box orientato (tratteggio rosso) e il bounding box stesso. espressione: prova tu usando in file qml: file QML Funzioni e variabili utilizzate: angle_at_vertex shortest_line centroid oriented_bbox boundary \\$geometry","title":"Rotazione di pattern lineare"},{"location":"esempi/rotazione_pattern/#rotazione-di-pattern-lineare","text":"Campire degli edifici con pattern lineari e rotazione dipendente dalle feature in questo screenshot si nota che il pattern lineare ha una rotazione costante di 45\u00b0 per tutti gli edifici, per edifici con lato a 45\u00b0 (vedi frecia) il pattern risulta parallelo e quindi non bello a vedersi. Vediamo come calcolare un angolo diverso per ogni edificio in modo da limitare il parallelismo del pattern lineare: l'espressione da usare \u00e8: angle_at_vertex(shortest_line(centroid(oriented_bbox($geometry)), boundary(oriented_bbox($geometry))),0)","title":"Rotazione di pattern lineare"},{"location":"esempi/rotazione_pattern/#nel-linguaggio-umano-significa","text":"calcola l'angolo del segmento (in blue) pi\u00f9 corto tra il centroide del bounding box orientato (tratteggio rosso) e il bounding box stesso. espressione: prova tu usando in file qml: file QML Funzioni e variabili utilizzate: angle_at_vertex shortest_line centroid oriented_bbox boundary \\$geometry","title":"nel linguaggio umano significa:"},{"location":"esempi/rotazione_simbolo_parallelo_linea/","text":"Rotazione simbolo parallelamente alla linea pi\u00f9 vicina \u21b5 L'espressione di sotto calcola l'angolo della linea pi\u00f9 vicina e lo utilizza per far ruotare parallelamente un simbolo. with_variable ('geom', overlay_nearest('strade_palermo',$geometry)[0], line_interpolate_angle( @geom, line_locate_point(@geom,closest_point(@geom,$geometry)))) Funzioni e variabili utilizzate: with_variable overlay_nearest line_interpolate_angle closest_point \\$geometry","title":"Rotazione simbolo parallelamente alla linea pi\u00f9 vicina"},{"location":"esempi/rotazione_simbolo_parallelo_linea/#rotazione-simbolo-parallelamente-alla-linea-piu-vicina","text":"L'espressione di sotto calcola l'angolo della linea pi\u00f9 vicina e lo utilizza per far ruotare parallelamente un simbolo. with_variable ('geom', overlay_nearest('strade_palermo',$geometry)[0], line_interpolate_angle( @geom, line_locate_point(@geom,closest_point(@geom,$geometry)))) Funzioni e variabili utilizzate: with_variable overlay_nearest line_interpolate_angle closest_point \\$geometry","title":"Rotazione simbolo parallelamente alla linea pi\u00f9 vicina"},{"location":"esempi/select_duplicate_vertices/","text":"Selezionare vertici duplicati \u21b5 Ogni volta che estraiamo i vertici in una geometria (lineare o poligonale) otteniamo quasi sempre dei vertici duplicati, in questo esempio vedremo come selezionarli usando le espressioni. Per selezionare i vertici duplicati vedremo due soluzioni diverse: prima soluzione usando una funzione di aggregazione count count( expression:=geom_to_wkt( $geometry,2), group_by:=geom_to_wkt( $geometry,2) ) > 1 Ogni espressione viene valutata riga per riga nella tabella attributi, questa espressione sar\u00e0 vera solo in quelle righe dove il conteggio delle geometrie sono maggiori di uno e quindi duplicate: prima riga, conteggio con aggregazione, eistono pi\u00f9 geometrie uguali?? se si il count \u00e8 >1 e seleziona la riga. seconda soluzione usando gli array array_length( array_agg( expression:=$geometry, group_by:=geom_to_wkt($geometry,2)) ) > 1 Il concetto \u00e8 simile a quello precedente, ma usando gli array: quindi quando un array contiene pi\u00f9 di un elemento (geometria=vertice), la lunghezza dell'array sar\u00e0 > 1 e quindi duplicato. per entrambe stesso risultato: Selezionare solo uno dei due punti doppi \u21b5 espressione da utilizzare: seleziona primo punto if($id = array_first( -- primo punto array_agg( expression:= $id, filter:= array_length( array_agg( expression:=$geometry, group_by:=geom_to_wkt($geometry)))>1, group_by:=geom_to_wkt($geometry) ) ) , $id, '') selezionare ultimo punto if($id = array_last( -- ultimo punto array_agg( expression:= $id, filter:= array_length( array_agg( expression:=$geometry, group_by:=geom_to_wkt($geometry)))>1, group_by:=geom_to_wkt($geometry) ) ) , $id, '') nel caso di molti punti sovrapposti si potrebbe utilizzare la notazione degli array, cio\u00e8 le parentesi quadre: if($id = array_agg( expression:= $id, filter:= array_length( array_agg( expression:=$geometry, group_by:=geom_to_wkt($geometry)))>1, group_by:=geom_to_wkt($geometry) )[0] -- primo vertice doppio; [-1] per ultimo; [x] per xesimo posto , $id, '') NB1: La selezione potrebbe non essere visibile a schermo a causa della sovrapposizione dei punti, per ovviare alternare le funzioni array_first con array_last . NB2: I calcoli da fare sono molti e per dataset pesanti potrebbe impiegarci molto tempo (dipende anche dalle risorse hardware) In collaborazione con Valerio Pinna che ringrazio per la disponibilit\u00e0. Prova tu \u21b5 il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: if \\$id get_feature_by_id array_agg array_sort string_to_array array_last array_find array_reverse geom_to_wkt count array_length \\$geometry","title":"Selezionare vertici duplicati"},{"location":"esempi/select_duplicate_vertices/#selezionare-vertici-duplicati","text":"Ogni volta che estraiamo i vertici in una geometria (lineare o poligonale) otteniamo quasi sempre dei vertici duplicati, in questo esempio vedremo come selezionarli usando le espressioni. Per selezionare i vertici duplicati vedremo due soluzioni diverse: prima soluzione usando una funzione di aggregazione count count( expression:=geom_to_wkt( $geometry,2), group_by:=geom_to_wkt( $geometry,2) ) > 1 Ogni espressione viene valutata riga per riga nella tabella attributi, questa espressione sar\u00e0 vera solo in quelle righe dove il conteggio delle geometrie sono maggiori di uno e quindi duplicate: prima riga, conteggio con aggregazione, eistono pi\u00f9 geometrie uguali?? se si il count \u00e8 >1 e seleziona la riga. seconda soluzione usando gli array array_length( array_agg( expression:=$geometry, group_by:=geom_to_wkt($geometry,2)) ) > 1 Il concetto \u00e8 simile a quello precedente, ma usando gli array: quindi quando un array contiene pi\u00f9 di un elemento (geometria=vertice), la lunghezza dell'array sar\u00e0 > 1 e quindi duplicato. per entrambe stesso risultato:","title":"Selezionare vertici duplicati"},{"location":"esempi/select_duplicate_vertices/#selezionare-solo-uno-dei-due-punti-doppi","text":"espressione da utilizzare: seleziona primo punto if($id = array_first( -- primo punto array_agg( expression:= $id, filter:= array_length( array_agg( expression:=$geometry, group_by:=geom_to_wkt($geometry)))>1, group_by:=geom_to_wkt($geometry) ) ) , $id, '') selezionare ultimo punto if($id = array_last( -- ultimo punto array_agg( expression:= $id, filter:= array_length( array_agg( expression:=$geometry, group_by:=geom_to_wkt($geometry)))>1, group_by:=geom_to_wkt($geometry) ) ) , $id, '') nel caso di molti punti sovrapposti si potrebbe utilizzare la notazione degli array, cio\u00e8 le parentesi quadre: if($id = array_agg( expression:= $id, filter:= array_length( array_agg( expression:=$geometry, group_by:=geom_to_wkt($geometry)))>1, group_by:=geom_to_wkt($geometry) )[0] -- primo vertice doppio; [-1] per ultimo; [x] per xesimo posto , $id, '') NB1: La selezione potrebbe non essere visibile a schermo a causa della sovrapposizione dei punti, per ovviare alternare le funzioni array_first con array_last . NB2: I calcoli da fare sono molti e per dataset pesanti potrebbe impiegarci molto tempo (dipende anche dalle risorse hardware) In collaborazione con Valerio Pinna che ringrazio per la disponibilit\u00e0.","title":"Selezionare solo uno dei due punti doppi"},{"location":"esempi/select_duplicate_vertices/#prova-tu","text":"il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: if \\$id get_feature_by_id array_agg array_sort string_to_array array_last array_find array_reverse geom_to_wkt count array_length \\$geometry","title":"Prova tu"},{"location":"esempi/select_with_aggregate/","text":"Selezionare tramite funzioni di aggregazione - caso minimun \u21b5 Facciamo un esempio, uso vettore province_g del geopackage allegato e seleziono i comuni che hanno superficie pi\u00f9 piccola per ogni provincia: seleziono (nel panel layer) il layer dove effettuare la selezione e premo il tasto funzione F3 oppure come da figura sotto: scrivo l'espressione: $area = minimum($area, group_by:= \"COD_PROV\" ) e poi clicco su (2) seleziona elementi : il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: \\$area minimum uguale","title":"Selezionare tramite funzioni di aggregazione - caso minimun"},{"location":"esempi/select_with_aggregate/#selezionare-tramite-funzioni-di-aggregazione-caso-minimun","text":"Facciamo un esempio, uso vettore province_g del geopackage allegato e seleziono i comuni che hanno superficie pi\u00f9 piccola per ogni provincia: seleziono (nel panel layer) il layer dove effettuare la selezione e premo il tasto funzione F3 oppure come da figura sotto: scrivo l'espressione: $area = minimum($area, group_by:= \"COD_PROV\" ) e poi clicco su (2) seleziona elementi : il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: \\$area minimum uguale","title":"Selezionare tramite funzioni di aggregazione - caso minimun"},{"location":"esempi/selezionare_primi_n_valori/","text":"Selezionare i primi 10 poligoni pi\u00f9 grandi \u21b5 Supponiamo di dover selezionare i primi 10 poligoni (per esempio le prime 10 province pi\u00f9 estese d'Italia) usando la selezione per espressione di QGIS: Espressione da usare array_contains( array_slice( array_sort( array_agg($area), ascending:=false ), 0,9 ), $area) Nel linguaggio umano significa: Prendi i primi 10 (da 0 a 9) elementi (valore area) contenuti in un array ordinato in senso decrescente. Etichettatura \u21b5 Etichettare con il nome della provincia e il numero sequenziale Etichettiamo tramite regola e usiamo come filtro is_selected() , come espressione: \"DEN_UTS\" || ' (' || (array_find( array_sort( array_agg( $area ) , ascending:=false ) , $area ) +1) || ')' NB: +1 perch\u00e9 l'indice inizia da 0 Funzioni e variabili utilizzate: doppio-pipe uguale array_contains array_slice array_sort array_agg \\$area \\$geometry","title":"Selezionare i primi 10 poligoni pi\u00f9 grandi"},{"location":"esempi/selezionare_primi_n_valori/#selezionare-i-primi-10-poligoni-piu-grandi","text":"Supponiamo di dover selezionare i primi 10 poligoni (per esempio le prime 10 province pi\u00f9 estese d'Italia) usando la selezione per espressione di QGIS: Espressione da usare array_contains( array_slice( array_sort( array_agg($area), ascending:=false ), 0,9 ), $area) Nel linguaggio umano significa: Prendi i primi 10 (da 0 a 9) elementi (valore area) contenuti in un array ordinato in senso decrescente.","title":"Selezionare i primi 10 poligoni pi\u00f9 grandi"},{"location":"esempi/selezionare_primi_n_valori/#etichettatura","text":"Etichettare con il nome della provincia e il numero sequenziale Etichettiamo tramite regola e usiamo come filtro is_selected() , come espressione: \"DEN_UTS\" || ' (' || (array_find( array_sort( array_agg( $area ) , ascending:=false ) , $area ) +1) || ')' NB: +1 perch\u00e9 l'indice inizia da 0 Funzioni e variabili utilizzate: doppio-pipe uguale array_contains array_slice array_sort array_agg \\$area \\$geometry","title":"Etichettatura"},{"location":"esempi/somma_lunghezze_nel_poligono/","text":"Somma lunghezze nel poligono \u21b5 Sommare le feature di un layer lineare che ricadono dentro poligoni, e \u2018appendere\u2019 i valori nella tabella attributi del layer poligonale. Esiste una geo-algoritmo in processing (somma lunghezze linee) che fa questo lavoro in modo brillante ma crea un altro strato. Un modo rapido per evitare la creazione di un nuovo layer \u00e8 quello di utilizzare il calcolatore di campi: creare un nuovo campo ' tot_lungh ' nel layer poligonale; popolarlo utilizzando la seguente espressione: caso in cui i due layer hanno stesso EPSG: aggregate(layer:='linee', aggregate:='sum',expression:=length(intersection(geometry(@parent),$geometry )), filter:=intersects( $geometry,geometry(@parent))) caso in cui i due layer hanno DIVERSO EPSG: aggregate(layer:='strade', aggregate:='sum', expression:=length(intersection(transform(geometry(@parent),'EPSG:4326','EPSG:32633'),$geometry)), filter:=intersects( $geometry,transform(geometry(@parent),'EPSG:4326','EPSG:32633'))) risultato: NB: la piccola differenza tra le lunghezze \u00e8 imputabile alla trasformazione di EPSG!!! La prima tabella \u00e8 relativa al vettore poligonale la seconda, lunghezze delle linea, deriva dal geo-algoritmo in processing. il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: @parent aggregate length geometry intersection intersects transform \\$geometry","title":"Somma lunghezze nel poligono"},{"location":"esempi/somma_lunghezze_nel_poligono/#somma-lunghezze-nel-poligono","text":"Sommare le feature di un layer lineare che ricadono dentro poligoni, e \u2018appendere\u2019 i valori nella tabella attributi del layer poligonale. Esiste una geo-algoritmo in processing (somma lunghezze linee) che fa questo lavoro in modo brillante ma crea un altro strato. Un modo rapido per evitare la creazione di un nuovo layer \u00e8 quello di utilizzare il calcolatore di campi: creare un nuovo campo ' tot_lungh ' nel layer poligonale; popolarlo utilizzando la seguente espressione: caso in cui i due layer hanno stesso EPSG: aggregate(layer:='linee', aggregate:='sum',expression:=length(intersection(geometry(@parent),$geometry )), filter:=intersects( $geometry,geometry(@parent))) caso in cui i due layer hanno DIVERSO EPSG: aggregate(layer:='strade', aggregate:='sum', expression:=length(intersection(transform(geometry(@parent),'EPSG:4326','EPSG:32633'),$geometry)), filter:=intersects( $geometry,transform(geometry(@parent),'EPSG:4326','EPSG:32633'))) risultato: NB: la piccola differenza tra le lunghezze \u00e8 imputabile alla trasformazione di EPSG!!! La prima tabella \u00e8 relativa al vettore poligonale la seconda, lunghezze delle linea, deriva dal geo-algoritmo in processing. il geopackage \u00e8 scaricabile qui Funzioni e variabili utilizzate: @parent aggregate length geometry intersection intersects transform \\$geometry","title":"Somma lunghezze nel poligono"},{"location":"esempi/spatial_join/","text":"Spatial join \u21b5 L\u2019unione spaziale di attributi \u00e8 un problema frequente in ambito GIS - si tratta di trasferire attributi da un layer ad un altro basandosi solo sulle loro reciproche relazioni spaziali. In QGIS questa feature pu\u00f2 essere avviata attraverso lo strumento Unisci attributi per posizione Esempio: supponiamo di avere due layer: le province e regioni ISTAT, trasferire l'attributo ' COD_REG ' dal vettore regione al vettore province . avviare il calcolatore di campi e creare un nuovo campo 'COD_REG' Integer (9) e popolarlo con la seguente espressione: aggregate(layer:='Reg01012018_g', aggregate:='concatenate', expression:=to_string(\"COD_REG\"), filter:=intersects( Buffer($geometry,-10), geometry(@parent) ),concatenator:='-') L'espressione di sopra in linguaggio umano: aggrega, usando il layer Reg01012018_g , il campo COD_REG in modo da rispettare la relazione spaziale (filter:=) tra regioni ($geometry) e province (geometry(@parent)) . Step: seleziono il layer ProvCM01012018_g , clicco sull'icona del calcolatore di campi: nome del campo in uscita: COD_REG tipo di campo in uscita: Integer; lunghezza campo: 9 scrivo espressione di sopra; ecco la tabella attributi: Tematizzo con i valori del nuovo campo: OSSERVAZIONE : ottengo il risultato sperato solo perch\u00e9 ho utilizzato il Buffer negativo altrimenti avrei ottenuto un risultato diverso (ovvero tutti le regioni che si intersecavano con la provincia); il calcolatore di campi permette di aggiungere un campo nuovo nella stessa tabella attributi, cosa che \u00e8 molto utile per questi lavori. un risultato del genere NON \u00e8 possibile ottenerlo cosi rapidamente. Funzioni e variabili utilizzate: @parent aggregate geometry to_string intersects \\$geometry","title":"Spatial join"},{"location":"esempi/spatial_join/#spatial-join","text":"L\u2019unione spaziale di attributi \u00e8 un problema frequente in ambito GIS - si tratta di trasferire attributi da un layer ad un altro basandosi solo sulle loro reciproche relazioni spaziali. In QGIS questa feature pu\u00f2 essere avviata attraverso lo strumento Unisci attributi per posizione Esempio: supponiamo di avere due layer: le province e regioni ISTAT, trasferire l'attributo ' COD_REG ' dal vettore regione al vettore province . avviare il calcolatore di campi e creare un nuovo campo 'COD_REG' Integer (9) e popolarlo con la seguente espressione: aggregate(layer:='Reg01012018_g', aggregate:='concatenate', expression:=to_string(\"COD_REG\"), filter:=intersects( Buffer($geometry,-10), geometry(@parent) ),concatenator:='-') L'espressione di sopra in linguaggio umano: aggrega, usando il layer Reg01012018_g , il campo COD_REG in modo da rispettare la relazione spaziale (filter:=) tra regioni ($geometry) e province (geometry(@parent)) . Step: seleziono il layer ProvCM01012018_g , clicco sull'icona del calcolatore di campi: nome del campo in uscita: COD_REG tipo di campo in uscita: Integer; lunghezza campo: 9 scrivo espressione di sopra; ecco la tabella attributi: Tematizzo con i valori del nuovo campo: OSSERVAZIONE : ottengo il risultato sperato solo perch\u00e9 ho utilizzato il Buffer negativo altrimenti avrei ottenuto un risultato diverso (ovvero tutti le regioni che si intersecavano con la provincia); il calcolatore di campi permette di aggiungere un campo nuovo nella stessa tabella attributi, cosa che \u00e8 molto utile per questi lavori. un risultato del genere NON \u00e8 possibile ottenerlo cosi rapidamente. Funzioni e variabili utilizzate: @parent aggregate geometry to_string intersects \\$geometry","title":"Spatial join"},{"location":"esempi/sposta_etichetta_linea/","text":"Spostare etichetta e generare segmento \u21b5 Supponiamo di dover etichettare delle particelle, le label risultano troppo vicine o sovrapposte e vogliamo spostarle facendo generare un segmanto che indichi lo spostamento (vedi screenshot sotto), vediamo come fare: Caso QGIS 2.x (2.18) \u21b5 Per poter tracciare il segmento occorre aggiungere - alla tabella attributi - due campi x e y (Real); queste coordinate serviranno per memorizzare il punto in cui sposteremo - manualmente - l'etichetta. Aggiungiamo i due campi X e Y: tabella attributi: dopo aver creato i due campi: F7 per aprire il pannello Style Layer; scegliere il campo per l'etichetta; scheda posizionamento : Definito in funzione dei dati: selezionare campo X e Y fatto ci\u00f2, usiamo la barra delle etichette: le varie opzioni si attiveranno dopo aver messo il layer in editing e configurato la sezione posizionamento . Vediamo ora come fare disegnare il segmento: tra il centroid del poligono e il punto in cui spostiamo (manualmente) l'etichetta Video demo QGIS 2.18 Caso QGIS 3.x \u21b5 Dalla 3.0 in poi non occorre pi\u00f9 modificare la tabella attributi - aggiungendo i campi x e y - in quanto ci pensa la tabella di memorizzazione ausiliaria occorre solo utilizzare in X e Y: Store Data in the project dopo avere definito il campo primario del layer Geopackage \u00e8 qui Funzioni e variabili utilizzate: x y \\$geometry","title":"Spostare etichetta e generare segmento"},{"location":"esempi/sposta_etichetta_linea/#spostare-etichetta-e-generare-segmento","text":"Supponiamo di dover etichettare delle particelle, le label risultano troppo vicine o sovrapposte e vogliamo spostarle facendo generare un segmanto che indichi lo spostamento (vedi screenshot sotto), vediamo come fare:","title":"Spostare etichetta e generare segmento"},{"location":"esempi/sposta_etichetta_linea/#caso-qgis-2x-218","text":"Per poter tracciare il segmento occorre aggiungere - alla tabella attributi - due campi x e y (Real); queste coordinate serviranno per memorizzare il punto in cui sposteremo - manualmente - l'etichetta. Aggiungiamo i due campi X e Y: tabella attributi: dopo aver creato i due campi: F7 per aprire il pannello Style Layer; scegliere il campo per l'etichetta; scheda posizionamento : Definito in funzione dei dati: selezionare campo X e Y fatto ci\u00f2, usiamo la barra delle etichette: le varie opzioni si attiveranno dopo aver messo il layer in editing e configurato la sezione posizionamento . Vediamo ora come fare disegnare il segmento: tra il centroid del poligono e il punto in cui spostiamo (manualmente) l'etichetta Video demo QGIS 2.18","title":"Caso QGIS 2.x (2.18)"},{"location":"esempi/sposta_etichetta_linea/#caso-qgis-3x","text":"Dalla 3.0 in poi non occorre pi\u00f9 modificare la tabella attributi - aggiungendo i campi x e y - in quanto ci pensa la tabella di memorizzazione ausiliaria occorre solo utilizzare in X e Y: Store Data in the project dopo avere definito il campo primario del layer Geopackage \u00e8 qui Funzioni e variabili utilizzate: x y \\$geometry","title":"Caso QGIS 3.x"},{"location":"esempi/tematizzare/","text":"Tematizzare utilizzando la sovrascrittura definita dai dati \u21b5 Ad uno shapefile puntuale attribuire al simbolo colori diversi in funzione di un campo e la dimensione in funzione di un altro campo. nella Dimensione (mouse sull'icona comparir\u00e0) quindi l'ingresso atteso \u00e8 un numero reale che genereremo con la seguende condizione: CASE WHEN length( \"ID_OD\" ) >3 THEN 4 WHEN length( \"ID_OD\" ) =3 THEN 6 ELSE 2 END nella Colore di riempimento (mouse sull'icona comparir\u00e0) quindi l'ingresso atteso \u00e8 una stringa [r,g,b,a] con interi oppure come hex che genereremo con la seguende condizione: CASE WHEN length( \"ID_OD\" ) >3 THEN '255,0,0' WHEN length( \"ID_OD\" ) =3 THEN '255,0,255' ELSE '255,255,0' END Funzioni e variabili utilizzate: CASE length","title":"Tematizzare utilizzando la sovrascrittura definita dai dati ![icon](../img/mIconDataDefine.png)"},{"location":"esempi/tematizzare/#tematizzare-utilizzando-la-sovrascrittura-definita-dai-dati","text":"Ad uno shapefile puntuale attribuire al simbolo colori diversi in funzione di un campo e la dimensione in funzione di un altro campo. nella Dimensione (mouse sull'icona comparir\u00e0) quindi l'ingresso atteso \u00e8 un numero reale che genereremo con la seguende condizione: CASE WHEN length( \"ID_OD\" ) >3 THEN 4 WHEN length( \"ID_OD\" ) =3 THEN 6 ELSE 2 END nella Colore di riempimento (mouse sull'icona comparir\u00e0) quindi l'ingresso atteso \u00e8 una stringa [r,g,b,a] con interi oppure come hex che genereremo con la seguende condizione: CASE WHEN length( \"ID_OD\" ) >3 THEN '255,0,0' WHEN length( \"ID_OD\" ) =3 THEN '255,0,255' ELSE '255,255,0' END Funzioni e variabili utilizzate: CASE length","title":"Tematizzare utilizzando la sovrascrittura definita dai dati"},{"location":"esempi/tracciare_grafico_generatore_geometrie/","text":"Tracciare un grafico usando solo il generatore di geometrie, uno per ogni feature \u21b5 Supponiamo di avere uno shapefile poligonale, le province siciliane, e i relativi dati sul COVID-19 in un file CSV. Tracciare, a partire dal centroide di ogni feature (ogni provincia), una curva che rappresenti l'andamento, nel tempo, del parametro medico presente nel file CSV (in questo caso specifico \u00e8 totale_casi ). Il file CSV \u00e8 cosi strutturato (esempio di due giorni di rilievo) 459 record, 51 giorni di osservazioni: data codice_provincia denominazione_provincia sigla_provincia totale_casi pop_res 2020-02-24T18:00:00.000 084 Agrigento AG 0 434870 2020-02-24T18:00:00.000 085 Caltanissetta CL 0 262458 2020-02-24T18:00:00.000 087 Catania CT 0 1107702 2020-02-24T18:00:00.000 086 Enna EN 0 164788 2020-02-24T18:00:00.000 083 Messina ME 0 626876 2020-02-24T18:00:00.000 082 Palermo PA 0 1252588 2020-02-24T18:00:00.000 088 Ragusa RG 0 320893 2020-02-24T18:00:00.000 089 Siracusa SR 0 399224 2020-02-24T18:00:00.000 081 Trapani TP 0 430492 2020-02-25T18:00:00.000 084 Agrigento AG 0 434870 2020-02-25T18:00:00.000 085 Caltanissetta CL 0 262458 2020-02-25T18:00:00.000 087 Catania CT 0 1107702 2020-02-25T18:00:00.000 086 Enna EN 0 164788 2020-02-25T18:00:00.000 083 Messina ME 0 626876 2020-02-25T18:00:00.000 082 Palermo PA 3 1252588 2020-02-25T18:00:00.000 088 Ragusa RG 0 320893 2020-02-25T18:00:00.000 089 Siracusa SR 0 399224 2020-02-25T18:00:00.000 081 Trapani TP 0 430492 Lo shapefile province ha la tabella attributi cosi strutturata: cod_prov den_prov sigla 81 Trapani TP 82 Palermo PA 83 Messina ME 84 Agrigento AG 85 Caltanissetta CL 86 Enna EN 87 Catania CT 88 Ragusa RG 89 Siracusa SR Creao una relazione di progetto (1:m) tra i due file, utilizzando come campo comune il campo sigla Espressione per traciare la curva: translate( make_line(-- curva relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7 )) ), x(centroid($geometry)),y(centroid($geometry))) L'espressione crea un array di punti geometrici make_point , uno per ogni data ( $id ), successivamente trasformati in linea make_line e traslati translate sui centroidi di ogni provincia. In questa espressione make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7 ) , oltre a normalizzare i dati dividendo per la popolazione residente, uso dei fattori moltiplicativi per l'asse x e y. Per tracciare gli assi cartesiani, che seguono il grafico: ascisse make_line( -- ordinate make_point(x(centroid($geometry)),y(centroid($geometry))), make_point(x(centroid($geometry)), y(end_point( translate( make_line( relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7))), x(centroid($geometry)),y(centroid($geometry)) ) ))) ) ordinate make_line( -- ascisse make_point(x(centroid($geometry)),y(centroid($geometry))), make_point(x(end_point( translate( make_line( relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7))), x(centroid($geometry)),y(centroid($geometry)) ) ) ),y(centroid($geometry)))) Infine, traccio nell'ultimo punto del grafico, il valore normalizzato per 1000 abitati: punto end_point( -- ultimo punto grafico translate( make_line( relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7 ))), x(centroid($geometry)),y(centroid($geometry))) ) etichetta punto round(to_string(relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=\"totale_casi\"/\"pop_res\")[-1])*1000,1) Gif animata realizzata con il plugin TimeManager di Anita Graser Prova tu \u21b5 file CSV : https://raw.githubusercontent.com/pigreco/COVID19_Sicilia/master/risorse/dpc-covid19-ita-province.vrt shapefile : https://github.com/pigreco/COVID19_Sicilia/raw/master/risorse/province.7z Blog post su Pigrecoinfinito : https://pigrecoinfinito.com/2020/04/14/qgis-grafici-geoplot-usando-solo-il-geometry-generator/ caso generico \u21b5 espressione consigliata with_variable('id_min', relation_aggregate( relation:='rel1',aggregate:='array_agg',expression:= $id)[0], (with_variable('pos_min', relation_aggregate( relation:='rel1',aggregate:='array_agg',expression:=\"positive\")[0], ( translate( make_line(-- curva relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point(($id - @id_min )*200, (\"positive\" - @pos_min)*2))), x(centroid($geometry)),y(centroid($geometry))) )))) dove: \"positive\" \u00e8 il campo che contiene i dati da tracciare; 200 \u00e8 un fattore di amplificazione dell'asse x (ma dipende dai dati); 2 \u00e8 un fattore di amplificazione dell'asse y (ma dipende dai dati) esempio dati: name negative positive data CODIMUNI Barcelona 5497 4745 2020-03-29 080193 Barcelona 6259 5355 2020-03-30 080193 Barcelona 6580 5599 2020-04-01 080193 Barcelona 7402 6112 2020-04-02 080193 Barcelona 8078 6354 2020-04-03 080193 Barcelona 8156 6416 2020-04-04 080193 Barcelona 8408 6566 2020-04-05 080193 Barcelona 8483 6655 2020-04-06 080193 Barcelona 8961 6873 2020-04-07 080193 Barcelona 8754 6988 2020-04-08 080193 Barcelona 9490 7305 2020-04-09 080193 Barcelona 9619 7363 2020-04-10 080193 Barcelona 9633 7354 2020-04-11 080193 Barcelona 9671 7319 2020-04-13 080193 Barcelona 9774 7225 2020-04-15 080193 Begues 17 15 2020-03-29 080207 Begues 18 19 2020-03-30 080207 Begues 18 19 2020-04-01 080207 Begues 18 20 2020-04-02 080207 Begues 19 21 2020-04-03 080207 Begues 19 21 2020-04-04 080207 Begues 22 21 2020-04-05 080207 Begues 22 21 2020-04-06 080207 Begues 24 19 2020-04-07 080207 Begues 24 19 2020-04-08 080207 Begues 26 21 2020-04-09 080207 Begues 26 21 2020-04-10 080207 Begues 26 21 2020-04-11 080207 Begues 26 21 2020-04-13 080207 Begues 26 21 2020-04-15 080207 Funzioni e variabili utilizzate: @with_variable relation_aggregate array_to_string array_get array_foreach generate_series translate make_line make_point centroid end_point round \\$geometry","title":"Tracciare un grafico usando solo il generatore di geometrie, uno per ogni feature"},{"location":"esempi/tracciare_grafico_generatore_geometrie/#tracciare-un-grafico-usando-solo-il-generatore-di-geometrie-uno-per-ogni-feature","text":"Supponiamo di avere uno shapefile poligonale, le province siciliane, e i relativi dati sul COVID-19 in un file CSV. Tracciare, a partire dal centroide di ogni feature (ogni provincia), una curva che rappresenti l'andamento, nel tempo, del parametro medico presente nel file CSV (in questo caso specifico \u00e8 totale_casi ). Il file CSV \u00e8 cosi strutturato (esempio di due giorni di rilievo) 459 record, 51 giorni di osservazioni: data codice_provincia denominazione_provincia sigla_provincia totale_casi pop_res 2020-02-24T18:00:00.000 084 Agrigento AG 0 434870 2020-02-24T18:00:00.000 085 Caltanissetta CL 0 262458 2020-02-24T18:00:00.000 087 Catania CT 0 1107702 2020-02-24T18:00:00.000 086 Enna EN 0 164788 2020-02-24T18:00:00.000 083 Messina ME 0 626876 2020-02-24T18:00:00.000 082 Palermo PA 0 1252588 2020-02-24T18:00:00.000 088 Ragusa RG 0 320893 2020-02-24T18:00:00.000 089 Siracusa SR 0 399224 2020-02-24T18:00:00.000 081 Trapani TP 0 430492 2020-02-25T18:00:00.000 084 Agrigento AG 0 434870 2020-02-25T18:00:00.000 085 Caltanissetta CL 0 262458 2020-02-25T18:00:00.000 087 Catania CT 0 1107702 2020-02-25T18:00:00.000 086 Enna EN 0 164788 2020-02-25T18:00:00.000 083 Messina ME 0 626876 2020-02-25T18:00:00.000 082 Palermo PA 3 1252588 2020-02-25T18:00:00.000 088 Ragusa RG 0 320893 2020-02-25T18:00:00.000 089 Siracusa SR 0 399224 2020-02-25T18:00:00.000 081 Trapani TP 0 430492 Lo shapefile province ha la tabella attributi cosi strutturata: cod_prov den_prov sigla 81 Trapani TP 82 Palermo PA 83 Messina ME 84 Agrigento AG 85 Caltanissetta CL 86 Enna EN 87 Catania CT 88 Ragusa RG 89 Siracusa SR Creao una relazione di progetto (1:m) tra i due file, utilizzando come campo comune il campo sigla Espressione per traciare la curva: translate( make_line(-- curva relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7 )) ), x(centroid($geometry)),y(centroid($geometry))) L'espressione crea un array di punti geometrici make_point , uno per ogni data ( $id ), successivamente trasformati in linea make_line e traslati translate sui centroidi di ogni provincia. In questa espressione make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7 ) , oltre a normalizzare i dati dividendo per la popolazione residente, uso dei fattori moltiplicativi per l'asse x e y. Per tracciare gli assi cartesiani, che seguono il grafico: ascisse make_line( -- ordinate make_point(x(centroid($geometry)),y(centroid($geometry))), make_point(x(centroid($geometry)), y(end_point( translate( make_line( relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7))), x(centroid($geometry)),y(centroid($geometry)) ) ))) ) ordinate make_line( -- ascisse make_point(x(centroid($geometry)),y(centroid($geometry))), make_point(x(end_point( translate( make_line( relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7))), x(centroid($geometry)),y(centroid($geometry)) ) ) ),y(centroid($geometry)))) Infine, traccio nell'ultimo punto del grafico, il valore normalizzato per 1000 abitati: punto end_point( -- ultimo punto grafico translate( make_line( relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point( $id*50, \"totale_casi\"/\"pop_res\"*2*10^7 ))), x(centroid($geometry)),y(centroid($geometry))) ) etichetta punto round(to_string(relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=\"totale_casi\"/\"pop_res\")[-1])*1000,1) Gif animata realizzata con il plugin TimeManager di Anita Graser","title":"Tracciare un grafico usando solo il generatore di geometrie, uno per ogni feature"},{"location":"esempi/tracciare_grafico_generatore_geometrie/#prova-tu","text":"file CSV : https://raw.githubusercontent.com/pigreco/COVID19_Sicilia/master/risorse/dpc-covid19-ita-province.vrt shapefile : https://github.com/pigreco/COVID19_Sicilia/raw/master/risorse/province.7z Blog post su Pigrecoinfinito : https://pigrecoinfinito.com/2020/04/14/qgis-grafici-geoplot-usando-solo-il-geometry-generator/","title":"Prova tu"},{"location":"esempi/tracciare_grafico_generatore_geometrie/#caso-generico","text":"espressione consigliata with_variable('id_min', relation_aggregate( relation:='rel1',aggregate:='array_agg',expression:= $id)[0], (with_variable('pos_min', relation_aggregate( relation:='rel1',aggregate:='array_agg',expression:=\"positive\")[0], ( translate( make_line(-- curva relation_aggregate( relation:='rel1', aggregate:='array_agg', expression:=make_point(($id - @id_min )*200, (\"positive\" - @pos_min)*2))), x(centroid($geometry)),y(centroid($geometry))) )))) dove: \"positive\" \u00e8 il campo che contiene i dati da tracciare; 200 \u00e8 un fattore di amplificazione dell'asse x (ma dipende dai dati); 2 \u00e8 un fattore di amplificazione dell'asse y (ma dipende dai dati) esempio dati: name negative positive data CODIMUNI Barcelona 5497 4745 2020-03-29 080193 Barcelona 6259 5355 2020-03-30 080193 Barcelona 6580 5599 2020-04-01 080193 Barcelona 7402 6112 2020-04-02 080193 Barcelona 8078 6354 2020-04-03 080193 Barcelona 8156 6416 2020-04-04 080193 Barcelona 8408 6566 2020-04-05 080193 Barcelona 8483 6655 2020-04-06 080193 Barcelona 8961 6873 2020-04-07 080193 Barcelona 8754 6988 2020-04-08 080193 Barcelona 9490 7305 2020-04-09 080193 Barcelona 9619 7363 2020-04-10 080193 Barcelona 9633 7354 2020-04-11 080193 Barcelona 9671 7319 2020-04-13 080193 Barcelona 9774 7225 2020-04-15 080193 Begues 17 15 2020-03-29 080207 Begues 18 19 2020-03-30 080207 Begues 18 19 2020-04-01 080207 Begues 18 20 2020-04-02 080207 Begues 19 21 2020-04-03 080207 Begues 19 21 2020-04-04 080207 Begues 22 21 2020-04-05 080207 Begues 22 21 2020-04-06 080207 Begues 24 19 2020-04-07 080207 Begues 24 19 2020-04-08 080207 Begues 26 21 2020-04-09 080207 Begues 26 21 2020-04-10 080207 Begues 26 21 2020-04-11 080207 Begues 26 21 2020-04-13 080207 Begues 26 21 2020-04-15 080207 Funzioni e variabili utilizzate: @with_variable relation_aggregate array_to_string array_get array_foreach generate_series translate make_line make_point centroid end_point round \\$geometry","title":"caso generico"},{"location":"esempi/unica_etichetta_pi%C3%B9_poligoni/","text":"Etichettare pi\u00f9 poligoni con unica label \u21b5 Etichettare con l'attributo \"COD_REG\" lo strato province italiane ISTAT (QGIS >=3.0) Per poter etichettare pi\u00f9 feature, con una unica label, occorre che nella tabella attributi sia presente un campo con valori ripetuti (nel nostro esempio si ripetono i valori del campo \"COD_REG\" ): Vediamo come realizzare tutto ci\u00f2: Come campo etichetta seleziono \"COD_REG\" e poi dalla scheda Posizionamento sezione Definito dai dati . Nelle Coordinate x e y scrivere la seguente espressione: x (centroid(collect (expression:=$geometry, group_by:=\"COD_REG\" ))) ripetere la stessa cosa per la y: y (centroid(collect (expression:=$geometry, group_by:=\"COD_REG\" ))) Funzioni utilizzate (cercare le funzioni nella guida): x, y : estrae la coordinate x o y dal centroide; centroid: estrai il centroide di una feature; collect: crea unica feature secondo un raggruppamento. Funzioni e variabili utilizzate: x y make_point centroid collect \\$geometry","title":"Etichettare pi\u00f9 poligoni con unica label"},{"location":"esempi/unica_etichetta_pi%C3%B9_poligoni/#etichettare-piu-poligoni-con-unica-label","text":"Etichettare con l'attributo \"COD_REG\" lo strato province italiane ISTAT (QGIS >=3.0) Per poter etichettare pi\u00f9 feature, con una unica label, occorre che nella tabella attributi sia presente un campo con valori ripetuti (nel nostro esempio si ripetono i valori del campo \"COD_REG\" ): Vediamo come realizzare tutto ci\u00f2: Come campo etichetta seleziono \"COD_REG\" e poi dalla scheda Posizionamento sezione Definito dai dati . Nelle Coordinate x e y scrivere la seguente espressione: x (centroid(collect (expression:=$geometry, group_by:=\"COD_REG\" ))) ripetere la stessa cosa per la y: y (centroid(collect (expression:=$geometry, group_by:=\"COD_REG\" ))) Funzioni utilizzate (cercare le funzioni nella guida): x, y : estrae la coordinate x o y dal centroide; centroid: estrai il centroide di una feature; collect: crea unica feature secondo un raggruppamento. Funzioni e variabili utilizzate: x y make_point centroid collect \\$geometry","title":"Etichettare pi\u00f9 poligoni con unica label"},{"location":"gr_funzioni/da_documentare/","text":"Vuoi documentare una variabile? Ecco quelle ancora non pronte \u21b5 Al momento sono circa 130 elenco variabili \u21b5 Variable Description algorithm_id The unique ID of an algorithm animation_end_time End of the animation\u2019s overall temporal time range (as a datetime value) animation_interval Duration of the animation\u2019s overall temporal time range (as an interval value) animation_start_time Start of the animation\u2019s overall temporal time range (as a datetime value) atlas_feature The current atlas feature (as feature object) atlas_featureid The current atlas feature ID atlas_featurenumber The current atlas feature number in the layout atlas_filename The current atlas file name atlas_geometry The current atlas feature geometry atlas_layerid The current atlas coverage layer ID atlas_layername The current atlas coverage layer name atlas_pagename The current atlas page name atlas_totalfeatures The total number of features in atlas canvas_cursor_point The last cursor position on the canvas in the project\u2019s geographical coordinates cluster_color The color of symbols within a cluster, or NULL if symbols have mixed colors cluster_size The number of symbols contained within a cluster current_feature The feature currently being edited in the attribute form or table row current_geometry The geometry of the feature currently being edited in the form or the table row current_parent_feature represents the feature currently being edited in the parent form. Only usable in an embedded form context. current_parent_geometry represents the geometry of the feature currently being edited in the parent form. Only usable in an embedded form context. form_mode What the form is used for, like AddFeatureMode, SingleEditMode, MultiEditMode, SearchMode, AggregateSearchMode or IdentifyMode as string. frame_duration Temporal duration of each animation frame (as an interval value) frame_number Current frame number during animation playback frame_rate Number of frames per second during animation playback fullextent_maxx Maximum x value from full canvas extent (including all layers) fullextent_maxy Maximum y value from full canvas extent (including all layers) fullextent_minx Minimum x value from full canvas extent (including all layers) fullextent_miny Minimum y value from full canvas extent (including all layers) geometry_part_count The number of parts in rendered feature\u2019s geometry geometry_part_num The current geometry part number for feature being rendered geometry_point_count The number of points in the rendered geometry\u2019s part geometry_point_num The current point number in the rendered geometry\u2019s part geometry_ring_num Current geometry ring number for feature being rendered (for polygon features only). The exterior ring has a value of 0. grid_axis The current grid annotation axis (eg, \u2018x\u2019 for longitude, \u2018y\u2019 for latitude) grid_number The current grid annotation value item_id The layout item user ID (not necessarily unique) item_uuid The layout item unique ID layer The current layer layer_crs The Coordinate Reference System Authority ID of the current layer layer_id The ID of current layer layer_ids The IDs of all the map layers in the current project as a list layer_name The name of current layer layers All the map layers in the current project as a list layout_dpi The composition resolution (DPI) layout_name The layout name layout_numpages The number of pages in the layout layout_page The page number of the current item in the layout layout_pageheight The active page height in the layout (in mm for standard paper sizes, or whatever unit was used for custom paper size) layout_pageoffsets Array of Y coordinate of the top of each page. Allows to dynamically position items on pages in a context where page sizes may change layout_pagewidth The active page width in the layout (in mm for standard paper sizes, or whatever unit was used for custom paper size) legend_column_count The number of columns in the legend legend_filter_by_map Indicates if the content of the legend is filtered by the map legend_filter_out_atlas Indicates if the atlas is filtered out of the legend legend_split_layers Indicates if layers can be split in the legend legend_title The title of the legend legend_wrap_string The character(s) used to wrap the legend text map_crs The Coordinate reference system of the current map map_crs_acronym The acronym of the Coordinate reference system of the current map map_crs_definition The full definition of the Coordinate reference system of the current map map_crs_description The name of the Coordinate reference system of the current map map_crs_ellipsoid The acronym of the ellipsoid of the Coordinate reference system of the current map map_crs_proj4 The Proj4 definition of the Coordinate reference system of the current map map_crs_projection The descriptive name of the projection method used by the Coordinate reference system of the map (e.g. \u2018Albers Equal Area\u2019) map_crs_wkt The WKT definition of the Coordinate reference system of the current map map_end_time The end of the map\u2019s temporal time range (as a datetime value) map_extent The geometry representing the current extent of the map map_extent_center The point feature at the center of the map map_extent_height The current height of the map map_extent_width The current width of the map map_id The ID of current map destination. This will be \u2018canvas\u2019 for canvas renders, and the item ID for layout map renders map_interval The duration of the map\u2019s temporal time range (as an interval value) map_layer_ids The list of map layer IDs visible in the map map_layers The list of map layers visible in the map map_rotation The current rotation of the map map_scale The current scale of the map map_start_time The start of the map\u2019s temporal time range (as a datetime value) map_units The units of map measurements model_path Full path (including file name) of current model (or project path if model is embedded in a project). model_folder Folder containing current model (or project folder if model is embedded in a project). model_name Name of current model model_group Group for current model notification_message Content of the notification message sent by the provider (available only for actions triggered by provider notifications). parent Refers to the current feature in the parent layer, providing access to its attributes and geometry when filtering an aggregate function project_abstract The project abstract, taken from project metadata project_area_units The area unit for the current project, used when calculating areas of geometries project_author The project author, taken from project metadata project_basename The basename of current project\u2019s filename (without path and extension) project_creation_date The project creation date, taken from project metadata project_crs The Coordinate reference system of the project project_crs_arconym The acronym of the Coordinate reference system of the project project_crs_definition The full definition of the Coordinate reference system of the project project_crs_description The description of the Coordinate reference system of the project project_crs_ellipsoid The ellipsoid of the Coordinate reference system of the project project_crs_proj4 The Proj4 representation of the Coordinate reference system of the project project_crs_wkt The WKT (well known text) representation of the coordinate reference system of the project project_distance_units The distance unit for the current project, used when calculating lengths of geometries and distances project_ellipsoid The name of the ellipsoid of the current project, used when calculating geodetic areas or lengths of geometries project_filename The filename of the current project project_folder The folder of the current project project_home The home path of the current project project_identifier The project identifier, taken from the project\u2019s metadata project_keywords The project keywords, taken from the project\u2019s metadata project_last_saved Date/time when project was last saved. project_path The full path (including file name) of the current project project_title The title of current project project_units The units of the project\u2019s CRS qgis_locale The current language of QGIS qgis_os_name The current Operating system name, eg \u2018windows\u2019, \u2018linux\u2019 or \u2018osx\u2019 qgis_platform The QGIS platform, eg \u2018desktop\u2019 or \u2018server\u2019 qgis_release_name The current QGIS release name qgis_short_version The current QGIS version short string qgis_version The current QGIS version string qgis_version_no The current QGIS version number row_number Stores the number of the current row snapping_results Gives access to snapping results while digitizing a feature (only available in add feature) scale_value The current scale bar distance value symbol_angle The angle of the symbol used to render the feature (valid for marker symbols only) symbol_color The color of the symbol used to render the feature symbol_count The number of features represented by the symbol (in the layout legend) symbol_id The Internal ID of the symbol (in the layout legend) symbol_label The label for the symbol (either a user defined label or the default autogenerated label - in the layout legend) symbol_layer_count Total number of symbol layers in the symbol symbol_layer_index Current symbol layer index symbol_marker_column Column number for marker (valid for point pattern fills only). symbol_marker_row Row number for marker (valid for point pattern fills only). user_account_name The current user\u2019s operating system account name user_full_name The current user\u2019s operating system user name value The current value with_variable Allows setting a variable for usage within an expression and avoid recalculating the same value repeatedly zoom_level Zoom level of the tile that is being rendered (derived from the current map scale). Normally in interval [0, 20]. come sostenere \u21b5","title":"Da documentare"},{"location":"gr_funzioni/da_documentare/#vuoi-documentare-una-variabile-ecco-quelle-ancora-non-pronte","text":"Al momento sono circa 130","title":"Vuoi documentare una variabile? Ecco quelle ancora non pronte"},{"location":"gr_funzioni/da_documentare/#elenco-variabili","text":"Variable Description algorithm_id The unique ID of an algorithm animation_end_time End of the animation\u2019s overall temporal time range (as a datetime value) animation_interval Duration of the animation\u2019s overall temporal time range (as an interval value) animation_start_time Start of the animation\u2019s overall temporal time range (as a datetime value) atlas_feature The current atlas feature (as feature object) atlas_featureid The current atlas feature ID atlas_featurenumber The current atlas feature number in the layout atlas_filename The current atlas file name atlas_geometry The current atlas feature geometry atlas_layerid The current atlas coverage layer ID atlas_layername The current atlas coverage layer name atlas_pagename The current atlas page name atlas_totalfeatures The total number of features in atlas canvas_cursor_point The last cursor position on the canvas in the project\u2019s geographical coordinates cluster_color The color of symbols within a cluster, or NULL if symbols have mixed colors cluster_size The number of symbols contained within a cluster current_feature The feature currently being edited in the attribute form or table row current_geometry The geometry of the feature currently being edited in the form or the table row current_parent_feature represents the feature currently being edited in the parent form. Only usable in an embedded form context. current_parent_geometry represents the geometry of the feature currently being edited in the parent form. Only usable in an embedded form context. form_mode What the form is used for, like AddFeatureMode, SingleEditMode, MultiEditMode, SearchMode, AggregateSearchMode or IdentifyMode as string. frame_duration Temporal duration of each animation frame (as an interval value) frame_number Current frame number during animation playback frame_rate Number of frames per second during animation playback fullextent_maxx Maximum x value from full canvas extent (including all layers) fullextent_maxy Maximum y value from full canvas extent (including all layers) fullextent_minx Minimum x value from full canvas extent (including all layers) fullextent_miny Minimum y value from full canvas extent (including all layers) geometry_part_count The number of parts in rendered feature\u2019s geometry geometry_part_num The current geometry part number for feature being rendered geometry_point_count The number of points in the rendered geometry\u2019s part geometry_point_num The current point number in the rendered geometry\u2019s part geometry_ring_num Current geometry ring number for feature being rendered (for polygon features only). The exterior ring has a value of 0. grid_axis The current grid annotation axis (eg, \u2018x\u2019 for longitude, \u2018y\u2019 for latitude) grid_number The current grid annotation value item_id The layout item user ID (not necessarily unique) item_uuid The layout item unique ID layer The current layer layer_crs The Coordinate Reference System Authority ID of the current layer layer_id The ID of current layer layer_ids The IDs of all the map layers in the current project as a list layer_name The name of current layer layers All the map layers in the current project as a list layout_dpi The composition resolution (DPI) layout_name The layout name layout_numpages The number of pages in the layout layout_page The page number of the current item in the layout layout_pageheight The active page height in the layout (in mm for standard paper sizes, or whatever unit was used for custom paper size) layout_pageoffsets Array of Y coordinate of the top of each page. Allows to dynamically position items on pages in a context where page sizes may change layout_pagewidth The active page width in the layout (in mm for standard paper sizes, or whatever unit was used for custom paper size) legend_column_count The number of columns in the legend legend_filter_by_map Indicates if the content of the legend is filtered by the map legend_filter_out_atlas Indicates if the atlas is filtered out of the legend legend_split_layers Indicates if layers can be split in the legend legend_title The title of the legend legend_wrap_string The character(s) used to wrap the legend text map_crs The Coordinate reference system of the current map map_crs_acronym The acronym of the Coordinate reference system of the current map map_crs_definition The full definition of the Coordinate reference system of the current map map_crs_description The name of the Coordinate reference system of the current map map_crs_ellipsoid The acronym of the ellipsoid of the Coordinate reference system of the current map map_crs_proj4 The Proj4 definition of the Coordinate reference system of the current map map_crs_projection The descriptive name of the projection method used by the Coordinate reference system of the map (e.g. \u2018Albers Equal Area\u2019) map_crs_wkt The WKT definition of the Coordinate reference system of the current map map_end_time The end of the map\u2019s temporal time range (as a datetime value) map_extent The geometry representing the current extent of the map map_extent_center The point feature at the center of the map map_extent_height The current height of the map map_extent_width The current width of the map map_id The ID of current map destination. This will be \u2018canvas\u2019 for canvas renders, and the item ID for layout map renders map_interval The duration of the map\u2019s temporal time range (as an interval value) map_layer_ids The list of map layer IDs visible in the map map_layers The list of map layers visible in the map map_rotation The current rotation of the map map_scale The current scale of the map map_start_time The start of the map\u2019s temporal time range (as a datetime value) map_units The units of map measurements model_path Full path (including file name) of current model (or project path if model is embedded in a project). model_folder Folder containing current model (or project folder if model is embedded in a project). model_name Name of current model model_group Group for current model notification_message Content of the notification message sent by the provider (available only for actions triggered by provider notifications). parent Refers to the current feature in the parent layer, providing access to its attributes and geometry when filtering an aggregate function project_abstract The project abstract, taken from project metadata project_area_units The area unit for the current project, used when calculating areas of geometries project_author The project author, taken from project metadata project_basename The basename of current project\u2019s filename (without path and extension) project_creation_date The project creation date, taken from project metadata project_crs The Coordinate reference system of the project project_crs_arconym The acronym of the Coordinate reference system of the project project_crs_definition The full definition of the Coordinate reference system of the project project_crs_description The description of the Coordinate reference system of the project project_crs_ellipsoid The ellipsoid of the Coordinate reference system of the project project_crs_proj4 The Proj4 representation of the Coordinate reference system of the project project_crs_wkt The WKT (well known text) representation of the coordinate reference system of the project project_distance_units The distance unit for the current project, used when calculating lengths of geometries and distances project_ellipsoid The name of the ellipsoid of the current project, used when calculating geodetic areas or lengths of geometries project_filename The filename of the current project project_folder The folder of the current project project_home The home path of the current project project_identifier The project identifier, taken from the project\u2019s metadata project_keywords The project keywords, taken from the project\u2019s metadata project_last_saved Date/time when project was last saved. project_path The full path (including file name) of the current project project_title The title of current project project_units The units of the project\u2019s CRS qgis_locale The current language of QGIS qgis_os_name The current Operating system name, eg \u2018windows\u2019, \u2018linux\u2019 or \u2018osx\u2019 qgis_platform The QGIS platform, eg \u2018desktop\u2019 or \u2018server\u2019 qgis_release_name The current QGIS release name qgis_short_version The current QGIS version short string qgis_version The current QGIS version string qgis_version_no The current QGIS version number row_number Stores the number of the current row snapping_results Gives access to snapping results while digitizing a feature (only available in add feature) scale_value The current scale bar distance value symbol_angle The angle of the symbol used to render the feature (valid for marker symbols only) symbol_color The color of the symbol used to render the feature symbol_count The number of features represented by the symbol (in the layout legend) symbol_id The Internal ID of the symbol (in the layout legend) symbol_label The label for the symbol (either a user defined label or the default autogenerated label - in the layout legend) symbol_layer_count Total number of symbol layers in the symbol symbol_layer_index Current symbol layer index symbol_marker_column Column number for marker (valid for point pattern fills only). symbol_marker_row Row number for marker (valid for point pattern fills only). user_account_name The current user\u2019s operating system account name user_full_name The current user\u2019s operating system user name value The current value with_variable Allows setting a variable for usage within an expression and avoid recalculating the same value repeatedly zoom_level Zoom level of the tile that is being rendered (derived from the current map scale). Normally in interval [0, 20].","title":"elenco variabili"},{"location":"gr_funzioni/da_documentare/#come-sostenere","text":"","title":"come sostenere"},{"location":"gr_funzioni/elenco/","text":"Elenco funzioni QGIS \u21b5 Questa guida nasce per rispondere alle numerose richieste di aiuto sull\u2019uso del calcolatore di campi e per colmare un vuoto sulla guida online di QGIS con esempi e molti screenshot. Gruppo funzioni nro funzioni* info Aggrega (23/23) >= QGIS 2.16 Array (33/33) >= QGIS 3.0 (SpatiaLite, PostGIS) - ArrayPlus Plugin Campi e valori (1/1) Colore (17/17) Condizioni (6/6) aggiornate a QGIS 3.6 Conversioni (13/13) aggiornate a QGIS 3.16 Corrispondenza fuzzy (4/4) Custom (5/5) funzioni personalizzate Data e ora (21/21) QGIS 3.14 Espressione utente (6/6) aggiornate a QGIS 3.12 File e percorsi (8/8) Generale (6/6) Lat e Long (8/0) Geometria (108/123) aggiornate a QGIS 3.16 Layer della mappa (2/2) aggiornate a QGIS 3.6 Maps (14/14) >= QGIS 3.0 (PostGIS) aggiornate a QGIS 3.6 Matematica (28/28) QGIS 3.12 Operatori (21/21) Rasters (2/2) >= QGIS 3.4 Recente (1/1) Record e attributi (11/11) aggiornate a QGIS 3.10 Reference (0/21) Plugin refFunction Relazioni (?) Visibile solo se ci sono relazioni di progetto Stringhe di testo (23/23) aggiornate a QGIS 3.14 TimeManager (0/5) Plugin Time Manager Variabili (4/65) >= QGIS 2.12","title":"Elenco funzioni QGIS"},{"location":"gr_funzioni/elenco/#elenco-funzioni-qgis","text":"Questa guida nasce per rispondere alle numerose richieste di aiuto sull\u2019uso del calcolatore di campi e per colmare un vuoto sulla guida online di QGIS con esempi e molti screenshot. Gruppo funzioni nro funzioni* info Aggrega (23/23) >= QGIS 2.16 Array (33/33) >= QGIS 3.0 (SpatiaLite, PostGIS) - ArrayPlus Plugin Campi e valori (1/1) Colore (17/17) Condizioni (6/6) aggiornate a QGIS 3.6 Conversioni (13/13) aggiornate a QGIS 3.16 Corrispondenza fuzzy (4/4) Custom (5/5) funzioni personalizzate Data e ora (21/21) QGIS 3.14 Espressione utente (6/6) aggiornate a QGIS 3.12 File e percorsi (8/8) Generale (6/6) Lat e Long (8/0) Geometria (108/123) aggiornate a QGIS 3.16 Layer della mappa (2/2) aggiornate a QGIS 3.6 Maps (14/14) >= QGIS 3.0 (PostGIS) aggiornate a QGIS 3.6 Matematica (28/28) QGIS 3.12 Operatori (21/21) Rasters (2/2) >= QGIS 3.4 Recente (1/1) Record e attributi (11/11) aggiornate a QGIS 3.10 Reference (0/21) Plugin refFunction Relazioni (?) Visibile solo se ci sono relazioni di progetto Stringhe di testo (23/23) aggiornate a QGIS 3.14 TimeManager (0/5) Plugin Time Manager Variabili (4/65) >= QGIS 2.12","title":"Elenco funzioni QGIS"},{"location":"gr_funzioni/elenco_funzioni/","text":"Elenco funzioni QGIS \u21b5 Questa guida nasce per rispondere alle numerose richieste di aiuto sull'uso del calcolatore di campi e per colmare un vuoto sulla guida online di QGIS con esempi e molti screenshot. Gruppo funzioni nro funzioni* info Aggrega (23/23/) >= QGIS 2.16 Array (33/33) >= QGIS 3.0 (SpatiaLite, PostGIS) - ArrayPlus Plugin Campi e valori (1/1/) Colore (17/17/) Condizioni (6/6/) aggiornate a QGIS 3.6 Conversioni (13/13/) aggiornate a QGIS 3.16 Corrispondenza fuzzy (4/4/) Custom (5/5/) funzioni personalizzate Data e ora (21/21/) QGIS 3.14 Espressione utente (6/6/) aggiornate a QGIS 3.12 File e percorsi (8/8/) Generale (6/6/) Lat e Long (8/0/) Geometria (108/123/) aggiornate a QGIS 3.16 Layer della mappa (2/2/) aggiornate a QGIS 3.6 Maps (14/14) >= QGIS 3.0 (PostGIS) aggiornate a QGIS 3.6 Matematica (28/28/) QGIS 3.12 Operatori (21/21/) Rasters (2/2/) >= QGIS 3.4 Recente (1/1/) Record e attributi (11/11/) aggiornate a QGIS 3.10 Reference (0/21/) Plugin refFunction Relazioni (?/) Visibile solo se ci sono relazioni di progetto Stringhe di testo (23/23/) aggiornate a QGIS 3.14 TimeManager (0/5/) Plugin Time Manager Variabili (4/65) >= QGIS 2.12","title":"Elenco funzioni QGIS"},{"location":"gr_funzioni/elenco_funzioni/#elenco-funzioni-qgis","text":"Questa guida nasce per rispondere alle numerose richieste di aiuto sull'uso del calcolatore di campi e per colmare un vuoto sulla guida online di QGIS con esempi e molti screenshot. Gruppo funzioni nro funzioni* info Aggrega (23/23/) >= QGIS 2.16 Array (33/33) >= QGIS 3.0 (SpatiaLite, PostGIS) - ArrayPlus Plugin Campi e valori (1/1/) Colore (17/17/) Condizioni (6/6/) aggiornate a QGIS 3.6 Conversioni (13/13/) aggiornate a QGIS 3.16 Corrispondenza fuzzy (4/4/) Custom (5/5/) funzioni personalizzate Data e ora (21/21/) QGIS 3.14 Espressione utente (6/6/) aggiornate a QGIS 3.12 File e percorsi (8/8/) Generale (6/6/) Lat e Long (8/0/) Geometria (108/123/) aggiornate a QGIS 3.16 Layer della mappa (2/2/) aggiornate a QGIS 3.6 Maps (14/14) >= QGIS 3.0 (PostGIS) aggiornate a QGIS 3.6 Matematica (28/28/) QGIS 3.12 Operatori (21/21/) Rasters (2/2/) >= QGIS 3.4 Recente (1/1/) Record e attributi (11/11/) aggiornate a QGIS 3.10 Reference (0/21/) Plugin refFunction Relazioni (?/) Visibile solo se ci sono relazioni di progetto Stringhe di testo (23/23/) aggiornate a QGIS 3.14 TimeManager (0/5/) Plugin Time Manager Variabili (4/65) >= QGIS 2.12","title":"Elenco funzioni QGIS"},{"location":"gr_funzioni/gruppo_funzioni/","text":"Gruppi funzioni \u21b5 Nell'Interfaccia del Field Calc (e nel costruttore di espressione) \u00e8 presente, nella parte centrale, una sezione che raccoglie i Gruppi delle Funzioni elencate sotto: Gruppo funzioni nro funzioni* info Aggrega (23/23) >= QGIS 2.16 Array (35/35) aggiornate a QGIS 3.20 Campi e valori (1/1) Elenco dei campi del layer selezionato Colore (17/17) Per manipolare i colori Condizioni (6/6) aggiornate a QGIS 3.6 Conversioni (15/15) aggiornate a QGIS 3.16 Corrispondenza Fuzzy (4/4) funzioni per confronti fuzzy fra valori Custom (5/5) funzioni personalizzate Data e ora (21/21) aggiornate a QGIS 3.14 Espressione utente (?) aggiornate a QGIS 3.12 File e percorsi (8/8) manipolano nomi di file e di percorsi Generale (7/7) assortimento di funzioni generiche Geometria (123/123) aggiornate a QGIS 3.20 Layer mappa (2/2) aggiornate a QGIS 3.6 Layout (2/2) Visibile solo nel layout di stampa Maps (2/2) >= QGIS 3.0 aggiornate a QGIS 3.6 Matematica (28/28) aggiornate a QGIS 3.12 Operatori (23/23) aggiornate a QGIS 3.20 Raster (2/2) >= QGIS 3.4 Recente (1/1) Elenca le ultime 20 espressioni utilizzate Record e attributi (13/13) aggiornate a QGIS 3.18 Relazioni (?) Visibile solo se ci sono relazioni di progetto Stringhe di testo (23/23) aggiornate a QGIS 3.14 Variabili (4/65+) >= QGIS 2.12 - variano in funzione del contesto * i numeri tra parentesi rappresentano: (numero funzioni documentate / numero funzioni nel gruppo)","title":"Elenco gruppi"},{"location":"gr_funzioni/gruppo_funzioni/#gruppi-funzioni","text":"Nell'Interfaccia del Field Calc (e nel costruttore di espressione) \u00e8 presente, nella parte centrale, una sezione che raccoglie i Gruppi delle Funzioni elencate sotto: Gruppo funzioni nro funzioni* info Aggrega (23/23) >= QGIS 2.16 Array (35/35) aggiornate a QGIS 3.20 Campi e valori (1/1) Elenco dei campi del layer selezionato Colore (17/17) Per manipolare i colori Condizioni (6/6) aggiornate a QGIS 3.6 Conversioni (15/15) aggiornate a QGIS 3.16 Corrispondenza Fuzzy (4/4) funzioni per confronti fuzzy fra valori Custom (5/5) funzioni personalizzate Data e ora (21/21) aggiornate a QGIS 3.14 Espressione utente (?) aggiornate a QGIS 3.12 File e percorsi (8/8) manipolano nomi di file e di percorsi Generale (7/7) assortimento di funzioni generiche Geometria (123/123) aggiornate a QGIS 3.20 Layer mappa (2/2) aggiornate a QGIS 3.6 Layout (2/2) Visibile solo nel layout di stampa Maps (2/2) >= QGIS 3.0 aggiornate a QGIS 3.6 Matematica (28/28) aggiornate a QGIS 3.12 Operatori (23/23) aggiornate a QGIS 3.20 Raster (2/2) >= QGIS 3.4 Recente (1/1) Elenca le ultime 20 espressioni utilizzate Record e attributi (13/13) aggiornate a QGIS 3.18 Relazioni (?) Visibile solo se ci sono relazioni di progetto Stringhe di testo (23/23) aggiornate a QGIS 3.14 Variabili (4/65+) >= QGIS 2.12 - variano in funzione del contesto * i numeri tra parentesi rappresentano: (numero funzioni documentate / numero funzioni nel gruppo)","title":"Gruppi funzioni"},{"location":"gr_funzioni/aggrega/aggrega_unico/","text":"Gruppo Aggrega \u21b5 Abstract Contiene funzioni che aggregano valori nei livelli e campi. aggregate \u21b5 Restituisce un valore aggregato calcolato usando elementi da un altro vettore. Sintassi: aggregate( layer , aggregate , expression [, filter ][, concatenator='' ][, order_by ) [ ] indica componenti opzionali Argomenti: layer una stringa, rappresentante o un nome di un layer o un ID di layer aggregate una stringa corrispondente all'aggregato da calcolare. Opzioni valide sono: count count_distinct count_missing min max sum mean median stdev stdevsample range minority majority q1: primo quartile q3: terzo quartile iqr: inter quartile range min_length: minima lunghezza stringa max_length: massima lunghezza stringa concatenate: unisce stringhe con un concatenatore collect: crea una geometria multiparte aggregata expression sotto-espressione o nome campo da aggregare filter espressione filtro opzionale per limitare gli elementi usati per calcolare l'aggregato. I campi e la geometria provengono dagli elementi del vettore unito. Si pu\u00f2 accedere all'elemento sorgente con la variabile @parent . concatenator stringa opzionale da usare per unire i valori per il raggruppamento 'concatenate' order_by espressione filtro opzionale per ordinare gli elementi usati per calcolare il valore aggregato. I campi e la geometria provengono dagli elementi del vettore unito. Da predefinito, gli elementi verranno restituiti in un ordine non specificato. Esempi: aggregate(layer:='rail_stations',aggregate:='sum',expression:=\"passengers\") \u2192 somma tutti i valori per il campo passengers nel layer rail_stations aggregate('rail_stations','sum', \"passengers\"/7) \u2192 calcola la media giornaliera di \"passengers\" dividendo il campo \"passengers\" per 7 prima di sommare i valori aggregate(layer:='rail_stations',aggregate:='sum',expression:=\"passengers\",filter:=\"class\">3) \u2192 somma tutti i valori per il campo \"passengers\" soltanto dagli elementi geometrie dove l'attributo \"class\" \u00e8 maggiore di 3 aggregate(layer:='rail_stations',aggregate:='concatenate', expression:=\"name\", concatenator:=',') \u2192 elenco separato da virgole del campo name per tutti gli elementi nel vettore rail_stations aggregate(layer:='countries', aggregate:='max', expression:=\"code\", filter:=intersects( $geometry, geometry(@parent) ) ) \u2192 Il codice Paese di un Paese di intersezione nel vettore 'countries' aggregate(layer:='stazioni_rotaie',aggregate:='sum',expression:=\"viaggiatori\",filter:=contains( @atlas_geometry, $geometry ) ) \u2192 somma tutti i valori del campo viaggiatori in rail_stations all'interno dell'elemento atlante corrente aggregate(layer:='rail_stations', aggregate:='collect', expression:=centroid($geometry), filter:=\"region_name\" = attribute(@parent,'name') ) \u2192 aggrega le geometrie dei centroidi delle stazioni ferroviarie della stessa regione dell'elemento corrente Osservazioni i nomi dei layer vanno scritti tra apici semplici ( 'nome_layer' ) mentre i nomi dei campi con doppi apici ( \"nome_campo\" ) Altri esempi: Come realizzare una spatial-join con aggregazione usando solo il calcolatore di campi qui array_agg \u21b5 Restituisce un array di valori aggregati da un campo o espressione. Sintassi: array_agg( expression [, group_by ][, filter ][, order_by ]) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato order_by espressione opzionale da usare per ordinare gli elementi usati per calcolare il valore aggregato. Da predefinito, gli elementi verranno restituiti in un ordine non specificato. Esempi: array_agg( \"DEN_PCM\" ,group_by:= \"COD_REG\" ) \u2192 lista di valori del \"DEN_PCM\", ragguppata per il campo \"COD_REG\" Nota bene Per prendere un valore specifico dell'array: - array_agg(\"z\")[0] \u2192 148,03 \u00e8 il primo valore dell'array, indice 0; - array_agg(\"z\")[1] \u2192 164,21 \u00e8 il secondo valore dell'array, indice 1; - ecc... dove \"z\" \u00e8 un attributo Osservazioni: la funzione array_agg permette di trasformare un attributo (colonna di una tabella) in un array!!! la funzione attributes permette di trasformare una feature (riga di una tabella) in una maps e quindi in un array!!! collect \u21b5 Restituisce la geometria a parti multiple di geometrie aggregate da una espressione Sintassi: collect( expression [, group_by ][, filter ]) Argomenti: expression espressione geometria da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: collect( $geometry ) \u2192 geometria a parti multiple delle geometrie aggregate collect( centroid($geometry), group_by:=\"region\", filter:= \"use\" = 'civilian' ) \u2192 centroidi aggregati degli elementi civili basati sul relativo valore regionale -- concatenate \u21b5 Restituisce tutte le stringhe aggregate da un campo o un'espressione unite da un separatore. Sintassi: concatenate( expression [, group_by ][, filter ][, concatenator ][, order_by ]) Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato concatenator stringa opzionale da usarsi per unire i valori order_by espressione opzionale da usare per ordinare gli elementi usati per calcolare il valore aggregato. Da predefinito, gli elementi verranno restituiti in un ordine non specificato. [ ] indica componenti opzionali Esempi: concatenate(\"town_name\",group_by:=\"state\",concatenator:=',') \u2192 lista separata da virgola di town_names, raggruppata per campo state concatenate_unique \u21b5 Restituisce tutte le stringhe univoche di un campo o di un'espressione unite da un delimitatore. Sintassi: concatenate( expression [, group_by ][, filter ][, concatenator ][, order_by ] ) Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato concatenator stringa opzionale da usarsi per unire i valori order_by espressione opzionale da usare per ordinare gli elementi usati per calcolare il valore aggregato. Da predefinito, gli elementi verranno restituiti in un ordine non specificato. [ ] indica componenti opzionali Esempi: concatenate_unique(\"town_name\",group_by:=\"state\",concatenator:=',') \u2192 lista separata da virgola di town_names univoci, raggruppata per campo state count \u21b5 Restituisce il conteggio degli elementi corrispondenti. Sintassi: count( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: count(\"stations\",group_by:=\"state\") \u2192 conta le stazioni, raggruppate per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); count( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): count( filter:= , expression:= , group_by:= ) count_distinct \u21b5 Restituisce il conteggio dei valori differenti. Sintassi: count_distinct( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: count_distinct(\"stations\",group_by:=\"state\") \u2192 conta i valori differenti delle stazioni, raggruppate per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); count_distinct( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): count_distinct( filter:= , expression:= , group_by:= ) -- count_missing \u21b5 Restituisce il numero di valori nulli (NULL). Sintassi: count_missing( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: count_missing(\"stations\",group_by:=\"state\") \u2192 conta i valori mancanti (NULL) delle stazioni, raggruppati per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); count_missing( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): count_missing( filter:= , expression:= , group_by:= ) iqr \u21b5 Restituisce lo scarto interquartile calcolato da un campo o espressione. Sintassi: iqr( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: iqr(\"population\",group_by:=\"state\") \u2192 scarto interquartile del valore popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); iqr( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): iqr( filter:= , expression:= , group_by:= ) majority \u21b5 Restituisce la maggioranza aggregata di valori (valore pi\u00f9 comunemente presente) da un campo o espressione. Sintassi: majority( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: majority(\"class\",group_by:=\"state\") \u2192 valore di classe pi\u00f9 comunemente presente, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); majority( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): majority( filter:= , expression:= , group_by:= ) max_length \u21b5 Restituisce la lunghezza massima delle stringhe di un campo o espressione. Sintassi: max_length( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: max_length(\"town_name\",group_by:=\"state\") \u2192 lunghezza massima di town_name, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); max_length( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): max_length( filter:= , expression:= , group_by:= ) maximum \u21b5 Restituisce il valore massimo aggregato da un campo o espressione. Sintassi: maximum( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: maximum(\"population\",group_by:=\"state\") \u2192 valore massimo di population, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); maximum( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): maximum( filter:= , expression:= , group_by:= ) mean \u21b5 Restituisce il valore medio aggregato da un campo o espressione. Sintassi: mean( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: mean(\"population\",group_by:=\"state\") \u2192 valore medio di population, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); mean( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): mean( filter:= , expression:= , group_by:= ) median \u21b5 Restituisce il valore mediano aggregato da un campo o espressione. Sintassi: median( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: median(\"population\",group_by:=\"state\") \u2192 mediana della popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); median( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): median( filter:= , expression:= , group_by:= ) min_length \u21b5 Restituisce la lunghezza minima delle stringhe di un campo o espressione. Sintassi: min_length( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: min_length(\"town_name\",group_by:=\"state\") \u2192 lunghezza minima di town_name, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); min_length( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): min_length( filter:= , expression:= , group_by:= ) minimum \u21b5 Restituisce il valore minimo aggregato da un campo o espressione. Sintassi: minimum( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: minimum(\"population\",group_by:=\"state\") \u2192 valore minimo di population, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); minimum( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): minimum( filter:= , expression:= , group_by:= ) Esempio: Selezionare le Province con minor area per ogni Regione $area = minimum(expression:=$area,group_by:=\"COD_REG\") minority \u21b5 Restituisce la minoranza aggregata di valori (valore meno comunemente presente) da un campo o espressione. Sintassi: minority( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: minority(\"class\",group_by:=\"state\") \u2192 valore di classe meno presente, ragguppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); minority( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): minority( filter:= , expression:= , group_by:= ) q1 \u21b5 Restituisce il primo quartile calcolato da un campo o espressione. Sintassi: q1( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: q1(\"population\",group_by:=\"state\") \u2192 primo quartile del valore popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); q1( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): q1( filter:= , expression:= , group_by:= ) q3 \u21b5 Restituisce il terzo quartile calcolato da un campo o espressione. Sintassi: q3( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: q3(\"population\",group_by:=\"state\") \u2192 terzo quartile del valore popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); q3( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): q3( filter:= , expression:= , group_by:= ) range \u21b5 Restituisce l'intervallo aggregato di valori (massimo - minimo) da un campo o espressione. Sintassi: range( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: range(\"population\",group_by:=\"state\") \u2192 intervallo di valori di popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); range( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): range( filter:= , expression:= , group_by:= ) relation_aggregate \u21b5 Restituisce un valore aggregato calcolato usando tutti gli elementi figli corrispondenti da una relazione di layer. Sintassi: relation_aggregate( relation , aggregate , expression [, concatenator ][, order_by ] ) Argomenti: relation una stringa, rappresentante un ID di relazione aggregate una stringa corrispondente all'aggregato da calcolare. Opzioni valide sono: count count_distinct count_missing min max sum mean median stdev stdevsample range minority majority q1: primo quartile q3: terzo quartile iqr: scarto interquartile min_length: minima lunghezza stringa max_length: massima lunghezza stringa concatenate: unisci stringhe con un concatenatore expression sotto espressione o nome campo da aggregare concatenator stringa opzionale da usare per unire i valori per il raggruppamento 'concatenate' order_by espressione filtro opzionale atta ad ordinare gli elementi usati per calcolare il valore aggregato. Campi e geometria provengono dagli elementi del vettore unito. In modo predefinito, gli elementi verranno restituiti senza un ordine specifico. Esempi: relation_aggregate(relation:='my_relation',aggregate:='mean',expression:=\"passengers\") \u2192 valore medio di tutti gli elementi figli corrispondenti usando la relazione 'my_relation' relation_aggregate('my_relation','sum', \"passengers\"/7) \u2192 somma del campo passengers diviso per 7 per tutti gli elementi figli corrispondenti usando la relazione 'my_relation' relation_aggregate('my_relation','concatenate', \"towns\", concatenator:=',') \u2192 elenco separato da virgole del campo towns per tutte le geometrie figlie corrispondenti che usano la relation 'my_relation' relation_aggregate('my_relation','array_agg', \"id\") \u2192 array del campo id derivato da tutti gli elementi figlio corrispondenti usando la relazione 'my_relation' Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); relation_aggregate( relation , aggregate , expression [, concatenator ][, order_by ] ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): relation_aggregate( filter:= , expression:= , group_by:= ) -- stdev \u21b5 Restituisce il valore di deviazione standard aggregato da un campo o espressione. Sintassi: stdev( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: stdev(\"population\",group_by:=\"state\") \u2192 deviazione standard di un valore popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); stdev( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): stdev( filter:= , expression:= , group_by:= ) sum \u21b5 Restituisce il valore sommato aggregato da un campo o espressione. Sintassi: sum( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: sum(\"population\",group_by:=\"state\") \u2192 valore somma di population, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); stdev( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): stdev( filter:= , expression:= , group_by:= )","title":"Aggrega"},{"location":"gr_funzioni/aggrega/aggrega_unico/#gruppo-aggrega","text":"Abstract Contiene funzioni che aggregano valori nei livelli e campi.","title":"Gruppo Aggrega"},{"location":"gr_funzioni/aggrega/aggrega_unico/#aggregate","text":"Restituisce un valore aggregato calcolato usando elementi da un altro vettore. Sintassi: aggregate( layer , aggregate , expression [, filter ][, concatenator='' ][, order_by ) [ ] indica componenti opzionali Argomenti: layer una stringa, rappresentante o un nome di un layer o un ID di layer aggregate una stringa corrispondente all'aggregato da calcolare. Opzioni valide sono: count count_distinct count_missing min max sum mean median stdev stdevsample range minority majority q1: primo quartile q3: terzo quartile iqr: inter quartile range min_length: minima lunghezza stringa max_length: massima lunghezza stringa concatenate: unisce stringhe con un concatenatore collect: crea una geometria multiparte aggregata expression sotto-espressione o nome campo da aggregare filter espressione filtro opzionale per limitare gli elementi usati per calcolare l'aggregato. I campi e la geometria provengono dagli elementi del vettore unito. Si pu\u00f2 accedere all'elemento sorgente con la variabile @parent . concatenator stringa opzionale da usare per unire i valori per il raggruppamento 'concatenate' order_by espressione filtro opzionale per ordinare gli elementi usati per calcolare il valore aggregato. I campi e la geometria provengono dagli elementi del vettore unito. Da predefinito, gli elementi verranno restituiti in un ordine non specificato. Esempi: aggregate(layer:='rail_stations',aggregate:='sum',expression:=\"passengers\") \u2192 somma tutti i valori per il campo passengers nel layer rail_stations aggregate('rail_stations','sum', \"passengers\"/7) \u2192 calcola la media giornaliera di \"passengers\" dividendo il campo \"passengers\" per 7 prima di sommare i valori aggregate(layer:='rail_stations',aggregate:='sum',expression:=\"passengers\",filter:=\"class\">3) \u2192 somma tutti i valori per il campo \"passengers\" soltanto dagli elementi geometrie dove l'attributo \"class\" \u00e8 maggiore di 3 aggregate(layer:='rail_stations',aggregate:='concatenate', expression:=\"name\", concatenator:=',') \u2192 elenco separato da virgole del campo name per tutti gli elementi nel vettore rail_stations aggregate(layer:='countries', aggregate:='max', expression:=\"code\", filter:=intersects( $geometry, geometry(@parent) ) ) \u2192 Il codice Paese di un Paese di intersezione nel vettore 'countries' aggregate(layer:='stazioni_rotaie',aggregate:='sum',expression:=\"viaggiatori\",filter:=contains( @atlas_geometry, $geometry ) ) \u2192 somma tutti i valori del campo viaggiatori in rail_stations all'interno dell'elemento atlante corrente aggregate(layer:='rail_stations', aggregate:='collect', expression:=centroid($geometry), filter:=\"region_name\" = attribute(@parent,'name') ) \u2192 aggrega le geometrie dei centroidi delle stazioni ferroviarie della stessa regione dell'elemento corrente Osservazioni i nomi dei layer vanno scritti tra apici semplici ( 'nome_layer' ) mentre i nomi dei campi con doppi apici ( \"nome_campo\" ) Altri esempi: Come realizzare una spatial-join con aggregazione usando solo il calcolatore di campi qui","title":"aggregate"},{"location":"gr_funzioni/aggrega/aggrega_unico/#array_agg","text":"Restituisce un array di valori aggregati da un campo o espressione. Sintassi: array_agg( expression [, group_by ][, filter ][, order_by ]) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato order_by espressione opzionale da usare per ordinare gli elementi usati per calcolare il valore aggregato. Da predefinito, gli elementi verranno restituiti in un ordine non specificato. Esempi: array_agg( \"DEN_PCM\" ,group_by:= \"COD_REG\" ) \u2192 lista di valori del \"DEN_PCM\", ragguppata per il campo \"COD_REG\" Nota bene Per prendere un valore specifico dell'array: - array_agg(\"z\")[0] \u2192 148,03 \u00e8 il primo valore dell'array, indice 0; - array_agg(\"z\")[1] \u2192 164,21 \u00e8 il secondo valore dell'array, indice 1; - ecc... dove \"z\" \u00e8 un attributo Osservazioni: la funzione array_agg permette di trasformare un attributo (colonna di una tabella) in un array!!! la funzione attributes permette di trasformare una feature (riga di una tabella) in una maps e quindi in un array!!!","title":"array_agg"},{"location":"gr_funzioni/aggrega/aggrega_unico/#collect","text":"Restituisce la geometria a parti multiple di geometrie aggregate da una espressione Sintassi: collect( expression [, group_by ][, filter ]) Argomenti: expression espressione geometria da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: collect( $geometry ) \u2192 geometria a parti multiple delle geometrie aggregate collect( centroid($geometry), group_by:=\"region\", filter:= \"use\" = 'civilian' ) \u2192 centroidi aggregati degli elementi civili basati sul relativo valore regionale --","title":"collect"},{"location":"gr_funzioni/aggrega/aggrega_unico/#concatenate","text":"Restituisce tutte le stringhe aggregate da un campo o un'espressione unite da un separatore. Sintassi: concatenate( expression [, group_by ][, filter ][, concatenator ][, order_by ]) Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato concatenator stringa opzionale da usarsi per unire i valori order_by espressione opzionale da usare per ordinare gli elementi usati per calcolare il valore aggregato. Da predefinito, gli elementi verranno restituiti in un ordine non specificato. [ ] indica componenti opzionali Esempi: concatenate(\"town_name\",group_by:=\"state\",concatenator:=',') \u2192 lista separata da virgola di town_names, raggruppata per campo state","title":"concatenate"},{"location":"gr_funzioni/aggrega/aggrega_unico/#concatenate_unique","text":"Restituisce tutte le stringhe univoche di un campo o di un'espressione unite da un delimitatore. Sintassi: concatenate( expression [, group_by ][, filter ][, concatenator ][, order_by ] ) Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato concatenator stringa opzionale da usarsi per unire i valori order_by espressione opzionale da usare per ordinare gli elementi usati per calcolare il valore aggregato. Da predefinito, gli elementi verranno restituiti in un ordine non specificato. [ ] indica componenti opzionali Esempi: concatenate_unique(\"town_name\",group_by:=\"state\",concatenator:=',') \u2192 lista separata da virgola di town_names univoci, raggruppata per campo state","title":"concatenate_unique"},{"location":"gr_funzioni/aggrega/aggrega_unico/#count","text":"Restituisce il conteggio degli elementi corrispondenti. Sintassi: count( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: count(\"stations\",group_by:=\"state\") \u2192 conta le stazioni, raggruppate per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); count( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): count( filter:= , expression:= , group_by:= )","title":"count"},{"location":"gr_funzioni/aggrega/aggrega_unico/#count_distinct","text":"Restituisce il conteggio dei valori differenti. Sintassi: count_distinct( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: count_distinct(\"stations\",group_by:=\"state\") \u2192 conta i valori differenti delle stazioni, raggruppate per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); count_distinct( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): count_distinct( filter:= , expression:= , group_by:= ) --","title":"count_distinct"},{"location":"gr_funzioni/aggrega/aggrega_unico/#count_missing","text":"Restituisce il numero di valori nulli (NULL). Sintassi: count_missing( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: count_missing(\"stations\",group_by:=\"state\") \u2192 conta i valori mancanti (NULL) delle stazioni, raggruppati per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); count_missing( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): count_missing( filter:= , expression:= , group_by:= )","title":"count_missing"},{"location":"gr_funzioni/aggrega/aggrega_unico/#iqr","text":"Restituisce lo scarto interquartile calcolato da un campo o espressione. Sintassi: iqr( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: iqr(\"population\",group_by:=\"state\") \u2192 scarto interquartile del valore popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); iqr( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): iqr( filter:= , expression:= , group_by:= )","title":"iqr"},{"location":"gr_funzioni/aggrega/aggrega_unico/#majority","text":"Restituisce la maggioranza aggregata di valori (valore pi\u00f9 comunemente presente) da un campo o espressione. Sintassi: majority( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: majority(\"class\",group_by:=\"state\") \u2192 valore di classe pi\u00f9 comunemente presente, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); majority( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): majority( filter:= , expression:= , group_by:= )","title":"majority"},{"location":"gr_funzioni/aggrega/aggrega_unico/#max_length","text":"Restituisce la lunghezza massima delle stringhe di un campo o espressione. Sintassi: max_length( expression [, group_by ][, filter ] ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: max_length(\"town_name\",group_by:=\"state\") \u2192 lunghezza massima di town_name, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); max_length( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): max_length( filter:= , expression:= , group_by:= )","title":"max_length"},{"location":"gr_funzioni/aggrega/aggrega_unico/#maximum","text":"Restituisce il valore massimo aggregato da un campo o espressione. Sintassi: maximum( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: maximum(\"population\",group_by:=\"state\") \u2192 valore massimo di population, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); maximum( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): maximum( filter:= , expression:= , group_by:= )","title":"maximum"},{"location":"gr_funzioni/aggrega/aggrega_unico/#mean","text":"Restituisce il valore medio aggregato da un campo o espressione. Sintassi: mean( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: mean(\"population\",group_by:=\"state\") \u2192 valore medio di population, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); mean( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): mean( filter:= , expression:= , group_by:= )","title":"mean"},{"location":"gr_funzioni/aggrega/aggrega_unico/#median","text":"Restituisce il valore mediano aggregato da un campo o espressione. Sintassi: median( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: median(\"population\",group_by:=\"state\") \u2192 mediana della popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); median( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): median( filter:= , expression:= , group_by:= )","title":"median"},{"location":"gr_funzioni/aggrega/aggrega_unico/#min_length","text":"Restituisce la lunghezza minima delle stringhe di un campo o espressione. Sintassi: min_length( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: min_length(\"town_name\",group_by:=\"state\") \u2192 lunghezza minima di town_name, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); min_length( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): min_length( filter:= , expression:= , group_by:= )","title":"min_length"},{"location":"gr_funzioni/aggrega/aggrega_unico/#minimum","text":"Restituisce il valore minimo aggregato da un campo o espressione. Sintassi: minimum( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: minimum(\"population\",group_by:=\"state\") \u2192 valore minimo di population, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); minimum( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): minimum( filter:= , expression:= , group_by:= ) Esempio: Selezionare le Province con minor area per ogni Regione $area = minimum(expression:=$area,group_by:=\"COD_REG\")","title":"minimum"},{"location":"gr_funzioni/aggrega/aggrega_unico/#minority","text":"Restituisce la minoranza aggregata di valori (valore meno comunemente presente) da un campo o espressione. Sintassi: minority( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: minority(\"class\",group_by:=\"state\") \u2192 valore di classe meno presente, ragguppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); minority( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): minority( filter:= , expression:= , group_by:= )","title":"minority"},{"location":"gr_funzioni/aggrega/aggrega_unico/#q1","text":"Restituisce il primo quartile calcolato da un campo o espressione. Sintassi: q1( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: q1(\"population\",group_by:=\"state\") \u2192 primo quartile del valore popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); q1( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): q1( filter:= , expression:= , group_by:= )","title":"q1"},{"location":"gr_funzioni/aggrega/aggrega_unico/#q3","text":"Restituisce il terzo quartile calcolato da un campo o espressione. Sintassi: q3( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: q3(\"population\",group_by:=\"state\") \u2192 terzo quartile del valore popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); q3( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): q3( filter:= , expression:= , group_by:= )","title":"q3"},{"location":"gr_funzioni/aggrega/aggrega_unico/#range","text":"Restituisce l'intervallo aggregato di valori (massimo - minimo) da un campo o espressione. Sintassi: range( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: range(\"population\",group_by:=\"state\") \u2192 intervallo di valori di popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); range( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): range( filter:= , expression:= , group_by:= )","title":"range"},{"location":"gr_funzioni/aggrega/aggrega_unico/#relation_aggregate","text":"Restituisce un valore aggregato calcolato usando tutti gli elementi figli corrispondenti da una relazione di layer. Sintassi: relation_aggregate( relation , aggregate , expression [, concatenator ][, order_by ] ) Argomenti: relation una stringa, rappresentante un ID di relazione aggregate una stringa corrispondente all'aggregato da calcolare. Opzioni valide sono: count count_distinct count_missing min max sum mean median stdev stdevsample range minority majority q1: primo quartile q3: terzo quartile iqr: scarto interquartile min_length: minima lunghezza stringa max_length: massima lunghezza stringa concatenate: unisci stringhe con un concatenatore expression sotto espressione o nome campo da aggregare concatenator stringa opzionale da usare per unire i valori per il raggruppamento 'concatenate' order_by espressione filtro opzionale atta ad ordinare gli elementi usati per calcolare il valore aggregato. Campi e geometria provengono dagli elementi del vettore unito. In modo predefinito, gli elementi verranno restituiti senza un ordine specifico. Esempi: relation_aggregate(relation:='my_relation',aggregate:='mean',expression:=\"passengers\") \u2192 valore medio di tutti gli elementi figli corrispondenti usando la relazione 'my_relation' relation_aggregate('my_relation','sum', \"passengers\"/7) \u2192 somma del campo passengers diviso per 7 per tutti gli elementi figli corrispondenti usando la relazione 'my_relation' relation_aggregate('my_relation','concatenate', \"towns\", concatenator:=',') \u2192 elenco separato da virgole del campo towns per tutte le geometrie figlie corrispondenti che usano la relation 'my_relation' relation_aggregate('my_relation','array_agg', \"id\") \u2192 array del campo id derivato da tutti gli elementi figlio corrispondenti usando la relazione 'my_relation' Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); relation_aggregate( relation , aggregate , expression [, concatenator ][, order_by ] ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): relation_aggregate( filter:= , expression:= , group_by:= ) --","title":"relation_aggregate"},{"location":"gr_funzioni/aggrega/aggrega_unico/#stdev","text":"Restituisce il valore di deviazione standard aggregato da un campo o espressione. Sintassi: stdev( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: stdev(\"population\",group_by:=\"state\") \u2192 deviazione standard di un valore popolazione, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); stdev( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): stdev( filter:= , expression:= , group_by:= )","title":"stdev"},{"location":"gr_funzioni/aggrega/aggrega_unico/#sum","text":"Restituisce il valore sommato aggregato da un campo o espressione. Sintassi: sum( expression , group_by , filter ) [ ] indica componenti opzionali Argomenti: expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi: sum(\"population\",group_by:=\"state\") \u2192 valore somma di population, raggruppato per il campo state Nota bene: La sintassi prevede due possibilit\u00e0: quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); stdev( expression , group_by , filter ) con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): stdev( filter:= , expression:= , group_by:= )","title":"sum"},{"location":"gr_funzioni/aggregates/aggregate/","text":"aggregate \u21b5 Restituisce un valore aggregato calcolato usando elementi da un altro vettore. Sintassi \u21b5 aggregate( layer , aggregate , expression , filter , concatenator ) Argomenti \u21b5 layer una stringa, rappresentante o un nome di un layer o un ID di layer aggregate una stringa corrispondente all'aggregato da calcolare. Opzioni valide sono: count count_distinct count_missing min max sum mean median stdev stdevsample range minority majority q1: primo quartile q3: terzo quartile iqr: inter quartile range min_length: minima lunghezza stringa max_length: massima lunghezza stringa concatenate: unisce stringhe con un concatenatore collect: crea una geometria multiparte aggregata expression sotto-espressione o nome campo da aggregare filter espressione filtro opzionale per limitare gli elementi usati per calcolare l'aggregato. I campi e la geometria provengono dagli elementi del vettore unito. Si pu\u00f2 accedere all'elemento sorgente con la variabile @parent . concatenator stringa opzionale da usare per unire i valori per il raggruppamento 'concatenate' Esempi \u21b5 aggregate(layer:='province_g',aggregate:='sum',expression:=$area) \u2192 somma le aree di tutte le province valore mq (se EPSG proiettato) aggregate(layer:='province_g',aggregate:='sum',expression:=$area/1000000) \u2192 somma le aree di tutte le province valore in kmq (se EPSG proiettato) aggregate(layer:='province_g',aggregate:='sum',expression:=$area/1000000, filter:= \"COD_REG\" =19) \u2192 somma tutti i valori dell'area delle province limitatamente alla regione Sicilia (\"COD_REG\"=19) aggregate(layer:='province_g',aggregate:='concatenate',expression:= \"DEN_PCM\" , concatenator:=',') \u2192 Elenco separato da virgole di tutte le denominazioni delle Province per tutte le geometrie nel vettore Regione aggregate(layer:='province_g',aggregate:='concatenate',expression:= \"DEN_PCM\" ,concatenator:=',',filter:=intersects( centroid($geometry), geometry(@parent))) \u2192 Elenco separato delle denominazioni delle Province per ogni geometria del vettore Regione (cio\u00e8 il @parent)' nota bene \u21b5 -- osservazioni \u21b5 i nomi dei layer vanno scritti tra apici semplici ( 'nome_layer' ) mentre i nomi dei campi con doppi apici ( \"nome_campo\" ) Altri esempi \u21b5 Come realizzare una spatial-join con aggregazione usando solo il calcolatore di campi qui","title":"aggregate"},{"location":"gr_funzioni/aggregates/aggregate/#aggregate","text":"Restituisce un valore aggregato calcolato usando elementi da un altro vettore.","title":"aggregate"},{"location":"gr_funzioni/aggregates/aggregate/#sintassi","text":"aggregate( layer , aggregate , expression , filter , concatenator )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/aggregate/#argomenti","text":"layer una stringa, rappresentante o un nome di un layer o un ID di layer aggregate una stringa corrispondente all'aggregato da calcolare. Opzioni valide sono: count count_distinct count_missing min max sum mean median stdev stdevsample range minority majority q1: primo quartile q3: terzo quartile iqr: inter quartile range min_length: minima lunghezza stringa max_length: massima lunghezza stringa concatenate: unisce stringhe con un concatenatore collect: crea una geometria multiparte aggregata expression sotto-espressione o nome campo da aggregare filter espressione filtro opzionale per limitare gli elementi usati per calcolare l'aggregato. I campi e la geometria provengono dagli elementi del vettore unito. Si pu\u00f2 accedere all'elemento sorgente con la variabile @parent . concatenator stringa opzionale da usare per unire i valori per il raggruppamento 'concatenate'","title":"Argomenti"},{"location":"gr_funzioni/aggregates/aggregate/#esempi","text":"aggregate(layer:='province_g',aggregate:='sum',expression:=$area) \u2192 somma le aree di tutte le province valore mq (se EPSG proiettato) aggregate(layer:='province_g',aggregate:='sum',expression:=$area/1000000) \u2192 somma le aree di tutte le province valore in kmq (se EPSG proiettato) aggregate(layer:='province_g',aggregate:='sum',expression:=$area/1000000, filter:= \"COD_REG\" =19) \u2192 somma tutti i valori dell'area delle province limitatamente alla regione Sicilia (\"COD_REG\"=19) aggregate(layer:='province_g',aggregate:='concatenate',expression:= \"DEN_PCM\" , concatenator:=',') \u2192 Elenco separato da virgole di tutte le denominazioni delle Province per tutte le geometrie nel vettore Regione aggregate(layer:='province_g',aggregate:='concatenate',expression:= \"DEN_PCM\" ,concatenator:=',',filter:=intersects( centroid($geometry), geometry(@parent))) \u2192 Elenco separato delle denominazioni delle Province per ogni geometria del vettore Regione (cio\u00e8 il @parent)'","title":"Esempi"},{"location":"gr_funzioni/aggregates/aggregate/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/aggregates/aggregate/#osservazioni","text":"i nomi dei layer vanno scritti tra apici semplici ( 'nome_layer' ) mentre i nomi dei campi con doppi apici ( \"nome_campo\" )","title":"osservazioni"},{"location":"gr_funzioni/aggregates/aggregate/#altri-esempi","text":"Come realizzare una spatial-join con aggregazione usando solo il calcolatore di campi qui","title":"Altri esempi"},{"location":"gr_funzioni/aggregates/aggregates/","text":"Aggregates \u21b5 Contiene funzioni che aggregano valori nei livelli e campi. A partire da QGIS 2.16 il motore di espressioni supporta l'uso di parametri con nome . Funzione Descrizione aggregate Restituisce un valore aggregato calcolato usando elementi da un altro vettore array_agg Restituisce un array di valori aggregati da un campo o espressione collect Restituisce la geometria a parti multiple di geometrie aggregate da una espressione concatenate Restituisce tutte le stringhe aggregate tratte da un campo o da una espressione unite con un delimitatore count Restituisce il conteggio degli elementi corrispondenti count_distinct Restituisce il conteggio dei valori differenti count_missing Restituisce il conteggio dei valori mancanti (nulli) iqr Restituisce lo scarto interquartile calcolato da un campo o espressione majority Restituisce la maggioranza aggregata di valori (valore pi\u00f9 comunemente presente) da un campo o espressione max_length Restituisce la lunghezza massima delle stringhe di un campo o espressione maximum Restituisce il valore massimo aggregato da un campo o espressione mean Restituisce il valore medio aggregato da un campo o espressione median Restituisce il valore mediano aggregato da un campo o espressione min_length Restituisce la lunghezza minima delle stringhe di un campo o espressione minimum Restituisce il valore minimo aggregato da un campo o espressione. minority Restituisce la minoranza aggregata di valori (valore meno comunemente presente) da un campo o espressione q1 Restituisce il primo quartile calcolato da un campo o espressione q3 Restituisce il terzo quartile calcolato da un campo o espressione range Restituisce l'intervallo aggregato di valori (massimo - minimo) da un campo o espressione relation_aggregate Restituisce un valore aggregato calcolato usando tutte le geometrie figlie corrispondenti da un altro vettore stdev Restituisce il valore di deviazione standard aggregato da un campo o espressione sum Restituisce il valore sommato aggregato da un campo o espressione Nota bene \u21b5 Grazie ai parametri denominati non \u00e8 pi\u00f9 indispensabile seguire, nella sintassi, l'ordine degli argomenti, ecco un esempio: La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. count_distinct( expression, group_by, filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. count_distinct(filter:= , expression:= ,group_by:= )","title":"Aggregates"},{"location":"gr_funzioni/aggregates/aggregates/#aggregates","text":"Contiene funzioni che aggregano valori nei livelli e campi. A partire da QGIS 2.16 il motore di espressioni supporta l'uso di parametri con nome . Funzione Descrizione aggregate Restituisce un valore aggregato calcolato usando elementi da un altro vettore array_agg Restituisce un array di valori aggregati da un campo o espressione collect Restituisce la geometria a parti multiple di geometrie aggregate da una espressione concatenate Restituisce tutte le stringhe aggregate tratte da un campo o da una espressione unite con un delimitatore count Restituisce il conteggio degli elementi corrispondenti count_distinct Restituisce il conteggio dei valori differenti count_missing Restituisce il conteggio dei valori mancanti (nulli) iqr Restituisce lo scarto interquartile calcolato da un campo o espressione majority Restituisce la maggioranza aggregata di valori (valore pi\u00f9 comunemente presente) da un campo o espressione max_length Restituisce la lunghezza massima delle stringhe di un campo o espressione maximum Restituisce il valore massimo aggregato da un campo o espressione mean Restituisce il valore medio aggregato da un campo o espressione median Restituisce il valore mediano aggregato da un campo o espressione min_length Restituisce la lunghezza minima delle stringhe di un campo o espressione minimum Restituisce il valore minimo aggregato da un campo o espressione. minority Restituisce la minoranza aggregata di valori (valore meno comunemente presente) da un campo o espressione q1 Restituisce il primo quartile calcolato da un campo o espressione q3 Restituisce il terzo quartile calcolato da un campo o espressione range Restituisce l'intervallo aggregato di valori (massimo - minimo) da un campo o espressione relation_aggregate Restituisce un valore aggregato calcolato usando tutte le geometrie figlie corrispondenti da un altro vettore stdev Restituisce il valore di deviazione standard aggregato da un campo o espressione sum Restituisce il valore sommato aggregato da un campo o espressione","title":"Aggregates"},{"location":"gr_funzioni/aggregates/aggregates/#nota-bene","text":"Grazie ai parametri denominati non \u00e8 pi\u00f9 indispensabile seguire, nella sintassi, l'ordine degli argomenti, ecco un esempio: La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. count_distinct( expression, group_by, filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. count_distinct(filter:= , expression:= ,group_by:= )","title":"Nota bene"},{"location":"gr_funzioni/aggregates/aggregates1/","text":"Aggregates \u21b5 aggregate: aggregate.md array_agg: array_agg.md collect: collect.md concatenate: concatenate.md count: count.md count_distinct: count_distinct.md count_missing: count_missing.md iqr: iqr.md majority: majority.md max_length: max_length.md maximum: maximum.md mean: mean.md median: median.md min_length: min_length.md minimum: minimum.md minority: minority.md q1: q1.md q3: q3.md range: range.md relation_aggregate: relation_aggregate.md stdev: stdev.md sum: sum.md","title":"Aggregates"},{"location":"gr_funzioni/aggregates/aggregates1/#aggregates","text":"aggregate: aggregate.md array_agg: array_agg.md collect: collect.md concatenate: concatenate.md count: count.md count_distinct: count_distinct.md count_missing: count_missing.md iqr: iqr.md majority: majority.md max_length: max_length.md maximum: maximum.md mean: mean.md median: median.md min_length: min_length.md minimum: minimum.md minority: minority.md q1: q1.md q3: q3.md range: range.md relation_aggregate: relation_aggregate.md stdev: stdev.md sum: sum.md","title":"Aggregates"},{"location":"gr_funzioni/aggregates/array_agg/","text":"array_agg \u21b5 Restituisce un array di valori aggregati da un campo o espressione. Sintassi \u21b5 array_agg( expression [, group_by ][, filter ][, order_by ]) [ ] indica componenti opzionali Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato order_by espressione opzionale da usare per ordinare gli elementi usati per calcolare il valore aggregato. Da predefinito, gli elementi verranno restituiti in un ordine non specificato. Esempi \u21b5 array_agg( \"DEN_PCM\" ,group_by:= \"COD_REG\" ) \u2192 lista di valori del \"DEN_PCM\", ragguppata per il campo \"COD_REG\" nota bene \u21b5 Per prendere un valore specifico dell'array: - array_agg(\"z\")[0] \u2192 148,03 \u00e8 il primo valore dell'array, indice 0; - array_agg(\"z\")[1] \u2192 164,21 \u00e8 il secondo valore dell'array, indice 1; - ecc... osservazioni \u21b5 --","title":"array_agg"},{"location":"gr_funzioni/aggregates/array_agg/#array_agg","text":"Restituisce un array di valori aggregati da un campo o espressione.","title":"array_agg"},{"location":"gr_funzioni/aggregates/array_agg/#sintassi","text":"array_agg( expression [, group_by ][, filter ][, order_by ]) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/aggregates/array_agg/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato order_by espressione opzionale da usare per ordinare gli elementi usati per calcolare il valore aggregato. Da predefinito, gli elementi verranno restituiti in un ordine non specificato.","title":"Argomenti"},{"location":"gr_funzioni/aggregates/array_agg/#esempi","text":"array_agg( \"DEN_PCM\" ,group_by:= \"COD_REG\" ) \u2192 lista di valori del \"DEN_PCM\", ragguppata per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/array_agg/#nota-bene","text":"Per prendere un valore specifico dell'array: - array_agg(\"z\")[0] \u2192 148,03 \u00e8 il primo valore dell'array, indice 0; - array_agg(\"z\")[1] \u2192 164,21 \u00e8 il secondo valore dell'array, indice 1; - ecc...","title":"nota bene"},{"location":"gr_funzioni/aggregates/array_agg/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/collect/","text":"collect \u21b5 Restituisce la geometria a parti multiple di geometrie aggregate da una espressione Sintassi \u21b5 collect( expression , group_by , filter ) Argomenti \u21b5 expression espressione geometria da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 collect( $geometry ) \u2192 geometria a parti multiple delle geometrie aggregate nota bene \u21b5 -- osservazioni \u21b5 --","title":"collect"},{"location":"gr_funzioni/aggregates/collect/#collect","text":"Restituisce la geometria a parti multiple di geometrie aggregate da una espressione","title":"collect"},{"location":"gr_funzioni/aggregates/collect/#sintassi","text":"collect( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/collect/#argomenti","text":"expression espressione geometria da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/collect/#esempi","text":"collect( $geometry ) \u2192 geometria a parti multiple delle geometrie aggregate","title":"Esempi"},{"location":"gr_funzioni/aggregates/collect/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/aggregates/collect/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/concatenate/","text":"concatenate \u21b5 Restituisce tutte le stringhe aggregate tratte da un campo o da una espressione unite con un delimitatore. Sintassi \u21b5 concatenate( expression , group_by , filter , concatenator ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato concatenator stringa opzionale da usarsi per unire i valori Esempi \u21b5 concatenate( expression:=\"DEN_PCM\",group_by:=\"COD_REG\",concatenator:=',') \u2192 lista separata da virgola di \"DEN_PCM\", raggruppata dal campo \"COD_REG\" nota bene \u21b5 -- osservazioni \u21b5 --","title":"concatenate"},{"location":"gr_funzioni/aggregates/concatenate/#concatenate","text":"Restituisce tutte le stringhe aggregate tratte da un campo o da una espressione unite con un delimitatore.","title":"concatenate"},{"location":"gr_funzioni/aggregates/concatenate/#sintassi","text":"concatenate( expression , group_by , filter , concatenator )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/concatenate/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato concatenator stringa opzionale da usarsi per unire i valori","title":"Argomenti"},{"location":"gr_funzioni/aggregates/concatenate/#esempi","text":"concatenate( expression:=\"DEN_PCM\",group_by:=\"COD_REG\",concatenator:=',') \u2192 lista separata da virgola di \"DEN_PCM\", raggruppata dal campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/concatenate/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/aggregates/concatenate/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/concatenate_unique/","text":"concatenate_unique \u21b5 Restituisce tutte le stringhe aggregate univoche tratte da un campo o da una espressione unite con un delimitatore. Sintassi \u21b5 concatenate_unique( expression, group_by, filter, concatenator ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato concatenator stringa opzionale da usarsi per unire i valori Esempi \u21b5 concatenate_unique( expression:=\"DEN_PCM\",group_by:=\"COD_REG\",concatenator:=',') \u2192 lista separata da virgola di \"DEN_PCM\", raggruppata dal campo \"COD_REG\" nota bene \u21b5 -- osservazioni \u21b5 --","title":"concatenate_unique"},{"location":"gr_funzioni/aggregates/concatenate_unique/#concatenate_unique","text":"Restituisce tutte le stringhe aggregate univoche tratte da un campo o da una espressione unite con un delimitatore.","title":"concatenate_unique"},{"location":"gr_funzioni/aggregates/concatenate_unique/#sintassi","text":"concatenate_unique( expression, group_by, filter, concatenator )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/concatenate_unique/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato concatenator stringa opzionale da usarsi per unire i valori","title":"Argomenti"},{"location":"gr_funzioni/aggregates/concatenate_unique/#esempi","text":"concatenate_unique( expression:=\"DEN_PCM\",group_by:=\"COD_REG\",concatenator:=',') \u2192 lista separata da virgola di \"DEN_PCM\", raggruppata dal campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/concatenate_unique/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/aggregates/concatenate_unique/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/count/","text":"count \u21b5 Restituisce il conteggio degli elementi corrispondenti. Sintassi \u21b5 count( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 count ( expression:= \"DEN_PCM\" ,group_by:= \"COD_REG\") \u2192 conta le \"DEN_PCM\", raggruppate per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. count( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. count( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"count"},{"location":"gr_funzioni/aggregates/count/#count","text":"Restituisce il conteggio degli elementi corrispondenti.","title":"count"},{"location":"gr_funzioni/aggregates/count/#sintassi","text":"count( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/count/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/count/#esempi","text":"count ( expression:= \"DEN_PCM\" ,group_by:= \"COD_REG\") \u2192 conta le \"DEN_PCM\", raggruppate per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/count/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. count( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. count( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/count_distinct/","text":"count_distinct \u21b5 Restituisce il conteggio dei valori differenti. Sintassi \u21b5 count_distinct( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 count_distinct(expression:= \"DEN_PCM\" ,group_by:= \"COD_REG\" ,filter:= \"COD_REG\"<5) \u2192 conta i valori differenti delle \"DEN_PCM\", raggruppate per il campo \"COD_REG\" con filtro le prime 4 Regioni nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. majority( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. majority( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"count_distinct"},{"location":"gr_funzioni/aggregates/count_distinct/#count_distinct","text":"Restituisce il conteggio dei valori differenti.","title":"count_distinct"},{"location":"gr_funzioni/aggregates/count_distinct/#sintassi","text":"count_distinct( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/count_distinct/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/count_distinct/#esempi","text":"count_distinct(expression:= \"DEN_PCM\" ,group_by:= \"COD_REG\" ,filter:= \"COD_REG\"<5) \u2192 conta i valori differenti delle \"DEN_PCM\", raggruppate per il campo \"COD_REG\" con filtro le prime 4 Regioni","title":"Esempi"},{"location":"gr_funzioni/aggregates/count_distinct/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. majority( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. majority( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/count_distinct/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/count_missing/","text":"count_missing \u21b5 Restituisce il conteggio dei valori mancanti (nulli). Sintassi \u21b5 count_missing( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 count_missing( filter:= \"COD_REG\">=10,expression:= \"DEN_PCM\" , group_by:= \"COD_REG\") \u2192 conta i valori mancanti (nulli) delle \"DEN_PCM\", raggruppate per il campo \"COD_REG\" con filtro le ultime 10 Regioni nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. count_missing( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. count_missing( filter:= , expression:= , group_by:= ) -- osservazioni \u21b5 --","title":"count_missing"},{"location":"gr_funzioni/aggregates/count_missing/#count_missing","text":"Restituisce il conteggio dei valori mancanti (nulli).","title":"count_missing"},{"location":"gr_funzioni/aggregates/count_missing/#sintassi","text":"count_missing( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/count_missing/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/count_missing/#esempi","text":"count_missing( filter:= \"COD_REG\">=10,expression:= \"DEN_PCM\" , group_by:= \"COD_REG\") \u2192 conta i valori mancanti (nulli) delle \"DEN_PCM\", raggruppate per il campo \"COD_REG\" con filtro le ultime 10 Regioni","title":"Esempi"},{"location":"gr_funzioni/aggregates/count_missing/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. count_missing( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. count_missing( filter:= , expression:= , group_by:= ) --","title":"nota bene"},{"location":"gr_funzioni/aggregates/count_missing/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/iqr/","text":"iqr \u21b5 Restituisce lo scarto interquartile calcolato da un campo o espressione. Sintassi \u21b5 iqr( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 iqr( \"j_tot_maschi\" , \"COD_REG\") \u2192 scarto interquartile del valore \"j_tot_maschi\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. iqr( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. iqr( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"iqr"},{"location":"gr_funzioni/aggregates/iqr/#iqr","text":"Restituisce lo scarto interquartile calcolato da un campo o espressione.","title":"iqr"},{"location":"gr_funzioni/aggregates/iqr/#sintassi","text":"iqr( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/iqr/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/iqr/#esempi","text":"iqr( \"j_tot_maschi\" , \"COD_REG\") \u2192 scarto interquartile del valore \"j_tot_maschi\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/iqr/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. iqr( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. iqr( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/iqr/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/majority/","text":"majority \u21b5 Restituisce la maggioranza aggregata di valori (valore pi\u00f9 comunemente presente) da un campo o espressione. Sintassi \u21b5 majority( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 majority( \"j_tot_maschi\" , \"COD_REG\") \u2192 valore di classe pi\u00f9 comunemente presente, raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. majority( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. majority( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"majority"},{"location":"gr_funzioni/aggregates/majority/#majority","text":"Restituisce la maggioranza aggregata di valori (valore pi\u00f9 comunemente presente) da un campo o espressione.","title":"majority"},{"location":"gr_funzioni/aggregates/majority/#sintassi","text":"majority( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/majority/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/majority/#esempi","text":"majority( \"j_tot_maschi\" , \"COD_REG\") \u2192 valore di classe pi\u00f9 comunemente presente, raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/majority/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. majority( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. majority( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/majority/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/max_length/","text":"max_length \u21b5 Restituisce la lunghezza massima delle stringhe di un campo o espressione. Sintassi \u21b5 max_length( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 max_length(\"COMUNE\", \"COD_REG\") \u2192 lunghezza massima di \"COMUNE\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. max_length( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. max_length( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"max_length"},{"location":"gr_funzioni/aggregates/max_length/#max_length","text":"Restituisce la lunghezza massima delle stringhe di un campo o espressione.","title":"max_length"},{"location":"gr_funzioni/aggregates/max_length/#sintassi","text":"max_length( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/max_length/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/max_length/#esempi","text":"max_length(\"COMUNE\", \"COD_REG\") \u2192 lunghezza massima di \"COMUNE\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/max_length/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. max_length( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. max_length( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/max_length/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/maximum/","text":"maximum \u21b5 Restituisce il valore massimo aggregato da un campo o espressione. Sintassi \u21b5 maximum( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 maximum(\"j_tot_femmine\", \"COD_REG\") \u2192 valore massimo di \"j_tot_femmine\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. maximum( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. maximum( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"maximum"},{"location":"gr_funzioni/aggregates/maximum/#maximum","text":"Restituisce il valore massimo aggregato da un campo o espressione.","title":"maximum"},{"location":"gr_funzioni/aggregates/maximum/#sintassi","text":"maximum( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/maximum/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/maximum/#esempi","text":"maximum(\"j_tot_femmine\", \"COD_REG\") \u2192 valore massimo di \"j_tot_femmine\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/maximum/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. maximum( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. maximum( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/maximum/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/mean/","text":"mean \u21b5 Restituisce il valore medio aggregato da un campo o espressione. Sintassi \u21b5 mean( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 mean(\"j_tot_femmine\", \"COD_REG\") \u2192 valore massimo di \"j_tot_femmine\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. mean( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. mean(_ filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"mean"},{"location":"gr_funzioni/aggregates/mean/#mean","text":"Restituisce il valore medio aggregato da un campo o espressione.","title":"mean"},{"location":"gr_funzioni/aggregates/mean/#sintassi","text":"mean( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/mean/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/mean/#esempi","text":"mean(\"j_tot_femmine\", \"COD_REG\") \u2192 valore massimo di \"j_tot_femmine\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/mean/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. mean( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. mean(_ filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/mean/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/median/","text":"median \u21b5 Restituisce il valore mediano aggregato da un campo o espressione. Sintassi \u21b5 median( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 median(\"j_tot_femmine\", \"COD_REG\") \u2192 mediana della \"j_tot_femmine\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. median( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. median( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"median"},{"location":"gr_funzioni/aggregates/median/#median","text":"Restituisce il valore mediano aggregato da un campo o espressione.","title":"median"},{"location":"gr_funzioni/aggregates/median/#sintassi","text":"median( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/median/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/median/#esempi","text":"median(\"j_tot_femmine\", \"COD_REG\") \u2192 mediana della \"j_tot_femmine\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/median/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. median( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. median( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/median/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/min_length/","text":"min_length \u21b5 Restituisce la lunghezza minima delle stringhe di un campo o espressione. Sintassi \u21b5 min_length( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 min_length(\"COMUNE\", \"COD_REG\") \u2192 lunghezza minima di \"COMUNE\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. min_length( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. min_length( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"min_length"},{"location":"gr_funzioni/aggregates/min_length/#min_length","text":"Restituisce la lunghezza minima delle stringhe di un campo o espressione.","title":"min_length"},{"location":"gr_funzioni/aggregates/min_length/#sintassi","text":"min_length( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/min_length/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/min_length/#esempi","text":"min_length(\"COMUNE\", \"COD_REG\") \u2192 lunghezza minima di \"COMUNE\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/min_length/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. min_length( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. min_length( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/min_length/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/minimum/","text":"minimum \u21b5 Restituisce il valore minimo aggregato da un campo o espressione. Sintassi \u21b5 minimum( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 minimum(\"j_tot_femmine\", \"COD_REG\") \u2192 valore minimo di \"j_tot_femmine\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. minimum( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. minimum( filter:= , expression:= , group_by:= ) esempio: \u21b5 Selezionare le Province con minor area per ogni Regione $area = minimum(expression:=$area,group_by:=\"COD_REG\") \u21b5","title":"minimum"},{"location":"gr_funzioni/aggregates/minimum/#minimum","text":"Restituisce il valore minimo aggregato da un campo o espressione.","title":"minimum"},{"location":"gr_funzioni/aggregates/minimum/#sintassi","text":"minimum( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/minimum/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/minimum/#esempi","text":"minimum(\"j_tot_femmine\", \"COD_REG\") \u2192 valore minimo di \"j_tot_femmine\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/minimum/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. minimum( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. minimum( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/minimum/#esempio","text":"Selezionare le Province con minor area per ogni Regione $area = minimum(expression:=$area,group_by:=\"COD_REG\")","title":"esempio:"},{"location":"gr_funzioni/aggregates/minimum/#_1","text":"","title":""},{"location":"gr_funzioni/aggregates/minority/","text":"minority \u21b5 Restituisce la minoranza aggregata di valori (valore meno comunemente presente) da un campo o espressione. Sintassi \u21b5 minority( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 minority( \"j_tot_maschi\" , \"COD_REG\") \u2192 valore di classe meno comunemente presente, raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. minority( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. minority( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"minority"},{"location":"gr_funzioni/aggregates/minority/#minority","text":"Restituisce la minoranza aggregata di valori (valore meno comunemente presente) da un campo o espressione.","title":"minority"},{"location":"gr_funzioni/aggregates/minority/#sintassi","text":"minority( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/minority/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/minority/#esempi","text":"minority( \"j_tot_maschi\" , \"COD_REG\") \u2192 valore di classe meno comunemente presente, raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/minority/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. minority( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. minority( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/minority/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/q1/","text":"q1 \u21b5 Restituisce il primo quartile calcolato da un campo o espressione. Sintassi \u21b5 q1( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 q1(\"j_tot_maschi\" , \"COD_REG\") \u2192 primo quartile del valore \"j_tot_maschi\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. q1( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. q1( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"q1"},{"location":"gr_funzioni/aggregates/q1/#q1","text":"Restituisce il primo quartile calcolato da un campo o espressione.","title":"q1"},{"location":"gr_funzioni/aggregates/q1/#sintassi","text":"q1( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/q1/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/q1/#esempi","text":"q1(\"j_tot_maschi\" , \"COD_REG\") \u2192 primo quartile del valore \"j_tot_maschi\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/q1/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. q1( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. q1( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/q1/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/q3/","text":"q3 \u21b5 Restituisce il terzo quartile calcolato da un campo o espressione. Sintassi \u21b5 q3( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 q3(\"j_tot_maschi\" , \"COD_REG\") \u2192 terzo quartile del valore \"j_tot_maschi\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. q3( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. q3( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"q3"},{"location":"gr_funzioni/aggregates/q3/#q3","text":"Restituisce il terzo quartile calcolato da un campo o espressione.","title":"q3"},{"location":"gr_funzioni/aggregates/q3/#sintassi","text":"q3( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/q3/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/q3/#esempi","text":"q3(\"j_tot_maschi\" , \"COD_REG\") \u2192 terzo quartile del valore \"j_tot_maschi\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/q3/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. q3( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. q3( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/q3/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/range/","text":"range \u21b5 Restituisce l'intervallo aggregato di valori (massimo - minimo) da un campo o espressione. Sintassi \u21b5 range( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 range(\"j_tot_maschi\" , \"COD_REG\") \u2192 intervallo di valori \"j_tot_maschi\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. range( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. range( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"range"},{"location":"gr_funzioni/aggregates/range/#range","text":"Restituisce l'intervallo aggregato di valori (massimo - minimo) da un campo o espressione.","title":"range"},{"location":"gr_funzioni/aggregates/range/#sintassi","text":"range( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/range/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/range/#esempi","text":"range(\"j_tot_maschi\" , \"COD_REG\") \u2192 intervallo di valori \"j_tot_maschi\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/range/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. range( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. range( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/range/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/relation_aggregate/","text":"relation_aggregate \u21b5 Restituisce un valore aggregato calcolato usando tutte le geometrie figlie corrispondenti da un altro vettore. Sintassi \u21b5 relation_aggregate( relation , aggregate , expression , concatenator ) Argomenti \u21b5 relation una stringa, rappresentante un ID di relazione aggregate una stringa corrispondente all'aggregato da calcolare. Opzioni valide sono: count count_distinct count_missing min max sum mean median stdev stdevsample range minority majority q1: primo quartile q3: terzo quartile iqr: scarto interquartile min_length: minima lunghezza stringa max_length: massima lunghezza stringa concatenate: unisci stringhe con un concatenatore expression sotto espressione o nome campo da aggregare concatenator stringa opzionale da usare per unire i valori per il raggruppamento 'concatenate' Esempi \u21b5 relation_aggregate(relation:='rel_prov_com',aggregate:='concatenate',concatenator:=',',expression:=\"COMUNE\" ) \u2192 elenco separato da virgole del campo \"COMUNE\" per tutte le geometrie figlie corrispondenti usando la relation 'rel_prov_com' relation_aggregate(relation:='my_relation',aggregate:='mean',expression:=\"passengers\") \u2192 valore medio di tutte le geometrie figlie corrispondenti usando la relazione 'my_relation' relation_aggregate('my_relation','sum', \"passengers\"/7) \u2192 somma del campo passengers diviso per 7 per tutte le geometrie figlie corrispondenti usando la relazione 'my_relation' relation_aggregate('my_relation','concatenate', \"towns\", concatenator:=',') \u2192 elenco separato da virgole del campo town per tutte le geometrie figlie corrispondenti usando la relation 'my_relation' nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. relation_aggregate( relation , aggregate , expression , concatenator ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. relation_aggregate( relation:= , aggregate:= , expression:= , concatenator:= ) osservazioni \u21b5 --","title":"relation_aggregate"},{"location":"gr_funzioni/aggregates/relation_aggregate/#relation_aggregate","text":"Restituisce un valore aggregato calcolato usando tutte le geometrie figlie corrispondenti da un altro vettore.","title":"relation_aggregate"},{"location":"gr_funzioni/aggregates/relation_aggregate/#sintassi","text":"relation_aggregate( relation , aggregate , expression , concatenator )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/relation_aggregate/#argomenti","text":"relation una stringa, rappresentante un ID di relazione aggregate una stringa corrispondente all'aggregato da calcolare. Opzioni valide sono: count count_distinct count_missing min max sum mean median stdev stdevsample range minority majority q1: primo quartile q3: terzo quartile iqr: scarto interquartile min_length: minima lunghezza stringa max_length: massima lunghezza stringa concatenate: unisci stringhe con un concatenatore expression sotto espressione o nome campo da aggregare concatenator stringa opzionale da usare per unire i valori per il raggruppamento 'concatenate'","title":"Argomenti"},{"location":"gr_funzioni/aggregates/relation_aggregate/#esempi","text":"relation_aggregate(relation:='rel_prov_com',aggregate:='concatenate',concatenator:=',',expression:=\"COMUNE\" ) \u2192 elenco separato da virgole del campo \"COMUNE\" per tutte le geometrie figlie corrispondenti usando la relation 'rel_prov_com' relation_aggregate(relation:='my_relation',aggregate:='mean',expression:=\"passengers\") \u2192 valore medio di tutte le geometrie figlie corrispondenti usando la relazione 'my_relation' relation_aggregate('my_relation','sum', \"passengers\"/7) \u2192 somma del campo passengers diviso per 7 per tutte le geometrie figlie corrispondenti usando la relazione 'my_relation' relation_aggregate('my_relation','concatenate', \"towns\", concatenator:=',') \u2192 elenco separato da virgole del campo town per tutte le geometrie figlie corrispondenti usando la relation 'my_relation'","title":"Esempi"},{"location":"gr_funzioni/aggregates/relation_aggregate/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. relation_aggregate( relation , aggregate , expression , concatenator ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. relation_aggregate( relation:= , aggregate:= , expression:= , concatenator:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/relation_aggregate/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/stdev/","text":"stdev \u21b5 Restituisce il valore di deviazione standard aggregato da un campo o espressione. Sintassi \u21b5 stdev( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 stdev(\"j_tot_maschi\" , \"COD_REG\") \u2192 deviazione standard di un valore \"j_tot_maschi\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. stdev( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. stdev( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"stdev"},{"location":"gr_funzioni/aggregates/stdev/#stdev","text":"Restituisce il valore di deviazione standard aggregato da un campo o espressione.","title":"stdev"},{"location":"gr_funzioni/aggregates/stdev/#sintassi","text":"stdev( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/stdev/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/stdev/#esempi","text":"stdev(\"j_tot_maschi\" , \"COD_REG\") \u2192 deviazione standard di un valore \"j_tot_maschi\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/stdev/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. stdev( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. stdev( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/stdev/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/aggregates/sum/","text":"sum \u21b5 Restituisce il valore sommato aggregato da un campo o espressione. Sintassi \u21b5 sum( expression , group_by , filter ) Argomenti \u21b5 expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato Esempi \u21b5 sum(\"j_tot_maschi\" , \"COD_REG\") \u2192 valore somma di \"j_tot_maschi\", raggruppato per il campo \"COD_REG\" nota bene \u21b5 La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. sum( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. sum( filter:= , expression:= , group_by:= ) osservazioni \u21b5 --","title":"sum"},{"location":"gr_funzioni/aggregates/sum/#sum","text":"Restituisce il valore sommato aggregato da un campo o espressione.","title":"sum"},{"location":"gr_funzioni/aggregates/sum/#sintassi","text":"sum( expression , group_by , filter )","title":"Sintassi"},{"location":"gr_funzioni/aggregates/sum/#argomenti","text":"expression sotto espressione o campo da aggregare group_by espressione opzionale da usarsi per raggruppare i calcoli aggregati filter espressione opzionale da usare per filtrare gli elementi usati per calcolare il valore aggregato","title":"Argomenti"},{"location":"gr_funzioni/aggregates/sum/#esempi","text":"sum(\"j_tot_maschi\" , \"COD_REG\") \u2192 valore somma di \"j_tot_maschi\", raggruppato per il campo \"COD_REG\"","title":"Esempi"},{"location":"gr_funzioni/aggregates/sum/#nota-bene","text":"La sintassi prevede due possibilit\u00e0: 1. quella classica, senza l'uso dei paramentri denominati (l'ordine \u00e8 fondamentale); 1. sum( expression , group_by , filter ) 2. con i parametri denominati (l'ordine non \u00e8 pi\u00f9 fondamentale): 1. sum( filter:= , expression:= , group_by:= )","title":"nota bene"},{"location":"gr_funzioni/aggregates/sum/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/array/array/","text":"Array (NOVIT\u00c0 QGIS 3.4) \u21b5 Questo gruppo contiene funzioni espressione per la creazione e la manipolazione di array (noti anche come strutture dati ad elenco). L'ordine dei valori all'interno dell'array \u00e8 importante, al contrario della struttura dati 'a mappa' ( gruppo Maps ), in cui l'ordine delle coppie chiave-valore \u00e8 irrilevante e i valori vengono identificati dalle loro chiavi. Funzione Descrizione Info array_filter Restituisce un array con solo gli elementi per i quali l'espressione restituisce true (vero) >= QGIS 3.4 array_foreach Restituisce una matrice con l'espressione data valutata su ciascun elemento >= QGIS 3.4","title":"Array (NOVIT\u00c0 QGIS 3.4)"},{"location":"gr_funzioni/array/array/#array-novita-qgis-34","text":"Questo gruppo contiene funzioni espressione per la creazione e la manipolazione di array (noti anche come strutture dati ad elenco). L'ordine dei valori all'interno dell'array \u00e8 importante, al contrario della struttura dati 'a mappa' ( gruppo Maps ), in cui l'ordine delle coppie chiave-valore \u00e8 irrilevante e i valori vengono identificati dalle loro chiavi. Funzione Descrizione Info array_filter Restituisce un array con solo gli elementi per i quali l'espressione restituisce true (vero) >= QGIS 3.4 array_foreach Restituisce una matrice con l'espressione data valutata su ciascun elemento >= QGIS 3.4","title":"Array (NOVIT\u00c0 QGIS 3.4)"},{"location":"gr_funzioni/array/array_filter/","text":"array_filter \u21b5 Restituisce un array con solo gli elementi per i quali l'espressione restituisce true (vero). Sintassi \u21b5 array_filter( array , expression ) Argomenti \u21b5 array un array expression un'espressione da valutare su ogni oggetto. La variabile @ element sar\u00e0 sostituita dal valore corrente. Esempi \u21b5 array_filter(array(1,2,3),@element < 3) \u2192 [ 1, 2 ] nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_filter"},{"location":"gr_funzioni/array/array_filter/#array_filter","text":"Restituisce un array con solo gli elementi per i quali l'espressione restituisce true (vero).","title":"array_filter"},{"location":"gr_funzioni/array/array_filter/#sintassi","text":"array_filter( array , expression )","title":"Sintassi"},{"location":"gr_funzioni/array/array_filter/#argomenti","text":"array un array expression un'espressione da valutare su ogni oggetto. La variabile @ element sar\u00e0 sostituita dal valore corrente.","title":"Argomenti"},{"location":"gr_funzioni/array/array_filter/#esempi","text":"array_filter(array(1,2,3),@element < 3) \u2192 [ 1, 2 ]","title":"Esempi"},{"location":"gr_funzioni/array/array_filter/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/array/array_filter/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/array/array_foreach/","text":"array_foreach \u21b5 Restituisce una matrice con l'espressione data valutata su ciascun elemento. Sintassi \u21b5 array_foreach( array , expression ) Argomenti \u21b5 array un array expression un'espressione da valutare su ogni oggetto. La variabile @element sar\u00e0 sostituita dal valore corrente. Esempi \u21b5 array_foreach(array('a','b','c'),upper(@element)) \u2192 array: 'A', 'B', 'C' array_foreach(array(1,2,3),@element + 10) \u2192 array: 11, 12, 13 nota bene \u21b5 -- osservazioni \u21b5 Funzione utile, assieme ad altre, nel compositore di stampe o nella decorazione copyright. Tweet","title":"array_foreach"},{"location":"gr_funzioni/array/array_foreach/#array_foreach","text":"Restituisce una matrice con l'espressione data valutata su ciascun elemento.","title":"array_foreach"},{"location":"gr_funzioni/array/array_foreach/#sintassi","text":"array_foreach( array , expression )","title":"Sintassi"},{"location":"gr_funzioni/array/array_foreach/#argomenti","text":"array un array expression un'espressione da valutare su ogni oggetto. La variabile @element sar\u00e0 sostituita dal valore corrente.","title":"Argomenti"},{"location":"gr_funzioni/array/array_foreach/#esempi","text":"array_foreach(array('a','b','c'),upper(@element)) \u2192 array: 'A', 'B', 'C' array_foreach(array(1,2,3),@element + 10) \u2192 array: 11, 12, 13","title":"Esempi"},{"location":"gr_funzioni/array/array_foreach/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/array/array_foreach/#osservazioni","text":"Funzione utile, assieme ad altre, nel compositore di stampe o nella decorazione copyright. Tweet","title":"osservazioni"},{"location":"gr_funzioni/array/array_unico/","text":"Gruppo Array \u21b5 Abstract Questo gruppo contiene funzioni espressione per la creazione e la manipolazione di array (noti anche come strutture dati ad elenco). L'ordine dei valori all'interno dell'array \u00e8 importante, al contrario della struttura dati 'a mappa', in cui l'ordine delle coppie chiave-valore \u00e8 irrilevante e i valori vengono identificati dalle loro chiavi. array \u21b5 Restituisce un array contenente tutti i valori passati come parametro. Sintassi: array(_ value1 , value2 , \u2026) Argomenti: value un valore Esempi: array(2,10) \u2192 array: 2, 10 array_all \u21b5 Restituisce true se un array contiene tutti i valori di un determinato array. Sintassi: array_all( array_a , array_b , \u2026_) Argomenti: array_a un array array_b un array di valori da cercare Esempi: array_all(array(1,2,3),array(2,3)) \u2192 vero array_all(array(1,2,3),array(1,2,4)) \u2192 falso array_append \u21b5 Restituisce un array con il valore passato aggiunto alla fine. Sintassi: array_append( array , value ) Argomenti: array un array value il valore da aggiungere Esempi: array_append(array(1,2,3),4) \u2192 array: 1,2,3,4 array_cat \u21b5 Restituisce un array contenente tutti gli arrays passati concatenati. Sintassi: array_cat( array1 , array2 , \u2026 ) Argomenti: array un array Esempi: array_cat(array(1,2),array(2,3)) \u2192 array: 1,2,2,3 array_contains \u21b5 Restituisce true se un array contiene il valore specificato. Sintassi: array_contains( array , value ) Argomenti: array un array value il valore da cercare Esempi: array_contains(array(1,2,3),2) \u2192 true array_count \u21b5 Conta il numero di occorrenze di un dato valore in un array. Sintassi: array_count( array , value ) Argomenti: array un array value un valore da contare Esempi: array_count(array('a', 'b', 'c', 'b'), 'b') \u2192 2 array_distinct \u21b5 Restituisce un array contenente valori distinti dell'array dato. Sintassi: array_distinct( array ) Argomenti: array un array Esempi: array_distinct(array(1,2,3,2,1)) \u2192 array: 1,2,3 array_filter \u21b5 Restituisce un array con solo gli elementi per i quali l'espressione restituisce true (vero). Sintassi: array_filter( array , expression [, limit=0 ]) Argomenti: array un array expression un'espressione da valutare su ogni oggetto. La variabile @ element sar\u00e0 sostituita dal valore corrente. limit numero massimo di elementi da restituire. Usa 0 per restituire tutti i valori. Esempi: array_filter(array(1,2,3),@element < 3) \u2192 [ 1, 2 ] array_find \u21b5 Restituisce l'indice (0 per il primo elemento) di un valore all'interno di un array. Restiuisce -1 se il valore non viene trovato Sintassi: array_find( array , value ) Argomenti: array un array value il valore da cercare Esempi: array_find(array(1,2,3),2) \u2192 1 array_first \u21b5 Restituisce il primo valore di un array. Sintassi: array_first( array ) Argomenti: array un array Esempi: array_first(array('a','b','c')) \u2192 'a' array_foreach \u21b5 Restituisce una matrice con l'espressione data valutata su ciascun elemento. Sintassi: array_foreach( array , expression ) Argomenti: array un array expression un'espressione da valutare su ogni oggetto. La variabile @element sar\u00e0 sostituita dal valore corrente. Esempi: array_foreach(array('a','b','c'),upper(@element)) \u2192 [ 'A', 'B', 'C' ] array_foreach(array(1,2,3),@element + 10) \u2192 [ 11, 12, 13 ] Osservazioni Funzione utile, assieme ad altre, nel compositore di stampe o nella decorazione copyright. Tweet array_get \u21b5 Restituisce l'ennesimo valore (0 per il primo) o l'ultimo -Nesimo valore (-1 per l'ultimo) di un array. Aggiornato a QGIS 3.18 Sintassi: array_get( array , index ) Argomenti: array un array index l'indice da estrarre (partendo da 0) Esempi: array_get(array('a','b','c'),-1) \u2192 'c' array_insert \u21b5 Restituisce un array con il valore passato aggiunto nella posizione indicata. Sintassi: array_insert( array , pos , value ) Argomenti: array un array pos la posizione in cui aggiungere (partendo da 0) value il valore da aggiungere Esempi: array_insert(array(1,2,3),1,100) \u2192 [ 1, 100, 2, 3 ] array_intersect \u21b5 Restituisce true (vero) se almeno un elemento dell' array1 esiste in array2 . Sintassi: array_intersect( array1 , array2 ) Argomenti: array1 un array array2 un altro array Esempi: array_intersect(array(1,2,3,4),array(4,0,2,5)) \u2192 true array_last \u21b5 Restituisce l'ultimo valore di un array. Sintassi: array_last( array ) Argomenti: array un array Esempi: array_last(array('a','b','c')) \u2192 'c' array_length \u21b5 Restituisce il numero di elementi di un array. Sintassi: array_length( array ) Argomenti: array un array Esempi: array_length(array(1,2,3)) \u2192 3 array_majority \u21b5 Restituisce i valori pi\u00f9 comuni in un array. Sintassi: array_majority( array [, option='all' ]) Argomenti: array un array option='all' una stringa che specifica la gestione dei valori restituiti. Le opzioni valide sono: all : Predefinito, tutti i valori pi\u00f9 comuni vengono restituiti in un array. any : Restituisce uno dei valori pi\u00f9 comuni. median : Restituisce la mediana dei valori pi\u00f9 comuni. I valori non aritmetici sono ignorati. real_majority : Restituisce il valore che si verifica pi\u00f9 della met\u00e0 delle volte rispetto alla dimensione dell'array. Esempi: array_majority(array(0,1,42,42,43), 'all') \u2192 [ 42 ] array_majority(array(0,1,42,42,43,1), 'all') \u2192 [ 42, 1 ] array_majority(array(0,1,42,42,43,1), 'any') \u2192 1 or 42 array_majority(array(0,1,1,2,2), 'median') \u2192 1.5 array_majority(array(0,1,42,42,43), 'real_majority') \u2192 NULL array_majority(array(0,1,42,42,43,42), 'real_majority') \u2192 NULL array_majority(array(0,1,42,42,43,42,42), 'real_majority') \u2192 42 array_max \u21b5 Restituisce il valore massimo di un array. Sintassi: array_max( array ) Argomenti: array un array o stringa (valori separati da virgola) Esempi: array_max(array(0,42,4,2)) \u2192 42 array_mean \u21b5 Restituisce la media dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati. Sintassi: array_mean( array ) Argomenti: array un array Esempi: array_mean(array(0,1,7,66.6,135.4)) \u2192 42.000000 array_mean(array(0,84,'a','b','c')) \u2192 42 array_median \u21b5 Restituisce la mediana dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati. Sintassi: array_median( array ) Argomenti: array un array Esempi: array_median(array(0,1,42,42,43)) \u2192 42 array_median(array(0,1,2,42,'a','b')) \u2192 1.5` array_min \u21b5 Restituisce il valore minimo di un array. Sintassi: array_min( array ) Argomenti: array _ un array o stringa (valori separati da virgola) Esempi: array_min(array(43,42,54)) \u2192 42 array_minority \u21b5 Restituisce i valori meno comuni in un array. Sintassi: array_minority( array [, option='all' ]) Argomenti: array un array option='all' una stringa che specifica la gestione dei valori restituiti. Le opzioni valide sono: all : Predefinito, tutti i valori meno comuni vengono restituiti in un array. any : Restituisce uno dei valori meno comuni. median : Restituisce la mediana dei valori meno comuni. I valori non aritmetici sono ignorati. real_minority : Restituisce valori che si verificano meno della met\u00e0 delle volte rispetto alla dimensione dell'array. Esempi: array_minority(array(0,42,42), 'all') \u2192 [ 0 ] array_minority(array(0,1,42,42), 'all') \u2192 [ 0, 1 ] array_minority(array(0,1,42,42,43,1), 'any') \u2192 0 or 43 array_minority(array(1,2,3,3), 'median') \u2192 1.5 array_minority(array(0,1,42,42,43), 'real_minority') \u2192 [ 42, 43, 0, 1 ] array_minority(array(0,1,42,42,43,42), 'real_minority') \u2192 [ 42, 43, 0, 1 ] array_minority(array(0,1,42,42,43,42,42), 'real_minority') \u2192 [ 43, 0, 1 ] array_prepend \u21b5 Restituisce un array con il valore dato aggiunto all'inizio. Sintassi: array_prepend( array , value ) Argomenti: array un array value il valore da aggiungere Esempi: array_prepend(array(1,2,3),0) \u2192 [ 0, 1, 2, 3 ] array_prioritize \u21b5 Restituisce un array ordinato usando l'ordine specificato in un altro array. I valori che sono presenti nel primo array ma assenti nel secondo array saranno aggiunti alla fine del risultato. Sintassi: array_prioritize( array , array_prioritize ) Argomenti: array un array o stringa (valori separati da virgola) array_prioritize array o stringa (valori separati da virgola) contenenti i valori ordinati Esempi: array_prioritize(array(1, 8, 2, 5), array(5, 4, 2, 1, 3, 8)) \u2192 [ 5, 2, 1, 8 ] array_prioritize(array(5, 4, 2, 1, 3, 8), array(1, 8, 6, 5)) \u2192 [ 1, 8, 5, 4, 2, 3 ] array_remove_all \u21b5 Restituisce un array con tutti gli elementi del valore passato rimossi. Sintassi: array_remove_all( array , value ) Argomenti: array un array value i valori da rimuovere Esempi: array_remove_all(array('a','b','c','b'),'b') \u2192 [ 'a', 'c' ] array_remove_at \u21b5 Restituisce un array con l'indice passato rimosso. Sintassi: array_remove_at( array , pos ) Argomenti: array un array pos la posizione da rimuovere (partendo da 0) Esempi: array_remove_at(array(1,2,3),1) \u2192 [ 1, 3 ] array_replace \u21b5 Restituisce un array con il valore, l'array o la mappa dei valori forniti sostituiti. Valore & variante dell'array \u21b5 Restituisce un array con il valore o con un array di valori forniti sostituito da un altro valore o da un altro array di valori. Sintassi: array_replace( array , before , after ) Argomenti: array l'array in ingresso before il valore o l'array di valori da sostituire after il valore o l'array di valori da utilizzare come sostituzione Esempi: array_replace(array('QGIS','SHOULD','ROCK'),'SHOULD','DOES') \u2192 [ 'QGIS', 'DOES', 'ROCK' ] array_replace(array(3,2,1),array(1,2,3),array(7,8,9)) \u2192 [ 9, 8, 7 ] array_replace(array('Q','G','I','S'),array('Q','S'),'-') \u2192 [ '-', 'G', 'I', '-' ] Variabile mappa \u21b5 Restituisce un array con le chiavi della mappa fornite sostituite dai loro valori abbinati. Sintassi: array_replace( array , map ) Argomenti: array l'array in ingresso map la mappa che contiene le chiavi e i valori Esempi: array_replace(array('APP', 'SHOULD', 'ROCK'),map('APP','QGIS','SHOULD','DOES')) \u2192 [ 'QGIS', 'DOES', 'ROCK' ] array_reverse \u21b5 Restituisce l'array dato con valori dell'array in ordine inverso. Sintassi: array_reverse( array ) Argomenti: array un array Esempi: array_reverse(array(2,4,0,10)) \u2192 [ 10, 0, 4, 2 ] array_slice \u21b5 Restituisce una porzione dell'array. Il taglio \u00e8 definito dagli argomenti start_pos e end_pos . Sintassi: array_slice( array , start_pos , end_pos ) Argomenti: array un array start_pos l'indice della posizione iniziale della fetta (a partire da 0). L'indice start_pos \u00e8 incluso nella fetta. Se si utilizza un valore negativo di start_pos, l'indice \u00e8 contato dalla fine della lista (a partire da -1). end_pos l'indice della posizione finale della fetta (a partire da 0). L'indice end_pos \u00e8 incluso nella fetta. Se si utilizza un valore negativo di start_pos, l'indice \u00e8 contato dalla fine della lista (a partire da -1). Esempi: array_slice(array(1,2,3,4,5),0,3) \u2192 [ 1, 2, 3, 4 ] array_slice(array(1,2,3,4,5),0,-1) \u2192 [ 1, 2, 3, 4, 5 ] array_slice(array(1,2,3,4,5),-5,-1) \u2192 [ 1, 2, 3, 4, 5 ] array_slice(array(1,2,3,4,5),0,0) \u2192 [ 1 ] array_slice(array(1,2,3,4,5),-2,-1) \u2192 [ 4, 5 ] array_slice(array(1,2,3,4,5),-1,-1) \u2192 [ 5 ] array_slice(array('Dufour','Valmiera','Chugiak','Brighton'),1,2) \u2192 [ 'Valmiera', 'Chugiak' ] array_slice(array('Dufour','Valmiera','Chugiak','Brighton'),-2,-1) \u2192 [ 'Chugiak', 'Brighton' ] array_sort \u21b5 Ordina i valori in ordine crescente (usa array_reverse per desc). Sintassi: array_sort( array [, ascending=true ]) Argomenti: array un array o stringa (valori separati da virgola) ascending imposta questo parametro a false per ordinare l'array in modo decrescente Esempi: array_sort(array(3,2,1)) \u2192 [ 1, 2, 3 ] array_sum \u21b5 Restituisce la somma dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati. Sintassi: array_sum( array ) Argomenti: array un array Esempi: array_sum(array(0,1,39.4,1.6,'a')) \u2192 42.0 array_to_string \u21b5 Concatena gli elementi di un array in una stringa separata da un delimitatore usando una stringa opzionale per valori mancanti. Sintassi: array_to_string( array [, delimiter ][, empty_value ]) [ ] indica componenti opzionali Argomenti: array l'array in ingresso delimiter il delimitatore stringa usato per separare gli elementi array concatenati empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti Esempi: array_to_string(array('1','2','3')) \u2192 '1,2,3' array_to_string(array(1,2,3),'-') \u2192 '1-2-3' array_to_string(array('1','','3'),',','0') \u2192 '1,0,3' generate_series \u21b5 La funzione crea una matrice contenente una sequenza di numeri, segue le stesse regole della funzione generate_series () di PostgreSQL. Sintassi: generate_series( start , stop [, step =1] ) [ ] contrassegna componenti opzionali Argomenti: start primo valore della sequenza stop valore che termina la sequenza una volta raggiunta step passo usato come incremento tra i valori Esempi: generate_series(1,5) \u2192 [ 1, 2, 3, 4, 5 ] generate_series(5,1,-1) \u2192 [ 5, 4, 3, 2, 1 ] regexp_matches \u21b5 Restituisce un array di tutte le stringhe catturate dai gruppo, nell'ordine che i gruppi stessi compaiono con l'espressione regolare fornita con una stringa. Sintassi: regexp_matches( string , regex [, empty_value='' ]) [ ] indica componenti opzionali Argomenti: string la stringa con cui catturare i gruppi da un'espressione regolare regex l'espressione regolare usata per catturare gruppi empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti Esempi: regexp_matches('QGIS=>rocks','(.*)=>(.*)') \u2192 [ 'QGIS', 'rocks' ] regexp_matches('key=>','(.*)=>(.*)','empty value') \u2192 [ 'key', 'empty value' ] string_to_array \u21b5 Divide la stringa in un array usando il delimitatore fornito e la stringa opzionale per valori mancanti. Sintassi: string_to_array( string [, delimiter ][, empty_value='' ]) [ ] indica componenti opzionali Argomenti: string la stringa in ingresso delimiter il delimitatore stringa usato per dividere la stringa in ingresso empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti Esempi: string_to_array('1,2,3',',') \u2192 [ '1', '2', '3' ] string_to_array('1,,3',',','0') \u2192 [ '1', '0', '3' ]","title":"Array"},{"location":"gr_funzioni/array/array_unico/#gruppo-array","text":"Abstract Questo gruppo contiene funzioni espressione per la creazione e la manipolazione di array (noti anche come strutture dati ad elenco). L'ordine dei valori all'interno dell'array \u00e8 importante, al contrario della struttura dati 'a mappa', in cui l'ordine delle coppie chiave-valore \u00e8 irrilevante e i valori vengono identificati dalle loro chiavi.","title":"Gruppo Array"},{"location":"gr_funzioni/array/array_unico/#array","text":"Restituisce un array contenente tutti i valori passati come parametro. Sintassi: array(_ value1 , value2 , \u2026) Argomenti: value un valore Esempi: array(2,10) \u2192 array: 2, 10","title":"array"},{"location":"gr_funzioni/array/array_unico/#array_all","text":"Restituisce true se un array contiene tutti i valori di un determinato array. Sintassi: array_all( array_a , array_b , \u2026_) Argomenti: array_a un array array_b un array di valori da cercare Esempi: array_all(array(1,2,3),array(2,3)) \u2192 vero array_all(array(1,2,3),array(1,2,4)) \u2192 falso","title":"array_all"},{"location":"gr_funzioni/array/array_unico/#array_append","text":"Restituisce un array con il valore passato aggiunto alla fine. Sintassi: array_append( array , value ) Argomenti: array un array value il valore da aggiungere Esempi: array_append(array(1,2,3),4) \u2192 array: 1,2,3,4","title":"array_append"},{"location":"gr_funzioni/array/array_unico/#array_cat","text":"Restituisce un array contenente tutti gli arrays passati concatenati. Sintassi: array_cat( array1 , array2 , \u2026 ) Argomenti: array un array Esempi: array_cat(array(1,2),array(2,3)) \u2192 array: 1,2,2,3","title":"array_cat"},{"location":"gr_funzioni/array/array_unico/#array_contains","text":"Restituisce true se un array contiene il valore specificato. Sintassi: array_contains( array , value ) Argomenti: array un array value il valore da cercare Esempi: array_contains(array(1,2,3),2) \u2192 true","title":"array_contains"},{"location":"gr_funzioni/array/array_unico/#array_count","text":"Conta il numero di occorrenze di un dato valore in un array. Sintassi: array_count( array , value ) Argomenti: array un array value un valore da contare Esempi: array_count(array('a', 'b', 'c', 'b'), 'b') \u2192 2","title":"array_count"},{"location":"gr_funzioni/array/array_unico/#array_distinct","text":"Restituisce un array contenente valori distinti dell'array dato. Sintassi: array_distinct( array ) Argomenti: array un array Esempi: array_distinct(array(1,2,3,2,1)) \u2192 array: 1,2,3","title":"array_distinct"},{"location":"gr_funzioni/array/array_unico/#array_filter","text":"Restituisce un array con solo gli elementi per i quali l'espressione restituisce true (vero). Sintassi: array_filter( array , expression [, limit=0 ]) Argomenti: array un array expression un'espressione da valutare su ogni oggetto. La variabile @ element sar\u00e0 sostituita dal valore corrente. limit numero massimo di elementi da restituire. Usa 0 per restituire tutti i valori. Esempi: array_filter(array(1,2,3),@element < 3) \u2192 [ 1, 2 ]","title":"array_filter"},{"location":"gr_funzioni/array/array_unico/#array_find","text":"Restituisce l'indice (0 per il primo elemento) di un valore all'interno di un array. Restiuisce -1 se il valore non viene trovato Sintassi: array_find( array , value ) Argomenti: array un array value il valore da cercare Esempi: array_find(array(1,2,3),2) \u2192 1","title":"array_find"},{"location":"gr_funzioni/array/array_unico/#array_first","text":"Restituisce il primo valore di un array. Sintassi: array_first( array ) Argomenti: array un array Esempi: array_first(array('a','b','c')) \u2192 'a'","title":"array_first"},{"location":"gr_funzioni/array/array_unico/#array_foreach","text":"Restituisce una matrice con l'espressione data valutata su ciascun elemento. Sintassi: array_foreach( array , expression ) Argomenti: array un array expression un'espressione da valutare su ogni oggetto. La variabile @element sar\u00e0 sostituita dal valore corrente. Esempi: array_foreach(array('a','b','c'),upper(@element)) \u2192 [ 'A', 'B', 'C' ] array_foreach(array(1,2,3),@element + 10) \u2192 [ 11, 12, 13 ] Osservazioni Funzione utile, assieme ad altre, nel compositore di stampe o nella decorazione copyright. Tweet","title":"array_foreach"},{"location":"gr_funzioni/array/array_unico/#array_get","text":"Restituisce l'ennesimo valore (0 per il primo) o l'ultimo -Nesimo valore (-1 per l'ultimo) di un array. Aggiornato a QGIS 3.18 Sintassi: array_get( array , index ) Argomenti: array un array index l'indice da estrarre (partendo da 0) Esempi: array_get(array('a','b','c'),-1) \u2192 'c'","title":"array_get"},{"location":"gr_funzioni/array/array_unico/#array_insert","text":"Restituisce un array con il valore passato aggiunto nella posizione indicata. Sintassi: array_insert( array , pos , value ) Argomenti: array un array pos la posizione in cui aggiungere (partendo da 0) value il valore da aggiungere Esempi: array_insert(array(1,2,3),1,100) \u2192 [ 1, 100, 2, 3 ]","title":"array_insert"},{"location":"gr_funzioni/array/array_unico/#array_intersect","text":"Restituisce true (vero) se almeno un elemento dell' array1 esiste in array2 . Sintassi: array_intersect( array1 , array2 ) Argomenti: array1 un array array2 un altro array Esempi: array_intersect(array(1,2,3,4),array(4,0,2,5)) \u2192 true","title":"array_intersect"},{"location":"gr_funzioni/array/array_unico/#array_last","text":"Restituisce l'ultimo valore di un array. Sintassi: array_last( array ) Argomenti: array un array Esempi: array_last(array('a','b','c')) \u2192 'c'","title":"array_last"},{"location":"gr_funzioni/array/array_unico/#array_length","text":"Restituisce il numero di elementi di un array. Sintassi: array_length( array ) Argomenti: array un array Esempi: array_length(array(1,2,3)) \u2192 3","title":"array_length"},{"location":"gr_funzioni/array/array_unico/#array_majority","text":"Restituisce i valori pi\u00f9 comuni in un array. Sintassi: array_majority( array [, option='all' ]) Argomenti: array un array option='all' una stringa che specifica la gestione dei valori restituiti. Le opzioni valide sono: all : Predefinito, tutti i valori pi\u00f9 comuni vengono restituiti in un array. any : Restituisce uno dei valori pi\u00f9 comuni. median : Restituisce la mediana dei valori pi\u00f9 comuni. I valori non aritmetici sono ignorati. real_majority : Restituisce il valore che si verifica pi\u00f9 della met\u00e0 delle volte rispetto alla dimensione dell'array. Esempi: array_majority(array(0,1,42,42,43), 'all') \u2192 [ 42 ] array_majority(array(0,1,42,42,43,1), 'all') \u2192 [ 42, 1 ] array_majority(array(0,1,42,42,43,1), 'any') \u2192 1 or 42 array_majority(array(0,1,1,2,2), 'median') \u2192 1.5 array_majority(array(0,1,42,42,43), 'real_majority') \u2192 NULL array_majority(array(0,1,42,42,43,42), 'real_majority') \u2192 NULL array_majority(array(0,1,42,42,43,42,42), 'real_majority') \u2192 42","title":"array_majority"},{"location":"gr_funzioni/array/array_unico/#array_max","text":"Restituisce il valore massimo di un array. Sintassi: array_max( array ) Argomenti: array un array o stringa (valori separati da virgola) Esempi: array_max(array(0,42,4,2)) \u2192 42","title":"array_max"},{"location":"gr_funzioni/array/array_unico/#array_mean","text":"Restituisce la media dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati. Sintassi: array_mean( array ) Argomenti: array un array Esempi: array_mean(array(0,1,7,66.6,135.4)) \u2192 42.000000 array_mean(array(0,84,'a','b','c')) \u2192 42","title":"array_mean"},{"location":"gr_funzioni/array/array_unico/#array_median","text":"Restituisce la mediana dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati. Sintassi: array_median( array ) Argomenti: array un array Esempi: array_median(array(0,1,42,42,43)) \u2192 42 array_median(array(0,1,2,42,'a','b')) \u2192 1.5`","title":"array_median"},{"location":"gr_funzioni/array/array_unico/#array_min","text":"Restituisce il valore minimo di un array. Sintassi: array_min( array ) Argomenti: array _ un array o stringa (valori separati da virgola) Esempi: array_min(array(43,42,54)) \u2192 42","title":"array_min"},{"location":"gr_funzioni/array/array_unico/#array_minority","text":"Restituisce i valori meno comuni in un array. Sintassi: array_minority( array [, option='all' ]) Argomenti: array un array option='all' una stringa che specifica la gestione dei valori restituiti. Le opzioni valide sono: all : Predefinito, tutti i valori meno comuni vengono restituiti in un array. any : Restituisce uno dei valori meno comuni. median : Restituisce la mediana dei valori meno comuni. I valori non aritmetici sono ignorati. real_minority : Restituisce valori che si verificano meno della met\u00e0 delle volte rispetto alla dimensione dell'array. Esempi: array_minority(array(0,42,42), 'all') \u2192 [ 0 ] array_minority(array(0,1,42,42), 'all') \u2192 [ 0, 1 ] array_minority(array(0,1,42,42,43,1), 'any') \u2192 0 or 43 array_minority(array(1,2,3,3), 'median') \u2192 1.5 array_minority(array(0,1,42,42,43), 'real_minority') \u2192 [ 42, 43, 0, 1 ] array_minority(array(0,1,42,42,43,42), 'real_minority') \u2192 [ 42, 43, 0, 1 ] array_minority(array(0,1,42,42,43,42,42), 'real_minority') \u2192 [ 43, 0, 1 ]","title":"array_minority"},{"location":"gr_funzioni/array/array_unico/#array_prepend","text":"Restituisce un array con il valore dato aggiunto all'inizio. Sintassi: array_prepend( array , value ) Argomenti: array un array value il valore da aggiungere Esempi: array_prepend(array(1,2,3),0) \u2192 [ 0, 1, 2, 3 ]","title":"array_prepend"},{"location":"gr_funzioni/array/array_unico/#array_prioritize","text":"Restituisce un array ordinato usando l'ordine specificato in un altro array. I valori che sono presenti nel primo array ma assenti nel secondo array saranno aggiunti alla fine del risultato. Sintassi: array_prioritize( array , array_prioritize ) Argomenti: array un array o stringa (valori separati da virgola) array_prioritize array o stringa (valori separati da virgola) contenenti i valori ordinati Esempi: array_prioritize(array(1, 8, 2, 5), array(5, 4, 2, 1, 3, 8)) \u2192 [ 5, 2, 1, 8 ] array_prioritize(array(5, 4, 2, 1, 3, 8), array(1, 8, 6, 5)) \u2192 [ 1, 8, 5, 4, 2, 3 ]","title":"array_prioritize"},{"location":"gr_funzioni/array/array_unico/#array_remove_all","text":"Restituisce un array con tutti gli elementi del valore passato rimossi. Sintassi: array_remove_all( array , value ) Argomenti: array un array value i valori da rimuovere Esempi: array_remove_all(array('a','b','c','b'),'b') \u2192 [ 'a', 'c' ]","title":"array_remove_all"},{"location":"gr_funzioni/array/array_unico/#array_remove_at","text":"Restituisce un array con l'indice passato rimosso. Sintassi: array_remove_at( array , pos ) Argomenti: array un array pos la posizione da rimuovere (partendo da 0) Esempi: array_remove_at(array(1,2,3),1) \u2192 [ 1, 3 ]","title":"array_remove_at"},{"location":"gr_funzioni/array/array_unico/#array_replace","text":"Restituisce un array con il valore, l'array o la mappa dei valori forniti sostituiti.","title":"array_replace"},{"location":"gr_funzioni/array/array_unico/#valore-variante-dellarray","text":"Restituisce un array con il valore o con un array di valori forniti sostituito da un altro valore o da un altro array di valori. Sintassi: array_replace( array , before , after ) Argomenti: array l'array in ingresso before il valore o l'array di valori da sostituire after il valore o l'array di valori da utilizzare come sostituzione Esempi: array_replace(array('QGIS','SHOULD','ROCK'),'SHOULD','DOES') \u2192 [ 'QGIS', 'DOES', 'ROCK' ] array_replace(array(3,2,1),array(1,2,3),array(7,8,9)) \u2192 [ 9, 8, 7 ] array_replace(array('Q','G','I','S'),array('Q','S'),'-') \u2192 [ '-', 'G', 'I', '-' ]","title":"Valore &amp; variante dell'array"},{"location":"gr_funzioni/array/array_unico/#variabile-mappa","text":"Restituisce un array con le chiavi della mappa fornite sostituite dai loro valori abbinati. Sintassi: array_replace( array , map ) Argomenti: array l'array in ingresso map la mappa che contiene le chiavi e i valori Esempi: array_replace(array('APP', 'SHOULD', 'ROCK'),map('APP','QGIS','SHOULD','DOES')) \u2192 [ 'QGIS', 'DOES', 'ROCK' ]","title":"Variabile mappa"},{"location":"gr_funzioni/array/array_unico/#array_reverse","text":"Restituisce l'array dato con valori dell'array in ordine inverso. Sintassi: array_reverse( array ) Argomenti: array un array Esempi: array_reverse(array(2,4,0,10)) \u2192 [ 10, 0, 4, 2 ]","title":"array_reverse"},{"location":"gr_funzioni/array/array_unico/#array_slice","text":"Restituisce una porzione dell'array. Il taglio \u00e8 definito dagli argomenti start_pos e end_pos . Sintassi: array_slice( array , start_pos , end_pos ) Argomenti: array un array start_pos l'indice della posizione iniziale della fetta (a partire da 0). L'indice start_pos \u00e8 incluso nella fetta. Se si utilizza un valore negativo di start_pos, l'indice \u00e8 contato dalla fine della lista (a partire da -1). end_pos l'indice della posizione finale della fetta (a partire da 0). L'indice end_pos \u00e8 incluso nella fetta. Se si utilizza un valore negativo di start_pos, l'indice \u00e8 contato dalla fine della lista (a partire da -1). Esempi: array_slice(array(1,2,3,4,5),0,3) \u2192 [ 1, 2, 3, 4 ] array_slice(array(1,2,3,4,5),0,-1) \u2192 [ 1, 2, 3, 4, 5 ] array_slice(array(1,2,3,4,5),-5,-1) \u2192 [ 1, 2, 3, 4, 5 ] array_slice(array(1,2,3,4,5),0,0) \u2192 [ 1 ] array_slice(array(1,2,3,4,5),-2,-1) \u2192 [ 4, 5 ] array_slice(array(1,2,3,4,5),-1,-1) \u2192 [ 5 ] array_slice(array('Dufour','Valmiera','Chugiak','Brighton'),1,2) \u2192 [ 'Valmiera', 'Chugiak' ] array_slice(array('Dufour','Valmiera','Chugiak','Brighton'),-2,-1) \u2192 [ 'Chugiak', 'Brighton' ]","title":"array_slice"},{"location":"gr_funzioni/array/array_unico/#array_sort","text":"Ordina i valori in ordine crescente (usa array_reverse per desc). Sintassi: array_sort( array [, ascending=true ]) Argomenti: array un array o stringa (valori separati da virgola) ascending imposta questo parametro a false per ordinare l'array in modo decrescente Esempi: array_sort(array(3,2,1)) \u2192 [ 1, 2, 3 ]","title":"array_sort"},{"location":"gr_funzioni/array/array_unico/#array_sum","text":"Restituisce la somma dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati. Sintassi: array_sum( array ) Argomenti: array un array Esempi: array_sum(array(0,1,39.4,1.6,'a')) \u2192 42.0","title":"array_sum"},{"location":"gr_funzioni/array/array_unico/#array_to_string","text":"Concatena gli elementi di un array in una stringa separata da un delimitatore usando una stringa opzionale per valori mancanti. Sintassi: array_to_string( array [, delimiter ][, empty_value ]) [ ] indica componenti opzionali Argomenti: array l'array in ingresso delimiter il delimitatore stringa usato per separare gli elementi array concatenati empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti Esempi: array_to_string(array('1','2','3')) \u2192 '1,2,3' array_to_string(array(1,2,3),'-') \u2192 '1-2-3' array_to_string(array('1','','3'),',','0') \u2192 '1,0,3'","title":"array_to_string"},{"location":"gr_funzioni/array/array_unico/#generate_series","text":"La funzione crea una matrice contenente una sequenza di numeri, segue le stesse regole della funzione generate_series () di PostgreSQL. Sintassi: generate_series( start , stop [, step =1] ) [ ] contrassegna componenti opzionali Argomenti: start primo valore della sequenza stop valore che termina la sequenza una volta raggiunta step passo usato come incremento tra i valori Esempi: generate_series(1,5) \u2192 [ 1, 2, 3, 4, 5 ] generate_series(5,1,-1) \u2192 [ 5, 4, 3, 2, 1 ]","title":"generate_series"},{"location":"gr_funzioni/array/array_unico/#regexp_matches","text":"Restituisce un array di tutte le stringhe catturate dai gruppo, nell'ordine che i gruppi stessi compaiono con l'espressione regolare fornita con una stringa. Sintassi: regexp_matches( string , regex [, empty_value='' ]) [ ] indica componenti opzionali Argomenti: string la stringa con cui catturare i gruppi da un'espressione regolare regex l'espressione regolare usata per catturare gruppi empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti Esempi: regexp_matches('QGIS=>rocks','(.*)=>(.*)') \u2192 [ 'QGIS', 'rocks' ] regexp_matches('key=>','(.*)=>(.*)','empty value') \u2192 [ 'key', 'empty value' ]","title":"regexp_matches"},{"location":"gr_funzioni/array/array_unico/#string_to_array","text":"Divide la stringa in un array usando il delimitatore fornito e la stringa opzionale per valori mancanti. Sintassi: string_to_array( string [, delimiter ][, empty_value='' ]) [ ] indica componenti opzionali Argomenti: string la stringa in ingresso delimiter il delimitatore stringa usato per dividere la stringa in ingresso empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti Esempi: string_to_array('1,2,3',',') \u2192 [ '1', '2', '3' ] string_to_array('1,,3',',','0') \u2192 [ '1', '0', '3' ]","title":"string_to_array"},{"location":"gr_funzioni/arrays/array/","text":"array \u21b5 Restituisce un array contenente tutti i valori passati come parametro. Sintassi \u21b5 array( value1 , value2 , \u2026 ) Argomenti \u21b5 value un valore Esempi \u21b5 array(2,10) \u2192 array: 2, 10 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array"},{"location":"gr_funzioni/arrays/array/#array","text":"Restituisce un array contenente tutti i valori passati come parametro.","title":"array"},{"location":"gr_funzioni/arrays/array/#sintassi","text":"array( value1 , value2 , \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array/#argomenti","text":"value un valore","title":"Argomenti"},{"location":"gr_funzioni/arrays/array/#esempi","text":"array(2,10) \u2192 array: 2, 10","title":"Esempi"},{"location":"gr_funzioni/arrays/array/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_all/","text":"array_all \u21b5 Restituisce true se un array contiene tutti i valori di un determinato array. Sintassi \u21b5 array_all( array_a, array_b, \u2026 ) Argomenti \u21b5 array_a un array array_b un array di valori da cercare Esempi \u21b5 array_all(array(1,2,3),array(2,3)) \u2192 vero array_all(array(1,2,3),array(1,2,4)) \u2192 falso nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_all"},{"location":"gr_funzioni/arrays/array_all/#array_all","text":"Restituisce true se un array contiene tutti i valori di un determinato array.","title":"array_all"},{"location":"gr_funzioni/arrays/array_all/#sintassi","text":"array_all( array_a, array_b, \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_all/#argomenti","text":"array_a un array array_b un array di valori da cercare","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_all/#esempi","text":"array_all(array(1,2,3),array(2,3)) \u2192 vero array_all(array(1,2,3),array(1,2,4)) \u2192 falso","title":"Esempi"},{"location":"gr_funzioni/arrays/array_all/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_all/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_append/","text":"array_append \u21b5 Restituisce un array con il valore passato aggiunto alla fine. Sintassi \u21b5 array_append( array , value ) Argomenti \u21b5 array un array value il valore da aggiungere Esempi \u21b5 array_append(array(1,2,3),4) \u2192 array: 1,2,3,4 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_append"},{"location":"gr_funzioni/arrays/array_append/#array_append","text":"Restituisce un array con il valore passato aggiunto alla fine.","title":"array_append"},{"location":"gr_funzioni/arrays/array_append/#sintassi","text":"array_append( array , value )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_append/#argomenti","text":"array un array value il valore da aggiungere","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_append/#esempi","text":"array_append(array(1,2,3),4) \u2192 array: 1,2,3,4","title":"Esempi"},{"location":"gr_funzioni/arrays/array_append/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_append/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_avg/","text":"array_avg \u21b5 Calcola il valore medio di un array. Sintassi \u21b5 array_avg( array ) Argomenti \u21b5 array un array o stringa (valori separati da virgola) Esempi \u21b5 array_avg(array(1,2,3)) \u2192 2 array_avg('1,2,3') \u2192 2 dalla versione 1.4 del plugin!!! dalla versione 1.4 del plugin: nota bene \u21b5 Questa funzione sar\u00e0 presente, nel calcolatore, solo dopo l'installazione del plugin ArrayPlus osservazioni \u21b5 --","title":"array_avg"},{"location":"gr_funzioni/arrays/array_avg/#array_avg","text":"Calcola il valore medio di un array.","title":"array_avg"},{"location":"gr_funzioni/arrays/array_avg/#sintassi","text":"array_avg( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_avg/#argomenti","text":"array un array o stringa (valori separati da virgola)","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_avg/#esempi","text":"array_avg(array(1,2,3)) \u2192 2 array_avg('1,2,3') \u2192 2 dalla versione 1.4 del plugin!!! dalla versione 1.4 del plugin:","title":"Esempi"},{"location":"gr_funzioni/arrays/array_avg/#nota-bene","text":"Questa funzione sar\u00e0 presente, nel calcolatore, solo dopo l'installazione del plugin ArrayPlus","title":"nota bene"},{"location":"gr_funzioni/arrays/array_avg/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_cat/","text":"array_cat \u21b5 Restituisce un array contenente tutti gli arrays passati concatenati. Sintassi \u21b5 array_cat( array1 , array2 , \u2026 ) Argomenti \u21b5 array un array Esempi \u21b5 array_cat(array(1,2),array(2,3)) \u2192 array: 1,2,2,3 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_cat"},{"location":"gr_funzioni/arrays/array_cat/#array_cat","text":"Restituisce un array contenente tutti gli arrays passati concatenati.","title":"array_cat"},{"location":"gr_funzioni/arrays/array_cat/#sintassi","text":"array_cat( array1 , array2 , \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_cat/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_cat/#esempi","text":"array_cat(array(1,2),array(2,3)) \u2192 array: 1,2,2,3","title":"Esempi"},{"location":"gr_funzioni/arrays/array_cat/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_cat/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_contains/","text":"array_contains \u21b5 Restituisce true se un array contiene il valore specificato. Sintassi \u21b5 array_contains( array , value ) Argomenti \u21b5 array un array value il valore da cercare Esempi \u21b5 array_contains(array(1,2,3),2) \u2192 true nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_contains"},{"location":"gr_funzioni/arrays/array_contains/#array_contains","text":"Restituisce true se un array contiene il valore specificato.","title":"array_contains"},{"location":"gr_funzioni/arrays/array_contains/#sintassi","text":"array_contains( array , value )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_contains/#argomenti","text":"array un array value il valore da cercare","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_contains/#esempi","text":"array_contains(array(1,2,3),2) \u2192 true","title":"Esempi"},{"location":"gr_funzioni/arrays/array_contains/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_contains/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_count/","text":"array_count \u21b5 Conta il numero di occorrenze di un dato valore in un array. Sintassi \u21b5 array_count(array,value) Argomenti \u21b5 array un array value un valore da contare Esempi \u21b5 array_count(array('a', 'b', 'c', 'b'), 'b') \u2192 2 nota bene \u21b5 osservazioni \u21b5 --","title":"array_count"},{"location":"gr_funzioni/arrays/array_count/#array_count","text":"Conta il numero di occorrenze di un dato valore in un array.","title":"array_count"},{"location":"gr_funzioni/arrays/array_count/#sintassi","text":"array_count(array,value)","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_count/#argomenti","text":"array un array value un valore da contare","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_count/#esempi","text":"array_count(array('a', 'b', 'c', 'b'), 'b') \u2192 2","title":"Esempi"},{"location":"gr_funzioni/arrays/array_count/#nota-bene","text":"","title":"nota bene"},{"location":"gr_funzioni/arrays/array_count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_distinct/","text":"array_distinct \u21b5 Restituisce un array contenente valori distinti dell'array dato. Sintassi \u21b5 array_distinct( array ) Argomenti \u21b5 array un array Esempi \u21b5 array_distinct(array(1,2,3,2,1)) \u2192 array: 1,2,3 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_distinct"},{"location":"gr_funzioni/arrays/array_distinct/#array_distinct","text":"Restituisce un array contenente valori distinti dell'array dato.","title":"array_distinct"},{"location":"gr_funzioni/arrays/array_distinct/#sintassi","text":"array_distinct( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_distinct/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_distinct/#esempi","text":"array_distinct(array(1,2,3,2,1)) \u2192 array: 1,2,3","title":"Esempi"},{"location":"gr_funzioni/arrays/array_distinct/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_distinct/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_filter/","text":"array_filter \u21b5 Restituisce un array con solo gli elementi per i quali l'espressione restituisce true (vero). Sintassi \u21b5 array_filter( array , expression ) Argomenti \u21b5 array un array expression un'espressione da valutare su ogni oggetto. La variabile @ element sar\u00e0 sostituita dal valore corrente. Esempi \u21b5 array_filter(array(1,2,3),@element < 3) \u2192 [ 1, 2 ] nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_filter"},{"location":"gr_funzioni/arrays/array_filter/#array_filter","text":"Restituisce un array con solo gli elementi per i quali l'espressione restituisce true (vero).","title":"array_filter"},{"location":"gr_funzioni/arrays/array_filter/#sintassi","text":"array_filter( array , expression )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_filter/#argomenti","text":"array un array expression un'espressione da valutare su ogni oggetto. La variabile @ element sar\u00e0 sostituita dal valore corrente.","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_filter/#esempi","text":"array_filter(array(1,2,3),@element < 3) \u2192 [ 1, 2 ]","title":"Esempi"},{"location":"gr_funzioni/arrays/array_filter/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_filter/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_find/","text":"array_find \u21b5 Restituisce l'indice (0 per il primo elemento) di un valore all'interno di un array. Restiuisce -1 se il valore non viene trovato Sintassi \u21b5 array_find( array , value ) Argomenti \u21b5 array un array value il valore da cercare Esempi \u21b5 array_find(array(1,2,3),2) \u2192 1 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_find"},{"location":"gr_funzioni/arrays/array_find/#array_find","text":"Restituisce l'indice (0 per il primo elemento) di un valore all'interno di un array. Restiuisce -1 se il valore non viene trovato","title":"array_find"},{"location":"gr_funzioni/arrays/array_find/#sintassi","text":"array_find( array , value )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_find/#argomenti","text":"array un array value il valore da cercare","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_find/#esempi","text":"array_find(array(1,2,3),2) \u2192 1","title":"Esempi"},{"location":"gr_funzioni/arrays/array_find/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_find/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_first/","text":"array_first \u21b5 Restituisce il primo valore di un array. Sintassi \u21b5 array_first( array ) Argomenti \u21b5 array un array Esempi \u21b5 array_first(array('a','b','c')) \u2192 'a' nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_first"},{"location":"gr_funzioni/arrays/array_first/#array_first","text":"Restituisce il primo valore di un array.","title":"array_first"},{"location":"gr_funzioni/arrays/array_first/#sintassi","text":"array_first( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_first/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_first/#esempi","text":"array_first(array('a','b','c')) \u2192 'a'","title":"Esempi"},{"location":"gr_funzioni/arrays/array_first/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_first/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_foreach/","text":"array_foreach \u21b5 Restituisce una matrice con l'espressione data valutata su ciascun elemento. Sintassi \u21b5 array_foreach( array , expression ) Argomenti \u21b5 array un array expression un'espressione da valutare su ogni oggetto. La variabile @element sar\u00e0 sostituita dal valore corrente. Esempi \u21b5 array_foreach(array('a','b','c'),upper(@element)) \u2192 array: 'A', 'B', 'C' array_foreach(array(1,2,3),@element + 10) \u2192 array: 11, 12, 13 nota bene \u21b5 -- osservazioni \u21b5 Funzione utile, assieme ad altre, nel compositore di stampe o nella decorazione copyright. Tweet","title":"array_foreach"},{"location":"gr_funzioni/arrays/array_foreach/#array_foreach","text":"Restituisce una matrice con l'espressione data valutata su ciascun elemento.","title":"array_foreach"},{"location":"gr_funzioni/arrays/array_foreach/#sintassi","text":"array_foreach( array , expression )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_foreach/#argomenti","text":"array un array expression un'espressione da valutare su ogni oggetto. La variabile @element sar\u00e0 sostituita dal valore corrente.","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_foreach/#esempi","text":"array_foreach(array('a','b','c'),upper(@element)) \u2192 array: 'A', 'B', 'C' array_foreach(array(1,2,3),@element + 10) \u2192 array: 11, 12, 13","title":"Esempi"},{"location":"gr_funzioni/arrays/array_foreach/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_foreach/#osservazioni","text":"Funzione utile, assieme ad altre, nel compositore di stampe o nella decorazione copyright. Tweet","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_get/","text":"array_get \u21b5 Restituisce l'ennesimo valore (0 per il primo) o l'ultimo -Nesimo valore (-1 per l'ultimo) di un array. Aggiornato a QGIS 3.18 Sintassi \u21b5 array_get( array, index ) Argomenti \u21b5 array un array index l'indice da estrarre (partendo da 0) Esempi \u21b5 array_get(array('a','b','c'),-1) \u2192 'c' nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_get"},{"location":"gr_funzioni/arrays/array_get/#array_get","text":"Restituisce l'ennesimo valore (0 per il primo) o l'ultimo -Nesimo valore (-1 per l'ultimo) di un array. Aggiornato a QGIS 3.18","title":"array_get"},{"location":"gr_funzioni/arrays/array_get/#sintassi","text":"array_get( array, index )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_get/#argomenti","text":"array un array index l'indice da estrarre (partendo da 0)","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_get/#esempi","text":"array_get(array('a','b','c'),-1) \u2192 'c'","title":"Esempi"},{"location":"gr_funzioni/arrays/array_get/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_get/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_insert/","text":"array_insert \u21b5 Restituisce un array con il valore passato aggiunto nella posizione indicata. Sintassi \u21b5 array_insert( array , pos , value ) Argomenti \u21b5 array un array pos la posizione in cui aggiungere (partendo da 0) value il valore da aggiungere Esempi \u21b5 array_insert(array(1,2,3),1,100) \u2192 array: 1,100,2,3 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_insert"},{"location":"gr_funzioni/arrays/array_insert/#array_insert","text":"Restituisce un array con il valore passato aggiunto nella posizione indicata.","title":"array_insert"},{"location":"gr_funzioni/arrays/array_insert/#sintassi","text":"array_insert( array , pos , value )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_insert/#argomenti","text":"array un array pos la posizione in cui aggiungere (partendo da 0) value il valore da aggiungere","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_insert/#esempi","text":"array_insert(array(1,2,3),1,100) \u2192 array: 1,100,2,3","title":"Esempi"},{"location":"gr_funzioni/arrays/array_insert/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_insert/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_intersect/","text":"array_intersect \u21b5 Restituisce true (vero) se almeno un elemento dell' array1 esiste in array2 . Sintassi \u21b5 array_intersect( array1 , array2 ) Argomenti \u21b5 array1 un array array2 un altro array Esempi \u21b5 array_intersect(array(1,2,3,4),array(4,0,2,5)) \u2192 true nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_intersect"},{"location":"gr_funzioni/arrays/array_intersect/#array_intersect","text":"Restituisce true (vero) se almeno un elemento dell' array1 esiste in array2 .","title":"array_intersect"},{"location":"gr_funzioni/arrays/array_intersect/#sintassi","text":"array_intersect( array1 , array2 )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_intersect/#argomenti","text":"array1 un array array2 un altro array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_intersect/#esempi","text":"array_intersect(array(1,2,3,4),array(4,0,2,5)) \u2192 true","title":"Esempi"},{"location":"gr_funzioni/arrays/array_intersect/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_intersect/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_lambda/","text":"array_lambda \u21b5 Applica una funzione personalizzata a ciascun elemento (x) Sintassi \u21b5 array_lambda( array , lambda function ) Argomenti \u21b5 array un array o stringa (valori separati da virgola) lambda function una stringa che rappresenta la funzione da applicare. L'elemento array \u00e8 rappresentato come 'x' Esempi \u21b5 array_lambda(array(1,2,3),'x+10') \u2192 <array: 11,12,13> array_lambda( '1,2,3', '10') \u2192 <array: 11,12,13> dalla versione 1.4 del plugin: nota bene \u21b5 Questa funzione sar\u00e0 presente, nel calcolatore, solo dopo l'installazione del plugin ArrayPlus osservazioni \u21b5 --","title":"array_lambda"},{"location":"gr_funzioni/arrays/array_lambda/#array_lambda","text":"Applica una funzione personalizzata a ciascun elemento (x)","title":"array_lambda"},{"location":"gr_funzioni/arrays/array_lambda/#sintassi","text":"array_lambda( array , lambda function )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_lambda/#argomenti","text":"array un array o stringa (valori separati da virgola) lambda function una stringa che rappresenta la funzione da applicare. L'elemento array \u00e8 rappresentato come 'x'","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_lambda/#esempi","text":"array_lambda(array(1,2,3),'x+10') \u2192 <array: 11,12,13> array_lambda( '1,2,3', '10') \u2192 <array: 11,12,13> dalla versione 1.4 del plugin:","title":"Esempi"},{"location":"gr_funzioni/arrays/array_lambda/#nota-bene","text":"Questa funzione sar\u00e0 presente, nel calcolatore, solo dopo l'installazione del plugin ArrayPlus","title":"nota bene"},{"location":"gr_funzioni/arrays/array_lambda/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_last/","text":"array_last \u21b5 Restituisce l'ultimo valore di un array. Sintassi \u21b5 array_last( array ) Argomenti \u21b5 array un array Esempi \u21b5 array_last(array('a','b','c')) \u2192 'c' nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_last"},{"location":"gr_funzioni/arrays/array_last/#array_last","text":"Restituisce l'ultimo valore di un array.","title":"array_last"},{"location":"gr_funzioni/arrays/array_last/#sintassi","text":"array_last( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_last/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_last/#esempi","text":"array_last(array('a','b','c')) \u2192 'c'","title":"Esempi"},{"location":"gr_funzioni/arrays/array_last/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_last/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_length/","text":"array_length \u21b5 Restituisce il numero di elementi di un array. Sintassi \u21b5 array_length( array ) Argomenti \u21b5 array un array Esempi \u21b5 array_length(array(1,2,3)) \u2192 3 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_length"},{"location":"gr_funzioni/arrays/array_length/#array_length","text":"Restituisce il numero di elementi di un array.","title":"array_length"},{"location":"gr_funzioni/arrays/array_length/#sintassi","text":"array_length( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_length/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_length/#esempi","text":"array_length(array(1,2,3)) \u2192 3","title":"Esempi"},{"location":"gr_funzioni/arrays/array_length/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_length/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_majority/","text":"array_majority \u21b5 Restituisce un array contenente il valore pi\u00f9 comune in un array. L'array restituito pu\u00f2 contenere pi\u00f9 di un valore se pi\u00f9 valori si verificano con la stessa frequenza. Sintassi \u21b5 array_majority( array ) Argomenti \u21b5 array un array Esempi \u21b5 array_majority(array(0,1,42,42,43)) \u2192 [ 42 ] array_majority(array(0,0,1,2,2,42)) \u2192 [ 0, 2 ] nota bene \u21b5 osservazioni \u21b5 --","title":"array_majority"},{"location":"gr_funzioni/arrays/array_majority/#array_majority","text":"Restituisce un array contenente il valore pi\u00f9 comune in un array. L'array restituito pu\u00f2 contenere pi\u00f9 di un valore se pi\u00f9 valori si verificano con la stessa frequenza.","title":"array_majority"},{"location":"gr_funzioni/arrays/array_majority/#sintassi","text":"array_majority( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_majority/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_majority/#esempi","text":"array_majority(array(0,1,42,42,43)) \u2192 [ 42 ] array_majority(array(0,0,1,2,2,42)) \u2192 [ 0, 2 ]","title":"Esempi"},{"location":"gr_funzioni/arrays/array_majority/#nota-bene","text":"","title":"nota bene"},{"location":"gr_funzioni/arrays/array_majority/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_max/","text":"array_max \u21b5 Restituisce il valore massimo di un array. Sintassi \u21b5 array_max( array ) Argomenti \u21b5 array un array o stringa (valori separati da virgola) Esempi \u21b5 array_max(array(0,42,4,2)) \u2192 42 nota bene \u21b5 osservazioni \u21b5 --","title":"array_max"},{"location":"gr_funzioni/arrays/array_max/#array_max","text":"Restituisce il valore massimo di un array.","title":"array_max"},{"location":"gr_funzioni/arrays/array_max/#sintassi","text":"array_max( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_max/#argomenti","text":"array un array o stringa (valori separati da virgola)","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_max/#esempi","text":"array_max(array(0,42,4,2)) \u2192 42","title":"Esempi"},{"location":"gr_funzioni/arrays/array_max/#nota-bene","text":"","title":"nota bene"},{"location":"gr_funzioni/arrays/array_max/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_mean/","text":"array_mean \u21b5 Restituisce la media dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati. Sintassi \u21b5 array_mean( array ) Argomenti \u21b5 array un array Esempi \u21b5 array_mean(array(0,1,7,66.6,135.4)) \u2192 42 array_mean(array(0,84,'a','b','c')) \u2192 42 nota bene \u21b5 osservazioni \u21b5 --","title":"array_mean"},{"location":"gr_funzioni/arrays/array_mean/#array_mean","text":"Restituisce la media dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati.","title":"array_mean"},{"location":"gr_funzioni/arrays/array_mean/#sintassi","text":"array_mean( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_mean/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_mean/#esempi","text":"array_mean(array(0,1,7,66.6,135.4)) \u2192 42 array_mean(array(0,84,'a','b','c')) \u2192 42","title":"Esempi"},{"location":"gr_funzioni/arrays/array_mean/#nota-bene","text":"","title":"nota bene"},{"location":"gr_funzioni/arrays/array_mean/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_median/","text":"array_median \u21b5 Restituisce la mediana dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati. Sintassi \u21b5 array_median( array ) Argomenti \u21b5 array un array Esempi \u21b5 array_median(array(0,1,42,42,43)) \u2192 42 array_median(array(0,1,2,42,'a','b')) \u2192 1.5 nota bene \u21b5 osservazioni \u21b5 --","title":"array_median"},{"location":"gr_funzioni/arrays/array_median/#array_median","text":"Restituisce la mediana dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati.","title":"array_median"},{"location":"gr_funzioni/arrays/array_median/#sintassi","text":"array_median( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_median/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_median/#esempi","text":"array_median(array(0,1,42,42,43)) \u2192 42 array_median(array(0,1,2,42,'a','b')) \u2192 1.5","title":"Esempi"},{"location":"gr_funzioni/arrays/array_median/#nota-bene","text":"","title":"nota bene"},{"location":"gr_funzioni/arrays/array_median/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_min/","text":"array_min \u21b5 Restituisce il valore minimo di un array. Sintassi \u21b5 array_min( array ) Argomenti \u21b5 array un array o stringa (valori separati da virgola) Esempi \u21b5 array_min(array(43,42,54)) \u2192 42 nota bene \u21b5 osservazioni \u21b5 --","title":"array_min"},{"location":"gr_funzioni/arrays/array_min/#array_min","text":"Restituisce il valore minimo di un array.","title":"array_min"},{"location":"gr_funzioni/arrays/array_min/#sintassi","text":"array_min( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_min/#argomenti","text":"array un array o stringa (valori separati da virgola)","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_min/#esempi","text":"array_min(array(43,42,54)) \u2192 42","title":"Esempi"},{"location":"gr_funzioni/arrays/array_min/#nota-bene","text":"","title":"nota bene"},{"location":"gr_funzioni/arrays/array_min/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_minority/","text":"array_minority \u21b5 Restituisce il valore pi\u00f9 comune. Restituisce un valore arbitrario se ex-equo. Sintassi \u21b5 array_minority( array ) Argomenti \u21b5 array un array o stringa (valori separati da virgola) Esempi \u21b5 array_minority(string_to_array( 'a,b,c,a,a'))->'c' array_minority(array(3,4,5,3,2,1,14,14,1)) \u2192 2 array_minority('a,b,c,a,a')->'c' dalla versione 1.4 del plugin: nota bene \u21b5 Questa funzione sar\u00e0 presente, nel calcolatore, solo dopo l'installazione del plugin ArrayPlus osservazioni \u21b5 --","title":"array_minority"},{"location":"gr_funzioni/arrays/array_minority/#array_minority","text":"Restituisce il valore pi\u00f9 comune. Restituisce un valore arbitrario se ex-equo.","title":"array_minority"},{"location":"gr_funzioni/arrays/array_minority/#sintassi","text":"array_minority( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_minority/#argomenti","text":"array un array o stringa (valori separati da virgola)","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_minority/#esempi","text":"array_minority(string_to_array( 'a,b,c,a,a'))->'c' array_minority(array(3,4,5,3,2,1,14,14,1)) \u2192 2 array_minority('a,b,c,a,a')->'c' dalla versione 1.4 del plugin:","title":"Esempi"},{"location":"gr_funzioni/arrays/array_minority/#nota-bene","text":"Questa funzione sar\u00e0 presente, nel calcolatore, solo dopo l'installazione del plugin ArrayPlus","title":"nota bene"},{"location":"gr_funzioni/arrays/array_minority/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_prepend/","text":"array_prepend \u21b5 Restituisce un array con il valore dato aggiunto all'inizio. Sintassi \u21b5 array_prepend( array , value ) Argomenti \u21b5 array un array value il valore da aggiungere Esempi \u21b5 array_prepend(array(1,2,3),0) \u2192 array: 0,1,2,3 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_prepend"},{"location":"gr_funzioni/arrays/array_prepend/#array_prepend","text":"Restituisce un array con il valore dato aggiunto all'inizio.","title":"array_prepend"},{"location":"gr_funzioni/arrays/array_prepend/#sintassi","text":"array_prepend( array , value )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_prepend/#argomenti","text":"array un array value il valore da aggiungere","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_prepend/#esempi","text":"array_prepend(array(1,2,3),0) \u2192 array: 0,1,2,3","title":"Esempi"},{"location":"gr_funzioni/arrays/array_prepend/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_prepend/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_prioritize/","text":"array_prioritize \u21b5 Ordina un array rispetto ad un altro Sintassi \u21b5 array_prioritize( array,prioritized array ) Argomenti \u21b5 array un array o stringa (valori separati da virgola) prioritized array array o stringa (valori separati da virgola) contenenti i valori ordinati Esempi \u21b5 array_prioritize( array(1,8,2,5), array(5,4,2,1,3,8) ) \u2192 <array: 5, 2, 1, 8> array_prioritize( '1,8,2,5', '5,4,2,1,3,8') \u2192 <array: '5', '2', '1', '8'> nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_prioritize"},{"location":"gr_funzioni/arrays/array_prioritize/#array_prioritize","text":"Ordina un array rispetto ad un altro","title":"array_prioritize"},{"location":"gr_funzioni/arrays/array_prioritize/#sintassi","text":"array_prioritize( array,prioritized array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_prioritize/#argomenti","text":"array un array o stringa (valori separati da virgola) prioritized array array o stringa (valori separati da virgola) contenenti i valori ordinati","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_prioritize/#esempi","text":"array_prioritize( array(1,8,2,5), array(5,4,2,1,3,8) ) \u2192 <array: 5, 2, 1, 8> array_prioritize( '1,8,2,5', '5,4,2,1,3,8') \u2192 <array: '5', '2', '1', '8'>","title":"Esempi"},{"location":"gr_funzioni/arrays/array_prioritize/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_prioritize/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_remove_all/","text":"array_remove_all \u21b5 Restituisce un array con tutti gli elementi del valore passato rimossi. Sintassi \u21b5 array_remove_all( array , value ) Argomenti \u21b5 array un array value i valori da rimuovere Esempi \u21b5 array_remove_all(array('a','b','c','b'),'b') \u2192 array: 'a','c' nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_remove_all"},{"location":"gr_funzioni/arrays/array_remove_all/#array_remove_all","text":"Restituisce un array con tutti gli elementi del valore passato rimossi.","title":"array_remove_all"},{"location":"gr_funzioni/arrays/array_remove_all/#sintassi","text":"array_remove_all( array , value )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_remove_all/#argomenti","text":"array un array value i valori da rimuovere","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_remove_all/#esempi","text":"array_remove_all(array('a','b','c','b'),'b') \u2192 array: 'a','c'","title":"Esempi"},{"location":"gr_funzioni/arrays/array_remove_all/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_remove_all/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_remove_at/","text":"array_remove_at \u21b5 Restituisce un array con l'indice passato rimosso. Sintassi \u21b5 array_remove_at( array , pos ) Argomenti \u21b5 array un array pos la posizione da rimuovere (partendo da 0) Esempi \u21b5 array_remove_at(array(1,2,3),1) \u2192 array: 1,3 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_remove_at"},{"location":"gr_funzioni/arrays/array_remove_at/#array_remove_at","text":"Restituisce un array con l'indice passato rimosso.","title":"array_remove_at"},{"location":"gr_funzioni/arrays/array_remove_at/#sintassi","text":"array_remove_at( array , pos )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_remove_at/#argomenti","text":"array un array pos la posizione da rimuovere (partendo da 0)","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_remove_at/#esempi","text":"array_remove_at(array(1,2,3),1) \u2192 array: 1,3","title":"Esempi"},{"location":"gr_funzioni/arrays/array_remove_at/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_remove_at/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_replace/","text":"array_replace \u21b5 Restituisce un array con il valore, l'array o la mappa dei valori forniti sostituiti. Valore & variante dell'array \u21b5 Restituisce un array con il valore o con un array di valori forniti sostituito da un altro valore o da un altro array di valori. Sintassi \u21b5 array_replace( array , before , after ) Argomenti \u21b5 array l'array in ingresso before il valore o l'array di valori da sostituire after il valore o l'array di valori da utilizzare come sostituzione Esempi \u21b5 array_replace(array('QGIS','SHOULD','ROCK'),'SHOULD','DOES') \u2192 [ 'QGIS', 'DOES', 'ROCK' ] array_replace(array(3,2,1),array(1,2,3),array(7,8,9)) \u2192 [ 0, 2 ] array_replace(array('Q','G','I','S'),array('Q','S'),'-') \u2192 [ '-', 'G', 'I', '-' ] Variabile mappa \u21b5 Restituisce un array con le chiavi della mappa fornite sostituite dai loro valori abbinati. Sintassi \u21b5 array_replace( array , map ) Argomenti \u21b5 array l'array in ingresso map la mappa che contiene le chiavi e i valori Esempi \u21b5 array_replace(array('APP', 'SHOULD', 'ROCK'),map('APP','QGIS','SHOULD','DOES')) \u2192 [ 'QGIS', 'DOES', 'ROCK' ] nota bene \u21b5 osservazioni \u21b5 --","title":"array_replace"},{"location":"gr_funzioni/arrays/array_replace/#array_replace","text":"Restituisce un array con il valore, l'array o la mappa dei valori forniti sostituiti.","title":"array_replace"},{"location":"gr_funzioni/arrays/array_replace/#valore-variante-dellarray","text":"Restituisce un array con il valore o con un array di valori forniti sostituito da un altro valore o da un altro array di valori.","title":"Valore &amp; variante dell'array"},{"location":"gr_funzioni/arrays/array_replace/#sintassi","text":"array_replace( array , before , after )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_replace/#argomenti","text":"array l'array in ingresso before il valore o l'array di valori da sostituire after il valore o l'array di valori da utilizzare come sostituzione","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_replace/#esempi","text":"array_replace(array('QGIS','SHOULD','ROCK'),'SHOULD','DOES') \u2192 [ 'QGIS', 'DOES', 'ROCK' ] array_replace(array(3,2,1),array(1,2,3),array(7,8,9)) \u2192 [ 0, 2 ] array_replace(array('Q','G','I','S'),array('Q','S'),'-') \u2192 [ '-', 'G', 'I', '-' ]","title":"Esempi"},{"location":"gr_funzioni/arrays/array_replace/#variabile-mappa","text":"Restituisce un array con le chiavi della mappa fornite sostituite dai loro valori abbinati.","title":"Variabile mappa"},{"location":"gr_funzioni/arrays/array_replace/#sintassi_1","text":"array_replace( array , map )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_replace/#argomenti_1","text":"array l'array in ingresso map la mappa che contiene le chiavi e i valori","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_replace/#esempi_1","text":"array_replace(array('APP', 'SHOULD', 'ROCK'),map('APP','QGIS','SHOULD','DOES')) \u2192 [ 'QGIS', 'DOES', 'ROCK' ]","title":"Esempi"},{"location":"gr_funzioni/arrays/array_replace/#nota-bene","text":"","title":"nota bene"},{"location":"gr_funzioni/arrays/array_replace/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_reverse/","text":"array_reverse \u21b5 Restituisce l'array dato con valori dell'array in ordine inverso. Sintassi \u21b5 array_reverse( array ) Argomenti \u21b5 array un array Esempi \u21b5 array_reverse(array(2,4,0,10)) \u2192 array: 10,0,4,2 nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_reverse"},{"location":"gr_funzioni/arrays/array_reverse/#array_reverse","text":"Restituisce l'array dato con valori dell'array in ordine inverso.","title":"array_reverse"},{"location":"gr_funzioni/arrays/array_reverse/#sintassi","text":"array_reverse( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_reverse/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_reverse/#esempi","text":"array_reverse(array(2,4,0,10)) \u2192 array: 10,0,4,2","title":"Esempi"},{"location":"gr_funzioni/arrays/array_reverse/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_reverse/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_slice/","text":"array_slice \u21b5 Restituisce una porzione dell'array. Il taglio \u00e8 definito dagli argomenti start_pos e end_pos . Sintassi \u21b5 array_slice( array , start_pos , end_pos ) Argomenti \u21b5 array un array start_pos l'indice della posizione iniziale della fetta (a partire da 0). L'indice start_pos \u00e8 incluso nella fetta. Se si utilizza un valore negativo di start_pos, l'indice \u00e8 contato dalla fine della lista (a partire da -1). end_pos l'indice della posizione finale della fetta (a partire da 0). L'indice end_pos \u00e8 incluso nella fetta. Se si utilizza un valore negativo di start_pos, l'indice \u00e8 contato dalla fine della lista (a partire da -1). Esempi \u21b5 array_slice(array(1,2,3,4,5),0,3) \u2192 array: 1,2,3,4 array_slice(array(1,2,3,4,5),0,-1) \u2192 array: 1,2,3,4,5 array_slice(array(1,2,3,4,5),-5,-1) \u2192 array: 1,2,3,4,5 array_slice(array(1,2,3,4,5),0,0) \u2192 array: 1 array_slice(array(1,2,3,4,5),-2,-1) \u2192 array: 4,5 array_slice(array(1,2,3,4,5),-1,-1) \u2192 array: 5 array_slice(array('Dufour','Valmiera','Chugiak','Brighton'),1,2) \u2192 array: 'Valmiera','Chugiak' array_slice(array('Dufour','Valmiera','Chugiak','Brighton'),-2,-1) \u2192 array: 'Chugiak','Brighton' nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_slice"},{"location":"gr_funzioni/arrays/array_slice/#array_slice","text":"Restituisce una porzione dell'array. Il taglio \u00e8 definito dagli argomenti start_pos e end_pos .","title":"array_slice"},{"location":"gr_funzioni/arrays/array_slice/#sintassi","text":"array_slice( array , start_pos , end_pos )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_slice/#argomenti","text":"array un array start_pos l'indice della posizione iniziale della fetta (a partire da 0). L'indice start_pos \u00e8 incluso nella fetta. Se si utilizza un valore negativo di start_pos, l'indice \u00e8 contato dalla fine della lista (a partire da -1). end_pos l'indice della posizione finale della fetta (a partire da 0). L'indice end_pos \u00e8 incluso nella fetta. Se si utilizza un valore negativo di start_pos, l'indice \u00e8 contato dalla fine della lista (a partire da -1).","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_slice/#esempi","text":"array_slice(array(1,2,3,4,5),0,3) \u2192 array: 1,2,3,4 array_slice(array(1,2,3,4,5),0,-1) \u2192 array: 1,2,3,4,5 array_slice(array(1,2,3,4,5),-5,-1) \u2192 array: 1,2,3,4,5 array_slice(array(1,2,3,4,5),0,0) \u2192 array: 1 array_slice(array(1,2,3,4,5),-2,-1) \u2192 array: 4,5 array_slice(array(1,2,3,4,5),-1,-1) \u2192 array: 5 array_slice(array('Dufour','Valmiera','Chugiak','Brighton'),1,2) \u2192 array: 'Valmiera','Chugiak' array_slice(array('Dufour','Valmiera','Chugiak','Brighton'),-2,-1) \u2192 array: 'Chugiak','Brighton'","title":"Esempi"},{"location":"gr_funzioni/arrays/array_slice/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_slice/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_sort/","text":"array_sort \u21b5 Ordina i valori in ordine crescente (usa array_reverse per desc). Sintassi \u21b5 array_sort( array ) Argomenti \u21b5 array un array o stringa (valori separati da virgola) Esempi \u21b5 array_sort(string_to_array( 'a,b,c,a,a')) \u2192 <array: 'a', 'a', 'a', 'b', 'c'> array_sort( array(3,4,5,3,2,1,14,14,1)) \u2192 <array: 1, 1, 2, 3, 3, 4, 5, 14, 14> array_sort('a,b,c,a,a') \u2192 <array: 'a', 'a', 'a', 'b', 'c'> dalla versione 1.4 del plugin: nota bene \u21b5 Questa funzione sar\u00e0 presente, nel calcolatore, solo dopo l'installazione del plugin ArrayPlus osservazioni \u21b5 --","title":"array_sort"},{"location":"gr_funzioni/arrays/array_sort/#array_sort","text":"Ordina i valori in ordine crescente (usa array_reverse per desc).","title":"array_sort"},{"location":"gr_funzioni/arrays/array_sort/#sintassi","text":"array_sort( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_sort/#argomenti","text":"array un array o stringa (valori separati da virgola)","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_sort/#esempi","text":"array_sort(string_to_array( 'a,b,c,a,a')) \u2192 <array: 'a', 'a', 'a', 'b', 'c'> array_sort( array(3,4,5,3,2,1,14,14,1)) \u2192 <array: 1, 1, 2, 3, 3, 4, 5, 14, 14> array_sort('a,b,c,a,a') \u2192 <array: 'a', 'a', 'a', 'b', 'c'> dalla versione 1.4 del plugin:","title":"Esempi"},{"location":"gr_funzioni/arrays/array_sort/#nota-bene","text":"Questa funzione sar\u00e0 presente, nel calcolatore, solo dopo l'installazione del plugin ArrayPlus","title":"nota bene"},{"location":"gr_funzioni/arrays/array_sort/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_sum/","text":"array_sum \u21b5 Restituisce la somma dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati. Sintassi \u21b5 array_sum( array ) Argomenti \u21b5 array un array Esempi \u21b5 array_sum(array(0,1,39.4,1.6,'a')) \u2192 42.0 nota bene \u21b5 osservazioni \u21b5 --","title":"array_sum"},{"location":"gr_funzioni/arrays/array_sum/#array_sum","text":"Restituisce la somma dei valori aritmetici in un array. I valori non-numerici nell'array vengono ignorati.","title":"array_sum"},{"location":"gr_funzioni/arrays/array_sum/#sintassi","text":"array_sum( array )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_sum/#argomenti","text":"array un array","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_sum/#esempi","text":"array_sum(array(0,1,39.4,1.6,'a')) \u2192 42.0","title":"Esempi"},{"location":"gr_funzioni/arrays/array_sum/#nota-bene","text":"","title":"nota bene"},{"location":"gr_funzioni/arrays/array_sum/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/array_to_string/","text":"array_to_string \u21b5 Concatena gli elementi di un array in una stringa separata da un delimitatore usando una stringa opzionale per valori mancanti. Sintassi \u21b5 array_to_string( array , delimiter , empty_value ) Argomenti \u21b5 array l'array in ingresso delimiter il delimitatore stringa usato per separare gli elementi array concatenati empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti Esempi \u21b5 array_to_string(array('1','2','3'),',') \u2192 1,2,3' array_to_string(array('1','','3'),',','0') \u2192 1,0,3' nota bene \u21b5 -- osservazioni \u21b5 --","title":"array_to_string"},{"location":"gr_funzioni/arrays/array_to_string/#array_to_string","text":"Concatena gli elementi di un array in una stringa separata da un delimitatore usando una stringa opzionale per valori mancanti.","title":"array_to_string"},{"location":"gr_funzioni/arrays/array_to_string/#sintassi","text":"array_to_string( array , delimiter , empty_value )","title":"Sintassi"},{"location":"gr_funzioni/arrays/array_to_string/#argomenti","text":"array l'array in ingresso delimiter il delimitatore stringa usato per separare gli elementi array concatenati empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti","title":"Argomenti"},{"location":"gr_funzioni/arrays/array_to_string/#esempi","text":"array_to_string(array('1','2','3'),',') \u2192 1,2,3' array_to_string(array('1','','3'),',','0') \u2192 1,0,3'","title":"Esempi"},{"location":"gr_funzioni/arrays/array_to_string/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/array_to_string/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/arrays/","text":"Arrays \u21b5 solo DB (es:SpatiaLite, PostGIS) Questo gruppo contiene funzioni espressione per la creazione e la manipolazione di array (noti anche come strutture dati ad elenco). L'ordine dei valori all'interno dell'array \u00e8 importante, al contrario della struttura dati 'a mappa' ( gruppo Maps ), in cui l'ordine delle coppie chiave-valore \u00e8 irrilevante e i valori vengono identificati dalle loro chiavi. Funzione Descrizione Plugin array Restituisce un array contenente tutti i valori passati come parametro array_append Restituisce un array con il valore passato aggiunto alla fine array_avg Calcola il valore medio di un array ArrayPlus array_cat Restituisce un array contenente tutti gli arrays passati concatenati array_contains Restituisce true se un array contiene il valore specificato array_count Conta un dato valore in un array ArrayPlus array_distinct Restituisce un array contenente valori distinti dell'array dato array_find Restituisce l'indice di un valore all'interno di un array array_first Restituisce il primo valore di un array array_get Restituisce il valore ennesimo di un array array_insert Restituisce un array con il valore passato aggiunto nella posizione indicata array_lambda Applica una funzione personalizzata a ciascun elemento (x) ArrayPlus array_intersect Restituisce vero se almeno un elemento dell'array1 esiste in array2 array_last Restituisce l'ultimo valore di un array array_length Restituisce il numero di elementi di un array array_majority Restituisce il valore pi\u00f9 comune. Restituisce un valore arbitrario se ex-equo >=QGIS 3.18 array_minority Restituisce il valore pi\u00f9 comune. Restituisce un valore arbitrario se ex-equo ArrayPlus array_max Restituisce il valore massimo di un array >=QGIS 3.18 array_min Restituisce il valore minimo di un array >=QGIS 3.18 array_prepend Restituisce un array con il valore dato aggiunto all'inizio array_prioritize Ordina un array rispetto ad un altro QGIS >= 3.2 ArrayPlus array_remove_all Restituisce un array con tutti gli elementi del valore passato rimossi array_remove_at Restituisce un array con l'indice passato rimosso array_replace Ordina i valori in ordine crescente (usa array_reverse per desc) ArrayPlus array_reverse Restituisce l'array dato con valori dell'array in ordine inverso array_slice Restituisce una porzione dell'array array_sort Ordina i valori in ordine crescente (usa array_reverse per desc) ArrayPlus array_sum Calcola la somma dei valori >=QGIS 3.18 array_to_string Concatena gli elementi di un array in una stringa separata da un delimitatore usando una stringa opzionale per valori mancanti generate_series La funzione crea una matrice contenente una sequenza di numeri >= QGIS 3.4 regexp_matches Restituisce un array di tutte le stringhe catturate dai gruppo, nell'ordine che i gruppi stessi compaiono con l'espressione regolare fornita con una stringa string_to_array Divide la stringa in un array usando il delimitatore fornito e la stringa opzionale per valori mancanti","title":"Arrays"},{"location":"gr_funzioni/arrays/arrays/#arrays","text":"solo DB (es:SpatiaLite, PostGIS) Questo gruppo contiene funzioni espressione per la creazione e la manipolazione di array (noti anche come strutture dati ad elenco). L'ordine dei valori all'interno dell'array \u00e8 importante, al contrario della struttura dati 'a mappa' ( gruppo Maps ), in cui l'ordine delle coppie chiave-valore \u00e8 irrilevante e i valori vengono identificati dalle loro chiavi. Funzione Descrizione Plugin array Restituisce un array contenente tutti i valori passati come parametro array_append Restituisce un array con il valore passato aggiunto alla fine array_avg Calcola il valore medio di un array ArrayPlus array_cat Restituisce un array contenente tutti gli arrays passati concatenati array_contains Restituisce true se un array contiene il valore specificato array_count Conta un dato valore in un array ArrayPlus array_distinct Restituisce un array contenente valori distinti dell'array dato array_find Restituisce l'indice di un valore all'interno di un array array_first Restituisce il primo valore di un array array_get Restituisce il valore ennesimo di un array array_insert Restituisce un array con il valore passato aggiunto nella posizione indicata array_lambda Applica una funzione personalizzata a ciascun elemento (x) ArrayPlus array_intersect Restituisce vero se almeno un elemento dell'array1 esiste in array2 array_last Restituisce l'ultimo valore di un array array_length Restituisce il numero di elementi di un array array_majority Restituisce il valore pi\u00f9 comune. Restituisce un valore arbitrario se ex-equo >=QGIS 3.18 array_minority Restituisce il valore pi\u00f9 comune. Restituisce un valore arbitrario se ex-equo ArrayPlus array_max Restituisce il valore massimo di un array >=QGIS 3.18 array_min Restituisce il valore minimo di un array >=QGIS 3.18 array_prepend Restituisce un array con il valore dato aggiunto all'inizio array_prioritize Ordina un array rispetto ad un altro QGIS >= 3.2 ArrayPlus array_remove_all Restituisce un array con tutti gli elementi del valore passato rimossi array_remove_at Restituisce un array con l'indice passato rimosso array_replace Ordina i valori in ordine crescente (usa array_reverse per desc) ArrayPlus array_reverse Restituisce l'array dato con valori dell'array in ordine inverso array_slice Restituisce una porzione dell'array array_sort Ordina i valori in ordine crescente (usa array_reverse per desc) ArrayPlus array_sum Calcola la somma dei valori >=QGIS 3.18 array_to_string Concatena gli elementi di un array in una stringa separata da un delimitatore usando una stringa opzionale per valori mancanti generate_series La funzione crea una matrice contenente una sequenza di numeri >= QGIS 3.4 regexp_matches Restituisce un array di tutte le stringhe catturate dai gruppo, nell'ordine che i gruppi stessi compaiono con l'espressione regolare fornita con una stringa string_to_array Divide la stringa in un array usando il delimitatore fornito e la stringa opzionale per valori mancanti","title":"Arrays"},{"location":"gr_funzioni/arrays/generate_series/","text":"generate_series \u21b5 La funzione crea una matrice contenente una sequenza di numeri, segue le stesse regole della funzione generate_series () di PostgreSQL. Sintassi \u21b5 generate_series( start , stop [, step =1] ) [ ] contrassegna componenti opzionali Argomenti \u21b5 start primo valore della sequenza stop valore che termina la sequenza una volta raggiunta step passo usato come incremento tra i valori Esempi \u21b5 generate_series(1,5) \u2192 [ 1, 2, 3, 4, 5 ] generate_series(5,1,-1) \u2192 [ 5, 4, 3, 2, 1 ] nota bene \u21b5 -- osservazioni \u21b5 --","title":"generate_series"},{"location":"gr_funzioni/arrays/generate_series/#generate_series","text":"La funzione crea una matrice contenente una sequenza di numeri, segue le stesse regole della funzione generate_series () di PostgreSQL.","title":"generate_series"},{"location":"gr_funzioni/arrays/generate_series/#sintassi","text":"generate_series( start , stop [, step =1] ) [ ] contrassegna componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/arrays/generate_series/#argomenti","text":"start primo valore della sequenza stop valore che termina la sequenza una volta raggiunta step passo usato come incremento tra i valori","title":"Argomenti"},{"location":"gr_funzioni/arrays/generate_series/#esempi","text":"generate_series(1,5) \u2192 [ 1, 2, 3, 4, 5 ] generate_series(5,1,-1) \u2192 [ 5, 4, 3, 2, 1 ]","title":"Esempi"},{"location":"gr_funzioni/arrays/generate_series/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/generate_series/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/regexp_matches/","text":"regexp_matches \u21b5 Restituisce un array di tutte le stringhe catturate dai gruppo, nell'ordine che i gruppi stessi compaiono con l'espressione regolare fornita con una stringa. Sintassi \u21b5 regexp_matches( string , regex , empty_value ) Argomenti \u21b5 string la stringa con cui catturare i gruppi da un'espressione regolare regex l'espressione regolare usata per catturare gruppi empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti Esempi \u21b5 regexp_matches('QGIS=>rocks','(.*)=>(.*)') \u2192 array: 'QGIS', 'rocks' regexp_matches('key=>','(.*)=>(.*)','empty value') \u2192 array: 'key', 'empty value' regexp_matches('key=>','(.*)=>','empty value') \u2192'array: 'key' regexp_matches('key=>7','(.*)=>(.*)','empty value') \u2192 array: 'key', '7' nota bene \u21b5 -- osservazioni \u21b5 --","title":"regexp_matches"},{"location":"gr_funzioni/arrays/regexp_matches/#regexp_matches","text":"Restituisce un array di tutte le stringhe catturate dai gruppo, nell'ordine che i gruppi stessi compaiono con l'espressione regolare fornita con una stringa.","title":"regexp_matches"},{"location":"gr_funzioni/arrays/regexp_matches/#sintassi","text":"regexp_matches( string , regex , empty_value )","title":"Sintassi"},{"location":"gr_funzioni/arrays/regexp_matches/#argomenti","text":"string la stringa con cui catturare i gruppi da un'espressione regolare regex l'espressione regolare usata per catturare gruppi empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti","title":"Argomenti"},{"location":"gr_funzioni/arrays/regexp_matches/#esempi","text":"regexp_matches('QGIS=>rocks','(.*)=>(.*)') \u2192 array: 'QGIS', 'rocks' regexp_matches('key=>','(.*)=>(.*)','empty value') \u2192 array: 'key', 'empty value' regexp_matches('key=>','(.*)=>','empty value') \u2192'array: 'key' regexp_matches('key=>7','(.*)=>(.*)','empty value') \u2192 array: 'key', '7'","title":"Esempi"},{"location":"gr_funzioni/arrays/regexp_matches/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/regexp_matches/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/arrays/string_to_array/","text":"string_to_array \u21b5 Divide la stringa in un array usando il delimitatore fornito e la stringa opzionale per valori mancanti. Sintassi \u21b5 string_to_array( string , delimiter , empty_value ) Argomenti \u21b5 string la stringa in ingresso delimiter il delimitatore stringa usato per dividere la stringa in ingresso empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti Esempi \u21b5 string_to_array('1,2,3',',') \u2192 array: '1', '2', '3' string_to_array('1,,3',',','0') \u2192 array: '1', '0', '3 ' nota bene \u21b5 -- osservazioni \u21b5 --","title":"string_to_array"},{"location":"gr_funzioni/arrays/string_to_array/#string_to_array","text":"Divide la stringa in un array usando il delimitatore fornito e la stringa opzionale per valori mancanti.","title":"string_to_array"},{"location":"gr_funzioni/arrays/string_to_array/#sintassi","text":"string_to_array( string , delimiter , empty_value )","title":"Sintassi"},{"location":"gr_funzioni/arrays/string_to_array/#argomenti","text":"string la stringa in ingresso delimiter il delimitatore stringa usato per dividere la stringa in ingresso empty_value la stringa opzionale da usare come sostituzione per le corrispondenze (lunghezza nulla) mancanti","title":"Argomenti"},{"location":"gr_funzioni/arrays/string_to_array/#esempi","text":"string_to_array('1,2,3',',') \u2192 array: '1', '2', '3' string_to_array('1,,3',',','0') \u2192 array: '1', '0', '3 '","title":"Esempi"},{"location":"gr_funzioni/arrays/string_to_array/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/arrays/string_to_array/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/campi_e_valori/campi/","text":"Campi e valori \u21b5 Contiene un elenco di campi del layer. Si possono ottenere valori campione con il click del tasto destro del mouse. Seleziona il nome del campo dall'elenco e fai click con il tasto destro per aprire il men\u00f9 con le opzioni per caricare un campione di valori dal campo selezionato. Funzione Descrizione [campi e valori](campi_e_valori.md Contiene un elenco di campi del layer corrente","title":"Campi e valori"},{"location":"gr_funzioni/campi_e_valori/campi/#campi-e-valori","text":"Contiene un elenco di campi del layer. Si possono ottenere valori campione con il click del tasto destro del mouse. Seleziona il nome del campo dall'elenco e fai click con il tasto destro per aprire il men\u00f9 con le opzioni per caricare un campione di valori dal campo selezionato. Funzione Descrizione [campi e valori](campi_e_valori.md Contiene un elenco di campi del layer corrente","title":"Campi e valori"},{"location":"gr_funzioni/campi_e_valori/campi_e_valori/","text":"campi e valori \u21b5 Contiene un elenco di campi del layer selezionato. Si possono ottenere valori campione con il click del tasto destro del mouse. Seleziona il nome del campo dall'elenco e fai click con il tasto destro per aprire il men\u00f9 con le opzioni per caricare un campione di valori dal campo selezionato. note \u21b5 Il caricamento del valore del campo da layer WFS non \u00e9 supportato, prima che il layer venga inserito, ad esempio quando si costruiscono interrogazioni.","title":"campi e valori"},{"location":"gr_funzioni/campi_e_valori/campi_e_valori/#campi-e-valori","text":"Contiene un elenco di campi del layer selezionato. Si possono ottenere valori campione con il click del tasto destro del mouse. Seleziona il nome del campo dall'elenco e fai click con il tasto destro per aprire il men\u00f9 con le opzioni per caricare un campione di valori dal campo selezionato.","title":"campi e valori"},{"location":"gr_funzioni/campi_e_valori/campi_e_valori/#note","text":"Il caricamento del valore del campo da layer WFS non \u00e9 supportato, prima che il layer venga inserito, ad esempio quando si costruiscono interrogazioni.","title":"note"},{"location":"gr_funzioni/campi_e_valori/campi_e_valori_unico/","text":"campi e valori \u21b5 Abstract Contiene l'elenco dei campi del layer selezionato. Si possono ottenere valori campione con il click del tasto destro del mouse. Seleziona il nome del campo dall'elenco e fai click con il tasto destro per aprire il men\u00f9 con le opzioni per caricare un campione di valori dal campo selezionato. note \u21b5 Il caricamento del valore del campo da layer WFS non \u00e9 supportato, prima che il layer venga inserito, ad esempio quando si costruiscono interrogazioni.","title":"Campi e valori"},{"location":"gr_funzioni/campi_e_valori/campi_e_valori_unico/#campi-e-valori","text":"Abstract Contiene l'elenco dei campi del layer selezionato. Si possono ottenere valori campione con il click del tasto destro del mouse. Seleziona il nome del campo dall'elenco e fai click con il tasto destro per aprire il men\u00f9 con le opzioni per caricare un campione di valori dal campo selezionato.","title":"campi e valori"},{"location":"gr_funzioni/campi_e_valori/campi_e_valori_unico/#note","text":"Il caricamento del valore del campo da layer WFS non \u00e9 supportato, prima che il layer venga inserito, ad esempio quando si costruiscono interrogazioni.","title":"note"},{"location":"gr_funzioni/colore/color_cmyk/","text":"color_cmyk \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo e nero Sintassi \u21b5 color_cmyk( cyan , magenta , yellow , black ) Argomenti \u21b5 cyan componente ciano del colore, come valore percentuale intero da 0 a 100 magenta componente magenta del colore, come valore percentuale intero da 0 a 100 yellow componente giallo del colore, come valore percentuale intero da 0 a 100 black componente nero del colore, come valore percentuale intero da 0 a 100 Esempi \u21b5 color_cmyk(100,50,0,10) \u2192 0,115,230 nota bene \u21b5 -- osservazioni \u21b5 color_cmyk(100,50,0,10) = color_rgb( 0,115,230 )","title":"color_cmyk"},{"location":"gr_funzioni/colore/color_cmyk/#color_cmyk","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo e nero","title":"color_cmyk"},{"location":"gr_funzioni/colore/color_cmyk/#sintassi","text":"color_cmyk( cyan , magenta , yellow , black )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_cmyk/#argomenti","text":"cyan componente ciano del colore, come valore percentuale intero da 0 a 100 magenta componente magenta del colore, come valore percentuale intero da 0 a 100 yellow componente giallo del colore, come valore percentuale intero da 0 a 100 black componente nero del colore, come valore percentuale intero da 0 a 100","title":"Argomenti"},{"location":"gr_funzioni/colore/color_cmyk/#esempi","text":"color_cmyk(100,50,0,10) \u2192 0,115,230","title":"Esempi"},{"location":"gr_funzioni/colore/color_cmyk/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_cmyk/#osservazioni","text":"color_cmyk(100,50,0,10) = color_rgb( 0,115,230 )","title":"osservazioni"},{"location":"gr_funzioni/colore/color_cmyka/","text":"color_cmyka \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo, nero e alfa (trasparenza) Sintassi \u21b5 color_cmyka( cyan , magenta , yellow , black , alpha ) Argomenti \u21b5 cyan componente ciano del colore, come valore percentuale intero da 0 a 100 magenta componente magenta del colore, come valore percentuale intero da 0 a 100 yellow componente giallo del colore, come valore percentuale intero da 0 a 100 black componente nero del colore, come valore percentuale intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco). Esempi \u21b5 color_cmyka(100,50,0,10,200) \u2192 0,115,230,2000 nota bene \u21b5 -- osservazioni \u21b5 color_cmyka(100,50,0,10,200) = color_rgba(0,115,230,200)","title":"color_cmyka"},{"location":"gr_funzioni/colore/color_cmyka/#color_cmyka","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo, nero e alfa (trasparenza)","title":"color_cmyka"},{"location":"gr_funzioni/colore/color_cmyka/#sintassi","text":"color_cmyka( cyan , magenta , yellow , black , alpha )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_cmyka/#argomenti","text":"cyan componente ciano del colore, come valore percentuale intero da 0 a 100 magenta componente magenta del colore, come valore percentuale intero da 0 a 100 yellow componente giallo del colore, come valore percentuale intero da 0 a 100 black componente nero del colore, come valore percentuale intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco).","title":"Argomenti"},{"location":"gr_funzioni/colore/color_cmyka/#esempi","text":"color_cmyka(100,50,0,10,200) \u2192 0,115,230,2000","title":"Esempi"},{"location":"gr_funzioni/colore/color_cmyka/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_cmyka/#osservazioni","text":"color_cmyka(100,50,0,10,200) = color_rgba(0,115,230,200)","title":"osservazioni"},{"location":"gr_funzioni/colore/color_grayscale_average/","text":"color_grayscale_average \u21b5 Applica un filtro in scala di grigio e restituisce una rappresentazione di stringa da un colore fornito. Sintassi \u21b5 color_grayscale_average( color ) Argomenti \u21b5 color una stringa di colore Esempi \u21b5 color_grayscale_average('255,100,50') \u2192 '135,135,135,255' nota bene \u21b5 -- osservazioni \u21b5","title":"color_grayscale_average"},{"location":"gr_funzioni/colore/color_grayscale_average/#color_grayscale_average","text":"Applica un filtro in scala di grigio e restituisce una rappresentazione di stringa da un colore fornito.","title":"color_grayscale_average"},{"location":"gr_funzioni/colore/color_grayscale_average/#sintassi","text":"color_grayscale_average( color )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_grayscale_average/#argomenti","text":"color una stringa di colore","title":"Argomenti"},{"location":"gr_funzioni/colore/color_grayscale_average/#esempi","text":"color_grayscale_average('255,100,50') \u2192 '135,135,135,255'","title":"Esempi"},{"location":"gr_funzioni/colore/color_grayscale_average/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_grayscale_average/#osservazioni","text":"","title":"osservazioni"},{"location":"gr_funzioni/colore/color_hsl/","text":"color_hsl \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e luminosit\u00e0. Sintassi \u21b5 color_hsl( hue , saturation , lightness ) Argomenti \u21b5 hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 lightness percentuale di luminosit\u00e0 del colore come valore intero da 0 a 100 Esempi \u21b5 color_hsl(100,50,70) \u2192 166,217,140 nota bene \u21b5 -- osservazioni \u21b5 color_hsl(100,50,70) = color_rgb( 166,217,140)","title":"color_hsl"},{"location":"gr_funzioni/colore/color_hsl/#color_hsl","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e luminosit\u00e0.","title":"color_hsl"},{"location":"gr_funzioni/colore/color_hsl/#sintassi","text":"color_hsl( hue , saturation , lightness )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_hsl/#argomenti","text":"hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 lightness percentuale di luminosit\u00e0 del colore come valore intero da 0 a 100","title":"Argomenti"},{"location":"gr_funzioni/colore/color_hsl/#esempi","text":"color_hsl(100,50,70) \u2192 166,217,140","title":"Esempi"},{"location":"gr_funzioni/colore/color_hsl/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_hsl/#osservazioni","text":"color_hsl(100,50,70) = color_rgb( 166,217,140)","title":"osservazioni"},{"location":"gr_funzioni/colore/color_hsla/","text":"color_hsla \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, luminosit\u00e0 e alfa (trasparenza) Sintassi \u21b5 color_hsl( hue , saturation , lightness , alpha ) Argomenti \u21b5 hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 lightness percentuale di luminosit\u00e0 del colore come valore intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco). Esempi \u21b5 color_hsla(100,50,70,200) \u2192 166,217,140,200 nota bene \u21b5 -- osservazioni \u21b5 color_hsla(100,50,70,200) = color_rgba( 166,217,140,200)","title":"color_hsla"},{"location":"gr_funzioni/colore/color_hsla/#color_hsla","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, luminosit\u00e0 e alfa (trasparenza)","title":"color_hsla"},{"location":"gr_funzioni/colore/color_hsla/#sintassi","text":"color_hsl( hue , saturation , lightness , alpha )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_hsla/#argomenti","text":"hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 lightness percentuale di luminosit\u00e0 del colore come valore intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco).","title":"Argomenti"},{"location":"gr_funzioni/colore/color_hsla/#esempi","text":"color_hsla(100,50,70,200) \u2192 166,217,140,200","title":"Esempi"},{"location":"gr_funzioni/colore/color_hsla/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_hsla/#osservazioni","text":"color_hsla(100,50,70,200) = color_rgba( 166,217,140,200)","title":"osservazioni"},{"location":"gr_funzioni/colore/color_hsv/","text":"color_hsv \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e valore. Sintassi \u21b5 color_hsv( hue , saturation , value ) Argomenti \u21b5 hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 value valore percentuale del colore come intero da 0 a 100 Esempi \u21b5 color_hsv(40,100,100) \u2192 255,170,0 nota bene \u21b5 -- osservazioni \u21b5 color_hsv(40,100,100) = color_rgb( 255,170,0 )","title":"color_hsv"},{"location":"gr_funzioni/colore/color_hsv/#color_hsv","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e valore.","title":"color_hsv"},{"location":"gr_funzioni/colore/color_hsv/#sintassi","text":"color_hsv( hue , saturation , value )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_hsv/#argomenti","text":"hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 value valore percentuale del colore come intero da 0 a 100","title":"Argomenti"},{"location":"gr_funzioni/colore/color_hsv/#esempi","text":"color_hsv(40,100,100) \u2192 255,170,0","title":"Esempi"},{"location":"gr_funzioni/colore/color_hsv/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_hsv/#osservazioni","text":"color_hsv(40,100,100) = color_rgb( 255,170,0 )","title":"osservazioni"},{"location":"gr_funzioni/colore/color_hsva/","text":"color_hsva \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, valore e alfa (trasparenza). Sintassi \u21b5 color_hsva( hue , saturation , value , alpha ) Argomenti \u21b5 hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 value valore percentuale del colore come intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco) Esempi \u21b5 color_hsva(40,100,100,200) \u2192 255,170,0,200 nota bene \u21b5 -- osservazioni \u21b5 color_hsva(40,100,100,200) = color_rgba( 255,170,0,200 )","title":"color_hsva"},{"location":"gr_funzioni/colore/color_hsva/#color_hsva","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, valore e alfa (trasparenza).","title":"color_hsva"},{"location":"gr_funzioni/colore/color_hsva/#sintassi","text":"color_hsva( hue , saturation , value , alpha )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_hsva/#argomenti","text":"hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 value valore percentuale del colore come intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco)","title":"Argomenti"},{"location":"gr_funzioni/colore/color_hsva/#esempi","text":"color_hsva(40,100,100,200) \u2192 255,170,0,200","title":"Esempi"},{"location":"gr_funzioni/colore/color_hsva/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_hsva/#osservazioni","text":"color_hsva(40,100,100,200) = color_rgba( 255,170,0,200 )","title":"osservazioni"},{"location":"gr_funzioni/colore/color_mix_rgb/","text":"color_mix_rgb \u21b5 Restituisce una stringa che rappresenta un colore che mescola i valori rosso, verde, blu e alfa di due colori forniti in base a un determinato rapporto. Sintassi \u21b5 color_mix_rgb( color1 , color2 , ratio ) Argomenti \u21b5 color1 una stringa di colore color2 una stringa di colore ratio un rapporto Esempi \u21b5 color_mix_rgb('0,0,0','255,255,255',0.5) \u2192 127,127,127,255 nota bene \u21b5 -- osservazioni \u21b5","title":"color_mix_rgb"},{"location":"gr_funzioni/colore/color_mix_rgb/#color_mix_rgb","text":"Restituisce una stringa che rappresenta un colore che mescola i valori rosso, verde, blu e alfa di due colori forniti in base a un determinato rapporto.","title":"color_mix_rgb"},{"location":"gr_funzioni/colore/color_mix_rgb/#sintassi","text":"color_mix_rgb( color1 , color2 , ratio )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_mix_rgb/#argomenti","text":"color1 una stringa di colore color2 una stringa di colore ratio un rapporto","title":"Argomenti"},{"location":"gr_funzioni/colore/color_mix_rgb/#esempi","text":"color_mix_rgb('0,0,0','255,255,255',0.5) \u2192 127,127,127,255","title":"Esempi"},{"location":"gr_funzioni/colore/color_mix_rgb/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_mix_rgb/#osservazioni","text":"","title":"osservazioni"},{"location":"gr_funzioni/colore/color_part/","text":"color_part \u21b5 Restituisce uno specifico componente colore da una stringa colore, es. la componente rosso o alfa. Sintassi \u21b5 color_part( color , component ) Argomenti \u21b5 color una stringa di colore component una stringa corrispondente al componente colore da restituire. Opzioni valide sono: red: componente rosso RGB (0-255) green: componente verde RGB (0-255) blue: componente blu RGB (0-255) alpha: valore alfa (trasparenza) (0-255) hue: tonalit\u00e0 HSV (0-360) saturation: saturazione HSV (0-100) value: valore HSV (0-100) hsl_hue: tonalit\u00e0 HSL (0-360) hsl_saturation: saturazione HSL (0-100) lightness: luminosit\u00e0 HSL (0-100) cyan: componente ciano CMYK (0-100) magenta: componente magenta CMYK (0-100) yellow: componente giallo CMYK (0-100) black: componente nero CMYK (0-100) Esempi \u21b5 color_part('200,10,30','green') \u2192 10 nota bene \u21b5 -- osservazioni \u21b5 --","title":"color_part"},{"location":"gr_funzioni/colore/color_part/#color_part","text":"Restituisce uno specifico componente colore da una stringa colore, es. la componente rosso o alfa.","title":"color_part"},{"location":"gr_funzioni/colore/color_part/#sintassi","text":"color_part( color , component )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_part/#argomenti","text":"color una stringa di colore component una stringa corrispondente al componente colore da restituire. Opzioni valide sono: red: componente rosso RGB (0-255) green: componente verde RGB (0-255) blue: componente blu RGB (0-255) alpha: valore alfa (trasparenza) (0-255) hue: tonalit\u00e0 HSV (0-360) saturation: saturazione HSV (0-100) value: valore HSV (0-100) hsl_hue: tonalit\u00e0 HSL (0-360) hsl_saturation: saturazione HSL (0-100) lightness: luminosit\u00e0 HSL (0-100) cyan: componente ciano CMYK (0-100) magenta: componente magenta CMYK (0-100) yellow: componente giallo CMYK (0-100) black: componente nero CMYK (0-100)","title":"Argomenti"},{"location":"gr_funzioni/colore/color_part/#esempi","text":"color_part('200,10,30','green') \u2192 10","title":"Esempi"},{"location":"gr_funzioni/colore/color_part/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_part/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/colore/color_rgb/","text":"color_rgb \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde e blu. Sintassi \u21b5 color_rgb( red , green , blue ) Argomenti \u21b5 red componente rosso del colore, come valore intero da 0 a 255 green componente verde del colore, come valore intero da 0 a 255 blue componente blu del colore, come valore intero da 0 a 255 Esempi \u21b5 color_rgb(255,127,0) \u2192 255,127,0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"color_rgb"},{"location":"gr_funzioni/colore/color_rgb/#color_rgb","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde e blu.","title":"color_rgb"},{"location":"gr_funzioni/colore/color_rgb/#sintassi","text":"color_rgb( red , green , blue )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_rgb/#argomenti","text":"red componente rosso del colore, come valore intero da 0 a 255 green componente verde del colore, come valore intero da 0 a 255 blue componente blu del colore, come valore intero da 0 a 255","title":"Argomenti"},{"location":"gr_funzioni/colore/color_rgb/#esempi","text":"color_rgb(255,127,0) \u2192 255,127,0","title":"Esempi"},{"location":"gr_funzioni/colore/color_rgb/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_rgb/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/colore/color_rgba/","text":"color_rgba \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde, blue ed alpha (trasparenza). Sintassi \u21b5 color_rgba( red , green , blue ,alpha ) Argomenti \u21b5 red componente rosso del colore, come valore intero da 0 a 255 green componente verde del colore, come valore intero da 0 a 255 blue componente blu del colore, come valore intero da 0 a 255 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco). Esempi \u21b5 color_rgba(255,127,0,200) \u2192 255,127,0,2000 nota bene \u21b5 -- osservazioni \u21b5 --","title":"color_rgba"},{"location":"gr_funzioni/colore/color_rgba/#color_rgba","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde, blue ed alpha (trasparenza).","title":"color_rgba"},{"location":"gr_funzioni/colore/color_rgba/#sintassi","text":"color_rgba( red , green , blue ,alpha )","title":"Sintassi"},{"location":"gr_funzioni/colore/color_rgba/#argomenti","text":"red componente rosso del colore, come valore intero da 0 a 255 green componente verde del colore, come valore intero da 0 a 255 blue componente blu del colore, come valore intero da 0 a 255 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco).","title":"Argomenti"},{"location":"gr_funzioni/colore/color_rgba/#esempi","text":"color_rgba(255,127,0,200) \u2192 255,127,0,2000","title":"Esempi"},{"location":"gr_funzioni/colore/color_rgba/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/color_rgba/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/colore/colore/","text":"Colore \u21b5 Questo gruppo contiene le funzioni per manipolare i colori Funzione Descrizione color_cmyk Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo e nero color_cmyka Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo, nero e alfa (trasparenza) color_grayscale_average Applica un filtro in scala di grigio e restituisce una rappresentazione di stringa da un colore fornito QGIS >= 3.2 color_hsl Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e luminosit\u00e0. color_hsla Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, luminosit\u00e0 e alfa (trasparenza) color_hsv Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e valore color_hsva Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, valore e alfa (trasparenza) color_mix_rgb Restituisce una stringa che rappresenta un colore che mescola i valori rosso, verde, blu e alfa di due colori forniti in base a un determinato rapporto QGIS >= 3.2 color_part Restituisce uno specifico componente colore da una stringa colore, es. la componente rosso o alfa color_rgb Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde e blu color_rgba Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde, blue ed alpha (trasparenza) create_ramp Restituisce una scala di colori a gradiente per una mappa di colori e passi darker Restituisce una stringa di colore pi\u00f9 scuro (o pi\u00f9 chiaro) lighter Restituisce una stringa di colore pi\u00f9 chiaro (o pi\u00f9 scuro) project_color Restituisce un colore dallo schema colore del progetto. ramp_color Restituisce una stringa rappresentante un colore ottenuto da una scala colore set_color_part Imposta uno specifico componente colore per un stringa colore","title":"Colore"},{"location":"gr_funzioni/colore/colore/#colore","text":"Questo gruppo contiene le funzioni per manipolare i colori Funzione Descrizione color_cmyk Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo e nero color_cmyka Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo, nero e alfa (trasparenza) color_grayscale_average Applica un filtro in scala di grigio e restituisce una rappresentazione di stringa da un colore fornito QGIS >= 3.2 color_hsl Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e luminosit\u00e0. color_hsla Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, luminosit\u00e0 e alfa (trasparenza) color_hsv Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e valore color_hsva Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, valore e alfa (trasparenza) color_mix_rgb Restituisce una stringa che rappresenta un colore che mescola i valori rosso, verde, blu e alfa di due colori forniti in base a un determinato rapporto QGIS >= 3.2 color_part Restituisce uno specifico componente colore da una stringa colore, es. la componente rosso o alfa color_rgb Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde e blu color_rgba Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde, blue ed alpha (trasparenza) create_ramp Restituisce una scala di colori a gradiente per una mappa di colori e passi darker Restituisce una stringa di colore pi\u00f9 scuro (o pi\u00f9 chiaro) lighter Restituisce una stringa di colore pi\u00f9 chiaro (o pi\u00f9 scuro) project_color Restituisce un colore dallo schema colore del progetto. ramp_color Restituisce una stringa rappresentante un colore ottenuto da una scala colore set_color_part Imposta uno specifico componente colore per un stringa colore","title":"Colore"},{"location":"gr_funzioni/colore/colore_unico/","text":"Gruppo Colore \u21b5 Abstract Questo gruppo contiene funzioni per manipolare i colori color_cmyk \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo e nero Sintassi: color_cmyk( cyan , magenta , yellow , black ) Argomenti: cyan componente ciano del colore, come valore percentuale intero da 0 a 100 magenta componente magenta del colore, come valore percentuale intero da 0 a 100 yellow componente giallo del colore, come valore percentuale intero da 0 a 100 black componente nero del colore, come valore percentuale intero da 0 a 100 Esempi: color_cmyk(100,50,0,10) \u2192 0,115,230 osservazioni: color_cmyk(100,50,0,10) = color_rgb( 0,115,230 ) color_cmyka \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo, nero e alfa (trasparenza) Sintassi: color_cmyka( cyan , magenta , yellow , black , alpha ) Argomenti: cyan componente ciano del colore, come valore percentuale intero da 0 a 100 magenta componente magenta del colore, come valore percentuale intero da 0 a 100 yellow componente giallo del colore, come valore percentuale intero da 0 a 100 black componente nero del colore, come valore percentuale intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco). Esempi: color_cmyka(100,50,0,10,200) \u2192 '0,115,229,200' osservazioni: color_cmyka(100,50,0,10,200) = color_rgba(0,115,230,200)` color_grayscale_average \u21b5 Applica un filtro in scala di grigio e restituisce una rappresentazione di stringa da un colore fornito. Sintassi: color_grayscale_average( color ) Argomenti: color una stringa di colore Esempi: color_grayscale_average('255,100,50') \u2192 '135,135,135,255' color_hsl \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e luminosit\u00e0. Sintassi: color_hsl( hue , saturation , lightness ) Argomenti: hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 lightness /span> percentuale di luminosit\u00e0 de _ colore come valore intero da 0 a 100 Esempi: color_hsl(100,50,70) \u2192 166,217,140 osservazioni: color_hsl(100,50,70) = color_rgb( 166,217,140) color_hsla \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, luminosit\u00e0 e alfa (trasparenza) Sintassi: color_hsl( hue , saturation , lightness , alpha ) Argomenti: hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 lightness percentuale di luminosit\u00e0 del colore come valore intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco). Esempi: color_hsla(100,50,70,200) \u2192 '166,217,140,200' osservazioni: color_hsla(100,50,70,200) = color_rgba( 166,217,140,200) color_hsv \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e valore. Sintassi: color_hsv( hue , saturation , value ) Argomenti: hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 value valore percentuale del colore come intero da 0 a 100 Esempi: color_hsv(40,100,100) \u2192 '255,170,0' osservazioni: color_hsv(40,100,100) = color_rgb( 255,170,0 ) color_hsva \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, valore e alfa (trasparenza). Sintassi: color_hsva( hue , saturation , value , alpha ) Argomenti: hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 value valore percentuale del colore come intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco) Esempi: color_hsva(40,100,100,200) \u2192 '255,170,0,200' osservazioni: color_hsva(40,100,100,200) = color_rgba( 255,170,0,200 ) color_mix_rgb \u21b5 Restituisce una stringa che rappresenta un colore che mescola i valori rosso, verde, blu e alfa di due colori forniti in base a un determinato rapporto. Sintassi: color_mix_rgb( color1 , color2 , ratio ) Argomenti: color1 una stringa di colore color2 una stringa di colore ratio un rapporto Esempi: color_mix_rgb('0,0,0','255,255,255',0.5) \u2192 127,127,127,255 color_part \u21b5 Restituisce uno specifico componente colore da una stringa colore, es. la componente rosso o alfa. Sintassi: color_part( color , component ) Argomenti: color una stringa di colore component una stringa corrispondente al componente colore da restituire. Opzioni valide sono: red: componente rosso RGB (0-255) green: componente verde RGB (0-255) blue: componente blu RGB (0-255) alpha: valore alfa (trasparenza) (0-255) hue: tonalit\u00e0 HSV (0-360) saturation: saturazione HSV (0-100) value: valore HSV (0-100) hsl_hue: tonalit\u00e0 HSL (0-360) hsl_saturation: saturazione HSL (0-100) lightness: luminosit\u00e0 HSL (0-100) cyan: componente ciano CMYK (0-100) magenta: componente magenta CMYK (0-100) yellow: componente giallo CMYK (0-100) black: componente nero CMYK (0-100) Esempi: color_part('200,10,30','green') \u2192 10 color_rgb \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde e blu. Sintassi: color_rgb( red , green , blue ) Argomenti: red componente rosso del colore, come valore intero da 0 a 255 green componente verde del colore, come valore intero da 0 a 255 blue componente blu del colore, come valore intero da 0 a 255 Esempi: color_rgb(255,127,0) \u2192 255,127,0 color_rgba \u21b5 Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde, blue ed alpha (trasparenza). Sintassi: color_rgba( red , green , blue , alpha ) Argomenti: red componente rosso del colore, come valore intero da 0 a 255 green componente verde del colore, come valore intero da 0 a 255 blue componente blu del colore, come valore intero da 0 a 255 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco). Esempi: color_rgba(255,127,0,200) \u2192 '255,127,0,200' create_ramp \u21b5 Restituisce una scala di colori a gradiente per una mappa di colori e passi. Sintassi: create_ramp( map [, discrete=false ]) [ ] indica componenti opzionali Argomenti: map una mappa di colori e passi discrete imposta questo parametro su vero per creare una rampa di colore discreta Esempi: ramp_color(create_ramp(map(0,'0,0,0',1,'255,0,0')),1) \u2192 '255,0,0,255' darker \u21b5 Restituisce una stringa di colore pi\u00f9 scuro (o pi\u00f9 chiaro) Sintassi: darker( color , factor ) Argomenti: color una stringa di colore factor un numero intero corrispondente al fattore scurente: se il fattore \u00e8 pi\u00f9 grande di 100, questa funzione restituisce un colore pi\u00f9 scuro (per es., impostando il fattore a 300 viene restitituito un colore che ha un terzo della luminosit\u00e0); se il fattore \u00e8 minore di 100, il colore restituito \u00e8 pi\u00f9 chiaro, ma per questo scopo si raccomanda l'uso della funzione lighter(); se il fattore \u00e8 0 o negativo, il valore restituito non \u00e8 specificato. Esempi: darker('200,10,30',300) \u2192 '66,3,10,255' lighter \u21b5 Restituisce una stringa di colore pi\u00f9 chiaro (o pi\u00f9 scuro) Sintassi: lighter( color , factor ) Argomenti: color una stringa di colore factor un numero intero corrispondente al fattore schiarente: se il fattore \u00e8 pi\u00f9 grande di 100, questa funzione restituisce un colore pi\u00f9 chiaro (per es., impostando il fattore a 150 viene restitituito un colore al 50% pi\u00f9 luminoso); se il fattore \u00e8 minore di 100, il colore restituito \u00e8 pi\u00f9 scuro, ma per questo scopo si raccomanda l'uso della funzione darker(); se il fattore \u00e8 0 o negativo, il valore restituito non \u00e8 specificato. Esempi: lighter('200,10,30',200) \u2192 '255,158,168,255' project_color \u21b5 Restituisce un colore dallo schema colore del progetto. Sintassi: project_color( name ) Argomenti: name un nome colore Esempi: project_color('Logo color') \u2192 '20,140,50' osservazioni ramp_color \u21b5 Restituisce una stringa rappresentante un colore ottenuto da una scala colore. Variante di scala salvata \u21b5 Restituisce una stringa che rappresenta un colore da una scala salvata Sintassi: ramp_color( ramp_name , value ) Argomenti: ramp_name il nome della scala colore come stringa, peesempi:o 'Spectral' value la posizione nella scala colore da cui selezionare il colore come numero reale fra 0 e 1 Esempi: ramp_color('Spectral',0.3) \u2192 '253,190,115,255' nota Le scale di colore disponibili differiscono fra le varie installazioni di QGIS. Questa funzione potrebbe non restituire il risultato atteso se sposti i tuoi progetti QGIS fra le diverse installazioni. Variante di scala creata con un'espressione \u21b5 Restituisce una stringa che rappresenta un colore da una scala creata con un'espressione Sintassi: ramp_color( ramp , value ) Argomenti: ramp la scala di colori value la posizione nella scala colore da cui selezionare il colore come numero reale fra 0 e 1 Esempi: ramp_color(create_ramp(map(0,'0,0,0',1,'255,0,0')),1) \u2192255,0,0,255 set_color_part \u21b5 Imposta uno specifico componente colore per una stringa colore, es. la componente rosso o alpha. Sintassi: set_color_part( color , component , value ) Argomenti: color una stringa di colore component una stringa corrispondente al componente colore da impostare. Opzioni valide sono: red: componente rosso RGB (0-255) green: componente verde RGB (0-255) blue: componente blu RGB (0-255) alpha: valore alfa (trasparenza) (0-255) hue: tonalit\u00e0 HSV (0-360) saturation: saturazione HSV (0-100) value: valore HSV (0-100) hsl_hue: tonalit\u00e0 HSL (0-360) hsl_saturation:saturazione HSL (0-100) lightness: luminosit\u00e0 HSL (0-100) cyan: componente ciano CMYK (0-100) magenta: componente magente CMYK (0-100) yellow: componente giallo CMYK (0-100) black: componente nero CMYK (0-100) value nuovo valore per il componente colore, rispettando gli intervalli listati sopra Esempi: set_color_part('200,10,30','green',50) \u2192 200,50,30","title":"Colore"},{"location":"gr_funzioni/colore/colore_unico/#gruppo-colore","text":"Abstract Questo gruppo contiene funzioni per manipolare i colori","title":"Gruppo Colore"},{"location":"gr_funzioni/colore/colore_unico/#color_cmyk","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo e nero Sintassi: color_cmyk( cyan , magenta , yellow , black ) Argomenti: cyan componente ciano del colore, come valore percentuale intero da 0 a 100 magenta componente magenta del colore, come valore percentuale intero da 0 a 100 yellow componente giallo del colore, come valore percentuale intero da 0 a 100 black componente nero del colore, come valore percentuale intero da 0 a 100 Esempi: color_cmyk(100,50,0,10) \u2192 0,115,230 osservazioni: color_cmyk(100,50,0,10) = color_rgb( 0,115,230 )","title":"color_cmyk"},{"location":"gr_funzioni/colore/colore_unico/#color_cmyka","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi componenti ciano, magenta, giallo, nero e alfa (trasparenza) Sintassi: color_cmyka( cyan , magenta , yellow , black , alpha ) Argomenti: cyan componente ciano del colore, come valore percentuale intero da 0 a 100 magenta componente magenta del colore, come valore percentuale intero da 0 a 100 yellow componente giallo del colore, come valore percentuale intero da 0 a 100 black componente nero del colore, come valore percentuale intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco). Esempi: color_cmyka(100,50,0,10,200) \u2192 '0,115,229,200' osservazioni: color_cmyka(100,50,0,10,200) = color_rgba(0,115,230,200)`","title":"color_cmyka"},{"location":"gr_funzioni/colore/colore_unico/#color_grayscale_average","text":"Applica un filtro in scala di grigio e restituisce una rappresentazione di stringa da un colore fornito. Sintassi: color_grayscale_average( color ) Argomenti: color una stringa di colore Esempi: color_grayscale_average('255,100,50') \u2192 '135,135,135,255'","title":"color_grayscale_average"},{"location":"gr_funzioni/colore/colore_unico/#color_hsl","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e luminosit\u00e0. Sintassi: color_hsl( hue , saturation , lightness ) Argomenti: hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 lightness /span> percentuale di luminosit\u00e0 de _ colore come valore intero da 0 a 100 Esempi: color_hsl(100,50,70) \u2192 166,217,140 osservazioni: color_hsl(100,50,70) = color_rgb( 166,217,140)","title":"color_hsl"},{"location":"gr_funzioni/colore/colore_unico/#color_hsla","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, luminosit\u00e0 e alfa (trasparenza) Sintassi: color_hsl( hue , saturation , lightness , alpha ) Argomenti: hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 lightness percentuale di luminosit\u00e0 del colore come valore intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco). Esempi: color_hsla(100,50,70,200) \u2192 '166,217,140,200' osservazioni: color_hsla(100,50,70,200) = color_rgba( 166,217,140,200)","title":"color_hsla"},{"location":"gr_funzioni/colore/colore_unico/#color_hsv","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione e valore. Sintassi: color_hsv( hue , saturation , value ) Argomenti: hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 value valore percentuale del colore come intero da 0 a 100 Esempi: color_hsv(40,100,100) \u2192 '255,170,0' osservazioni: color_hsv(40,100,100) = color_rgb( 255,170,0 )","title":"color_hsv"},{"location":"gr_funzioni/colore/colore_unico/#color_hsva","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi attributi tonalit\u00e0, saturazione, valore e alfa (trasparenza). Sintassi: color_hsva( hue , saturation , value , alpha ) Argomenti: hue tonalit\u00e0 del colore, come valore intero da 0 a 360 saturation percentuale di saturazione del colore come valore intero da 0 a 100 value valore percentuale del colore come intero da 0 a 100 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco) Esempi: color_hsva(40,100,100,200) \u2192 '255,170,0,200' osservazioni: color_hsva(40,100,100,200) = color_rgba( 255,170,0,200 )","title":"color_hsva"},{"location":"gr_funzioni/colore/colore_unico/#color_mix_rgb","text":"Restituisce una stringa che rappresenta un colore che mescola i valori rosso, verde, blu e alfa di due colori forniti in base a un determinato rapporto. Sintassi: color_mix_rgb( color1 , color2 , ratio ) Argomenti: color1 una stringa di colore color2 una stringa di colore ratio un rapporto Esempi: color_mix_rgb('0,0,0','255,255,255',0.5) \u2192 127,127,127,255","title":"color_mix_rgb"},{"location":"gr_funzioni/colore/colore_unico/#color_part","text":"Restituisce uno specifico componente colore da una stringa colore, es. la componente rosso o alfa. Sintassi: color_part( color , component ) Argomenti: color una stringa di colore component una stringa corrispondente al componente colore da restituire. Opzioni valide sono: red: componente rosso RGB (0-255) green: componente verde RGB (0-255) blue: componente blu RGB (0-255) alpha: valore alfa (trasparenza) (0-255) hue: tonalit\u00e0 HSV (0-360) saturation: saturazione HSV (0-100) value: valore HSV (0-100) hsl_hue: tonalit\u00e0 HSL (0-360) hsl_saturation: saturazione HSL (0-100) lightness: luminosit\u00e0 HSL (0-100) cyan: componente ciano CMYK (0-100) magenta: componente magenta CMYK (0-100) yellow: componente giallo CMYK (0-100) black: componente nero CMYK (0-100) Esempi: color_part('200,10,30','green') \u2192 10","title":"color_part"},{"location":"gr_funzioni/colore/colore_unico/#color_rgb","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde e blu. Sintassi: color_rgb( red , green , blue ) Argomenti: red componente rosso del colore, come valore intero da 0 a 255 green componente verde del colore, come valore intero da 0 a 255 blue componente blu del colore, come valore intero da 0 a 255 Esempi: color_rgb(255,127,0) \u2192 255,127,0","title":"color_rgb"},{"location":"gr_funzioni/colore/colore_unico/#color_rgba","text":"Restituisce una rappresentazione stringa di un colore basato sui suoi componenti rosso, verde, blue ed alpha (trasparenza). Sintassi: color_rgba( red , green , blue , alpha ) Argomenti: red componente rosso del colore, come valore intero da 0 a 255 green componente verde del colore, come valore intero da 0 a 255 blue componente blu del colore, come valore intero da 0 a 255 alpha componente alfa come valore intero da 0 (completamente trasparente) a 255 (opaco). Esempi: color_rgba(255,127,0,200) \u2192 '255,127,0,200'","title":"color_rgba"},{"location":"gr_funzioni/colore/colore_unico/#create_ramp","text":"Restituisce una scala di colori a gradiente per una mappa di colori e passi. Sintassi: create_ramp( map [, discrete=false ]) [ ] indica componenti opzionali Argomenti: map una mappa di colori e passi discrete imposta questo parametro su vero per creare una rampa di colore discreta Esempi: ramp_color(create_ramp(map(0,'0,0,0',1,'255,0,0')),1) \u2192 '255,0,0,255'","title":"create_ramp"},{"location":"gr_funzioni/colore/colore_unico/#darker","text":"Restituisce una stringa di colore pi\u00f9 scuro (o pi\u00f9 chiaro) Sintassi: darker( color , factor ) Argomenti: color una stringa di colore factor un numero intero corrispondente al fattore scurente: se il fattore \u00e8 pi\u00f9 grande di 100, questa funzione restituisce un colore pi\u00f9 scuro (per es., impostando il fattore a 300 viene restitituito un colore che ha un terzo della luminosit\u00e0); se il fattore \u00e8 minore di 100, il colore restituito \u00e8 pi\u00f9 chiaro, ma per questo scopo si raccomanda l'uso della funzione lighter(); se il fattore \u00e8 0 o negativo, il valore restituito non \u00e8 specificato. Esempi: darker('200,10,30',300) \u2192 '66,3,10,255'","title":"darker"},{"location":"gr_funzioni/colore/colore_unico/#lighter","text":"Restituisce una stringa di colore pi\u00f9 chiaro (o pi\u00f9 scuro) Sintassi: lighter( color , factor ) Argomenti: color una stringa di colore factor un numero intero corrispondente al fattore schiarente: se il fattore \u00e8 pi\u00f9 grande di 100, questa funzione restituisce un colore pi\u00f9 chiaro (per es., impostando il fattore a 150 viene restitituito un colore al 50% pi\u00f9 luminoso); se il fattore \u00e8 minore di 100, il colore restituito \u00e8 pi\u00f9 scuro, ma per questo scopo si raccomanda l'uso della funzione darker(); se il fattore \u00e8 0 o negativo, il valore restituito non \u00e8 specificato. Esempi: lighter('200,10,30',200) \u2192 '255,158,168,255'","title":"lighter"},{"location":"gr_funzioni/colore/colore_unico/#project_color","text":"Restituisce un colore dallo schema colore del progetto. Sintassi: project_color( name ) Argomenti: name un nome colore Esempi: project_color('Logo color') \u2192 '20,140,50' osservazioni","title":"project_color"},{"location":"gr_funzioni/colore/colore_unico/#ramp_color","text":"Restituisce una stringa rappresentante un colore ottenuto da una scala colore.","title":"ramp_color"},{"location":"gr_funzioni/colore/colore_unico/#variante-di-scala-salvata","text":"Restituisce una stringa che rappresenta un colore da una scala salvata Sintassi: ramp_color( ramp_name , value ) Argomenti: ramp_name il nome della scala colore come stringa, peesempi:o 'Spectral' value la posizione nella scala colore da cui selezionare il colore come numero reale fra 0 e 1 Esempi: ramp_color('Spectral',0.3) \u2192 '253,190,115,255' nota Le scale di colore disponibili differiscono fra le varie installazioni di QGIS. Questa funzione potrebbe non restituire il risultato atteso se sposti i tuoi progetti QGIS fra le diverse installazioni.","title":"Variante di scala salvata"},{"location":"gr_funzioni/colore/colore_unico/#variante-di-scala-creata-con-unespressione","text":"Restituisce una stringa che rappresenta un colore da una scala creata con un'espressione Sintassi: ramp_color( ramp , value ) Argomenti: ramp la scala di colori value la posizione nella scala colore da cui selezionare il colore come numero reale fra 0 e 1 Esempi: ramp_color(create_ramp(map(0,'0,0,0',1,'255,0,0')),1) \u2192255,0,0,255","title":"Variante di scala creata con un'espressione"},{"location":"gr_funzioni/colore/colore_unico/#set_color_part","text":"Imposta uno specifico componente colore per una stringa colore, es. la componente rosso o alpha. Sintassi: set_color_part( color , component , value ) Argomenti: color una stringa di colore component una stringa corrispondente al componente colore da impostare. Opzioni valide sono: red: componente rosso RGB (0-255) green: componente verde RGB (0-255) blue: componente blu RGB (0-255) alpha: valore alfa (trasparenza) (0-255) hue: tonalit\u00e0 HSV (0-360) saturation: saturazione HSV (0-100) value: valore HSV (0-100) hsl_hue: tonalit\u00e0 HSL (0-360) hsl_saturation:saturazione HSL (0-100) lightness: luminosit\u00e0 HSL (0-100) cyan: componente ciano CMYK (0-100) magenta: componente magente CMYK (0-100) yellow: componente giallo CMYK (0-100) black: componente nero CMYK (0-100) value nuovo valore per il componente colore, rispettando gli intervalli listati sopra Esempi: set_color_part('200,10,30','green',50) \u2192 200,50,30","title":"set_color_part"},{"location":"gr_funzioni/colore/create_ramp/","text":"create_ramp \u21b5 Restituisce una scala di colori a gradiente per una mappa di colori e passi. Sintassi \u21b5 create_ramp( map , discrete ) Argomenti \u21b5 map una mappa di colori e passi discrete dichiara se la scala di colori \u00e8 discreta Esempi \u21b5 ramp_color(create_ramp(map(0,'0,0,0',1,'255,0,0')),1) \u2192 255,0,0,255 nota bene \u21b5 -- osservazioni \u21b5 --","title":"create_ramp"},{"location":"gr_funzioni/colore/create_ramp/#create_ramp","text":"Restituisce una scala di colori a gradiente per una mappa di colori e passi.","title":"create_ramp"},{"location":"gr_funzioni/colore/create_ramp/#sintassi","text":"create_ramp( map , discrete )","title":"Sintassi"},{"location":"gr_funzioni/colore/create_ramp/#argomenti","text":"map una mappa di colori e passi discrete dichiara se la scala di colori \u00e8 discreta","title":"Argomenti"},{"location":"gr_funzioni/colore/create_ramp/#esempi","text":"ramp_color(create_ramp(map(0,'0,0,0',1,'255,0,0')),1) \u2192 255,0,0,255","title":"Esempi"},{"location":"gr_funzioni/colore/create_ramp/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/create_ramp/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/colore/darker/","text":"darker \u21b5 Restituisce una stringa di colore pi\u00f9 scuro (o pi\u00f9 chiaro) Sintassi \u21b5 darker( color , factor ) Argomenti \u21b5 color una stringa di colore factor un numero intero corrispondente al fattore scurente: se il fattore \u00e8 pi\u00f9 grande di 100, questa funzione restituisce un colore pi\u00f9 scuro (per es., impostando il fattore a 300 viene restitituito un colore che ha un terzo della luminosit\u00e0); se il fattore \u00e8 minore di 100, il colore restituito \u00e8 pi\u00f9 chiaro, ma per questo scopo si raccomanda l'uso della funzione lighter(); se il fattore \u00e8 0 o negativo, il valore restituito non \u00e8 specificato. Esempi \u21b5 darker('200,10,30',300) \u2192 '66,3,10,255' nota bene \u21b5 -- osservazioni \u21b5 --","title":"darker"},{"location":"gr_funzioni/colore/darker/#darker","text":"Restituisce una stringa di colore pi\u00f9 scuro (o pi\u00f9 chiaro)","title":"darker"},{"location":"gr_funzioni/colore/darker/#sintassi","text":"darker( color , factor )","title":"Sintassi"},{"location":"gr_funzioni/colore/darker/#argomenti","text":"color una stringa di colore factor un numero intero corrispondente al fattore scurente: se il fattore \u00e8 pi\u00f9 grande di 100, questa funzione restituisce un colore pi\u00f9 scuro (per es., impostando il fattore a 300 viene restitituito un colore che ha un terzo della luminosit\u00e0); se il fattore \u00e8 minore di 100, il colore restituito \u00e8 pi\u00f9 chiaro, ma per questo scopo si raccomanda l'uso della funzione lighter(); se il fattore \u00e8 0 o negativo, il valore restituito non \u00e8 specificato.","title":"Argomenti"},{"location":"gr_funzioni/colore/darker/#esempi","text":"darker('200,10,30',300) \u2192 '66,3,10,255'","title":"Esempi"},{"location":"gr_funzioni/colore/darker/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/darker/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/colore/lighter/","text":"lighter \u21b5 Restituisce una stringa di colore pi\u00f9 chiaro (o pi\u00f9 scuro) Sintassi \u21b5 lighter( color , factor ) Argomenti \u21b5 color una stringa di colore factor un numero intero corrispondente al fattore schiarente: se il fattore \u00e8 pi\u00f9 grande di 100, questa funzione restituisce un colore pi\u00f9 chiaro (per es., impostando il fattore a 150 viene restitituito un colore al 50% pi\u00f9 luminoso); se il fattore \u00e8 minore di 100, il colore restituito \u00e8 pi\u00f9 scuro, ma per questo scopo si raccomanda l'uso della funzione darker(); se il fattore \u00e8 0 o negativo, il valore restituito non \u00e8 specificato. Esempi \u21b5 lighter('200,10,30',200) \u2192 '255,158,168,255' nota bene \u21b5 -- osservazioni \u21b5 --","title":"lighter"},{"location":"gr_funzioni/colore/lighter/#lighter","text":"Restituisce una stringa di colore pi\u00f9 chiaro (o pi\u00f9 scuro)","title":"lighter"},{"location":"gr_funzioni/colore/lighter/#sintassi","text":"lighter( color , factor )","title":"Sintassi"},{"location":"gr_funzioni/colore/lighter/#argomenti","text":"color una stringa di colore factor un numero intero corrispondente al fattore schiarente: se il fattore \u00e8 pi\u00f9 grande di 100, questa funzione restituisce un colore pi\u00f9 chiaro (per es., impostando il fattore a 150 viene restitituito un colore al 50% pi\u00f9 luminoso); se il fattore \u00e8 minore di 100, il colore restituito \u00e8 pi\u00f9 scuro, ma per questo scopo si raccomanda l'uso della funzione darker(); se il fattore \u00e8 0 o negativo, il valore restituito non \u00e8 specificato.","title":"Argomenti"},{"location":"gr_funzioni/colore/lighter/#esempi","text":"lighter('200,10,30',200) \u2192 '255,158,168,255'","title":"Esempi"},{"location":"gr_funzioni/colore/lighter/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/lighter/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/colore/project_color/","text":"project_color \u21b5 Restituisce un colore dallo schema colore del progetto. Sintassi \u21b5 project_color( name ) Argomenti \u21b5 name un nome colore Esempi \u21b5 project_color('Logo color') \u2192 20,140,50 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_color"},{"location":"gr_funzioni/colore/project_color/#project_color","text":"Restituisce un colore dallo schema colore del progetto.","title":"project_color"},{"location":"gr_funzioni/colore/project_color/#sintassi","text":"project_color( name )","title":"Sintassi"},{"location":"gr_funzioni/colore/project_color/#argomenti","text":"name un nome colore","title":"Argomenti"},{"location":"gr_funzioni/colore/project_color/#esempi","text":"project_color('Logo color') \u2192 20,140,50","title":"Esempi"},{"location":"gr_funzioni/colore/project_color/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/project_color/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/colore/ramp_color/","text":"ramp_color \u21b5 Restituisce una stringa rappresentante un colore ottenuto da una scala colore. Variante di scala salvata \u21b5 Restituisce una stringa che rappresenta un colore da una scala salvata Sintassi \u21b5 ramp_color( ramp_name , value ) Argomenti \u21b5 ramp_name il nome della scala colore come stringa, per esempio 'Spectral' value la posizione nella scala colore da cui selezionare il colore come numero reale fra 0 e 1 Esempi \u21b5 ramp_color('Spectral',0.3) \u2192 '253,190,115,255' nota \u21b5 Le scale di colore disponibili differiscono fra le varie installazioni di QGIS. Questa funzione potrebbe non restituire il risultato atteso se sposti i tuoi progetti QGIS fra le diverse installazioni. Variante di scala creata con un'espressione \u21b5 Restituisce una stringa che rappresenta un colore da una scala creata con un'espressione Sintassi \u21b5 ramp_color( ramp , value ) Argomenti \u21b5 ramp la scala di colori value la posizione nella scala colore da cui selezionare il colore come numero reale fra 0 e 1 Esempi \u21b5 ramp_color(create_ramp(map(0,'0,0,0',1,'255,0,0')),1) \u2192255,0,0,255 osservazioni \u21b5 --","title":"ramp_color"},{"location":"gr_funzioni/colore/ramp_color/#ramp_color","text":"Restituisce una stringa rappresentante un colore ottenuto da una scala colore.","title":"ramp_color"},{"location":"gr_funzioni/colore/ramp_color/#variante-di-scala-salvata","text":"Restituisce una stringa che rappresenta un colore da una scala salvata","title":"Variante di scala salvata"},{"location":"gr_funzioni/colore/ramp_color/#sintassi","text":"ramp_color( ramp_name , value )","title":"Sintassi"},{"location":"gr_funzioni/colore/ramp_color/#argomenti","text":"ramp_name il nome della scala colore come stringa, per esempio 'Spectral' value la posizione nella scala colore da cui selezionare il colore come numero reale fra 0 e 1","title":"Argomenti"},{"location":"gr_funzioni/colore/ramp_color/#esempi","text":"ramp_color('Spectral',0.3) \u2192 '253,190,115,255'","title":"Esempi"},{"location":"gr_funzioni/colore/ramp_color/#nota","text":"Le scale di colore disponibili differiscono fra le varie installazioni di QGIS. Questa funzione potrebbe non restituire il risultato atteso se sposti i tuoi progetti QGIS fra le diverse installazioni.","title":"nota"},{"location":"gr_funzioni/colore/ramp_color/#variante-di-scala-creata-con-unespressione","text":"Restituisce una stringa che rappresenta un colore da una scala creata con un'espressione","title":"Variante di scala creata con un'espressione"},{"location":"gr_funzioni/colore/ramp_color/#sintassi_1","text":"ramp_color( ramp , value )","title":"Sintassi"},{"location":"gr_funzioni/colore/ramp_color/#argomenti_1","text":"ramp la scala di colori value la posizione nella scala colore da cui selezionare il colore come numero reale fra 0 e 1","title":"Argomenti"},{"location":"gr_funzioni/colore/ramp_color/#esempi_1","text":"ramp_color(create_ramp(map(0,'0,0,0',1,'255,0,0')),1) \u2192255,0,0,255","title":"Esempi"},{"location":"gr_funzioni/colore/ramp_color/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/colore/set_color_part/","text":"set_color_part \u21b5 Imposta uno specifico componente colore per una stringa colore, es. la componente rosso o alpha. Sintassi \u21b5 set_color_part( color , component , value ) Argomenti \u21b5 color una stringa di colore component una stringa corrispondente al componente colore da impostare. Opzioni valide sono: red: componente rosso RGB (0-255) green: componente verde RGB (0-255) blue: componente blu RGB (0-255) alpha: valore alfa (trasparenza) (0-255) hue: tonalit\u00e0 HSV (0-360) saturation: saturazione HSV (0-100) value: valore HSV (0-100) hsl_hue: tonalit\u00e0 HSL (0-360) hsl_saturation:saturazione HSL (0-100) lightness: luminosit\u00e0 HSL (0-100) cyan: componente ciano CMYK (0-100) magenta: componente magente CMYK (0-100) yellow: componente giallo CMYK (0-100) black: componente nero CMYK (0-100) value nuovo valore per il componente colore, rispettando gli intervalli listati sopra Esempi \u21b5 set_color_part('200,10,30','green',50) \u2192 200,50,30 nota bene \u21b5 -- osservazioni \u21b5 --","title":"set_color_part"},{"location":"gr_funzioni/colore/set_color_part/#set_color_part","text":"Imposta uno specifico componente colore per una stringa colore, es. la componente rosso o alpha.","title":"set_color_part"},{"location":"gr_funzioni/colore/set_color_part/#sintassi","text":"set_color_part( color , component , value )","title":"Sintassi"},{"location":"gr_funzioni/colore/set_color_part/#argomenti","text":"color una stringa di colore component una stringa corrispondente al componente colore da impostare. Opzioni valide sono: red: componente rosso RGB (0-255) green: componente verde RGB (0-255) blue: componente blu RGB (0-255) alpha: valore alfa (trasparenza) (0-255) hue: tonalit\u00e0 HSV (0-360) saturation: saturazione HSV (0-100) value: valore HSV (0-100) hsl_hue: tonalit\u00e0 HSL (0-360) hsl_saturation:saturazione HSL (0-100) lightness: luminosit\u00e0 HSL (0-100) cyan: componente ciano CMYK (0-100) magenta: componente magente CMYK (0-100) yellow: componente giallo CMYK (0-100) black: componente nero CMYK (0-100) value nuovo valore per il componente colore, rispettando gli intervalli listati sopra","title":"Argomenti"},{"location":"gr_funzioni/colore/set_color_part/#esempi","text":"set_color_part('200,10,30','green',50) \u2192 200,50,30","title":"Esempi"},{"location":"gr_funzioni/colore/set_color_part/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/colore/set_color_part/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/condizioni/case/","text":"Espressione CASE \u21b5 Valuta un'espressione e restituisce un risultato diverso, sia esso vero o falso. Puoi testare pi\u00f9 condizioni Sintassi \u21b5 CASE WHEN condizione THEN risultato [ ...n ] [ ELSE risultato ] END [ ] indica componenti opzionali Argomenti \u21b5 WHEN condizione - L'espressione di condizione da valutare. THEN risultato - Se condizione valutata a True (vero) allora risultato viene valutato e restituito. ELSE risultato - Se nessuna delle condizioni valutate sopra restituisce True (vero) allora risultato viene valutato e restituito. Esempi \u21b5 CASE WHEN \"column\" IS NULL THEN 'None' END CASE WHEN \"COD_REG\" =19 or \"COD_REG\" = 20 THEN \"DEN_REG\" ELSE 'NON SONO ISOLE' END CASE WHEN length( \"DEN_REG\") >15 THEN 'LUNGO' WHEN length( \"DEN_REG\") <15 AND length( \"DEN_REG\") >10 THEN 'MEDIO' ELSE 'CORTA' END Altri esempi \u21b5 popolare un campo un funzione di un altro \u21b5 CASE WHEN \"livello3\" ILIKE 'A%' THEN 'ciao' WHEN \"livello3\" ILIKE 'B%' THEN 'arrivederci' WHEN \"livello3\" ILIKE 'C%' THEN 'ciaone' ELSE 'CUCU' END In questo esempio viene popolato un campo (dove \u00e8 usata l'espressione) in funzione del campo livello3 : se il campo contiene un valore che inizia per A allora scriver\u00e0 ciao , se contiene un valore che inizia con B scriver\u00e0 arrivederci ; se contiene un valore che inizia per C scriver\u00e0 ciaone in tutti gli altri casi scriver\u00e0 CUCU posizionamento etichetta \u21b5","title":"Espressione CASE"},{"location":"gr_funzioni/condizioni/case/#espressione-case","text":"Valuta un'espressione e restituisce un risultato diverso, sia esso vero o falso. Puoi testare pi\u00f9 condizioni","title":"Espressione CASE"},{"location":"gr_funzioni/condizioni/case/#sintassi","text":"CASE WHEN condizione THEN risultato [ ...n ] [ ELSE risultato ] END [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/condizioni/case/#argomenti","text":"WHEN condizione - L'espressione di condizione da valutare. THEN risultato - Se condizione valutata a True (vero) allora risultato viene valutato e restituito. ELSE risultato - Se nessuna delle condizioni valutate sopra restituisce True (vero) allora risultato viene valutato e restituito.","title":"Argomenti"},{"location":"gr_funzioni/condizioni/case/#esempi","text":"CASE WHEN \"column\" IS NULL THEN 'None' END CASE WHEN \"COD_REG\" =19 or \"COD_REG\" = 20 THEN \"DEN_REG\" ELSE 'NON SONO ISOLE' END CASE WHEN length( \"DEN_REG\") >15 THEN 'LUNGO' WHEN length( \"DEN_REG\") <15 AND length( \"DEN_REG\") >10 THEN 'MEDIO' ELSE 'CORTA' END","title":"Esempi"},{"location":"gr_funzioni/condizioni/case/#altri-esempi","text":"","title":"Altri esempi"},{"location":"gr_funzioni/condizioni/case/#popolare-un-campo-un-funzione-di-un-altro","text":"CASE WHEN \"livello3\" ILIKE 'A%' THEN 'ciao' WHEN \"livello3\" ILIKE 'B%' THEN 'arrivederci' WHEN \"livello3\" ILIKE 'C%' THEN 'ciaone' ELSE 'CUCU' END In questo esempio viene popolato un campo (dove \u00e8 usata l'espressione) in funzione del campo livello3 : se il campo contiene un valore che inizia per A allora scriver\u00e0 ciao , se contiene un valore che inizia con B scriver\u00e0 arrivederci ; se contiene un valore che inizia per C scriver\u00e0 ciaone in tutti gli altri casi scriver\u00e0 CUCU","title":"popolare un campo un funzione di un altro"},{"location":"gr_funzioni/condizioni/case/#posizionamento-etichetta","text":"","title":"posizionamento etichetta"},{"location":"gr_funzioni/condizioni/coalesce/","text":"coalesce \u21b5 Restituisce il primo valore non NULL dalla lista delle espressioni. Questa funzione pu\u00f2 usare qualsiasi numero di argomenti. Sintassi \u21b5 coalesce( expression1 , expression2 , \u2026 ) Argomenti \u21b5 expression qualsiasi valore o espressione valida, senza tener conto del tipo. Esempi \u21b5 coalesce(NULL, 2) \u2192 2 coalesce(NULL, 2, 3) \u2192 2 coalesce(7, NULL, 3*2) \u2192 7 coalesce(\"fieldA\", \"fallbackField\", 'ERRORE') \u2192 valore di \"fieldA\" se non \u00e8 NULL, altrimenti il valore di \"fallbackField\" o la stringa 'ERRORE' se sono entrambi NULL Osservazioni \u21b5 Questa funzione \u00e8 utile all'interno di una espressione che prevede l'uso di pi\u00f9 campi ed uno o pi\u00f9 di essi ha valore NULL, questo valore penalizza l'intera stringa e rende non visibile il risultato. esempio senza l'uso della funzione coalesce : esempio con l'uso della funzione coalesce :","title":"coalesce"},{"location":"gr_funzioni/condizioni/coalesce/#coalesce","text":"Restituisce il primo valore non NULL dalla lista delle espressioni. Questa funzione pu\u00f2 usare qualsiasi numero di argomenti.","title":"coalesce"},{"location":"gr_funzioni/condizioni/coalesce/#sintassi","text":"coalesce( expression1 , expression2 , \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/condizioni/coalesce/#argomenti","text":"expression qualsiasi valore o espressione valida, senza tener conto del tipo.","title":"Argomenti"},{"location":"gr_funzioni/condizioni/coalesce/#esempi","text":"coalesce(NULL, 2) \u2192 2 coalesce(NULL, 2, 3) \u2192 2 coalesce(7, NULL, 3*2) \u2192 7 coalesce(\"fieldA\", \"fallbackField\", 'ERRORE') \u2192 valore di \"fieldA\" se non \u00e8 NULL, altrimenti il valore di \"fallbackField\" o la stringa 'ERRORE' se sono entrambi NULL","title":"Esempi"},{"location":"gr_funzioni/condizioni/coalesce/#osservazioni","text":"Questa funzione \u00e8 utile all'interno di una espressione che prevede l'uso di pi\u00f9 campi ed uno o pi\u00f9 di essi ha valore NULL, questo valore penalizza l'intera stringa e rende non visibile il risultato. esempio senza l'uso della funzione coalesce : esempio con l'uso della funzione coalesce :","title":"Osservazioni"},{"location":"gr_funzioni/condizioni/condizioni/","text":"Condizioni \u21b5 Questo gruppo contiene funzioni per eseguire controlli condizionali nelle espressioni. Funzione Descrizione CASE Valuta un'espressione e restituisce un risultato diverso, sia esso vero o falso. Puoi testare pi\u00f9 condizioni coalesce Restituisce il primo valore non NULL dalla lista delle espressioni. Questa funzione pu\u00f2 usare qualsiasi numero di argomenti if Verifica una condizione e restituisce un risultato diverso a seconda del controllo condizionale regexp_match Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata nullif Restituisce un valore nullo se value1 \u00e8 uguale a value2 ; altrimenti restituisce value1 . Questo pu\u00f2 essere usato per sostituire in modo condizionale i valori con NULL try Prova un'espressione e restituisce il suo valore se priva di errori","title":"Condizioni"},{"location":"gr_funzioni/condizioni/condizioni/#condizioni","text":"Questo gruppo contiene funzioni per eseguire controlli condizionali nelle espressioni. Funzione Descrizione CASE Valuta un'espressione e restituisce un risultato diverso, sia esso vero o falso. Puoi testare pi\u00f9 condizioni coalesce Restituisce il primo valore non NULL dalla lista delle espressioni. Questa funzione pu\u00f2 usare qualsiasi numero di argomenti if Verifica una condizione e restituisce un risultato diverso a seconda del controllo condizionale regexp_match Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata nullif Restituisce un valore nullo se value1 \u00e8 uguale a value2 ; altrimenti restituisce value1 . Questo pu\u00f2 essere usato per sostituire in modo condizionale i valori con NULL try Prova un'espressione e restituisce il suo valore se priva di errori","title":"Condizioni"},{"location":"gr_funzioni/condizioni/condizioni_unico/","text":"Gruppo Condizioni \u21b5 Abstract Questo gruppo contiene funzioni per gestire controlli condizionali nelle espressioni. CASE \u21b5 Valuta un'espressione e restituisce un risultato diverso, sia esso vero o falso. Puoi testare pi\u00f9 condizioni Sintassi: CASE WHEN condizione THEN risultato [ ...n ] [ ELSE risultato ] END [ ] indica componenti opzionali Argomenti: WHEN condizione - L'espressione di condizione da valutare. THEN risultato - Se condizione valutata a True (vero) allora risultato viene valutato e restituito. ELSE risultato - Se nessuna delle condizioni valutate sopra restituisce True (vero) allora risultato viene valutato e restituito. Esempi: CASE WHEN \"column\" IS NULL THEN 'None' END CASE WHEN \"COD_REG\" =19 or \"COD_REG\" = 20 THEN \"DEN_REG\" ELSE 'NON SONO ISOLE' END CASE WHEN length( \"DEN_REG\") >15 THEN 'LUNGO' WHEN length( \"DEN_REG\") <15 AND length( \"DEN_REG\") >10 THEN 'MEDIO' ELSE 'CORTA' END Altri Esempi: popolare un campo un funzione di un altro CASE WHEN \"livello3\" ILIKE 'A%' THEN 'ciao' WHEN \"livello3\" ILIKE 'B%' THEN 'arrivederci' WHEN \"livello3\" ILIKE 'C%' THEN 'ciaone' ELSE 'CUCU' END In questo Esempio viene popolato un campo (dove \u00e8 usata l'espressione) in funzione del campo livello3 : se il campo contiene un valore che inizia per A allora scriver\u00e0 ciao , se contiene un valore che inizia con B scriver\u00e0 arrivederci ; se contiene un valore che inizia per C scriver\u00e0 ciaone in tutti gli altri casi scriver\u00e0 CUCU -- posizionamento etichetta coalesce \u21b5 Restituisce il primo valore non NULL dalla lista delle espressioni. Questa funzione pu\u00f2 usare qualsiasi numero di Argomenti:. Sintassi: coalesce( expression1 , expression2 , \u2026 ) Argomenti: expression qualsiasi valore o espressione valida, senza tener conto del tipo. Esempi: coalesce(NULL, 2) \u2192 2 coalesce(NULL, 2, 3) \u2192 2 coalesce(7, NULL, 3*2) \u2192 7 coalesce(\"fieldA\", \"fallbackField\", 'ERRORE') \u2192 valore di \"fieldA\" se non \u00e8 NULL, altrimenti il valore di \"fallbackField\" o la stringa 'ERRORE' se sono entrambi NULL Osservazioni: Questa funzione \u00e8 utile all'interno di una espressione che prevede l'uso di pi\u00f9 campi ed uno o pi\u00f9 di essi ha valore NULL, questo valore penalizza l'intera stringa e rende non visibile il risultato. Esempio senza l'uso della funzione coalesce : Esempio con l'uso della funzione coalesce : if \u21b5 Testa una condizione e restituisce un risultato diverso a seconda della verifica. Sintassi: if( condition , result_when_true , result_when_false ) Argomenti: condition la condizione che deve essere controllata result_when_true il risultato che viene restituito quando la condizione \u00e8 vera o un altro valore non si trasforma in falso. result_when_false il risultato che viene restituito quando la condizione \u00e8 falsa o un altro valore si trasforma in falso come 0 o ''. NULL sar\u00e0 inoltre convertito in falso. Esempi: if( 1+1=2, 'S\u00ec', 'No' ) \u2192 'S\u00ec' if( 1+1=3, 'S\u00ec', 'No' ) \u2192 'No' if( 5 > 3, 1, 0) \u2192 1 if( '', 'It is true (not empty)', 'It is false (empty)' ) \u2192 'It is false (empty)' if( ' ', 'It is true (not empty)', 'It is false (empty)' ) \u2192 'It is true (not empty)' if( 0, 'One', 'Zero' ) \u2192 'Zero' if( 10, 'One', 'Zero' ) \u2192 'One' Osservazioni: -- nullif \u21b5 Restituisce un valore nullo se value1 \u00e8 uguale a value2 ; altrimenti restituisce value1 . Questo pu\u00f2 essere usato per sostituire in modo condizionale i valori con NULL . Sintassi: nullif( value1 , value2 ) Argomenti: value1 Il valore che dovrebbe essere utilizzato o sostituito con NULL . value2 Il valore di controllo che attiver\u00e0 la sostituzione NULL . Esempi: nullif('(none)', '(none)') \u2192 NULL nullif('text', '(none)') \u2192 'text' nullif(\"name\", '') \u2192 NULL, se \"name\" \u00e8 una stringa vuota (o gi\u00e0 NULL), \"name\" in qualsiasi altro caso. regexp_match \u21b5 Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata. Sintassi: regexp_match( input_string , regex ) Argomenti: _input_string _ la stringa da confrontare con l'espressione regolare _regex _ L'espressione regolare da confrontare. I caratteri backslash devono essere doppiamente escaped (es \"\\s\" per selezionare un carattere spazio bianco). Esempi: regexp_match('QGIS ROCKS','\\\\sROCKS') \u2192 5 Osservazioni: -- In questo Esempio la prima lettere di Fiandaca si trova alla posizione 10 regexp_match('Salvatore Fiandaca','\\\\sFiandaca') \u2192 10 try \u21b5 Prova un'espressione e restituisce il suo valore se priva di errori. Se l'espressione restituisce un errore, verr\u00e0 restituito un valore alternativo se fornito altrimenti la funzione restituir\u00e0 null. Sintassi: try( expression [, alternative ]) [ ] contrassegna componenti opzionali Argomenti: expression l'espressione che dovrebbe essere eseguita alternative il risultato che verr\u00e0 restituito se l'espressione restituisce un errore Esempi: try( to_int( '1' ), 0 ) \u2192 1 try( to_int( 'a' ), 0 ) \u2192 0 try( to_date( 'invalid_date' ) ) \u2192 NULL","title":"Condizioni"},{"location":"gr_funzioni/condizioni/condizioni_unico/#gruppo-condizioni","text":"Abstract Questo gruppo contiene funzioni per gestire controlli condizionali nelle espressioni.","title":"Gruppo Condizioni"},{"location":"gr_funzioni/condizioni/condizioni_unico/#case","text":"Valuta un'espressione e restituisce un risultato diverso, sia esso vero o falso. Puoi testare pi\u00f9 condizioni Sintassi: CASE WHEN condizione THEN risultato [ ...n ] [ ELSE risultato ] END [ ] indica componenti opzionali Argomenti: WHEN condizione - L'espressione di condizione da valutare. THEN risultato - Se condizione valutata a True (vero) allora risultato viene valutato e restituito. ELSE risultato - Se nessuna delle condizioni valutate sopra restituisce True (vero) allora risultato viene valutato e restituito. Esempi: CASE WHEN \"column\" IS NULL THEN 'None' END CASE WHEN \"COD_REG\" =19 or \"COD_REG\" = 20 THEN \"DEN_REG\" ELSE 'NON SONO ISOLE' END CASE WHEN length( \"DEN_REG\") >15 THEN 'LUNGO' WHEN length( \"DEN_REG\") <15 AND length( \"DEN_REG\") >10 THEN 'MEDIO' ELSE 'CORTA' END Altri Esempi: popolare un campo un funzione di un altro CASE WHEN \"livello3\" ILIKE 'A%' THEN 'ciao' WHEN \"livello3\" ILIKE 'B%' THEN 'arrivederci' WHEN \"livello3\" ILIKE 'C%' THEN 'ciaone' ELSE 'CUCU' END In questo Esempio viene popolato un campo (dove \u00e8 usata l'espressione) in funzione del campo livello3 : se il campo contiene un valore che inizia per A allora scriver\u00e0 ciao , se contiene un valore che inizia con B scriver\u00e0 arrivederci ; se contiene un valore che inizia per C scriver\u00e0 ciaone in tutti gli altri casi scriver\u00e0 CUCU -- posizionamento etichetta","title":"CASE"},{"location":"gr_funzioni/condizioni/condizioni_unico/#coalesce","text":"Restituisce il primo valore non NULL dalla lista delle espressioni. Questa funzione pu\u00f2 usare qualsiasi numero di Argomenti:. Sintassi: coalesce( expression1 , expression2 , \u2026 ) Argomenti: expression qualsiasi valore o espressione valida, senza tener conto del tipo. Esempi: coalesce(NULL, 2) \u2192 2 coalesce(NULL, 2, 3) \u2192 2 coalesce(7, NULL, 3*2) \u2192 7 coalesce(\"fieldA\", \"fallbackField\", 'ERRORE') \u2192 valore di \"fieldA\" se non \u00e8 NULL, altrimenti il valore di \"fallbackField\" o la stringa 'ERRORE' se sono entrambi NULL Osservazioni: Questa funzione \u00e8 utile all'interno di una espressione che prevede l'uso di pi\u00f9 campi ed uno o pi\u00f9 di essi ha valore NULL, questo valore penalizza l'intera stringa e rende non visibile il risultato. Esempio senza l'uso della funzione coalesce : Esempio con l'uso della funzione coalesce :","title":"coalesce"},{"location":"gr_funzioni/condizioni/condizioni_unico/#if","text":"Testa una condizione e restituisce un risultato diverso a seconda della verifica. Sintassi: if( condition , result_when_true , result_when_false ) Argomenti: condition la condizione che deve essere controllata result_when_true il risultato che viene restituito quando la condizione \u00e8 vera o un altro valore non si trasforma in falso. result_when_false il risultato che viene restituito quando la condizione \u00e8 falsa o un altro valore si trasforma in falso come 0 o ''. NULL sar\u00e0 inoltre convertito in falso. Esempi: if( 1+1=2, 'S\u00ec', 'No' ) \u2192 'S\u00ec' if( 1+1=3, 'S\u00ec', 'No' ) \u2192 'No' if( 5 > 3, 1, 0) \u2192 1 if( '', 'It is true (not empty)', 'It is false (empty)' ) \u2192 'It is false (empty)' if( ' ', 'It is true (not empty)', 'It is false (empty)' ) \u2192 'It is true (not empty)' if( 0, 'One', 'Zero' ) \u2192 'Zero' if( 10, 'One', 'Zero' ) \u2192 'One' Osservazioni: --","title":"if"},{"location":"gr_funzioni/condizioni/condizioni_unico/#nullif","text":"Restituisce un valore nullo se value1 \u00e8 uguale a value2 ; altrimenti restituisce value1 . Questo pu\u00f2 essere usato per sostituire in modo condizionale i valori con NULL . Sintassi: nullif( value1 , value2 ) Argomenti: value1 Il valore che dovrebbe essere utilizzato o sostituito con NULL . value2 Il valore di controllo che attiver\u00e0 la sostituzione NULL . Esempi: nullif('(none)', '(none)') \u2192 NULL nullif('text', '(none)') \u2192 'text' nullif(\"name\", '') \u2192 NULL, se \"name\" \u00e8 una stringa vuota (o gi\u00e0 NULL), \"name\" in qualsiasi altro caso.","title":"nullif"},{"location":"gr_funzioni/condizioni/condizioni_unico/#regexp_match","text":"Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata. Sintassi: regexp_match( input_string , regex ) Argomenti: _input_string _ la stringa da confrontare con l'espressione regolare _regex _ L'espressione regolare da confrontare. I caratteri backslash devono essere doppiamente escaped (es \"\\s\" per selezionare un carattere spazio bianco). Esempi: regexp_match('QGIS ROCKS','\\\\sROCKS') \u2192 5 Osservazioni: -- In questo Esempio la prima lettere di Fiandaca si trova alla posizione 10 regexp_match('Salvatore Fiandaca','\\\\sFiandaca') \u2192 10","title":"regexp_match"},{"location":"gr_funzioni/condizioni/condizioni_unico/#try","text":"Prova un'espressione e restituisce il suo valore se priva di errori. Se l'espressione restituisce un errore, verr\u00e0 restituito un valore alternativo se fornito altrimenti la funzione restituir\u00e0 null. Sintassi: try( expression [, alternative ]) [ ] contrassegna componenti opzionali Argomenti: expression l'espressione che dovrebbe essere eseguita alternative il risultato che verr\u00e0 restituito se l'espressione restituisce un errore Esempi: try( to_int( '1' ), 0 ) \u2192 1 try( to_int( 'a' ), 0 ) \u2192 0 try( to_date( 'invalid_date' ) ) \u2192 NULL","title":"try"},{"location":"gr_funzioni/condizioni/if/","text":"if \u21b5 Testa una condizione e restituisce un risultato diverso a seconda della verifica. Sintassi \u21b5 if( condition , result_when_true , result_when_false ) Argomenti \u21b5 condition la condizione che deve essere controllata result_when_true il risultato che viene restituito quando la condizione \u00e8 vera o un altro valore non si trasforma in falso. result_when_false il risultato che viene restituito quando la condizione \u00e8 falsa o un altro valore si trasforma in falso come 0 o ''. NULL sar\u00e0 inoltre convertito in falso. Esempi \u21b5 * if( 1+1=2, 'S\u00ec', 'No' ) \u2192 'S\u00ec' * if( 1+1=3, 'S\u00ec', 'No' ) \u2192 'No' * if( 5 > 3, 1, 0) \u2192 1 * if( '', 'It is true (not empty)', 'It is false (empty)' ) \u2192 'It is false (empty)' * if( ' ', 'It is true (not empty)', 'It is false (empty)' ) \u2192 'It is true (not empty)' * if( 0, 'One', 'Zero' ) \u2192 'Zero' * if( 10, 'One', 'Zero' ) \u2192 'One' Osservazioni \u21b5 --","title":"if"},{"location":"gr_funzioni/condizioni/if/#if","text":"Testa una condizione e restituisce un risultato diverso a seconda della verifica.","title":"if"},{"location":"gr_funzioni/condizioni/if/#sintassi","text":"if( condition , result_when_true , result_when_false )","title":"Sintassi"},{"location":"gr_funzioni/condizioni/if/#argomenti","text":"condition la condizione che deve essere controllata result_when_true il risultato che viene restituito quando la condizione \u00e8 vera o un altro valore non si trasforma in falso. result_when_false il risultato che viene restituito quando la condizione \u00e8 falsa o un altro valore si trasforma in falso come 0 o ''. NULL sar\u00e0 inoltre convertito in falso.","title":"Argomenti"},{"location":"gr_funzioni/condizioni/if/#esempi","text":"* if( 1+1=2, 'S\u00ec', 'No' ) \u2192 'S\u00ec' * if( 1+1=3, 'S\u00ec', 'No' ) \u2192 'No' * if( 5 > 3, 1, 0) \u2192 1 * if( '', 'It is true (not empty)', 'It is false (empty)' ) \u2192 'It is false (empty)' * if( ' ', 'It is true (not empty)', 'It is false (empty)' ) \u2192 'It is true (not empty)' * if( 0, 'One', 'Zero' ) \u2192 'Zero' * if( 10, 'One', 'Zero' ) \u2192 'One'","title":"Esempi"},{"location":"gr_funzioni/condizioni/if/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/condizioni/nullif/","text":"nullif \u21b5 Restituisce un valore nullo se value1 \u00e8 uguale a value2 ; altrimenti restituisce value1 . Questo pu\u00f2 essere usato per sostituire in modo condizionale i valori con NULL . Sintassi \u21b5 nullif( value1 , value2 ) Argomenti \u21b5 value1 Il valore che dovrebbe essere utilizzato o sostituito con NULL . value2 Il valore di controllo che attiver\u00e0 la sostituzione NULL . Esempi \u21b5 nullif('(none)', '(none)') \u2192 NULL nullif('text', '(none)') \u2192 'text' nullif(\"name\", '') \u2192 NULL, se \"name\" \u00e8 una stringa vuota (o gi\u00e0 NULL), \"name\" in qualsiasi altro caso. Osservazioni \u21b5 --","title":"nullif"},{"location":"gr_funzioni/condizioni/nullif/#nullif","text":"Restituisce un valore nullo se value1 \u00e8 uguale a value2 ; altrimenti restituisce value1 . Questo pu\u00f2 essere usato per sostituire in modo condizionale i valori con NULL .","title":"nullif"},{"location":"gr_funzioni/condizioni/nullif/#sintassi","text":"nullif( value1 , value2 )","title":"Sintassi"},{"location":"gr_funzioni/condizioni/nullif/#argomenti","text":"value1 Il valore che dovrebbe essere utilizzato o sostituito con NULL . value2 Il valore di controllo che attiver\u00e0 la sostituzione NULL .","title":"Argomenti"},{"location":"gr_funzioni/condizioni/nullif/#esempi","text":"nullif('(none)', '(none)') \u2192 NULL nullif('text', '(none)') \u2192 'text' nullif(\"name\", '') \u2192 NULL, se \"name\" \u00e8 una stringa vuota (o gi\u00e0 NULL), \"name\" in qualsiasi altro caso.","title":"Esempi"},{"location":"gr_funzioni/condizioni/nullif/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/condizioni/regexp_match/","text":"regexp_match \u21b5 Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata. Sintassi \u21b5 regexp_match( input_string , regex ) Argomenti \u21b5 input_string la stringa da confrontare con l'espressione regolare regex L'espressione regolare da confrontare. I caratteri backslash devono essere doppiamente escaped (es \"\\s\" per selezionare un carattere spazio bianco). Esempi \u21b5 regexp_match('QGIS ROCKS','\\\\sROCKS') \u2192 5 Osservazioni \u21b5 -- In questo esempio la prima lettere di Fiandaca si trova alla posizione 10 regexp_match('Salvatore Fiandaca','\\\\sFiandaca') \u2192 10","title":"regexp_match"},{"location":"gr_funzioni/condizioni/regexp_match/#regexp_match","text":"Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata.","title":"regexp_match"},{"location":"gr_funzioni/condizioni/regexp_match/#sintassi","text":"regexp_match( input_string , regex )","title":"Sintassi"},{"location":"gr_funzioni/condizioni/regexp_match/#argomenti","text":"input_string la stringa da confrontare con l'espressione regolare regex L'espressione regolare da confrontare. I caratteri backslash devono essere doppiamente escaped (es \"\\s\" per selezionare un carattere spazio bianco).","title":"Argomenti"},{"location":"gr_funzioni/condizioni/regexp_match/#esempi","text":"regexp_match('QGIS ROCKS','\\\\sROCKS') \u2192 5","title":"Esempi"},{"location":"gr_funzioni/condizioni/regexp_match/#osservazioni","text":"-- In questo esempio la prima lettere di Fiandaca si trova alla posizione 10 regexp_match('Salvatore Fiandaca','\\\\sFiandaca') \u2192 10","title":"Osservazioni"},{"location":"gr_funzioni/condizioni/try/","text":"try \u21b5 Prova un'espressione e restituisce il suo valore se priva di errori. Se l'espressione restituisce un errore, verr\u00e0 restituito un valore alternativo se fornito altrimenti la funzione restituir\u00e0 null. Sintassi \u21b5 try( expression [,alternative]) [ ] contrassegna componenti opzionali Argomenti \u21b5 expression l'espressione che dovrebbe essere eseguita alternative il risultato che verr\u00e0 restituito se l'espressione restituisce un errore Esempi \u21b5 * try( to_int( '1' ), 0 ) \u2192 1 * try( to_int( 'a' ), 0 ) \u2192 0 * try( to_date( 'invalid_date' ) ) \u2192 NULL Osservazioni \u21b5 --","title":"try"},{"location":"gr_funzioni/condizioni/try/#try","text":"Prova un'espressione e restituisce il suo valore se priva di errori. Se l'espressione restituisce un errore, verr\u00e0 restituito un valore alternativo se fornito altrimenti la funzione restituir\u00e0 null.","title":"try"},{"location":"gr_funzioni/condizioni/try/#sintassi","text":"try( expression [,alternative]) [ ] contrassegna componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/condizioni/try/#argomenti","text":"expression l'espressione che dovrebbe essere eseguita alternative il risultato che verr\u00e0 restituito se l'espressione restituisce un errore","title":"Argomenti"},{"location":"gr_funzioni/condizioni/try/#esempi","text":"* try( to_int( '1' ), 0 ) \u2192 1 * try( to_int( 'a' ), 0 ) \u2192 0 * try( to_date( 'invalid_date' ) ) \u2192 NULL","title":"Esempi"},{"location":"gr_funzioni/condizioni/try/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/conversioni/conversioni/","text":"Conversioni \u21b5 Questo gruppo contiene funzioni per convertire i dati da un tipo ad un'altro, es. da stringa a intero, da intero a stringa. Funzione Descrizione Info hash Crea un hash da una stringa con un determinato metodo >= QGIS 3.12 md5 Crea un hash md5 da una stringa. >= QGIS 3.12 sha256 Crea un hash sha256 da una stringa >= QGIS 3.12 to_date Converte una stringa in un oggetto data to_datetime Converte una stringa in un oggetto datetime to_dm Converte una coordinata in gradi, minuti >= QGIS 3.4 to_dms Converte una coordinata in gradi, minuti e secondi >= QGIS 3.4 to_int Converte una stringa in un numero intero. Non viene restituito nulla se un valore non pu\u00f2 essere convertito ad intero (es. '123asd' non \u00e8 valido) to_interval Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data. to_real Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione to_string Converte un numero in stringa to_time Converti una stringa in un oggetto time to_time Converti una stringa in un oggetto time","title":"Conversioni"},{"location":"gr_funzioni/conversioni/conversioni/#conversioni","text":"Questo gruppo contiene funzioni per convertire i dati da un tipo ad un'altro, es. da stringa a intero, da intero a stringa. Funzione Descrizione Info hash Crea un hash da una stringa con un determinato metodo >= QGIS 3.12 md5 Crea un hash md5 da una stringa. >= QGIS 3.12 sha256 Crea un hash sha256 da una stringa >= QGIS 3.12 to_date Converte una stringa in un oggetto data to_datetime Converte una stringa in un oggetto datetime to_dm Converte una coordinata in gradi, minuti >= QGIS 3.4 to_dms Converte una coordinata in gradi, minuti e secondi >= QGIS 3.4 to_int Converte una stringa in un numero intero. Non viene restituito nulla se un valore non pu\u00f2 essere convertito ad intero (es. '123asd' non \u00e8 valido) to_interval Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data. to_real Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione to_string Converte un numero in stringa to_time Converti una stringa in un oggetto time to_time Converti una stringa in un oggetto time","title":"Conversioni"},{"location":"gr_funzioni/conversioni/conversioni_unico/","text":"Gruppo Conversioni \u21b5 Abstract Questo gruppo contiene funzioni per convertire i dati da un tipo ad un altro, es. da stringa a intero, da intero a stringa. from_base64 \u21b5 Decodifica una stringa Base64 in un valore binario. Sintassi: from_base64( string ) Argomenti: string stringa da decodificare Esempi: from_base64('UUdJUw==') \u2192 'QGIS' hash \u21b5 Crea un hash da una stringa con un determinato metodo. Sintassi: hash( string , method ) Argomenti: string stringa di hash method Il metodo hash tra 'md4', 'md5', 'sha1', 'sha224', 'sha384', 'sha512', 'sha3_224', 'sha3_256', 'sha3_384', 'sha3_512', 'keccak_224', 'keccak_256 ',' keccak_384 ',' keccak_512 ' Esempi: hash('QGIS', 'md4') \u2192 'c0fc71c241cdebb6e888cbac0e2b68eb' hash('QGIS', 'md5') \u2192 '57470aaa9e22adaefac7f5f342f1c6da' hash('QGIS', 'sha1') \u2192 'f87cfb2b74cdd5867db913237024e7001e62b114' hash('QGIS', 'sha224') \u2192 '4093a619ada631c770f44bc643ead18fb393b93d6a6af1861fcfece0' hash('QGIS', 'sha256') \u2192 'eb045cba7a797aaa06ac58830846e40c8e8c780bc0676d3393605fae50c05309' hash('QGIS', 'sha384') \u2192 '91c1de038cc3d09fdd512e99f9dd9922efadc39ed21d3922e69a4305cc25506033aee388e554b78714c8734f9cd7e610' hash('QGIS', 'sha512') \u2192 'c2c092f2ab743bf8edbeb6d028a745f30fc720408465ed369421f0a4e20fa5e27f0c90ad72d3f1d836eaa5d25cd39897d4cf77e19984668ef58da6e3159f18ac' hash('QGIS', 'sha3_224') \u2192 '467f49a5039e7280d5d42fd433e80d203439e338eaabd701f0d6c17d' hash('QGIS', 'sha3_256') \u2192 '540f7354b6b8a6e735f2845250f15f4f3ba4f666c55574d9e9354575de0e980f' hash('QGIS', 'sha3_384') \u2192 '96052da1e77679e9a65f60d7ead961b287977823144786386eb43647b0901fd8516fa6f1b9d243fb3f28775e6dde6107' hash('QGIS', 'sha3_512') \u2192 '900d079dc69761da113980253aa8ac0414a8bd6d09879a916228f8743707c4758051c98445d6b8945ec854ff90655005e02aceb0a2ffc6a0ebf818745d665349' hash('QGIS', 'keccak_224') \u2192 '5b0ce6acef8b0a121d4ac4f3eaa8503c799ad4e26a3392d1fb201478' hash('QGIS', 'keccak_256') \u2192 '991c520aa6815392de24087f61b2ae0fd56abbfeee4a8ca019c1011d327c577e' hash('QGIS', 'keccak_384') \u2192 'c57a3aed9d856fa04e5eeee9b62b6e027cca81ba574116d3cc1f0d48a1ef9e5886ff463ea8d0fac772ee473bf92f810d' hash('QGIS', 'keccak_512') \u2192 '6f0f751776b505e317de222508fa5d3ed7099d8f07c74fed54ccee6e7cdc\u2026' md5 \u21b5 Crea un hash md5 da una stringa. Sintassi: md5( string ) Argomenti: string stringa di md5 Esempi: md5('QGIS') \u2192 '57470aaa9e22adaefac7f5f342f1c6da' sha256 \u21b5 Crea un hash sha256 da una stringa. Sintassi: sha256( string ) Argomenti: string stringa di sha256 Esempi: sha256('QGIS') \u2192 'eb045cba7a797aaa06ac58830846e40c8e8c780bc0676d3393605fae50c05309' to_base64 \u21b5 Decodifica una stringa Base64 in un valore binario. Sintassi: to_base64* md5( value ) Argomenti: value il valore binario da codificare Esempi: to_base64('QGIS') \u2192 'UUdJUw==' to_date \u21b5 Converte una stringa in un oggetto data. Sintassi: to_date( string ) Argomenti: string stringa rappresentante il valore data Esempi: to_date('2012-05-04') \u2192 2012-05-04 to_datetime \u21b5 Converte una stringa in un oggetto datetime. Sintassi: to_datetime( string ) Argomenti: string stringa rappresentante il valore datatime Esempi: to_datetime( '2018-05-06 12:02:00') \u2192 2018-05-06T12:02:00 to_decimal \u21b5 Converte una coordinata in gradi, minuti e secondi nel suo equivalente decimale. Sintassi: to_decimal( value ) Argomenti: value Una stringa di gradi, minuti, secondi Esempi: to_decimal('6\u00b09\u203216.445\u2033')) \u2192 6.154568055555556 to_dm \u21b5 Converte una coordinata in gradi, minuti Sintassi: to_dm( coordinate , axis , precision [, formatting ] ) [ ] indica componenti opzionali Argomenti: coordinate Un valore di latitudine o longitudine axis L'asse della coordinata 'x' o 'y' precision Numero di decimali formatting Designa il tipo di formattazione. I valori accettabili sono NULL, 'aligned' o 'suffix' Esempi: to_dm(6.3545681, 'x', 3) \u2192 6\u00b021.274\u2032 to_dm(6.3545681, 'y', 4, 'suffix') \u2192 6\u00b021.2741\u2032N to_dms \u21b5 Converte una coordinata in gradi, minuti e secondi Sintassi: to_dms( coordinate , axis , precision [, formatting ] ) [ ] indica componenti opzionali Argomenti: coordinate Un valore di latitudine o longitudine axis L'asse della coordinata 'x' o 'y' precision Numero di decimali formatting Designa il tipo di formattazione. I valori accettabili sono NULL, 'aligned' o 'suffix' Esempi: to_dms(6.3545681, 'x', 3) \u2192 6\u00b021\u203216.445\u2033 to_dms(6.3545681, 'y', 4, 'suffix') \u2192 6\u00b021\u203216.4452\u2033N to_int \u21b5 Converte una stringa in un numero intero. Non viene restituito nulla se un valore non pu\u00f2 essere convertito ad intero (es. '123asd' non \u00e8 valido) Sintassi: to_int( string ) Argomenti: string stringa da convertine i n numero intero Esempi: to_int('123') \u2192 123 Nota bene: un testo va scritto sempre tra apici semplici es: '123' to_interval \u21b5 Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data. Sintassi: to_interval( string ) Argomenti: string una stringa rappresentante un intervallo. I formati ammessi includono {n} giorni {n} ore {n} mesi. Esempi: to_datetime('2018-05-04 12:23:00') - to_interval('1 day 2 hours') \u2192 2018-05-03T10:23:00 to_real \u21b5 Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione. Sintassi: to_real( string ) Argomenti: string stringa da convertire in numero reale Esempi: to_real('123.45') \u2192 123.45 Nota bene: Il punto ( . ) \u00e8 il separatore decimale. to_string \u21b5 Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione. Sintassi: to_string( number ) Argomenti: number Valore intero o reale. Il numero da convertire in stringa. Esempi: to_string(123.45) \u2192 '123.45' to_string(123) \u2192 '123' Nota bene: Il punto ( . ) \u00e8 il separatore decimale; una stringa \u00e8 sempre tra apici semplici es: '123'. to_time \u21b5 Converti una stringa in un oggetto time. Sintassi: to_time( string ) Argomenti: string stringa rappresentante un valore time Esempi: to_time('12:30:01') \u2192 12:30:0","title":"Conversioni"},{"location":"gr_funzioni/conversioni/conversioni_unico/#gruppo-conversioni","text":"Abstract Questo gruppo contiene funzioni per convertire i dati da un tipo ad un altro, es. da stringa a intero, da intero a stringa.","title":"Gruppo Conversioni"},{"location":"gr_funzioni/conversioni/conversioni_unico/#from_base64","text":"Decodifica una stringa Base64 in un valore binario. Sintassi: from_base64( string ) Argomenti: string stringa da decodificare Esempi: from_base64('UUdJUw==') \u2192 'QGIS'","title":"from_base64"},{"location":"gr_funzioni/conversioni/conversioni_unico/#hash","text":"Crea un hash da una stringa con un determinato metodo. Sintassi: hash( string , method ) Argomenti: string stringa di hash method Il metodo hash tra 'md4', 'md5', 'sha1', 'sha224', 'sha384', 'sha512', 'sha3_224', 'sha3_256', 'sha3_384', 'sha3_512', 'keccak_224', 'keccak_256 ',' keccak_384 ',' keccak_512 ' Esempi: hash('QGIS', 'md4') \u2192 'c0fc71c241cdebb6e888cbac0e2b68eb' hash('QGIS', 'md5') \u2192 '57470aaa9e22adaefac7f5f342f1c6da' hash('QGIS', 'sha1') \u2192 'f87cfb2b74cdd5867db913237024e7001e62b114' hash('QGIS', 'sha224') \u2192 '4093a619ada631c770f44bc643ead18fb393b93d6a6af1861fcfece0' hash('QGIS', 'sha256') \u2192 'eb045cba7a797aaa06ac58830846e40c8e8c780bc0676d3393605fae50c05309' hash('QGIS', 'sha384') \u2192 '91c1de038cc3d09fdd512e99f9dd9922efadc39ed21d3922e69a4305cc25506033aee388e554b78714c8734f9cd7e610' hash('QGIS', 'sha512') \u2192 'c2c092f2ab743bf8edbeb6d028a745f30fc720408465ed369421f0a4e20fa5e27f0c90ad72d3f1d836eaa5d25cd39897d4cf77e19984668ef58da6e3159f18ac' hash('QGIS', 'sha3_224') \u2192 '467f49a5039e7280d5d42fd433e80d203439e338eaabd701f0d6c17d' hash('QGIS', 'sha3_256') \u2192 '540f7354b6b8a6e735f2845250f15f4f3ba4f666c55574d9e9354575de0e980f' hash('QGIS', 'sha3_384') \u2192 '96052da1e77679e9a65f60d7ead961b287977823144786386eb43647b0901fd8516fa6f1b9d243fb3f28775e6dde6107' hash('QGIS', 'sha3_512') \u2192 '900d079dc69761da113980253aa8ac0414a8bd6d09879a916228f8743707c4758051c98445d6b8945ec854ff90655005e02aceb0a2ffc6a0ebf818745d665349' hash('QGIS', 'keccak_224') \u2192 '5b0ce6acef8b0a121d4ac4f3eaa8503c799ad4e26a3392d1fb201478' hash('QGIS', 'keccak_256') \u2192 '991c520aa6815392de24087f61b2ae0fd56abbfeee4a8ca019c1011d327c577e' hash('QGIS', 'keccak_384') \u2192 'c57a3aed9d856fa04e5eeee9b62b6e027cca81ba574116d3cc1f0d48a1ef9e5886ff463ea8d0fac772ee473bf92f810d' hash('QGIS', 'keccak_512') \u2192 '6f0f751776b505e317de222508fa5d3ed7099d8f07c74fed54ccee6e7cdc\u2026'","title":"hash"},{"location":"gr_funzioni/conversioni/conversioni_unico/#md5","text":"Crea un hash md5 da una stringa. Sintassi: md5( string ) Argomenti: string stringa di md5 Esempi: md5('QGIS') \u2192 '57470aaa9e22adaefac7f5f342f1c6da'","title":"md5"},{"location":"gr_funzioni/conversioni/conversioni_unico/#sha256","text":"Crea un hash sha256 da una stringa. Sintassi: sha256( string ) Argomenti: string stringa di sha256 Esempi: sha256('QGIS') \u2192 'eb045cba7a797aaa06ac58830846e40c8e8c780bc0676d3393605fae50c05309'","title":"sha256"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_base64","text":"Decodifica una stringa Base64 in un valore binario. Sintassi: to_base64* md5( value ) Argomenti: value il valore binario da codificare Esempi: to_base64('QGIS') \u2192 'UUdJUw=='","title":"to_base64"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_date","text":"Converte una stringa in un oggetto data. Sintassi: to_date( string ) Argomenti: string stringa rappresentante il valore data Esempi: to_date('2012-05-04') \u2192 2012-05-04","title":"to_date"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_datetime","text":"Converte una stringa in un oggetto datetime. Sintassi: to_datetime( string ) Argomenti: string stringa rappresentante il valore datatime Esempi: to_datetime( '2018-05-06 12:02:00') \u2192 2018-05-06T12:02:00","title":"to_datetime"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_decimal","text":"Converte una coordinata in gradi, minuti e secondi nel suo equivalente decimale. Sintassi: to_decimal( value ) Argomenti: value Una stringa di gradi, minuti, secondi Esempi: to_decimal('6\u00b09\u203216.445\u2033')) \u2192 6.154568055555556","title":"to_decimal"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_dm","text":"Converte una coordinata in gradi, minuti Sintassi: to_dm( coordinate , axis , precision [, formatting ] ) [ ] indica componenti opzionali Argomenti: coordinate Un valore di latitudine o longitudine axis L'asse della coordinata 'x' o 'y' precision Numero di decimali formatting Designa il tipo di formattazione. I valori accettabili sono NULL, 'aligned' o 'suffix' Esempi: to_dm(6.3545681, 'x', 3) \u2192 6\u00b021.274\u2032 to_dm(6.3545681, 'y', 4, 'suffix') \u2192 6\u00b021.2741\u2032N","title":"to_dm"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_dms","text":"Converte una coordinata in gradi, minuti e secondi Sintassi: to_dms( coordinate , axis , precision [, formatting ] ) [ ] indica componenti opzionali Argomenti: coordinate Un valore di latitudine o longitudine axis L'asse della coordinata 'x' o 'y' precision Numero di decimali formatting Designa il tipo di formattazione. I valori accettabili sono NULL, 'aligned' o 'suffix' Esempi: to_dms(6.3545681, 'x', 3) \u2192 6\u00b021\u203216.445\u2033 to_dms(6.3545681, 'y', 4, 'suffix') \u2192 6\u00b021\u203216.4452\u2033N","title":"to_dms"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_int","text":"Converte una stringa in un numero intero. Non viene restituito nulla se un valore non pu\u00f2 essere convertito ad intero (es. '123asd' non \u00e8 valido) Sintassi: to_int( string ) Argomenti: string stringa da convertine i n numero intero Esempi: to_int('123') \u2192 123 Nota bene: un testo va scritto sempre tra apici semplici es: '123'","title":"to_int"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_interval","text":"Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data. Sintassi: to_interval( string ) Argomenti: string una stringa rappresentante un intervallo. I formati ammessi includono {n} giorni {n} ore {n} mesi. Esempi: to_datetime('2018-05-04 12:23:00') - to_interval('1 day 2 hours') \u2192 2018-05-03T10:23:00","title":"to_interval"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_real","text":"Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione. Sintassi: to_real( string ) Argomenti: string stringa da convertire in numero reale Esempi: to_real('123.45') \u2192 123.45 Nota bene: Il punto ( . ) \u00e8 il separatore decimale.","title":"to_real"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_string","text":"Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione. Sintassi: to_string( number ) Argomenti: number Valore intero o reale. Il numero da convertire in stringa. Esempi: to_string(123.45) \u2192 '123.45' to_string(123) \u2192 '123' Nota bene: Il punto ( . ) \u00e8 il separatore decimale; una stringa \u00e8 sempre tra apici semplici es: '123'.","title":"to_string"},{"location":"gr_funzioni/conversioni/conversioni_unico/#to_time","text":"Converti una stringa in un oggetto time. Sintassi: to_time( string ) Argomenti: string stringa rappresentante un valore time Esempi: to_time('12:30:01') \u2192 12:30:0","title":"to_time"},{"location":"gr_funzioni/conversioni/hash/","text":"hash \u21b5 Crea un hash da una stringa con un determinato metodo. Sintassi \u21b5 hash( string , method ) Argomenti \u21b5 string stringa di hash method Il metodo hash tra 'md4', 'md5', 'sha1', 'sha224', 'sha384', 'sha512', 'sha3_224', 'sha3_256', 'sha3_384', 'sha3_512', 'keccak_224', 'keccak_256 ',' keccak_384 ',' keccak_512 ' Esempi \u21b5 hash('QGIS', 'md4') \u2192 'c0fc71c241cdebb6e888cbac0e2b68eb' hash('QGIS', 'md5') \u2192 '57470aaa9e22adaefac7f5f342f1c6da' hash('QGIS', 'sha1') \u2192 'f87cfb2b74cdd5867db913237024e7001e62b114' hash('QGIS', 'sha224') \u2192 '4093a619ada631c770f44bc643ead18fb393b93d6a6af1861fcfece0' hash('QGIS', 'sha256') \u2192 'eb045cba7a797aaa06ac58830846e40c8e8c780bc0676d3393605fae50c05309' hash('QGIS', 'sha384') \u2192 '91c1de038cc3d09fdd512e99f9dd9922efadc39ed21d3922e69a4305cc25506033aee388e554b78714c8734f9cd7e610' hash('QGIS', 'sha512') \u2192 'c2c092f2ab743bf8edbeb6d028a745f30fc720408465ed369421f0a4e20fa5e27f0c90ad72d3f1d836eaa5d25cd39897d4cf77e19984668ef58da6e3159f18ac' hash('QGIS', 'sha3_224') \u2192 '467f49a5039e7280d5d42fd433e80d203439e338eaabd701f0d6c17d' hash('QGIS', 'sha3_256') \u2192 '540f7354b6b8a6e735f2845250f15f4f3ba4f666c55574d9e9354575de0e980f' hash('QGIS', 'sha3_384') \u2192 '96052da1e77679e9a65f60d7ead961b287977823144786386eb43647b0901fd8516fa6f1b9d243fb3f28775e6dde6107' hash('QGIS', 'sha3_512') \u2192 '900d079dc69761da113980253aa8ac0414a8bd6d09879a916228f8743707c4758051c98445d6b8945ec854ff90655005e02aceb0a2ffc6a0ebf818745d665349' hash('QGIS', 'keccak_224') \u2192 '5b0ce6acef8b0a121d4ac4f3eaa8503c799ad4e26a3392d1fb201478' hash('QGIS', 'keccak_256') \u2192 '991c520aa6815392de24087f61b2ae0fd56abbfeee4a8ca019c1011d327c577e' hash('QGIS', 'keccak_384') \u2192 'c57a3aed9d856fa04e5eeee9b62b6e027cca81ba574116d3cc1f0d48a1ef9e5886ff463ea8d0fac772ee473bf92f810d' hash('QGIS', 'keccak_512') \u2192 '6f0f751776b505e317de222508fa5d3ed7099d8f07c74fed54ccee6e7cdc\u2026'","title":"hash"},{"location":"gr_funzioni/conversioni/hash/#hash","text":"Crea un hash da una stringa con un determinato metodo.","title":"hash"},{"location":"gr_funzioni/conversioni/hash/#sintassi","text":"hash( string , method )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/hash/#argomenti","text":"string stringa di hash method Il metodo hash tra 'md4', 'md5', 'sha1', 'sha224', 'sha384', 'sha512', 'sha3_224', 'sha3_256', 'sha3_384', 'sha3_512', 'keccak_224', 'keccak_256 ',' keccak_384 ',' keccak_512 '","title":"Argomenti"},{"location":"gr_funzioni/conversioni/hash/#esempi","text":"hash('QGIS', 'md4') \u2192 'c0fc71c241cdebb6e888cbac0e2b68eb' hash('QGIS', 'md5') \u2192 '57470aaa9e22adaefac7f5f342f1c6da' hash('QGIS', 'sha1') \u2192 'f87cfb2b74cdd5867db913237024e7001e62b114' hash('QGIS', 'sha224') \u2192 '4093a619ada631c770f44bc643ead18fb393b93d6a6af1861fcfece0' hash('QGIS', 'sha256') \u2192 'eb045cba7a797aaa06ac58830846e40c8e8c780bc0676d3393605fae50c05309' hash('QGIS', 'sha384') \u2192 '91c1de038cc3d09fdd512e99f9dd9922efadc39ed21d3922e69a4305cc25506033aee388e554b78714c8734f9cd7e610' hash('QGIS', 'sha512') \u2192 'c2c092f2ab743bf8edbeb6d028a745f30fc720408465ed369421f0a4e20fa5e27f0c90ad72d3f1d836eaa5d25cd39897d4cf77e19984668ef58da6e3159f18ac' hash('QGIS', 'sha3_224') \u2192 '467f49a5039e7280d5d42fd433e80d203439e338eaabd701f0d6c17d' hash('QGIS', 'sha3_256') \u2192 '540f7354b6b8a6e735f2845250f15f4f3ba4f666c55574d9e9354575de0e980f' hash('QGIS', 'sha3_384') \u2192 '96052da1e77679e9a65f60d7ead961b287977823144786386eb43647b0901fd8516fa6f1b9d243fb3f28775e6dde6107' hash('QGIS', 'sha3_512') \u2192 '900d079dc69761da113980253aa8ac0414a8bd6d09879a916228f8743707c4758051c98445d6b8945ec854ff90655005e02aceb0a2ffc6a0ebf818745d665349' hash('QGIS', 'keccak_224') \u2192 '5b0ce6acef8b0a121d4ac4f3eaa8503c799ad4e26a3392d1fb201478' hash('QGIS', 'keccak_256') \u2192 '991c520aa6815392de24087f61b2ae0fd56abbfeee4a8ca019c1011d327c577e' hash('QGIS', 'keccak_384') \u2192 'c57a3aed9d856fa04e5eeee9b62b6e027cca81ba574116d3cc1f0d48a1ef9e5886ff463ea8d0fac772ee473bf92f810d' hash('QGIS', 'keccak_512') \u2192 '6f0f751776b505e317de222508fa5d3ed7099d8f07c74fed54ccee6e7cdc\u2026'","title":"Esempi"},{"location":"gr_funzioni/conversioni/md5/","text":"md5 \u21b5 Crea un hash md5 da una stringa. Sintassi \u21b5 md5( string ) Argomenti \u21b5 string stringa di md5 Esempi \u21b5 md5('QGIS') \u2192 '57470aaa9e22adaefac7f5f342f1c6da'","title":"md5"},{"location":"gr_funzioni/conversioni/md5/#md5","text":"Crea un hash md5 da una stringa.","title":"md5"},{"location":"gr_funzioni/conversioni/md5/#sintassi","text":"md5( string )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/md5/#argomenti","text":"string stringa di md5","title":"Argomenti"},{"location":"gr_funzioni/conversioni/md5/#esempi","text":"md5('QGIS') \u2192 '57470aaa9e22adaefac7f5f342f1c6da'","title":"Esempi"},{"location":"gr_funzioni/conversioni/sha256/","text":"sha256 \u21b5 Crea un hash sha256 da una stringa. Sintassi \u21b5 sha256( string ) Argomenti \u21b5 string stringa di sha256 Esempi \u21b5 sha256('QGIS') \u2192 'eb045cba7a797aaa06ac58830846e40c8e8c780bc0676d3393605fae50c05309'","title":"sha256"},{"location":"gr_funzioni/conversioni/sha256/#sha256","text":"Crea un hash sha256 da una stringa.","title":"sha256"},{"location":"gr_funzioni/conversioni/sha256/#sintassi","text":"sha256( string )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/sha256/#argomenti","text":"string stringa di sha256","title":"Argomenti"},{"location":"gr_funzioni/conversioni/sha256/#esempi","text":"sha256('QGIS') \u2192 'eb045cba7a797aaa06ac58830846e40c8e8c780bc0676d3393605fae50c05309'","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_date/","text":"to_date \u21b5 Converte una stringa in un oggetto data. Sintassi \u21b5 to_date( string ) Argomenti \u21b5 string stringa rappresentante il valore data Esempi \u21b5 to_date('2012-05-04') \u2192 2012-05-04","title":"to_date"},{"location":"gr_funzioni/conversioni/to_date/#to_date","text":"Converte una stringa in un oggetto data.","title":"to_date"},{"location":"gr_funzioni/conversioni/to_date/#sintassi","text":"to_date( string )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_date/#argomenti","text":"string stringa rappresentante il valore data","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_date/#esempi","text":"to_date('2012-05-04') \u2192 2012-05-04","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_datetime/","text":"to_datetime \u21b5 Converte una stringa in un oggetto datetime. Sintassi \u21b5 to_datetime( string ) Argomenti \u21b5 string stringa rappresentante il valore datatime Esempi \u21b5 to_datetime( '2018-05-06 12:02:00') \u2192 2018-05-06T12:02:00","title":"to_datetime"},{"location":"gr_funzioni/conversioni/to_datetime/#to_datetime","text":"Converte una stringa in un oggetto datetime.","title":"to_datetime"},{"location":"gr_funzioni/conversioni/to_datetime/#sintassi","text":"to_datetime( string )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_datetime/#argomenti","text":"string stringa rappresentante il valore datatime","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_datetime/#esempi","text":"to_datetime( '2018-05-06 12:02:00') \u2192 2018-05-06T12:02:00","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_decimal/","text":"to_decimal \u21b5 Converte una coordinata in gradi, minuti e secondi nel suo equivalente decimale. Sintassi \u21b5 to_decimal( value ) Argomenti \u21b5 value Una stringa di gradi, minuti, secondi Esempi \u21b5 to_decimal('6\u00b09\u203216.445\u2033')) \u2192 6.154568055555556","title":"to_decimal"},{"location":"gr_funzioni/conversioni/to_decimal/#to_decimal","text":"Converte una coordinata in gradi, minuti e secondi nel suo equivalente decimale.","title":"to_decimal"},{"location":"gr_funzioni/conversioni/to_decimal/#sintassi","text":"to_decimal( value )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_decimal/#argomenti","text":"value Una stringa di gradi, minuti, secondi","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_decimal/#esempi","text":"to_decimal('6\u00b09\u203216.445\u2033')) \u2192 6.154568055555556","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_dm/","text":"to_dm \u21b5 Converte una coordinata in gradi, minuti Sintassi \u21b5 to_dm( coordinate , axis , precision [, formatting ] ) [ ] marks optional components Argomenti \u21b5 coordinate Un valore di latitudine o longitudine axis L'asse della coordinata 'x' o 'y' precision Numero di decimali formatting Designa il tipo di formattazione. I valori accettabili sono NULL, 'aligned' o 'suffix' Esempi \u21b5 to_dm(6.3545681, 'x', 3) \u2192 6\u00b021.274\u2032 to_dm(6.3545681, 'y', 4, 'suffix') \u2192 6\u00b021.2741\u2032N Nota bene \u21b5","title":"to_dm"},{"location":"gr_funzioni/conversioni/to_dm/#to_dm","text":"Converte una coordinata in gradi, minuti","title":"to_dm"},{"location":"gr_funzioni/conversioni/to_dm/#sintassi","text":"to_dm( coordinate , axis , precision [, formatting ] ) [ ] marks optional components","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_dm/#argomenti","text":"coordinate Un valore di latitudine o longitudine axis L'asse della coordinata 'x' o 'y' precision Numero di decimali formatting Designa il tipo di formattazione. I valori accettabili sono NULL, 'aligned' o 'suffix'","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_dm/#esempi","text":"to_dm(6.3545681, 'x', 3) \u2192 6\u00b021.274\u2032 to_dm(6.3545681, 'y', 4, 'suffix') \u2192 6\u00b021.2741\u2032N","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_dm/#nota-bene","text":"","title":"Nota bene"},{"location":"gr_funzioni/conversioni/to_dms/","text":"to_dms \u21b5 Converte una coordinata in gradi, minuti e secondi Sintassi \u21b5 to_dms( coordinate , axis , precision [, formatting ] ) [ ] marks optional components Argomenti \u21b5 coordinate Un valore di latitudine o longitudine axis L'asse della coordinata 'x' o 'y' precision Numero di decimali formatting Designa il tipo di formattazione. I valori accettabili sono NULL, 'aligned' o 'suffix' Esempi \u21b5 to_dms(6.3545681, 'x', 3) \u2192 6\u00b021\u203216.445\u2033 to_dms(6.3545681, 'y', 4, 'suffix') \u2192 6\u00b021\u203216.4452\u2033N Nota bene \u21b5","title":"to_dms"},{"location":"gr_funzioni/conversioni/to_dms/#to_dms","text":"Converte una coordinata in gradi, minuti e secondi","title":"to_dms"},{"location":"gr_funzioni/conversioni/to_dms/#sintassi","text":"to_dms( coordinate , axis , precision [, formatting ] ) [ ] marks optional components","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_dms/#argomenti","text":"coordinate Un valore di latitudine o longitudine axis L'asse della coordinata 'x' o 'y' precision Numero di decimali formatting Designa il tipo di formattazione. I valori accettabili sono NULL, 'aligned' o 'suffix'","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_dms/#esempi","text":"to_dms(6.3545681, 'x', 3) \u2192 6\u00b021\u203216.445\u2033 to_dms(6.3545681, 'y', 4, 'suffix') \u2192 6\u00b021\u203216.4452\u2033N","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_dms/#nota-bene","text":"","title":"Nota bene"},{"location":"gr_funzioni/conversioni/to_int/","text":"to_int \u21b5 Converte una stringa in un numero intero. Non viene restituito nulla se un valore non pu\u00f2 essere convertito ad intero (es. '123asd' non \u00e8 valido) Sintassi \u21b5 to_int( string ) Argomenti \u21b5 string stringa da convertine i n numero intero Esempi \u21b5 to_int('123') \u2192 123 Nota bene \u21b5 un testo va scritto sempre tra apici semplici es: '123' - vedi wiki","title":"to_int"},{"location":"gr_funzioni/conversioni/to_int/#to_int","text":"Converte una stringa in un numero intero. Non viene restituito nulla se un valore non pu\u00f2 essere convertito ad intero (es. '123asd' non \u00e8 valido)","title":"to_int"},{"location":"gr_funzioni/conversioni/to_int/#sintassi","text":"to_int( string )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_int/#argomenti","text":"string stringa da convertine i n numero intero","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_int/#esempi","text":"to_int('123') \u2192 123","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_int/#nota-bene","text":"un testo va scritto sempre tra apici semplici es: '123' - vedi wiki","title":"Nota bene"},{"location":"gr_funzioni/conversioni/to_interval/","text":"to_interval \u21b5 Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data. Sintassi \u21b5 to_interval( string ) Argomenti \u21b5 string una stringa rappresentante un intervallo. I formati ammessi includono {n} giorni {n} ore {n} mesi. Esempi \u21b5 to_datetime('2018-05-04 12:23:00') - to_interval('1 day 2 hours') \u2192 2018-05-03T10:23:00","title":"to_interval"},{"location":"gr_funzioni/conversioni/to_interval/#to_interval","text":"Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data.","title":"to_interval"},{"location":"gr_funzioni/conversioni/to_interval/#sintassi","text":"to_interval( string )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_interval/#argomenti","text":"string una stringa rappresentante un intervallo. I formati ammessi includono {n} giorni {n} ore {n} mesi.","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_interval/#esempi","text":"to_datetime('2018-05-04 12:23:00') - to_interval('1 day 2 hours') \u2192 2018-05-03T10:23:00","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_real/","text":"to_real \u21b5 Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione. Sintassi \u21b5 to_real( string ) Argomenti \u21b5 string stringa da convertire in numero reale Esempi \u21b5 to_real('123.45') \u2192 123.45 Nota bene \u21b5 Il punto (.) \u00e8 il separatore decimale.","title":"to_real"},{"location":"gr_funzioni/conversioni/to_real/#to_real","text":"Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione.","title":"to_real"},{"location":"gr_funzioni/conversioni/to_real/#sintassi","text":"to_real( string )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_real/#argomenti","text":"string stringa da convertire in numero reale","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_real/#esempi","text":"to_real('123.45') \u2192 123.45","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_real/#nota-bene","text":"Il punto (.) \u00e8 il separatore decimale.","title":"Nota bene"},{"location":"gr_funzioni/conversioni/to_string/","text":"to_string \u21b5 Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione. Sintassi \u21b5 to_string( number ) Argomenti \u21b5 number Valore intero o reale. Il numero da convertire in stringa. Esempi \u21b5 to_string(123.45) \u2192 '123.45' to_string(123) \u2192 '123' Nota bene \u21b5 Il punto (.) \u00e8 il separatore decimale; una stringa \u00e8 sempre tra apici semplici es: '123'.","title":"to_string"},{"location":"gr_funzioni/conversioni/to_string/#to_string","text":"Converte una stringa in un numero reale. Non viene restituito nulla se un valore non pu\u00f2 essere convertito a reale (es. '123.56asd' non \u00e8 valido). I numeri sono arrotondati dopo aver salvato le modifiche se la precisione \u00e8 minore del risultato della conversione.","title":"to_string"},{"location":"gr_funzioni/conversioni/to_string/#sintassi","text":"to_string( number )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_string/#argomenti","text":"number Valore intero o reale. Il numero da convertire in stringa.","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_string/#esempi","text":"to_string(123.45) \u2192 '123.45' to_string(123) \u2192 '123'","title":"Esempi"},{"location":"gr_funzioni/conversioni/to_string/#nota-bene","text":"Il punto (.) \u00e8 il separatore decimale; una stringa \u00e8 sempre tra apici semplici es: '123'.","title":"Nota bene"},{"location":"gr_funzioni/conversioni/to_time/","text":"to_time \u21b5 Converti una stringa in un oggetto time. Sintassi \u21b5 to_time( string ) Argomenti \u21b5 string stringa rappresentante un valore time Esempi \u21b5 to_time('12:30:01') \u2192 12:30:01","title":"to_time"},{"location":"gr_funzioni/conversioni/to_time/#to_time","text":"Converti una stringa in un oggetto time.","title":"to_time"},{"location":"gr_funzioni/conversioni/to_time/#sintassi","text":"to_time( string )","title":"Sintassi"},{"location":"gr_funzioni/conversioni/to_time/#argomenti","text":"string stringa rappresentante un valore time","title":"Argomenti"},{"location":"gr_funzioni/conversioni/to_time/#esempi","text":"to_time('12:30:01') \u2192 12:30:01","title":"Esempi"},{"location":"gr_funzioni/corrispondenza_fuzzy/corrispondenza_fuzzy/","text":"Corrispondenza fuzzy \u21b5 Questo gruppo contiene le funzioni per comparazioni fuzzy fra i valori. Funzione Descrizione hamming_distance Restituisce la distanza di Hamming tra due stringhe. Questa equivale al numero di caratteri nelle corrispondenti posizioni delle stringhe in ingresso dove i caratteri sono diversi. Le stringhe in ingresso devono avere la stessa lunghezza, e il confronto \u00e8 sensibile alle lettere maiuscole levenshtein Restituisce la distanza di Levenshtein tra due stringhe. Questa equivale al minimo numero di modifiche di caratterere (inserimenti, cancellazioni o sostituzione) richieste per cambiare una stringa in un'altra. La distanza di Levenshtein \u00e8 una misura della somiglianza tra due stringhe. Distanze pi\u00f9 piccole corrispondono a stringhe pi\u00f9 simili, e distanze pi\u00f9 grandi corrispondono a stringhe pi\u00f9 differenti. La distanza \u00e8 sensibile alle lettere maiuscole longest_common_substring Restituisce la sottostringa in comune pi\u00f9 lunga tra due stringhe. Questa sottostringa \u00e8 la stringa pi\u00f9 lunga che \u00e8 una sottostringa delle due stringhe in ingresso. Es: la sottostringa in comune pi\u00f9 lunga di \"ABABC\" e \"BABCA\" \u00e8 \"ABC\". La sottostringa \u00e8 sensibile alle lettere maiuscole soundex Restituisce la rappresentazione Soundex di una stringa. Soundex \u00e8 un algoritmo di abbinamento fonetico, per cui le stringhe con suoni simili dovrebbero essere rappresentate dallo stesso codice Soundex","title":"Corrispondenza fuzzy"},{"location":"gr_funzioni/corrispondenza_fuzzy/corrispondenza_fuzzy/#corrispondenza-fuzzy","text":"Questo gruppo contiene le funzioni per comparazioni fuzzy fra i valori. Funzione Descrizione hamming_distance Restituisce la distanza di Hamming tra due stringhe. Questa equivale al numero di caratteri nelle corrispondenti posizioni delle stringhe in ingresso dove i caratteri sono diversi. Le stringhe in ingresso devono avere la stessa lunghezza, e il confronto \u00e8 sensibile alle lettere maiuscole levenshtein Restituisce la distanza di Levenshtein tra due stringhe. Questa equivale al minimo numero di modifiche di caratterere (inserimenti, cancellazioni o sostituzione) richieste per cambiare una stringa in un'altra. La distanza di Levenshtein \u00e8 una misura della somiglianza tra due stringhe. Distanze pi\u00f9 piccole corrispondono a stringhe pi\u00f9 simili, e distanze pi\u00f9 grandi corrispondono a stringhe pi\u00f9 differenti. La distanza \u00e8 sensibile alle lettere maiuscole longest_common_substring Restituisce la sottostringa in comune pi\u00f9 lunga tra due stringhe. Questa sottostringa \u00e8 la stringa pi\u00f9 lunga che \u00e8 una sottostringa delle due stringhe in ingresso. Es: la sottostringa in comune pi\u00f9 lunga di \"ABABC\" e \"BABCA\" \u00e8 \"ABC\". La sottostringa \u00e8 sensibile alle lettere maiuscole soundex Restituisce la rappresentazione Soundex di una stringa. Soundex \u00e8 un algoritmo di abbinamento fonetico, per cui le stringhe con suoni simili dovrebbero essere rappresentate dallo stesso codice Soundex","title":"Corrispondenza fuzzy"},{"location":"gr_funzioni/corrispondenza_fuzzy/corrispondenza_fuzzy_unico/","text":"Gruppo corrispondenza fuzzy \u21b5 Abstract Questo gruppo contiene funzioni per confronti fuzzy fra valori. hamming_distance \u21b5 Restituisce la distanza di Hamming tra due stringhe. Questa equivale al numero di caratteri nelle corrispondenti posizioni delle stringhe in ingresso dove i caratteri sono diversi. Le stringhe in ingresso devono avere la stessa lunghezza, e il confronto \u00e8 sensibile alle lettere maiuscole. Sintassi: hamming_distance( string1 , string2 ) Argomenti: string1 una stringa string2 una stringa Esempi: hamming_distance('abc','xec') \u2192 2 hamming_distance('abc','ABc') \u2192 2 hamming_distance(upper('abc'),upper('ABC')) \u2192 0 levenshtein \u21b5 Restituisce la distanza di Levenshtein tra due stringhe. Questa equivale al minimo numero di modifiche di caratterere (inserimenti, cancellazioni o sostituzione) richieste per cambiare una stringa in un'altra. La distanza di Levenshtein \u00e8 una misura della somiglianza tra due stringhe. Distanze pi\u00f9 piccole corrispondono a stringhe pi\u00f9 simili, e distanze pi\u00f9 grandi corrispondono a stringhe pi\u00f9 differenti. La distanza \u00e8 sensibile alle lettere maiuscole. Sintassi: levenshtein( string1 , string2 ) Argomenti: string1 una stringa string2 una stringa Esempi: levenshtein('kittens','mitten') \u2192 2 levenshtein('Kitten','kitten') \u2192 1 levenshtein(upper('Kitten'),upper('kitten')) \u2192 0 longest_common_substring \u21b5 Restituisce la sottostringa in comune pi\u00f9 lunga tra due stringhe. Questa sottostringa \u00e8 la stringa pi\u00f9 lunga che \u00e8 una sottostringa delle due stringhe in ingresso. Es: la sottostringa in comune pi\u00f9 lunga di \"ABABC\" e \"BABCA\" \u00e8 \"ABC\". La sottostringa \u00e8 sensibile alle lettere maiuscole Sintassi: longest_common_substring( string1 , string2 ) Argomenti: string1 una stringa string2 una stringa Esempi: longest_common_substring('ABABC','BABCA') \u2192 'ABC' longest_common_substring('abcDeF','abcdef') \u2192 'abc' longest_common_substring(upper('abcDeF'),upper('abcdex')) \u2192 'ABCDE' soundex \u21b5 Restituisce la rappresentazione Soundex di una stringa. Soundex \u00e8 un algoritmo di abbinamento fonetico, per cui le stringhe con suoni simili dovrebbero essere rappresentate dallo stesso codice Soundex. Sintassi: soundex( string ) Argomenti: string una stringa Esempi: soundex('robert') \u2192 'R163' soundex('rupert') \u2192 'R163' soundex('rubin') \u2192 'R150' secondo questo algoritmo Sicilia bedda e Sicilia bella hanno stesso suono","title":"Corrispondenza fuzzy"},{"location":"gr_funzioni/corrispondenza_fuzzy/corrispondenza_fuzzy_unico/#gruppo-corrispondenza-fuzzy","text":"Abstract Questo gruppo contiene funzioni per confronti fuzzy fra valori.","title":"Gruppo corrispondenza fuzzy"},{"location":"gr_funzioni/corrispondenza_fuzzy/corrispondenza_fuzzy_unico/#hamming_distance","text":"Restituisce la distanza di Hamming tra due stringhe. Questa equivale al numero di caratteri nelle corrispondenti posizioni delle stringhe in ingresso dove i caratteri sono diversi. Le stringhe in ingresso devono avere la stessa lunghezza, e il confronto \u00e8 sensibile alle lettere maiuscole. Sintassi: hamming_distance( string1 , string2 ) Argomenti: string1 una stringa string2 una stringa Esempi: hamming_distance('abc','xec') \u2192 2 hamming_distance('abc','ABc') \u2192 2 hamming_distance(upper('abc'),upper('ABC')) \u2192 0","title":"hamming_distance"},{"location":"gr_funzioni/corrispondenza_fuzzy/corrispondenza_fuzzy_unico/#levenshtein","text":"Restituisce la distanza di Levenshtein tra due stringhe. Questa equivale al minimo numero di modifiche di caratterere (inserimenti, cancellazioni o sostituzione) richieste per cambiare una stringa in un'altra. La distanza di Levenshtein \u00e8 una misura della somiglianza tra due stringhe. Distanze pi\u00f9 piccole corrispondono a stringhe pi\u00f9 simili, e distanze pi\u00f9 grandi corrispondono a stringhe pi\u00f9 differenti. La distanza \u00e8 sensibile alle lettere maiuscole. Sintassi: levenshtein( string1 , string2 ) Argomenti: string1 una stringa string2 una stringa Esempi: levenshtein('kittens','mitten') \u2192 2 levenshtein('Kitten','kitten') \u2192 1 levenshtein(upper('Kitten'),upper('kitten')) \u2192 0","title":"levenshtein"},{"location":"gr_funzioni/corrispondenza_fuzzy/corrispondenza_fuzzy_unico/#longest_common_substring","text":"Restituisce la sottostringa in comune pi\u00f9 lunga tra due stringhe. Questa sottostringa \u00e8 la stringa pi\u00f9 lunga che \u00e8 una sottostringa delle due stringhe in ingresso. Es: la sottostringa in comune pi\u00f9 lunga di \"ABABC\" e \"BABCA\" \u00e8 \"ABC\". La sottostringa \u00e8 sensibile alle lettere maiuscole Sintassi: longest_common_substring( string1 , string2 ) Argomenti: string1 una stringa string2 una stringa Esempi: longest_common_substring('ABABC','BABCA') \u2192 'ABC' longest_common_substring('abcDeF','abcdef') \u2192 'abc' longest_common_substring(upper('abcDeF'),upper('abcdex')) \u2192 'ABCDE'","title":"longest_common_substring"},{"location":"gr_funzioni/corrispondenza_fuzzy/corrispondenza_fuzzy_unico/#soundex","text":"Restituisce la rappresentazione Soundex di una stringa. Soundex \u00e8 un algoritmo di abbinamento fonetico, per cui le stringhe con suoni simili dovrebbero essere rappresentate dallo stesso codice Soundex. Sintassi: soundex( string ) Argomenti: string una stringa Esempi: soundex('robert') \u2192 'R163' soundex('rupert') \u2192 'R163' soundex('rubin') \u2192 'R150' secondo questo algoritmo Sicilia bedda e Sicilia bella hanno stesso suono","title":"soundex"},{"location":"gr_funzioni/corrispondenza_fuzzy/hamming_distance/","text":"hamming_distance \u21b5 Restituisce la distanza di Hamming tra due stringhe. Questa equivale al numero di caratteri nelle corrispondenti posizioni delle stringhe in ingresso dove i caratteri sono diversi. Le stringhe in ingresso devono avere la stessa lunghezza, e il confronto \u00e8 sensibile alle lettere maiuscole. Sintassi \u21b5 hamming_distance( string1 , string2 ) Argomenti \u21b5 string1 una stringa string2 una stringa Esempi \u21b5 * hamming_distance('abc','xec') \u2192 2 * hamming_distance('abc','ABc') \u2192 2 * hamming_distance(upper('abc'),upper('ABC')) \u2192 0","title":"hamming_distance"},{"location":"gr_funzioni/corrispondenza_fuzzy/hamming_distance/#hamming_distance","text":"Restituisce la distanza di Hamming tra due stringhe. Questa equivale al numero di caratteri nelle corrispondenti posizioni delle stringhe in ingresso dove i caratteri sono diversi. Le stringhe in ingresso devono avere la stessa lunghezza, e il confronto \u00e8 sensibile alle lettere maiuscole.","title":"hamming_distance"},{"location":"gr_funzioni/corrispondenza_fuzzy/hamming_distance/#sintassi","text":"hamming_distance( string1 , string2 )","title":"Sintassi"},{"location":"gr_funzioni/corrispondenza_fuzzy/hamming_distance/#argomenti","text":"string1 una stringa string2 una stringa","title":"Argomenti"},{"location":"gr_funzioni/corrispondenza_fuzzy/hamming_distance/#esempi","text":"* hamming_distance('abc','xec') \u2192 2 * hamming_distance('abc','ABc') \u2192 2 * hamming_distance(upper('abc'),upper('ABC')) \u2192 0","title":"Esempi"},{"location":"gr_funzioni/corrispondenza_fuzzy/levenshtein/","text":"levenshtein \u21b5 Restituisce la distanza di Levenshtein tra due stringhe. Questa equivale al minimo numero di modifiche di caratterere (inserimenti, cancellazioni o sostituzione) richieste per cambiare una stringa in un'altra. La distanza di Levenshtein \u00e8 una misura della somiglianza tra due stringhe. Distanze pi\u00f9 piccole corrispondono a stringhe pi\u00f9 simili, e distanze pi\u00f9 grandi corrispondono a stringhe pi\u00f9 differenti. La distanza \u00e8 sensibile alle lettere maiuscole. Sintassi \u21b5 levenshtein( string1 , string2 ) Argomenti \u21b5 string1 una stringa string2 una stringa Esempi \u21b5 * levenshtein('kittens','mitten') \u2192 2 * levenshtein('Kitten','kitten') \u2192 1 * levenshtein(upper('Kitten'),upper('kitten')) \u2192 0","title":"levenshtein"},{"location":"gr_funzioni/corrispondenza_fuzzy/levenshtein/#levenshtein","text":"Restituisce la distanza di Levenshtein tra due stringhe. Questa equivale al minimo numero di modifiche di caratterere (inserimenti, cancellazioni o sostituzione) richieste per cambiare una stringa in un'altra. La distanza di Levenshtein \u00e8 una misura della somiglianza tra due stringhe. Distanze pi\u00f9 piccole corrispondono a stringhe pi\u00f9 simili, e distanze pi\u00f9 grandi corrispondono a stringhe pi\u00f9 differenti. La distanza \u00e8 sensibile alle lettere maiuscole.","title":"levenshtein"},{"location":"gr_funzioni/corrispondenza_fuzzy/levenshtein/#sintassi","text":"levenshtein( string1 , string2 )","title":"Sintassi"},{"location":"gr_funzioni/corrispondenza_fuzzy/levenshtein/#argomenti","text":"string1 una stringa string2 una stringa","title":"Argomenti"},{"location":"gr_funzioni/corrispondenza_fuzzy/levenshtein/#esempi","text":"* levenshtein('kittens','mitten') \u2192 2 * levenshtein('Kitten','kitten') \u2192 1 * levenshtein(upper('Kitten'),upper('kitten')) \u2192 0","title":"Esempi"},{"location":"gr_funzioni/corrispondenza_fuzzy/longest_common_substring/","text":"longest_common_substring \u21b5 Restituisce la sottostringa in comune pi\u00f9 lunga tra due stringhe. Questa sottostringa \u00e8 la stringa pi\u00f9 lunga che \u00e8 una sottostringa delle due stringhe in ingresso. Es: la sottostringa in comune pi\u00f9 lunga di \"ABABC\" e \"BABCA\" \u00e8 \"ABC\". La sottostringa \u00e8 sensibile alle lettere maiuscole Sintassi \u21b5 longest_common_substring( string1 , string2 ) Argomenti \u21b5 string1 una stringa string2 una stringa Esempi \u21b5 * longest_common_substring('ABABC','BABCA') \u2192 'ABC' * longest_common_substring('abcDeF','abcdef') \u2192 'abc' * longest_common_substring(upper('abcDeF'),upper('abcdex')) \u2192 'ABCDE'","title":"longest_common_substring"},{"location":"gr_funzioni/corrispondenza_fuzzy/longest_common_substring/#longest_common_substring","text":"Restituisce la sottostringa in comune pi\u00f9 lunga tra due stringhe. Questa sottostringa \u00e8 la stringa pi\u00f9 lunga che \u00e8 una sottostringa delle due stringhe in ingresso. Es: la sottostringa in comune pi\u00f9 lunga di \"ABABC\" e \"BABCA\" \u00e8 \"ABC\". La sottostringa \u00e8 sensibile alle lettere maiuscole","title":"longest_common_substring"},{"location":"gr_funzioni/corrispondenza_fuzzy/longest_common_substring/#sintassi","text":"longest_common_substring( string1 , string2 )","title":"Sintassi"},{"location":"gr_funzioni/corrispondenza_fuzzy/longest_common_substring/#argomenti","text":"string1 una stringa string2 una stringa","title":"Argomenti"},{"location":"gr_funzioni/corrispondenza_fuzzy/longest_common_substring/#esempi","text":"* longest_common_substring('ABABC','BABCA') \u2192 'ABC' * longest_common_substring('abcDeF','abcdef') \u2192 'abc' * longest_common_substring(upper('abcDeF'),upper('abcdex')) \u2192 'ABCDE'","title":"Esempi"},{"location":"gr_funzioni/corrispondenza_fuzzy/soundex/","text":"soundex \u21b5 Restituisce la rappresentazione Soundex di una stringa. Soundex \u00e8 un algoritmo di abbinamento fonetico, per cui le stringhe con suoni simili dovrebbero essere rappresentate dallo stesso codice Soundex. Sintassi \u21b5 soundex( string ) Argomenti \u21b5 string una stringa Esempi \u21b5 * soundex('robert') \u2192 'R163' * soundex('rupert') \u2192 'R163' * soundex('rubin') \u2192 'R150' secondo questo algoritmo Sicilia bedda e Sicilia bella hanno stesso suono","title":"soundex"},{"location":"gr_funzioni/corrispondenza_fuzzy/soundex/#soundex","text":"Restituisce la rappresentazione Soundex di una stringa. Soundex \u00e8 un algoritmo di abbinamento fonetico, per cui le stringhe con suoni simili dovrebbero essere rappresentate dallo stesso codice Soundex.","title":"soundex"},{"location":"gr_funzioni/corrispondenza_fuzzy/soundex/#sintassi","text":"soundex( string )","title":"Sintassi"},{"location":"gr_funzioni/corrispondenza_fuzzy/soundex/#argomenti","text":"string una stringa","title":"Argomenti"},{"location":"gr_funzioni/corrispondenza_fuzzy/soundex/#esempi","text":"* soundex('robert') \u2192 'R163' * soundex('rupert') \u2192 'R163' * soundex('rubin') \u2192 'R150' secondo questo algoritmo Sicilia bedda e Sicilia bella hanno stesso suono","title":"Esempi"},{"location":"gr_funzioni/custom/CurrentFormValue/","text":"CurrentFormValue \u21b5 Questa funzione restituisce il valore corrente di un campo nella form di inserimento dati. Sintassi \u21b5 CurrentFormValue('FIELD_NAME') Argomento \u21b5 FIELD_NAME nome di un campo Note \u21b5 Questa funzione pu\u00f2 essere utilizzata solo nei moduli ed \u00e8 particolarmente utile se utilizzata insieme al widget personalizzato; Se il campo non esiste, la funzione restituisce una stringa vuota. Osservazione \u21b5 Questa funzione \u00e8 presente, nel gruppo Custom del calcolatore di campi, solo dopo l'installazione del plugin Form Value Relation e solo per QGIS 2.X. Per le versioni >= QGIS 3.2 la funzionalit\u00e0 \u00e8 nativa e basta utilizzare la funzione current_value presente nel gruppo Form (visibile solo usando i widget)","title":"CurrentFormValue"},{"location":"gr_funzioni/custom/CurrentFormValue/#currentformvalue","text":"Questa funzione restituisce il valore corrente di un campo nella form di inserimento dati.","title":"CurrentFormValue"},{"location":"gr_funzioni/custom/CurrentFormValue/#sintassi","text":"CurrentFormValue('FIELD_NAME')","title":"Sintassi"},{"location":"gr_funzioni/custom/CurrentFormValue/#argomento","text":"FIELD_NAME nome di un campo","title":"Argomento"},{"location":"gr_funzioni/custom/CurrentFormValue/#note","text":"Questa funzione pu\u00f2 essere utilizzata solo nei moduli ed \u00e8 particolarmente utile se utilizzata insieme al widget personalizzato; Se il campo non esiste, la funzione restituisce una stringa vuota.","title":"Note"},{"location":"gr_funzioni/custom/CurrentFormValue/#osservazione","text":"Questa funzione \u00e8 presente, nel gruppo Custom del calcolatore di campi, solo dopo l'installazione del plugin Form Value Relation e solo per QGIS 2.X. Per le versioni >= QGIS 3.2 la funzionalit\u00e0 \u00e8 nativa e basta utilizzare la funzione current_value presente nel gruppo Form (visibile solo usando i widget)","title":"Osservazione"},{"location":"gr_funzioni/custom/controlla_file/","text":"controlla_file \u21b5 Questa funzione ritorna true se il percorso esiste altrimenti false. Esempio \u21b5 controlla_file('path') -> true Codice Python \u21b5 from qgis.core import * from qgis.gui import * from os.path import * @qgsfunction(args='auto', group='Custom') def controlla_file(value1, feature, parent): \"\"\" Questa funzione ritorna true se il percorso esiste altrimenti false <ul> <li>controlla_file('path') -> true</li> </ul> \"\"\" return os.path.exists(value1)","title":"controlla_file"},{"location":"gr_funzioni/custom/controlla_file/#controlla_file","text":"Questa funzione ritorna true se il percorso esiste altrimenti false.","title":"controlla_file"},{"location":"gr_funzioni/custom/controlla_file/#esempio","text":"controlla_file('path') -> true","title":"Esempio"},{"location":"gr_funzioni/custom/controlla_file/#codice-python","text":"from qgis.core import * from qgis.gui import * from os.path import * @qgsfunction(args='auto', group='Custom') def controlla_file(value1, feature, parent): \"\"\" Questa funzione ritorna true se il percorso esiste altrimenti false <ul> <li>controlla_file('path') -> true</li> </ul> \"\"\" return os.path.exists(value1)","title":"Codice Python"},{"location":"gr_funzioni/custom/custom/","text":"Custom \u21b5 Questo gruppo contiene funzioni Python create in modo personalizzato dall'utente. Funzione Descrizione my_sum Calcola la somma dei due parametri valore1 e valore2 reverse_string Questa funzione ritorna il valore rovesciato di un testo perimetro_km() Questa funzione ritorna il valore del perimetro della geometria in km controlla_file Questa funzione ritorna true se il percorso esiste altrimenti false CurrentFormValue Questa funzione restituisce il valore corrente di un campo nella form di inserimento dati. Fattoriale Questa funzione calcola il fattoriale di un numero. Il codice Python va incollato qui:","title":"Custom"},{"location":"gr_funzioni/custom/custom/#custom","text":"Questo gruppo contiene funzioni Python create in modo personalizzato dall'utente. Funzione Descrizione my_sum Calcola la somma dei due parametri valore1 e valore2 reverse_string Questa funzione ritorna il valore rovesciato di un testo perimetro_km() Questa funzione ritorna il valore del perimetro della geometria in km controlla_file Questa funzione ritorna true se il percorso esiste altrimenti false CurrentFormValue Questa funzione restituisce il valore corrente di un campo nella form di inserimento dati. Fattoriale Questa funzione calcola il fattoriale di un numero. Il codice Python va incollato qui:","title":"Custom"},{"location":"gr_funzioni/custom/custom_unico/","text":"Gruppo Custom \u21b5 Abstract Questo gruppo contiene funzioni Python create in modo personalizzato dall'utente. controlla_file \u21b5 Questa funzione ritorna true se il percorso esiste altrimenti false. Esempio: controlla_file('path') -> true Codice Python: from qgis.core import * from qgis.gui import * from os.path import * @qgsfunction(args='auto', group='Custom') def controlla_file(value1, feature, parent): \"\"\" Questa funzione ritorna true se il percorso esiste altrimenti false <ul> <li>controlla_file('path') -> true</li> </ul> \"\"\" return os.path.exists(value1) fattoriale \u21b5 Calcola il fattoriale di un numero definito come il prodotto di tutti i numeri tra 1 e n. Per convenzione il fattoriale di 0 = 1 la notazione matematica per fattoriale \u00e8 n! La funzione \u00e8 compresa nel modulo math NB: valore massimo memorizzabile in un campo numerico \u00e8 20! (2432902008176640000) Esempio: fact(10)\u2192 3628800 Codice Python: from qgis.core import * from qgis.gui import * import math @qgsfunction(args='auto', group='Custom') def fact(n, feature, parent): \"\"\" Calcola il fattoriale di un numero definito come il prodotto di tutti i numeri tra 1 e n.<ul> </ul> Per convenzione il fattoriale di 0 = 1 la notazione matematica per fattoriale \u00e8 n! La funzione \u00e8 compresa nel modulo math NB: valore massimo memorizzabile 20! <ul> </ul> <h2>Example usage:</h2> <ul> <li>Fattoriale(5) -> 120</li> <li>in simboli 5! = 120</li> </ul> \"\"\" return math.factorial(n) Lo script Python \u00e8 stato realizzato da Giulio Fattori my_sum \u21b5 Calcola la somma dei due parametri valore1 e valore2. Esempio: my_sum(5, 8) -> 13 my_sum(\"fiel1\", \"field2\") -> 42 Codice Python: Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def my_sum(value1, value2, feature, parent): \"\"\" Calcola la somma dei due parametri valore1 e valore2. <h2>Esempio di utilizzo:</h2> <ul> <li>my_sum(5, 8) -> 13</li> <li>my_sum(\"fiel1\", \"field2\") -> 42</li> </ul> \"\"\" return value1 + value2 perimetro_km() \u21b5 Questa funzione ritorna il valore del perimetro della geometria in km Esempio: perimetro_km() - > 25 Codice Python: Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def perimetro_km( feature, parent): \"\"\" Questa funzione ritorna il valore del perimetro della geometria in km <ul> <li>perimetro_km() - > 25</li> </ul> \"\"\" geom_perimetro_km = feature.geometry().length()/1000 return geom_perimetro_km reverse_string \u21b5 Questa funzione ritorna il valore rovesciato di un testo Esempio: reverse_string('Pigrecoinfinito) - > 'otinifniocergiP' Codice Python: Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def reverse_string(string_to_reverse, feature, parent): \"\"\" Questa funzione ritorna il valore rovesciato di un testo <ul> <li>reverse_string('Pigrecoinfinito) - > 'otinifniocergiP'</li> </ul> \"\"\" return string_to_reverse[::-1]","title":"Custom"},{"location":"gr_funzioni/custom/custom_unico/#gruppo-custom","text":"Abstract Questo gruppo contiene funzioni Python create in modo personalizzato dall'utente.","title":"Gruppo Custom"},{"location":"gr_funzioni/custom/custom_unico/#controlla_file","text":"Questa funzione ritorna true se il percorso esiste altrimenti false. Esempio: controlla_file('path') -> true Codice Python: from qgis.core import * from qgis.gui import * from os.path import * @qgsfunction(args='auto', group='Custom') def controlla_file(value1, feature, parent): \"\"\" Questa funzione ritorna true se il percorso esiste altrimenti false <ul> <li>controlla_file('path') -> true</li> </ul> \"\"\" return os.path.exists(value1)","title":"controlla_file"},{"location":"gr_funzioni/custom/custom_unico/#fattoriale","text":"Calcola il fattoriale di un numero definito come il prodotto di tutti i numeri tra 1 e n. Per convenzione il fattoriale di 0 = 1 la notazione matematica per fattoriale \u00e8 n! La funzione \u00e8 compresa nel modulo math NB: valore massimo memorizzabile in un campo numerico \u00e8 20! (2432902008176640000) Esempio: fact(10)\u2192 3628800 Codice Python: from qgis.core import * from qgis.gui import * import math @qgsfunction(args='auto', group='Custom') def fact(n, feature, parent): \"\"\" Calcola il fattoriale di un numero definito come il prodotto di tutti i numeri tra 1 e n.<ul> </ul> Per convenzione il fattoriale di 0 = 1 la notazione matematica per fattoriale \u00e8 n! La funzione \u00e8 compresa nel modulo math NB: valore massimo memorizzabile 20! <ul> </ul> <h2>Example usage:</h2> <ul> <li>Fattoriale(5) -> 120</li> <li>in simboli 5! = 120</li> </ul> \"\"\" return math.factorial(n) Lo script Python \u00e8 stato realizzato da Giulio Fattori","title":"fattoriale"},{"location":"gr_funzioni/custom/custom_unico/#my_sum","text":"Calcola la somma dei due parametri valore1 e valore2. Esempio: my_sum(5, 8) -> 13 my_sum(\"fiel1\", \"field2\") -> 42 Codice Python: Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def my_sum(value1, value2, feature, parent): \"\"\" Calcola la somma dei due parametri valore1 e valore2. <h2>Esempio di utilizzo:</h2> <ul> <li>my_sum(5, 8) -> 13</li> <li>my_sum(\"fiel1\", \"field2\") -> 42</li> </ul> \"\"\" return value1 + value2","title":"my_sum"},{"location":"gr_funzioni/custom/custom_unico/#perimetro_km","text":"Questa funzione ritorna il valore del perimetro della geometria in km Esempio: perimetro_km() - > 25 Codice Python: Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def perimetro_km( feature, parent): \"\"\" Questa funzione ritorna il valore del perimetro della geometria in km <ul> <li>perimetro_km() - > 25</li> </ul> \"\"\" geom_perimetro_km = feature.geometry().length()/1000 return geom_perimetro_km","title":"perimetro_km()"},{"location":"gr_funzioni/custom/custom_unico/#reverse_string","text":"Questa funzione ritorna il valore rovesciato di un testo Esempio: reverse_string('Pigrecoinfinito) - > 'otinifniocergiP' Codice Python: Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def reverse_string(string_to_reverse, feature, parent): \"\"\" Questa funzione ritorna il valore rovesciato di un testo <ul> <li>reverse_string('Pigrecoinfinito) - > 'otinifniocergiP'</li> </ul> \"\"\" return string_to_reverse[::-1]","title":"reverse_string"},{"location":"gr_funzioni/custom/fattoriale/","text":"fattoriale \u21b5 Calcola il fattoriale di un numero definito come il prodotto di tutti i numeri tra 1 e n. Per convenzione il fattoriale di 0 = 1 la notazione matematica per fattoriale \u00e8 n! La funzione \u00e8 compresa nel modulo math NB: valore massimo memorizzabile in un campo numerico \u00e8 20! (2432902008176640000) Esempio \u21b5 fact(10)\u2192 3628800 Codice Python \u21b5 from qgis.core import * from qgis.gui import * import math @qgsfunction(args='auto', group='Custom') def fact(n, feature, parent): \"\"\" Calcola il fattoriale di un numero definito come il prodotto di tutti i numeri tra 1 e n.<ul> </ul> Per convenzione il fattoriale di 0 = 1 la notazione matematica per fattoriale \u00e8 n! La funzione \u00e8 compresa nel modulo math NB: valore massimo memorizzabile 20! <ul> </ul> <h2>Example usage:</h2> <ul> <li>Fattoriale(5) -> 120</li> <li>in simboli 5! = 120</li> </ul> \"\"\" return math.factorial(n) Lo script Python \u00e8 stato realizzato da Giulio Fattori","title":"fattoriale"},{"location":"gr_funzioni/custom/fattoriale/#fattoriale","text":"Calcola il fattoriale di un numero definito come il prodotto di tutti i numeri tra 1 e n. Per convenzione il fattoriale di 0 = 1 la notazione matematica per fattoriale \u00e8 n! La funzione \u00e8 compresa nel modulo math NB: valore massimo memorizzabile in un campo numerico \u00e8 20! (2432902008176640000)","title":"fattoriale"},{"location":"gr_funzioni/custom/fattoriale/#esempio","text":"fact(10)\u2192 3628800","title":"Esempio"},{"location":"gr_funzioni/custom/fattoriale/#codice-python","text":"from qgis.core import * from qgis.gui import * import math @qgsfunction(args='auto', group='Custom') def fact(n, feature, parent): \"\"\" Calcola il fattoriale di un numero definito come il prodotto di tutti i numeri tra 1 e n.<ul> </ul> Per convenzione il fattoriale di 0 = 1 la notazione matematica per fattoriale \u00e8 n! La funzione \u00e8 compresa nel modulo math NB: valore massimo memorizzabile 20! <ul> </ul> <h2>Example usage:</h2> <ul> <li>Fattoriale(5) -> 120</li> <li>in simboli 5! = 120</li> </ul> \"\"\" return math.factorial(n) Lo script Python \u00e8 stato realizzato da Giulio Fattori","title":"Codice Python"},{"location":"gr_funzioni/custom/my_sum/","text":"my_sum \u21b5 Calcola la somma dei due parametri valore1 e valore2. Esempio di utilizzo: \u21b5 my_sum(5, 8) -> 13 my_sum(\"fiel1\", \"field2\") -> 42 Codice Python \u21b5 Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def my_sum(value1, value2, feature, parent): \"\"\" Calcola la somma dei due parametri valore1 e valore2. <h2>Esempio di utilizzo:</h2> <ul> <li>my_sum(5, 8) -> 13</li> <li>my_sum(\"fiel1\", \"field2\") -> 42</li> </ul> \"\"\" return value1 + value2","title":"my_sum"},{"location":"gr_funzioni/custom/my_sum/#my_sum","text":"Calcola la somma dei due parametri valore1 e valore2.","title":"my_sum"},{"location":"gr_funzioni/custom/my_sum/#esempio-di-utilizzo","text":"my_sum(5, 8) -> 13 my_sum(\"fiel1\", \"field2\") -> 42","title":"Esempio di utilizzo:"},{"location":"gr_funzioni/custom/my_sum/#codice-python","text":"Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def my_sum(value1, value2, feature, parent): \"\"\" Calcola la somma dei due parametri valore1 e valore2. <h2>Esempio di utilizzo:</h2> <ul> <li>my_sum(5, 8) -> 13</li> <li>my_sum(\"fiel1\", \"field2\") -> 42</li> </ul> \"\"\" return value1 + value2","title":"Codice Python"},{"location":"gr_funzioni/custom/perimetro_km%28%29/","text":"perimetro_km() \u21b5 Questa funzione ritorna il valore del perimetro della geometria in km Esempio \u21b5 perimetro_km() - > 25 Codice Python \u21b5 Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def perimetro_km( feature, parent): \"\"\" Questa funzione ritorna il valore del perimetro della geometria in km <ul> <li>perimetro_km() - > 25</li> </ul> \"\"\" geom_perimetro_km = feature.geometry().length()/1000 return geom_perimetro_km","title":"perimetro_km()"},{"location":"gr_funzioni/custom/perimetro_km%28%29/#perimetro_km","text":"Questa funzione ritorna il valore del perimetro della geometria in km","title":"perimetro_km()"},{"location":"gr_funzioni/custom/perimetro_km%28%29/#esempio","text":"perimetro_km() - > 25","title":"Esempio"},{"location":"gr_funzioni/custom/perimetro_km%28%29/#codice-python","text":"Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def perimetro_km( feature, parent): \"\"\" Questa funzione ritorna il valore del perimetro della geometria in km <ul> <li>perimetro_km() - > 25</li> </ul> \"\"\" geom_perimetro_km = feature.geometry().length()/1000 return geom_perimetro_km","title":"Codice Python"},{"location":"gr_funzioni/custom/reverse_string/","text":"reverse_string \u21b5 Questa funzione ritorna il valore rovesciato di un testo Esempio \u21b5 reverse_string('Pigrecoinfinito) - > 'otinifniocergiP' Codice Python \u21b5 Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def reverse_string(string_to_reverse, feature, parent): \"\"\" Questa funzione ritorna il valore rovesciato di un testo <ul> <li>reverse_string('Pigrecoinfinito) - > 'otinifniocergiP'</li> </ul> \"\"\" return string_to_reverse[::-1]","title":"reverse_string"},{"location":"gr_funzioni/custom/reverse_string/#reverse_string","text":"Questa funzione ritorna il valore rovesciato di un testo","title":"reverse_string"},{"location":"gr_funzioni/custom/reverse_string/#esempio","text":"reverse_string('Pigrecoinfinito) - > 'otinifniocergiP'","title":"Esempio"},{"location":"gr_funzioni/custom/reverse_string/#codice-python","text":"Da copiare ed incollare from qgis.core import * from qgis.gui import * @qgsfunction(args='auto', group='Custom') def reverse_string(string_to_reverse, feature, parent): \"\"\" Questa funzione ritorna il valore rovesciato di un testo <ul> <li>reverse_string('Pigrecoinfinito) - > 'otinifniocergiP'</li> </ul> \"\"\" return string_to_reverse[::-1]","title":"Codice Python"},{"location":"gr_funzioni/data_ora/age/","text":"age \u21b5 Restituisce la differenza fra due date o datetimes. La differenza \u00e8 restituita come Interval e deve essere usata con una della seguenti funzioni per estrarre informazioni utili: year month week day hour minute second Sintassi \u21b5 age( datetime1 , datetime2 ) Argomenti \u21b5 datetime1 una stringa, in formato data o data/ora rappresentante la meno recente datetime2 una stringa, in formato data o data/ora rappresentante la data pi\u00f9 recente Esempi \u21b5 age('2012-05-12','2012-05-02') \u2192 intervallo (usa day per estrarre il numero di giorni) day(age('2012-05-12','2012-05-02')) \u2192 10","title":"age"},{"location":"gr_funzioni/data_ora/age/#age","text":"Restituisce la differenza fra due date o datetimes. La differenza \u00e8 restituita come Interval e deve essere usata con una della seguenti funzioni per estrarre informazioni utili: year month week day hour minute second","title":"age"},{"location":"gr_funzioni/data_ora/age/#sintassi","text":"age( datetime1 , datetime2 )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/age/#argomenti","text":"datetime1 una stringa, in formato data o data/ora rappresentante la meno recente datetime2 una stringa, in formato data o data/ora rappresentante la data pi\u00f9 recente","title":"Argomenti"},{"location":"gr_funzioni/data_ora/age/#esempi","text":"age('2012-05-12','2012-05-02') \u2192 intervallo (usa day per estrarre il numero di giorni) day(age('2012-05-12','2012-05-02')) \u2192 10","title":"Esempi"},{"location":"gr_funzioni/data_ora/data_ora/","text":"Data e ora \u21b5 Questo gruppo contiene funzioni per gestire dati con date e ore . Funzione Descrizione age Restituisce la differenza fra due date o datetimes datetime_from_epoch Restituisce un datetime il cui data e ora sono il numero di millisecondi (>=QGIS 3.12) day Estrae il giorno da una data, o il numero dei giorni da un intervallo day_of_week Restituisce il giorno della settimana per una data o un datetime epoch Restituisce l'intervallo in millisecondi fra l'epoca unix e la data inserita format_date Formatta un tipo di data o stringa in un formato stringa personalizzato (QGIS 3.12) hour Estrae la parte ore da una data/ora o orario, o il numero delle ore da un intervallo make_date Crea un valore di data dai numeri di anno, mese e giorno. ( >=3.14 ) make_datetime Crea un valore datetime da anno, mese, giorno, ora, minuti e secondi numeri. ( >=3.14 ) make_interval Crea un valore di intervallo dai valori di anno, mese, settimane, giorni, ore, minuti e secondi. ( >=3.14 ) make_time Crea un valore temporale da ore, minuti e secondi numeri. ( >=3.14 ) minute Estrae la parte minuti da un data/ora o ora, o il numero dei minuti da un intervallo month Estrae la parte mese da una data, o il numero di mesi da un intervallo now Restituisce la data e l'ora attuale second Estrae la parte secondi da un datetime o time, o il numero dei secondi da un intervallo to_date Converte una stringa in un oggetto data to_datetime Converte una stringa in un oggetto datetime to_interval Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data to_time Converti una stringa in un oggetto time week Estrae il numero della settimana da una data, o il numero di settimane da un intervallo year Estrae la parte anno da una data, o il numero di anni da un intervallo Osservazione \u21b5 La possibilit\u00e0 di memorizzare i valori di data, ora e datetime direttamente sui campi pu\u00f2 dipendere dal fornitore dell'origine dati (ad esempio, shapefile accetta il formato data , ma non il formato datetime o time ). Di seguito sono riportati alcuni suggerimenti per superare questa limitazione. data , data e ora possono essere memorizzati in campi di testo dopo aver usato la funzione to_format () . Gli intervalli possono essere memorizzati nei campi di tipo intero o decimale dopo aver utilizzato una delle funzioni di estrazione della data (ad es. day() per ottenere l'intervallo espresso in giorni)","title":"Data e ora"},{"location":"gr_funzioni/data_ora/data_ora/#data-e-ora","text":"Questo gruppo contiene funzioni per gestire dati con date e ore . Funzione Descrizione age Restituisce la differenza fra due date o datetimes datetime_from_epoch Restituisce un datetime il cui data e ora sono il numero di millisecondi (>=QGIS 3.12) day Estrae il giorno da una data, o il numero dei giorni da un intervallo day_of_week Restituisce il giorno della settimana per una data o un datetime epoch Restituisce l'intervallo in millisecondi fra l'epoca unix e la data inserita format_date Formatta un tipo di data o stringa in un formato stringa personalizzato (QGIS 3.12) hour Estrae la parte ore da una data/ora o orario, o il numero delle ore da un intervallo make_date Crea un valore di data dai numeri di anno, mese e giorno. ( >=3.14 ) make_datetime Crea un valore datetime da anno, mese, giorno, ora, minuti e secondi numeri. ( >=3.14 ) make_interval Crea un valore di intervallo dai valori di anno, mese, settimane, giorni, ore, minuti e secondi. ( >=3.14 ) make_time Crea un valore temporale da ore, minuti e secondi numeri. ( >=3.14 ) minute Estrae la parte minuti da un data/ora o ora, o il numero dei minuti da un intervallo month Estrae la parte mese da una data, o il numero di mesi da un intervallo now Restituisce la data e l'ora attuale second Estrae la parte secondi da un datetime o time, o il numero dei secondi da un intervallo to_date Converte una stringa in un oggetto data to_datetime Converte una stringa in un oggetto datetime to_interval Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data to_time Converti una stringa in un oggetto time week Estrae il numero della settimana da una data, o il numero di settimane da un intervallo year Estrae la parte anno da una data, o il numero di anni da un intervallo","title":"Data e ora"},{"location":"gr_funzioni/data_ora/data_ora/#osservazione","text":"La possibilit\u00e0 di memorizzare i valori di data, ora e datetime direttamente sui campi pu\u00f2 dipendere dal fornitore dell'origine dati (ad esempio, shapefile accetta il formato data , ma non il formato datetime o time ). Di seguito sono riportati alcuni suggerimenti per superare questa limitazione. data , data e ora possono essere memorizzati in campi di testo dopo aver usato la funzione to_format () . Gli intervalli possono essere memorizzati nei campi di tipo intero o decimale dopo aver utilizzato una delle funzioni di estrazione della data (ad es. day() per ottenere l'intervallo espresso in giorni)","title":"Osservazione"},{"location":"gr_funzioni/data_ora/data_ora_unico/","text":"Gruppo Data e Ora \u21b5 Abstract Questo gruppo contiene funzioni per gestire dati con date e ore. age \u21b5 Restituisce la differenza fra due date o datetimes. La differenza \u00e8 restituita come Interval e deve essere usata con una della seguenti funzioni per estrarre informazioni utili: year month week day hour minute second Sintassi: age( datetime1 , datetime2 ) Argomenti: datetime1 una stringa, in formato data o data/ora rappresentante la meno recente datetime2 una stringa, in formato data o data/ora rappresentante la data pi\u00f9 recente Esempi: age('2012-05-12','2012-05-02') \u2192 intervallo (usa day per estrarre il numero di giorni) day(age('2012-05-12','2012-05-02')) \u2192 10 datetime_from_epoch \u21b5 Restituisce un datetime il cui data e ora sono il numero di millisecondi, msec, che sono passati dal 1970-01-01T00: 00: 00.000, Coordinated Universal Time (Qt.UTC) e convertiti in Qt.LocalTime. Sintassi: datetime_from_epoch( int ) [ ] indica componenti opzionali Argomenti: int numero (millisecondi) Esempi: datetime_from_epoch(1483225200000) \u2192 2017-01-01T00:00:00 Feature introdotta a partire da QGIS 3.12 day \u21b5 Estrae il giorno da una data, o il numero dei giorni da un intervallo. Variabile data \u21b5 Estrae il giorno da una data o un data/ora. Sintassi: day( date ) Argomenti: date un valore data o data/ora Variabile intervallo \u21b5 Calcola la lunghezza in giorni di un intervallo. Sintassi: day( interval ) Argomenti: interval valore intervallo da cui restituire il numero di giorni Esempi: day(tointerval('3 days')) \u2192 3 day(age('2012-01-01','2010-01-01')) \u2192 730 day_of_week \u21b5 Restituisce il giorno della settimana per una data o un datetime. L'intervallo del valore restituito v\u00e0 da 0 a 6, dove 0 corrisponde a Domenica e 6 a Sabato. Sintassi: day_of_week( date ) Argomenti: date valore data o datetime Esempi: day_of_week(todate('2018-05-09')) \u2192 3 (Mercoled\u00ec) Osservazioni: 0 \u2192 Domenica 1 \u2192 Luned\u00ec 2 \u2192 Marted\u00ec 3 \u2192 Mercoled\u00ec 4 \u2192 Gioved\u00ec 5 \u2192 Venerd\u00ec 6 \u2192 Sabato epoch \u21b5 Restituisce l'intervallo in millisecondi fra l' epoca unix e la data inserita. Sintassi: epoch( date ) Argomenti: date un valore data o data/ora Esempi: epoch(to_date('2017-01-01')) \u2192 1483203600000 format_date \u21b5 Formatta un tipo di data o stringa in un formato stringa personalizzato. Usa stringhe nel formato data/ora Qt. Vedi QDateTime::toString . Sintassi: format_date( datetime , format [, language ]_) Argomenti: datetime valora data, ora, o data/ora format Modello di stringhe usato per formattare la stringa. Espressione In uscita d il giorno in numero senza lo zero iniziale (da 1 a 31) dd il giorno in numero con lo zero iniziale (da 01 a 31) ddd il nome locale del giorno abbreviato (es. da 'Mon' a 'Sun') dddd il nome locale del giorno per esteso (es. da 'Monday' a 'Sunday') M il mese in numero senza lo zero iniziale (1-12) MM il mese in numero con lo zero iniziale (01-12) MMM il nome locale del mese abbreviato (es. da 'Jan' a 'Dec') MMMM il nome locale del mese per esteso (es. da 'January' a 'December') yy l'anno come un numero a due cifre (00-99) yyyy l'anno come un numero a quattro cifre Queste espressioni possono essere usate per la parte time della stringa da formattare: Espressione In uscita h l'ora senza lo zero iniziale (da 0 a 23 o da 1 a 12 se visualizzi AM/PM) hh l'ora con lo zero iniziale (da 00 a 23 o da 01 a 12 se visualizzi AM/PM) H l'ora senza lo zero iniziale (da 0 a 23, anche se visualizzi AM/PM) HH l'ora con lo zero iniziale (da 00 a 23, anche se visualizzi AM/PM) m il minuto senza lo zero iniziale (da 0 a 59) mm il minuto con lo zero iniziale (da 00 a 59) s il secondo senza lo zero iniziale (da 0 a 59) ss il secondo con lo zero iniziale (da 00 a 59) z i millisecondi senza gli zeri iniziali (da 0 a 999) zzz i millisecondi con gli zeri iniziali (da 000 a 999) AP o A interpretato come un orario nel formato AM/PM. AP deve essere \"AM\" oppure \"PM\". ap o a interpretato come un orario nel formato AM/PM. ap deve essere \"am\" oppure \"pm\". language linguaggio (minuscolo, due o tre lettere, codice ISO 639) utilizzato per formattare la data in una stringa personalizzata ( >= QGIS 3.12 ) Esempi: format_date('2012-05-15','dd.MM.yyyy') \u2192 '15.05.2012' format_date('2012-06-15','d MMMM yyyy','fr') \u2192 '15 juin 2012' format_date('2012-06-15','d MMMM yyyy','it') \u2192 '15 giugno 2012' hour \u21b5 Estrae la parte ore da una data/ora o orario, o il numero delle ore da un intervallo. Variabile ora \u21b5 Estrae la parte ore da un orario o data/ora. Sintassi: hour( datetime ) Argomenti: datetime un valore data o data/ora Esempi: hour(to_datetime('2018-05-09T11:58:57')) \u2192 11 Variabile intervallo \u21b5 Calcola la lunghezza in ore di un intervallo. Sintassi: hour( interval ) Argomenti: interval valore intervallo da cui restituire il numero di ore Esempi: hour(tointerval('3 hours')) \u2192 3 hour(age('2012-07-22T13:00:00','2012-07-22T10:00:00')) \u2192 3 hour(age('2012-01-01','2010-01-01')) \u2192 17520 make_date \u21b5 Crea un valore di data dai numeri di anno, mese e giorno. Sintassi: make_date( year , month , day ) Argomenti: year Numero dell'anno. Gli anni da 1 a 99 vengono interpretati cos\u00ec come sono. L'anno 0 non \u00e8 valido. month Numero del mese, dove 1 = gennaio day Day Numero del giorno, che inizia con 1 per il primo giorno del mese. Esempi: make_date(2020,5,4) \u2192 date value 2020-05-04` make_datetime \u21b5 Crea un valore datetime da anno, mese, giorno, ora, minuti e secondi numeri. Sintassi: make_datetime( year , month , day , hour , minute , second ) Argomenti: year Numero dell'anno. Gli anni da 1 a 99 vengono interpretati cos\u00ec come sono. L'anno 0 non \u00e8 valido. month Numero del mese, dove 1 = gennaio day Day Numero del giorno, che inizia con 1 per il primo giorno del mese; hour numero ore; minute minuti; second secondi (i valori frazionari includono millisecondi). Esempi: make_datetime(2020,5,4,13,45,30.5) \u2192 datetime value 2020-05-04 13:45:30.500 Osservazioni: make_interval \u21b5 Crea un valore di intervallo dai valori di anno, mese, settimane, giorni, ore, minuti e secondi. Sintassi: make_interval( _years=0 ][, months=0 ][, weeks=0 ][, days=0 ][, hours=0 ][, minutes=0 ][,_ seconds=0 ]) [ ] indica componenti opzionali Argomenti: year Numero di anni (presuppone una durata di 365,25 giorni). month Numero di mesi (presuppone una durata del mese di 30 giorni) weeks numero settimane; day Numero di giorno; hour numero ore; minute minuti; second secondi. Esempi: make_interval(2020,5,4,13,45,30.5) \u2192 datetime value 2020-05-04 13:45:30.500 make_time \u21b5 Crea un valore temporale da ore, minuti e secondi numeri. Sintassi: make_time( hour , minute _>, second ) Argomenti: hour numero ore minute minuti second secondi (le frazioni includono i millisecondi) Esempi: make_time(13,45,30.5) \u2192 time value 13:45:30.500 minute \u21b5 Estrae la parte minuti da un data/ora o ora, o il numero dei minuti da un intervallo. Variabile ora \u21b5 Estrae la parte minuti da una time o una datetime. Sintassi: minute( datetime ) Argomenti: datetime un valore data o data/ora Esempi: minute('2012-07-22T13:24:57') \u2192 24 Variabile intervallo \u21b5 Calcola la lunghezza in minuti di un intervallo. Sintassi: minute( interval ) Argomenti: interval valore intervallo da cui restituire il numero di minuti Esempi: minute(tointerval('3 minutes')) \u2192 3 minute(age('2012-07-22T00:20:00','2012-07-22T00:00:00')) \u2192 20 minute(age('2012-01-01','2010-01-01')) \u2192 1051200 month \u21b5 Estrae la parte mese da una data, o il numero di mesi da un intervallo. Variabile data \u21b5 Estrae la parte mese da una data o datetime. Sintassi: month( date ) Argomenti: date un valore data o data/ora Esempi: month('2012-05-12') \u2192 05 Variabile intervallo \u21b5 Calcola la lunghezza in mesi di un intervallo. Sintassi: month( interval ) Argomenti: interval valore intervallo da cui restituire il numero di mesi Esempi: month(to_interval('3 months')) \u2192 3 month(age('2012-01-01','2010-01-01')) \u2192 24.3333 now \u21b5 Restituisce la data e l'ora correnti. La funzione \u00e8 statica e restituir\u00e0 risultati coerenti durante la valutazione. Il tempo restituito \u00e8 il momento in cui viene preparata l'espressione. Sintassi: now() Esempi: now() \u2192 2018-05-09 12:18:38` second \u21b5 Estrae la parte secondi da un datetime o time, o il numero dei secondi da un intervallo. Variabile ora \u21b5 Estrae la parte secondi da una time o una datetime. Sintassi: second( datetime ) Argomenti: datetime un valore data o data/ora Esempi: second('2012-07-22T13:24:57') \u2192 57 Variabile intervallo \u21b5 Calcola la lunghezza in secondi di un intervallo. Sintassi: second( interval ) Argomenti: interval valore intervallo da cui restituire il numero di secondi Esempi: second(age('2012-07-22T00:20:00','2012-07-22T00:00:00')) \u2192 1200 second(age('2012-01-01','2010-01-01')) \u2192 63072000 to_date \u21b5 Converte una stringa in un oggetto data Sintassi: to_date( string ,[ format ][, language ]) [ ] indica componenti opzionali Argomenti: string stringa rappresentante il valore data format formato usato per convertire la stringa in una data language lingua (minuscolo, due o tre lettere, codice lingua ISO 639) utilizzata per convertire la stringa in una data. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Esempi: to_date('2012-05-04') \u2192 2012-05-04 to_date('June 29, 2019','MMMM d, yyyy') \u2192 2019-06-29, se la locale corrente utilizza il nome 'June' per il sesto mese, altrimenti si verifica un errore to_date('29 juin, 2019','d MMMM, yyyy','fr') \u2192 2019-06-29 to_datetime \u21b5 Converte una stringa in un oggetto datetime. \u00c8 possibile fornire una stringa di formato opzionale per analizzare la stringa; vedi QDate::fromString , QTime::fromString o la documentazione della funzione format_date per ulteriore documentazione sul formato. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Sintassi: to_datetime( string ,[ format ][, language ]) [ ] indica componenti opzionali Argomenti: string stringa rappresentante il valore data format formato usato per convertire la stringa in una data language lingua (minuscolo, due o tre lettere, codice lingua ISO 639) utilizzata per convertire la stringa in una data. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Esempi: to_datetime('2012-05-04 12:50:00') \u2192 2012-05-04T12:50:00 to_datetime('June 29, 2019 @ 12:34','MMMM d, yyyy @ HH:mm') \u2192 2019-06-29T12:34, se la locale corrente utilizza il nome 'June' per il sesto mese, altrimenti si verifica un errore to_datetime('29 juin, 2019 @ 12:34','d MMMM, yyyy @ HH:mm','fr') \u2192 2019-06-29T12:3 to_interval \u21b5 Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data. Sintassi: to_interval( string ) Argomenti: string una stringa rappresentante un intervallo. I formati ammessi includono {n} giorni {n} ore {n} mesi. Esempi: to_interval('1 day 2 hours') \u2192 interval: 1.08333 days to_interval( '0.5 hours' ) \u2192 intervallo: 30 minuti to_datetime('2012-05-05 12:00:00') - to_interval('1 day 2 hours') \u2192 2012-05-04T10:00:00 to_time \u21b5 Converti una stringa in un oggetto time. Sintassi: to_time( string ,[ format ][, language ]) Argomenti: string stringa rappresentante il valore ora format formato usato per convertire la stringa in orario language lingua (minuscolo, due o tre lettere, codice lingua ISO 639) utilizzata per convertire la stringa in un orario. Esempi: to_time('12:30:01') \u2192 12:30:01 to_time('12:34','HH:mm') \u2192 12:34:00 to_time('12:34','HH:mm','fr') \u2192 12:34:00 week \u21b5 Estrae il numero della settimana da una data, o il numero di settimane da un intervallo. Variabile data \u21b5 Estrae il numero della settimana da una data o un datetime. Sintassi: week( date ) Argomenti: date un valore data o data/ora Esempi: week('2018-05-09') \u2192 19 Variabile intervallo \u21b5 Calcola la lunghezza in settimane di un intervallo. Sintassi: week( interval ) Argomenti: interval valore intervallo da cui restituire il numero di mesi Esempi: week(tointerval('3 weeks')) \u2192 3 week(age('2012-01-01','2010-01-01')) \u2192 104.285 year \u21b5 Estrae la parte anno da una data, o il numero di anni da un intervallo. Variabile data \u21b5 Estrae la parte anno da una data o datetime. Sintassi: year( date ) Argomenti: date un valore data o data/ora Esempi: week('2018-05-09') \u2192 19 Variabile intervallo \u21b5 Calcola la lunghezza in anni di un intervallo. Sintassi: year( interval ) Argomenti: interval valore intervallo da cui restituire il numero di anni Esempi: year(to_interval('3 years')) \u2192 3 year(age('2012-01-01','2010-01-01')) \u2192 1.9986","title":"Data ora"},{"location":"gr_funzioni/data_ora/data_ora_unico/#gruppo-data-e-ora","text":"Abstract Questo gruppo contiene funzioni per gestire dati con date e ore.","title":"Gruppo Data e Ora"},{"location":"gr_funzioni/data_ora/data_ora_unico/#age","text":"Restituisce la differenza fra due date o datetimes. La differenza \u00e8 restituita come Interval e deve essere usata con una della seguenti funzioni per estrarre informazioni utili: year month week day hour minute second Sintassi: age( datetime1 , datetime2 ) Argomenti: datetime1 una stringa, in formato data o data/ora rappresentante la meno recente datetime2 una stringa, in formato data o data/ora rappresentante la data pi\u00f9 recente Esempi: age('2012-05-12','2012-05-02') \u2192 intervallo (usa day per estrarre il numero di giorni) day(age('2012-05-12','2012-05-02')) \u2192 10","title":"age"},{"location":"gr_funzioni/data_ora/data_ora_unico/#datetime_from_epoch","text":"Restituisce un datetime il cui data e ora sono il numero di millisecondi, msec, che sono passati dal 1970-01-01T00: 00: 00.000, Coordinated Universal Time (Qt.UTC) e convertiti in Qt.LocalTime. Sintassi: datetime_from_epoch( int ) [ ] indica componenti opzionali Argomenti: int numero (millisecondi) Esempi: datetime_from_epoch(1483225200000) \u2192 2017-01-01T00:00:00 Feature introdotta a partire da QGIS 3.12","title":"datetime_from_epoch"},{"location":"gr_funzioni/data_ora/data_ora_unico/#day","text":"Estrae il giorno da una data, o il numero dei giorni da un intervallo.","title":"day"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-data","text":"Estrae il giorno da una data o un data/ora. Sintassi: day( date ) Argomenti: date un valore data o data/ora","title":"Variabile data"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-intervallo","text":"Calcola la lunghezza in giorni di un intervallo. Sintassi: day( interval ) Argomenti: interval valore intervallo da cui restituire il numero di giorni Esempi: day(tointerval('3 days')) \u2192 3 day(age('2012-01-01','2010-01-01')) \u2192 730","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/data_ora_unico/#day_of_week","text":"Restituisce il giorno della settimana per una data o un datetime. L'intervallo del valore restituito v\u00e0 da 0 a 6, dove 0 corrisponde a Domenica e 6 a Sabato. Sintassi: day_of_week( date ) Argomenti: date valore data o datetime Esempi: day_of_week(todate('2018-05-09')) \u2192 3 (Mercoled\u00ec) Osservazioni: 0 \u2192 Domenica 1 \u2192 Luned\u00ec 2 \u2192 Marted\u00ec 3 \u2192 Mercoled\u00ec 4 \u2192 Gioved\u00ec 5 \u2192 Venerd\u00ec 6 \u2192 Sabato","title":"day_of_week"},{"location":"gr_funzioni/data_ora/data_ora_unico/#epoch","text":"Restituisce l'intervallo in millisecondi fra l' epoca unix e la data inserita. Sintassi: epoch( date ) Argomenti: date un valore data o data/ora Esempi: epoch(to_date('2017-01-01')) \u2192 1483203600000","title":"epoch"},{"location":"gr_funzioni/data_ora/data_ora_unico/#format_date","text":"Formatta un tipo di data o stringa in un formato stringa personalizzato. Usa stringhe nel formato data/ora Qt. Vedi QDateTime::toString . Sintassi: format_date( datetime , format [, language ]_) Argomenti: datetime valora data, ora, o data/ora format Modello di stringhe usato per formattare la stringa. Espressione In uscita d il giorno in numero senza lo zero iniziale (da 1 a 31) dd il giorno in numero con lo zero iniziale (da 01 a 31) ddd il nome locale del giorno abbreviato (es. da 'Mon' a 'Sun') dddd il nome locale del giorno per esteso (es. da 'Monday' a 'Sunday') M il mese in numero senza lo zero iniziale (1-12) MM il mese in numero con lo zero iniziale (01-12) MMM il nome locale del mese abbreviato (es. da 'Jan' a 'Dec') MMMM il nome locale del mese per esteso (es. da 'January' a 'December') yy l'anno come un numero a due cifre (00-99) yyyy l'anno come un numero a quattro cifre Queste espressioni possono essere usate per la parte time della stringa da formattare: Espressione In uscita h l'ora senza lo zero iniziale (da 0 a 23 o da 1 a 12 se visualizzi AM/PM) hh l'ora con lo zero iniziale (da 00 a 23 o da 01 a 12 se visualizzi AM/PM) H l'ora senza lo zero iniziale (da 0 a 23, anche se visualizzi AM/PM) HH l'ora con lo zero iniziale (da 00 a 23, anche se visualizzi AM/PM) m il minuto senza lo zero iniziale (da 0 a 59) mm il minuto con lo zero iniziale (da 00 a 59) s il secondo senza lo zero iniziale (da 0 a 59) ss il secondo con lo zero iniziale (da 00 a 59) z i millisecondi senza gli zeri iniziali (da 0 a 999) zzz i millisecondi con gli zeri iniziali (da 000 a 999) AP o A interpretato come un orario nel formato AM/PM. AP deve essere \"AM\" oppure \"PM\". ap o a interpretato come un orario nel formato AM/PM. ap deve essere \"am\" oppure \"pm\". language linguaggio (minuscolo, due o tre lettere, codice ISO 639) utilizzato per formattare la data in una stringa personalizzata ( >= QGIS 3.12 ) Esempi: format_date('2012-05-15','dd.MM.yyyy') \u2192 '15.05.2012' format_date('2012-06-15','d MMMM yyyy','fr') \u2192 '15 juin 2012' format_date('2012-06-15','d MMMM yyyy','it') \u2192 '15 giugno 2012'","title":"format_date"},{"location":"gr_funzioni/data_ora/data_ora_unico/#hour","text":"Estrae la parte ore da una data/ora o orario, o il numero delle ore da un intervallo.","title":"hour"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-ora","text":"Estrae la parte ore da un orario o data/ora. Sintassi: hour( datetime ) Argomenti: datetime un valore data o data/ora Esempi: hour(to_datetime('2018-05-09T11:58:57')) \u2192 11","title":"Variabile ora"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-intervallo_1","text":"Calcola la lunghezza in ore di un intervallo. Sintassi: hour( interval ) Argomenti: interval valore intervallo da cui restituire il numero di ore Esempi: hour(tointerval('3 hours')) \u2192 3 hour(age('2012-07-22T13:00:00','2012-07-22T10:00:00')) \u2192 3 hour(age('2012-01-01','2010-01-01')) \u2192 17520","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/data_ora_unico/#make_date","text":"Crea un valore di data dai numeri di anno, mese e giorno. Sintassi: make_date( year , month , day ) Argomenti: year Numero dell'anno. Gli anni da 1 a 99 vengono interpretati cos\u00ec come sono. L'anno 0 non \u00e8 valido. month Numero del mese, dove 1 = gennaio day Day Numero del giorno, che inizia con 1 per il primo giorno del mese. Esempi: make_date(2020,5,4) \u2192 date value 2020-05-04`","title":"make_date"},{"location":"gr_funzioni/data_ora/data_ora_unico/#make_datetime","text":"Crea un valore datetime da anno, mese, giorno, ora, minuti e secondi numeri. Sintassi: make_datetime( year , month , day , hour , minute , second ) Argomenti: year Numero dell'anno. Gli anni da 1 a 99 vengono interpretati cos\u00ec come sono. L'anno 0 non \u00e8 valido. month Numero del mese, dove 1 = gennaio day Day Numero del giorno, che inizia con 1 per il primo giorno del mese; hour numero ore; minute minuti; second secondi (i valori frazionari includono millisecondi). Esempi: make_datetime(2020,5,4,13,45,30.5) \u2192 datetime value 2020-05-04 13:45:30.500 Osservazioni:","title":"make_datetime"},{"location":"gr_funzioni/data_ora/data_ora_unico/#make_interval","text":"Crea un valore di intervallo dai valori di anno, mese, settimane, giorni, ore, minuti e secondi. Sintassi: make_interval( _years=0 ][, months=0 ][, weeks=0 ][, days=0 ][, hours=0 ][, minutes=0 ][,_ seconds=0 ]) [ ] indica componenti opzionali Argomenti: year Numero di anni (presuppone una durata di 365,25 giorni). month Numero di mesi (presuppone una durata del mese di 30 giorni) weeks numero settimane; day Numero di giorno; hour numero ore; minute minuti; second secondi. Esempi: make_interval(2020,5,4,13,45,30.5) \u2192 datetime value 2020-05-04 13:45:30.500","title":"make_interval"},{"location":"gr_funzioni/data_ora/data_ora_unico/#make_time","text":"Crea un valore temporale da ore, minuti e secondi numeri. Sintassi: make_time( hour , minute _>, second ) Argomenti: hour numero ore minute minuti second secondi (le frazioni includono i millisecondi) Esempi: make_time(13,45,30.5) \u2192 time value 13:45:30.500","title":"make_time"},{"location":"gr_funzioni/data_ora/data_ora_unico/#minute","text":"Estrae la parte minuti da un data/ora o ora, o il numero dei minuti da un intervallo.","title":"minute"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-ora_1","text":"Estrae la parte minuti da una time o una datetime. Sintassi: minute( datetime ) Argomenti: datetime un valore data o data/ora Esempi: minute('2012-07-22T13:24:57') \u2192 24","title":"Variabile ora"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-intervallo_2","text":"Calcola la lunghezza in minuti di un intervallo. Sintassi: minute( interval ) Argomenti: interval valore intervallo da cui restituire il numero di minuti Esempi: minute(tointerval('3 minutes')) \u2192 3 minute(age('2012-07-22T00:20:00','2012-07-22T00:00:00')) \u2192 20 minute(age('2012-01-01','2010-01-01')) \u2192 1051200","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/data_ora_unico/#month","text":"Estrae la parte mese da una data, o il numero di mesi da un intervallo.","title":"month"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-data_1","text":"Estrae la parte mese da una data o datetime. Sintassi: month( date ) Argomenti: date un valore data o data/ora Esempi: month('2012-05-12') \u2192 05","title":"Variabile data"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-intervallo_3","text":"Calcola la lunghezza in mesi di un intervallo. Sintassi: month( interval ) Argomenti: interval valore intervallo da cui restituire il numero di mesi Esempi: month(to_interval('3 months')) \u2192 3 month(age('2012-01-01','2010-01-01')) \u2192 24.3333","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/data_ora_unico/#now","text":"Restituisce la data e l'ora correnti. La funzione \u00e8 statica e restituir\u00e0 risultati coerenti durante la valutazione. Il tempo restituito \u00e8 il momento in cui viene preparata l'espressione. Sintassi: now() Esempi: now() \u2192 2018-05-09 12:18:38`","title":"now"},{"location":"gr_funzioni/data_ora/data_ora_unico/#second","text":"Estrae la parte secondi da un datetime o time, o il numero dei secondi da un intervallo.","title":"second"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-ora_2","text":"Estrae la parte secondi da una time o una datetime. Sintassi: second( datetime ) Argomenti: datetime un valore data o data/ora Esempi: second('2012-07-22T13:24:57') \u2192 57","title":"Variabile ora"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-intervallo_4","text":"Calcola la lunghezza in secondi di un intervallo. Sintassi: second( interval ) Argomenti: interval valore intervallo da cui restituire il numero di secondi Esempi: second(age('2012-07-22T00:20:00','2012-07-22T00:00:00')) \u2192 1200 second(age('2012-01-01','2010-01-01')) \u2192 63072000","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/data_ora_unico/#to_date","text":"Converte una stringa in un oggetto data Sintassi: to_date( string ,[ format ][, language ]) [ ] indica componenti opzionali Argomenti: string stringa rappresentante il valore data format formato usato per convertire la stringa in una data language lingua (minuscolo, due o tre lettere, codice lingua ISO 639) utilizzata per convertire la stringa in una data. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Esempi: to_date('2012-05-04') \u2192 2012-05-04 to_date('June 29, 2019','MMMM d, yyyy') \u2192 2019-06-29, se la locale corrente utilizza il nome 'June' per il sesto mese, altrimenti si verifica un errore to_date('29 juin, 2019','d MMMM, yyyy','fr') \u2192 2019-06-29","title":"to_date"},{"location":"gr_funzioni/data_ora/data_ora_unico/#to_datetime","text":"Converte una stringa in un oggetto datetime. \u00c8 possibile fornire una stringa di formato opzionale per analizzare la stringa; vedi QDate::fromString , QTime::fromString o la documentazione della funzione format_date per ulteriore documentazione sul formato. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Sintassi: to_datetime( string ,[ format ][, language ]) [ ] indica componenti opzionali Argomenti: string stringa rappresentante il valore data format formato usato per convertire la stringa in una data language lingua (minuscolo, due o tre lettere, codice lingua ISO 639) utilizzata per convertire la stringa in una data. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Esempi: to_datetime('2012-05-04 12:50:00') \u2192 2012-05-04T12:50:00 to_datetime('June 29, 2019 @ 12:34','MMMM d, yyyy @ HH:mm') \u2192 2019-06-29T12:34, se la locale corrente utilizza il nome 'June' per il sesto mese, altrimenti si verifica un errore to_datetime('29 juin, 2019 @ 12:34','d MMMM, yyyy @ HH:mm','fr') \u2192 2019-06-29T12:3","title":"to_datetime"},{"location":"gr_funzioni/data_ora/data_ora_unico/#to_interval","text":"Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data. Sintassi: to_interval( string ) Argomenti: string una stringa rappresentante un intervallo. I formati ammessi includono {n} giorni {n} ore {n} mesi. Esempi: to_interval('1 day 2 hours') \u2192 interval: 1.08333 days to_interval( '0.5 hours' ) \u2192 intervallo: 30 minuti to_datetime('2012-05-05 12:00:00') - to_interval('1 day 2 hours') \u2192 2012-05-04T10:00:00","title":"to_interval"},{"location":"gr_funzioni/data_ora/data_ora_unico/#to_time","text":"Converti una stringa in un oggetto time. Sintassi: to_time( string ,[ format ][, language ]) Argomenti: string stringa rappresentante il valore ora format formato usato per convertire la stringa in orario language lingua (minuscolo, due o tre lettere, codice lingua ISO 639) utilizzata per convertire la stringa in un orario. Esempi: to_time('12:30:01') \u2192 12:30:01 to_time('12:34','HH:mm') \u2192 12:34:00 to_time('12:34','HH:mm','fr') \u2192 12:34:00","title":"to_time"},{"location":"gr_funzioni/data_ora/data_ora_unico/#week","text":"Estrae il numero della settimana da una data, o il numero di settimane da un intervallo.","title":"week"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-data_2","text":"Estrae il numero della settimana da una data o un datetime. Sintassi: week( date ) Argomenti: date un valore data o data/ora Esempi: week('2018-05-09') \u2192 19","title":"Variabile data"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-intervallo_5","text":"Calcola la lunghezza in settimane di un intervallo. Sintassi: week( interval ) Argomenti: interval valore intervallo da cui restituire il numero di mesi Esempi: week(tointerval('3 weeks')) \u2192 3 week(age('2012-01-01','2010-01-01')) \u2192 104.285","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/data_ora_unico/#year","text":"Estrae la parte anno da una data, o il numero di anni da un intervallo.","title":"year"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-data_3","text":"Estrae la parte anno da una data o datetime. Sintassi: year( date ) Argomenti: date un valore data o data/ora Esempi: week('2018-05-09') \u2192 19","title":"Variabile data"},{"location":"gr_funzioni/data_ora/data_ora_unico/#variabile-intervallo_6","text":"Calcola la lunghezza in anni di un intervallo. Sintassi: year( interval ) Argomenti: interval valore intervallo da cui restituire il numero di anni Esempi: year(to_interval('3 years')) \u2192 3 year(age('2012-01-01','2010-01-01')) \u2192 1.9986","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/datetime_from_epoch/","text":"datetime_from_epoch \u21b5 Restituisce un datetime il cui data e ora sono il numero di millisecondi, msec, che sono passati dal 1970-01-01T00: 00: 00.000, Coordinated Universal Time (Qt.UTC) e convertiti in Qt.LocalTime. Sintassi \u21b5 datetime_from_epoch( int ) [ ] indica componenti opzionali Argomenti \u21b5 int numero (millisecondi) Esempi \u21b5 * datetime_from_epoch(1483225200000) \u2192 2017-01-01T00:00:00 Feature introdotta a partire da QGIS 3.12","title":"datetime_from_epoch"},{"location":"gr_funzioni/data_ora/datetime_from_epoch/#datetime_from_epoch","text":"Restituisce un datetime il cui data e ora sono il numero di millisecondi, msec, che sono passati dal 1970-01-01T00: 00: 00.000, Coordinated Universal Time (Qt.UTC) e convertiti in Qt.LocalTime.","title":"datetime_from_epoch"},{"location":"gr_funzioni/data_ora/datetime_from_epoch/#sintassi","text":"datetime_from_epoch( int ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/data_ora/datetime_from_epoch/#argomenti","text":"int numero (millisecondi)","title":"Argomenti"},{"location":"gr_funzioni/data_ora/datetime_from_epoch/#esempi","text":"* datetime_from_epoch(1483225200000) \u2192 2017-01-01T00:00:00 Feature introdotta a partire da QGIS 3.12","title":"Esempi"},{"location":"gr_funzioni/data_ora/day/","text":"day \u21b5 Estrae il giorno da una data, o il numero dei giorni da un intervallo. Variabile data \u21b5 Estrae il giorno da una data o un data/ora. Sintassi \u21b5 day( date ) Argomenti \u21b5 date un valore data o data/ora Variabile intervallo \u21b5 Calcola la lunghezza in giorni di un intervallo. Sintassi \u21b5 day( interval ) Argomenti \u21b5 interval valore intervallo da cui restituire il numero di giorni Esempi \u21b5 * day(tointerval('3 days')) \u2192 3 * day(age('2012-01-01','2010-01-01')) \u2192 730","title":"day"},{"location":"gr_funzioni/data_ora/day/#day","text":"Estrae il giorno da una data, o il numero dei giorni da un intervallo.","title":"day"},{"location":"gr_funzioni/data_ora/day/#variabile-data","text":"Estrae il giorno da una data o un data/ora.","title":"Variabile data"},{"location":"gr_funzioni/data_ora/day/#sintassi","text":"day( date )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/day/#argomenti","text":"date un valore data o data/ora","title":"Argomenti"},{"location":"gr_funzioni/data_ora/day/#variabile-intervallo","text":"Calcola la lunghezza in giorni di un intervallo.","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/day/#sintassi_1","text":"day( interval )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/day/#argomenti_1","text":"interval valore intervallo da cui restituire il numero di giorni","title":"Argomenti"},{"location":"gr_funzioni/data_ora/day/#esempi","text":"* day(tointerval('3 days')) \u2192 3 * day(age('2012-01-01','2010-01-01')) \u2192 730","title":"Esempi"},{"location":"gr_funzioni/data_ora/day_of_week/","text":"day_of_week \u21b5 Restituisce il giorno della settimana per una data o un datetime. L'intervallo del valore restituito v\u00e0 da 0 a 6, dove 0 corrisponde a Domenica e 6 a Sabato. Sintassi \u21b5 day_of_week( date ) Argomenti \u21b5 date valore data o datetime Esempi \u21b5 * day_of_week(todate('2018-05-09')) \u2192 3 (Mercoled\u00ec) Osservazioni \u21b5 0 \u2192 Domenica 1 \u2192 Luned\u00ec 2 \u2192 Marted\u00ec 3 \u2192 Mercoled\u00ec 4 \u2192 Gioved\u00ec 5 \u2192 Venerd\u00ec 6 \u2192 Sabato","title":"day_of_week"},{"location":"gr_funzioni/data_ora/day_of_week/#day_of_week","text":"Restituisce il giorno della settimana per una data o un datetime. L'intervallo del valore restituito v\u00e0 da 0 a 6, dove 0 corrisponde a Domenica e 6 a Sabato.","title":"day_of_week"},{"location":"gr_funzioni/data_ora/day_of_week/#sintassi","text":"day_of_week( date )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/day_of_week/#argomenti","text":"date valore data o datetime","title":"Argomenti"},{"location":"gr_funzioni/data_ora/day_of_week/#esempi","text":"* day_of_week(todate('2018-05-09')) \u2192 3 (Mercoled\u00ec)","title":"Esempi"},{"location":"gr_funzioni/data_ora/day_of_week/#osservazioni","text":"0 \u2192 Domenica 1 \u2192 Luned\u00ec 2 \u2192 Marted\u00ec 3 \u2192 Mercoled\u00ec 4 \u2192 Gioved\u00ec 5 \u2192 Venerd\u00ec 6 \u2192 Sabato","title":"Osservazioni"},{"location":"gr_funzioni/data_ora/epoch/","text":"epoch \u21b5 Restituisce l'intervallo in millisecondi fra l' epoca unix e la data inserita. Sintassi \u21b5 epoch( date ) Argomenti \u21b5 date un valore data o data/ora Esempi \u21b5 * epoch(to_date('2017-01-01')) \u2192 1483203600000","title":"epoch"},{"location":"gr_funzioni/data_ora/epoch/#epoch","text":"Restituisce l'intervallo in millisecondi fra l' epoca unix e la data inserita.","title":"epoch"},{"location":"gr_funzioni/data_ora/epoch/#sintassi","text":"epoch( date )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/epoch/#argomenti","text":"date un valore data o data/ora","title":"Argomenti"},{"location":"gr_funzioni/data_ora/epoch/#esempi","text":"* epoch(to_date('2017-01-01')) \u2192 1483203600000","title":"Esempi"},{"location":"gr_funzioni/data_ora/format_date/","text":"format_date \u21b5 Formatta un tipo di data o stringa in un formato stringa personalizzato. Usa stringhe nel formato data/ora Qt. Vedi QDateTime::toString . Sintassi \u21b5 format_date( datetime, format[,language] ) Argomenti \u21b5 datetime valora data, ora, o data/ora format Modello di stringhe usato per formattare la stringa. Espressione In uscita d il giorno in numero senza lo zero iniziale (da 1 a 31) dd il giorno in numero con lo zero iniziale (da 01 a 31) ddd il nome locale del giorno abbreviato (es. da 'Mon' a 'Sun') dddd il nome locale del giorno per esteso (es. da 'Monday' a 'Sunday') M il mese in numero senza lo zero iniziale (1-12) MM il mese in numero con lo zero iniziale (01-12) MMM il nome locale del mese abbreviato (es. da 'Jan' a 'Dec') MMMM il nome locale del mese per esteso (es. da 'January' a 'December') yy l'anno come un numero a due cifre (00-99) yyyy l'anno come un numero a quattro cifre Queste espressioni possono essere usate per la parte time della stringa da formattare: Espressione In uscita h l'ora senza lo zero iniziale (da 0 a 23 o da 1 a 12 se visualizzi AM/PM) hh l'ora con lo zero iniziale (da 00 a 23 o da 01 a 12 se visualizzi AM/PM) H l'ora senza lo zero iniziale (da 0 a 23, anche se visualizzi AM/PM) HH l'ora con lo zero iniziale (da 00 a 23, anche se visualizzi AM/PM) m il minuto senza lo zero iniziale (da 0 a 59) mm il minuto con lo zero iniziale (da 00 a 59) s il secondo senza lo zero iniziale (da 0 a 59) ss il secondo con lo zero iniziale (da 00 a 59) z i millisecondi senza gli zeri iniziali (da 0 a 999) zzz i millisecondi con gli zeri iniziali (da 000 a 999) AP o A interpretato come un orario nel formato AM/PM. AP deve essere \"AM\" oppure \"PM\". ap o a interpretato come un orario nel formato AM/PM. ap deve essere \"am\" oppure \"pm\". language linguaggio (minuscolo, due o tre lettere, codice ISO 639) utilizzato per formattare la data in una stringa personalizzata ( >= QGIS 3.12 ) Esempi \u21b5 * format_date('2012-05-15','dd.MM.yyyy') \u2192 '15.05.2012' * format_date('2012-06-15','d MMMM yyyy','fr') \u2192 '15 juin 2012' * format_date('2012-06-15','d MMMM yyyy','it') \u2192 '15 giugno 2012'","title":"format_date"},{"location":"gr_funzioni/data_ora/format_date/#format_date","text":"Formatta un tipo di data o stringa in un formato stringa personalizzato. Usa stringhe nel formato data/ora Qt. Vedi QDateTime::toString .","title":"format_date"},{"location":"gr_funzioni/data_ora/format_date/#sintassi","text":"format_date( datetime, format[,language] )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/format_date/#argomenti","text":"datetime valora data, ora, o data/ora format Modello di stringhe usato per formattare la stringa. Espressione In uscita d il giorno in numero senza lo zero iniziale (da 1 a 31) dd il giorno in numero con lo zero iniziale (da 01 a 31) ddd il nome locale del giorno abbreviato (es. da 'Mon' a 'Sun') dddd il nome locale del giorno per esteso (es. da 'Monday' a 'Sunday') M il mese in numero senza lo zero iniziale (1-12) MM il mese in numero con lo zero iniziale (01-12) MMM il nome locale del mese abbreviato (es. da 'Jan' a 'Dec') MMMM il nome locale del mese per esteso (es. da 'January' a 'December') yy l'anno come un numero a due cifre (00-99) yyyy l'anno come un numero a quattro cifre Queste espressioni possono essere usate per la parte time della stringa da formattare: Espressione In uscita h l'ora senza lo zero iniziale (da 0 a 23 o da 1 a 12 se visualizzi AM/PM) hh l'ora con lo zero iniziale (da 00 a 23 o da 01 a 12 se visualizzi AM/PM) H l'ora senza lo zero iniziale (da 0 a 23, anche se visualizzi AM/PM) HH l'ora con lo zero iniziale (da 00 a 23, anche se visualizzi AM/PM) m il minuto senza lo zero iniziale (da 0 a 59) mm il minuto con lo zero iniziale (da 00 a 59) s il secondo senza lo zero iniziale (da 0 a 59) ss il secondo con lo zero iniziale (da 00 a 59) z i millisecondi senza gli zeri iniziali (da 0 a 999) zzz i millisecondi con gli zeri iniziali (da 000 a 999) AP o A interpretato come un orario nel formato AM/PM. AP deve essere \"AM\" oppure \"PM\". ap o a interpretato come un orario nel formato AM/PM. ap deve essere \"am\" oppure \"pm\". language linguaggio (minuscolo, due o tre lettere, codice ISO 639) utilizzato per formattare la data in una stringa personalizzata ( >= QGIS 3.12 )","title":"Argomenti"},{"location":"gr_funzioni/data_ora/format_date/#esempi","text":"* format_date('2012-05-15','dd.MM.yyyy') \u2192 '15.05.2012' * format_date('2012-06-15','d MMMM yyyy','fr') \u2192 '15 juin 2012' * format_date('2012-06-15','d MMMM yyyy','it') \u2192 '15 giugno 2012'","title":"Esempi"},{"location":"gr_funzioni/data_ora/hour/","text":"hour \u21b5 Estrae la parte ore da una data/ora o orario, o il numero delle ore da un intervallo. Variabile ora \u21b5 Estrae la parte ore da un orario o data/ora. Sintassi \u21b5 hour( datetime ) Argomenti \u21b5 datetime un valore data o data/ora Esempi \u21b5 * hour(to_datetime('2018-05-09T11:58:57')) \u2192 11 Variabile intervallo \u21b5 Calcola la lunghezza in ore di un intervallo. Sintassi \u21b5 hour( interval ) Argomenti \u21b5 interval valore intervallo da cui restituire il numero di ore Esempi \u21b5 hour(tointerval('3 hours')) \u2192 3 hour(age('2012-07-22T13:00:00','2012-07-22T10:00:00')) \u2192 3 hour(age('2012-01-01','2010-01-01')) \u2192 17520","title":"hour"},{"location":"gr_funzioni/data_ora/hour/#hour","text":"Estrae la parte ore da una data/ora o orario, o il numero delle ore da un intervallo.","title":"hour"},{"location":"gr_funzioni/data_ora/hour/#variabile-ora","text":"Estrae la parte ore da un orario o data/ora.","title":"Variabile ora"},{"location":"gr_funzioni/data_ora/hour/#sintassi","text":"hour( datetime )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/hour/#argomenti","text":"datetime un valore data o data/ora","title":"Argomenti"},{"location":"gr_funzioni/data_ora/hour/#esempi","text":"* hour(to_datetime('2018-05-09T11:58:57')) \u2192 11","title":"Esempi"},{"location":"gr_funzioni/data_ora/hour/#variabile-intervallo","text":"Calcola la lunghezza in ore di un intervallo.","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/hour/#sintassi_1","text":"hour( interval )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/hour/#argomenti_1","text":"interval valore intervallo da cui restituire il numero di ore","title":"Argomenti"},{"location":"gr_funzioni/data_ora/hour/#esempi_1","text":"hour(tointerval('3 hours')) \u2192 3 hour(age('2012-07-22T13:00:00','2012-07-22T10:00:00')) \u2192 3 hour(age('2012-01-01','2010-01-01')) \u2192 17520","title":"Esempi"},{"location":"gr_funzioni/data_ora/make_date/","text":"make_date \u21b5 Crea un valore di data dai numeri di anno, mese e giorno. Sintassi \u21b5 make_date( year,month,day ) Argomenti \u21b5 year Numero dell'anno. Gli anni da 1 a 99 vengono interpretati cos\u00ec come sono. L'anno 0 non \u00e8 valido. month Numero del mese, dove 1 = gennaio day Day Numero del giorno, che inizia con 1 per il primo giorno del mese. Esempi \u21b5 make_date(2020,5,4) \u2192 date value 2020-05-04 Osservazioni \u21b5 --","title":"make_date"},{"location":"gr_funzioni/data_ora/make_date/#make_date","text":"Crea un valore di data dai numeri di anno, mese e giorno.","title":"make_date"},{"location":"gr_funzioni/data_ora/make_date/#sintassi","text":"make_date( year,month,day )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/make_date/#argomenti","text":"year Numero dell'anno. Gli anni da 1 a 99 vengono interpretati cos\u00ec come sono. L'anno 0 non \u00e8 valido. month Numero del mese, dove 1 = gennaio day Day Numero del giorno, che inizia con 1 per il primo giorno del mese.","title":"Argomenti"},{"location":"gr_funzioni/data_ora/make_date/#esempi","text":"make_date(2020,5,4) \u2192 date value 2020-05-04","title":"Esempi"},{"location":"gr_funzioni/data_ora/make_date/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/data_ora/make_datetime/","text":"make_datetime \u21b5 Crea un valore datetime da anno, mese, giorno, ora, minuti e secondi numeri. Sintassi \u21b5 make_datetime( year,month,day,hour,minute,second ) Argomenti \u21b5 year Numero dell'anno. Gli anni da 1 a 99 vengono interpretati cos\u00ec come sono. L'anno 0 non \u00e8 valido. month Numero del mese, dove 1 = gennaio day Day Numero del giorno, che inizia con 1 per il primo giorno del mese; hour numero ore; minute minuti; second secondi (i valori frazionari includono millisecondi). Esempi \u21b5 make_datetime(2020,5,4,13,45,30.5) \u2192 datetime value 2020-05-04 13:45:30.500 Osservazioni \u21b5 --","title":"make_datetime"},{"location":"gr_funzioni/data_ora/make_datetime/#make_datetime","text":"Crea un valore datetime da anno, mese, giorno, ora, minuti e secondi numeri.","title":"make_datetime"},{"location":"gr_funzioni/data_ora/make_datetime/#sintassi","text":"make_datetime( year,month,day,hour,minute,second )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/make_datetime/#argomenti","text":"year Numero dell'anno. Gli anni da 1 a 99 vengono interpretati cos\u00ec come sono. L'anno 0 non \u00e8 valido. month Numero del mese, dove 1 = gennaio day Day Numero del giorno, che inizia con 1 per il primo giorno del mese; hour numero ore; minute minuti; second secondi (i valori frazionari includono millisecondi).","title":"Argomenti"},{"location":"gr_funzioni/data_ora/make_datetime/#esempi","text":"make_datetime(2020,5,4,13,45,30.5) \u2192 datetime value 2020-05-04 13:45:30.500","title":"Esempi"},{"location":"gr_funzioni/data_ora/make_datetime/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/data_ora/make_interval/","text":"make_interval \u21b5 Crea un valore di intervallo dai valori di anno, mese, settimane, giorni, ore, minuti e secondi. Sintassi \u21b5 make_interval( years=0 ,weeks=0 ,hours=0 [,seconds=0]) [ ] indica componenti opzionali Argomenti \u21b5 year Numero di anni (presuppone una durata di 365,25 giorni). month Numero di mesi (presuppone una durata del mese di 30 giorni) weeks numero settimane; day Numero di giorno; hour numero ore; minute minuti; second secondi. Esempi \u21b5 make_interval(2020,5,4,13,45,30.5) \u2192 datetime value 2020-05-04 13:45:30.500 Osservazioni \u21b5 --","title":"make_interval"},{"location":"gr_funzioni/data_ora/make_interval/#make_interval","text":"Crea un valore di intervallo dai valori di anno, mese, settimane, giorni, ore, minuti e secondi.","title":"make_interval"},{"location":"gr_funzioni/data_ora/make_interval/#sintassi","text":"make_interval( years=0 ,weeks=0 ,hours=0 [,seconds=0]) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/data_ora/make_interval/#argomenti","text":"year Numero di anni (presuppone una durata di 365,25 giorni). month Numero di mesi (presuppone una durata del mese di 30 giorni) weeks numero settimane; day Numero di giorno; hour numero ore; minute minuti; second secondi.","title":"Argomenti"},{"location":"gr_funzioni/data_ora/make_interval/#esempi","text":"make_interval(2020,5,4,13,45,30.5) \u2192 datetime value 2020-05-04 13:45:30.500","title":"Esempi"},{"location":"gr_funzioni/data_ora/make_interval/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/data_ora/make_time/","text":"make_time \u21b5 Crea un valore temporale da ore, minuti e secondi numeri. Sintassi \u21b5 make_time( hour,minute,second ) Argomenti \u21b5 hour numero ore minute minuti second secondi (le frazioni includono i millisecondi) Esempi \u21b5 make_time(13,45,30.5) \u2192 time value 13:45:30.500 Osservazioni \u21b5 --","title":"make_time"},{"location":"gr_funzioni/data_ora/make_time/#make_time","text":"Crea un valore temporale da ore, minuti e secondi numeri.","title":"make_time"},{"location":"gr_funzioni/data_ora/make_time/#sintassi","text":"make_time( hour,minute,second )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/make_time/#argomenti","text":"hour numero ore minute minuti second secondi (le frazioni includono i millisecondi)","title":"Argomenti"},{"location":"gr_funzioni/data_ora/make_time/#esempi","text":"make_time(13,45,30.5) \u2192 time value 13:45:30.500","title":"Esempi"},{"location":"gr_funzioni/data_ora/make_time/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/data_ora/minute/","text":"minute \u21b5 Estrae la parte minuti da un data/ora o ora, o il numero dei minuti da un intervallo. Variabile ora \u21b5 Estrae la parte minuti da una time o una datetime. Sintassi \u21b5 minute( datetime ) Argomenti \u21b5 datetime un valore data o data/ora Esempi \u21b5 * minute('2012-07-22T13:24:57') \u2192 24 Variabile intervallo \u21b5 Calcola la lunghezza in minuti di un intervallo. Sintassi \u21b5 minute( interval ) Argomenti \u21b5 interval valore intervallo da cui restituire il numero di minuti Esempi \u21b5 minute(tointerval('3 minutes')) \u2192 3 minute(age('2012-07-22T00:20:00','2012-07-22T00:00:00')) \u2192 20 minute(age('2012-01-01','2010-01-01')) \u2192 1051200","title":"minute"},{"location":"gr_funzioni/data_ora/minute/#minute","text":"Estrae la parte minuti da un data/ora o ora, o il numero dei minuti da un intervallo.","title":"minute"},{"location":"gr_funzioni/data_ora/minute/#variabile-ora","text":"Estrae la parte minuti da una time o una datetime.","title":"Variabile ora"},{"location":"gr_funzioni/data_ora/minute/#sintassi","text":"minute( datetime )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/minute/#argomenti","text":"datetime un valore data o data/ora","title":"Argomenti"},{"location":"gr_funzioni/data_ora/minute/#esempi","text":"* minute('2012-07-22T13:24:57') \u2192 24","title":"Esempi"},{"location":"gr_funzioni/data_ora/minute/#variabile-intervallo","text":"Calcola la lunghezza in minuti di un intervallo.","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/minute/#sintassi_1","text":"minute( interval )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/minute/#argomenti_1","text":"interval valore intervallo da cui restituire il numero di minuti","title":"Argomenti"},{"location":"gr_funzioni/data_ora/minute/#esempi_1","text":"minute(tointerval('3 minutes')) \u2192 3 minute(age('2012-07-22T00:20:00','2012-07-22T00:00:00')) \u2192 20 minute(age('2012-01-01','2010-01-01')) \u2192 1051200","title":"Esempi"},{"location":"gr_funzioni/data_ora/month/","text":"month \u21b5 Estrae la parte mese da una data, o il numero di mesi da un intervallo. Variabile data \u21b5 Estrae la parte mese da una data o datetime. Sintassi \u21b5 month( date ) Argomenti \u21b5 date un valore data o data/ora Esempi \u21b5 * month('2012-05-12') \u2192 05 Variabile intervallo \u21b5 Calcola la lunghezza in mesi di un intervallo. Sintassi \u21b5 month( interval ) Argomenti \u21b5 interval valore intervallo da cui restituire il numero di mesi Esempi \u21b5 month(to_interval('3 months')) \u2192 3 month(age('2012-01-01','2010-01-01')) \u2192 24.3333","title":"month"},{"location":"gr_funzioni/data_ora/month/#month","text":"Estrae la parte mese da una data, o il numero di mesi da un intervallo.","title":"month"},{"location":"gr_funzioni/data_ora/month/#variabile-data","text":"Estrae la parte mese da una data o datetime.","title":"Variabile data"},{"location":"gr_funzioni/data_ora/month/#sintassi","text":"month( date )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/month/#argomenti","text":"date un valore data o data/ora","title":"Argomenti"},{"location":"gr_funzioni/data_ora/month/#esempi","text":"* month('2012-05-12') \u2192 05","title":"Esempi"},{"location":"gr_funzioni/data_ora/month/#variabile-intervallo","text":"Calcola la lunghezza in mesi di un intervallo.","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/month/#sintassi_1","text":"month( interval )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/month/#argomenti_1","text":"interval valore intervallo da cui restituire il numero di mesi","title":"Argomenti"},{"location":"gr_funzioni/data_ora/month/#esempi_1","text":"month(to_interval('3 months')) \u2192 3 month(age('2012-01-01','2010-01-01')) \u2192 24.3333","title":"Esempi"},{"location":"gr_funzioni/data_ora/now/","text":"now \u21b5 Restituisce la data e l'ora correnti. La funzione \u00e8 statica e restituir\u00e0 risultati coerenti durante la valutazione. Il tempo restituito \u00e8 il momento in cui viene preparata l'espressione. Sintassi \u21b5 now() Esempi \u21b5 now() \u2192 2018-05-09 12:18:38","title":"now"},{"location":"gr_funzioni/data_ora/now/#now","text":"Restituisce la data e l'ora correnti. La funzione \u00e8 statica e restituir\u00e0 risultati coerenti durante la valutazione. Il tempo restituito \u00e8 il momento in cui viene preparata l'espressione.","title":"now"},{"location":"gr_funzioni/data_ora/now/#sintassi","text":"now()","title":"Sintassi"},{"location":"gr_funzioni/data_ora/now/#esempi","text":"now() \u2192 2018-05-09 12:18:38","title":"Esempi"},{"location":"gr_funzioni/data_ora/second/","text":"second \u21b5 Estrae la parte secondi da un datetime o time, o il numero dei secondi da un intervallo. Variabile ora \u21b5 Estrae la parte secondi da una time o una datetime. Sintassi \u21b5 second( datetime ) Argomenti \u21b5 datetime un valore data o data/ora Esempi \u21b5 * second('2012-07-22T13:24:57') \u2192 57 Variabile ora \u21b5 Calcola la lunghezza in secondi di un intervallo. Sintassi \u21b5 second( interval ) Argomenti \u21b5 interval valore intervallo da cui restituire il numero di secondi Esempi \u21b5 second(age('2012-07-22T00:20:00','2012-07-22T00:00:00')) \u2192 1200 second(age('2012-01-01','2010-01-01')) \u2192 63072000","title":"second"},{"location":"gr_funzioni/data_ora/second/#second","text":"Estrae la parte secondi da un datetime o time, o il numero dei secondi da un intervallo.","title":"second"},{"location":"gr_funzioni/data_ora/second/#variabile-ora","text":"Estrae la parte secondi da una time o una datetime.","title":"Variabile ora"},{"location":"gr_funzioni/data_ora/second/#sintassi","text":"second( datetime )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/second/#argomenti","text":"datetime un valore data o data/ora","title":"Argomenti"},{"location":"gr_funzioni/data_ora/second/#esempi","text":"* second('2012-07-22T13:24:57') \u2192 57","title":"Esempi"},{"location":"gr_funzioni/data_ora/second/#variabile-ora_1","text":"Calcola la lunghezza in secondi di un intervallo.","title":"Variabile ora"},{"location":"gr_funzioni/data_ora/second/#sintassi_1","text":"second( interval )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/second/#argomenti_1","text":"interval valore intervallo da cui restituire il numero di secondi","title":"Argomenti"},{"location":"gr_funzioni/data_ora/second/#esempi_1","text":"second(age('2012-07-22T00:20:00','2012-07-22T00:00:00')) \u2192 1200 second(age('2012-01-01','2010-01-01')) \u2192 63072000","title":"Esempi"},{"location":"gr_funzioni/data_ora/to_date/","text":"to_date \u21b5 Converte una stringa in un oggetto data Sintassi \u21b5 to_date( string ) Argomenti \u21b5 string stringa rappresentante il valore data Esempi \u21b5 to_date('2018-05-04') \u2192 2018-05-04","title":"to_date"},{"location":"gr_funzioni/data_ora/to_date/#to_date","text":"Converte una stringa in un oggetto data","title":"to_date"},{"location":"gr_funzioni/data_ora/to_date/#sintassi","text":"to_date( string )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/to_date/#argomenti","text":"string stringa rappresentante il valore data","title":"Argomenti"},{"location":"gr_funzioni/data_ora/to_date/#esempi","text":"to_date('2018-05-04') \u2192 2018-05-04","title":"Esempi"},{"location":"gr_funzioni/data_ora/to_datetime/","text":"to_datetime \u21b5 Converte una stringa in un oggetto datetime. Sintassi \u21b5 to_datetime( string ) Argomenti \u21b5 string stringa rappresentante il valore datetime Esempi \u21b5 to_datetime('2018-05-04 12:50:00') \u2192 2018-05-04T12:50:00","title":"to_datetime"},{"location":"gr_funzioni/data_ora/to_datetime/#to_datetime","text":"Converte una stringa in un oggetto datetime.","title":"to_datetime"},{"location":"gr_funzioni/data_ora/to_datetime/#sintassi","text":"to_datetime( string )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/to_datetime/#argomenti","text":"string stringa rappresentante il valore datetime","title":"Argomenti"},{"location":"gr_funzioni/data_ora/to_datetime/#esempi","text":"to_datetime('2018-05-04 12:50:00') \u2192 2018-05-04T12:50:00","title":"Esempi"},{"location":"gr_funzioni/data_ora/to_interval/","text":"to_interval \u21b5 Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data. Sintassi \u21b5 to_interval( string ) Argomenti \u21b5 string una stringa rappresentante un intervallo. I formati ammessi includono {n} giorni {n} ore {n} mesi. Esempi \u21b5 to_datetime('2018-05-05 12:00:00') - to_interval('1 day 2 hours') \u2192 2018-05-04T10:00:00","title":"to_interval"},{"location":"gr_funzioni/data_ora/to_interval/#to_interval","text":"Converte una stringa in un tipo intervallo. Pu\u00f2 essere usata per estrarre giorni, ore, mese, etc. da una data.","title":"to_interval"},{"location":"gr_funzioni/data_ora/to_interval/#sintassi","text":"to_interval( string )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/to_interval/#argomenti","text":"string una stringa rappresentante un intervallo. I formati ammessi includono {n} giorni {n} ore {n} mesi.","title":"Argomenti"},{"location":"gr_funzioni/data_ora/to_interval/#esempi","text":"to_datetime('2018-05-05 12:00:00') - to_interval('1 day 2 hours') \u2192 2018-05-04T10:00:00","title":"Esempi"},{"location":"gr_funzioni/data_ora/to_time/","text":"to_time \u21b5 Converti una stringa in un oggetto time. Sintassi \u21b5 to_time( string ) Argomenti \u21b5 string stringa rappresentante un valore time Esempi \u21b5 to_time('12:30:01') \u2192 12:30:01","title":"to_time"},{"location":"gr_funzioni/data_ora/to_time/#to_time","text":"Converti una stringa in un oggetto time.","title":"to_time"},{"location":"gr_funzioni/data_ora/to_time/#sintassi","text":"to_time( string )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/to_time/#argomenti","text":"string stringa rappresentante un valore time","title":"Argomenti"},{"location":"gr_funzioni/data_ora/to_time/#esempi","text":"to_time('12:30:01') \u2192 12:30:01","title":"Esempi"},{"location":"gr_funzioni/data_ora/week/","text":"week \u21b5 Estrae il numero della settimana da una data, o il numero di settimane da un intervallo. Variabile data \u21b5 Estrae il numero della settimana da una data o un datetime. Sintassi \u21b5 week( date ) Argomenti \u21b5 date un valore data o data/ora Esempi \u21b5 week('2018-05-09') \u2192 19 Variabile intervallo \u21b5 Calcola la lunghezza in settimane di un intervallo. Sintassi \u21b5 week( interval ) Argomenti \u21b5 interval valore intervallo da cui restituire il numero di mesi Esempi \u21b5 week(tointerval('3 weeks')) \u2192 3 week(age('2012-01-01','2010-01-01')) \u2192 104.285","title":"week"},{"location":"gr_funzioni/data_ora/week/#week","text":"Estrae il numero della settimana da una data, o il numero di settimane da un intervallo.","title":"week"},{"location":"gr_funzioni/data_ora/week/#variabile-data","text":"Estrae il numero della settimana da una data o un datetime.","title":"Variabile data"},{"location":"gr_funzioni/data_ora/week/#sintassi","text":"week( date )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/week/#argomenti","text":"date un valore data o data/ora","title":"Argomenti"},{"location":"gr_funzioni/data_ora/week/#esempi","text":"week('2018-05-09') \u2192 19","title":"Esempi"},{"location":"gr_funzioni/data_ora/week/#variabile-intervallo","text":"Calcola la lunghezza in settimane di un intervallo.","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/week/#sintassi_1","text":"week( interval )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/week/#argomenti_1","text":"interval valore intervallo da cui restituire il numero di mesi","title":"Argomenti"},{"location":"gr_funzioni/data_ora/week/#esempi_1","text":"week(tointerval('3 weeks')) \u2192 3 week(age('2012-01-01','2010-01-01')) \u2192 104.285","title":"Esempi"},{"location":"gr_funzioni/data_ora/year/","text":"year \u21b5 Estrae la parte anno da una data, o il numero di anni da un intervallo. Variabile data \u21b5 Estrae la parte anno da una data o datetime. Sintassi \u21b5 year( date ) Argomenti \u21b5 date un valore data o data/ora Esempi \u21b5 week('2018-05-09') \u2192 19 Variabile intervallo \u21b5 Calcola la lunghezza in anni di un intervallo. Sintassi \u21b5 year( interval ) Argomenti \u21b5 interval valore intervallo da cui restituire il numero di anni Esempi \u21b5 year(to_interval('3 years')) \u2192 3 year(age('2012-01-01','2010-01-01')) \u2192 1.9986","title":"year"},{"location":"gr_funzioni/data_ora/year/#year","text":"Estrae la parte anno da una data, o il numero di anni da un intervallo.","title":"year"},{"location":"gr_funzioni/data_ora/year/#variabile-data","text":"Estrae la parte anno da una data o datetime.","title":"Variabile data"},{"location":"gr_funzioni/data_ora/year/#sintassi","text":"year( date )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/year/#argomenti","text":"date un valore data o data/ora","title":"Argomenti"},{"location":"gr_funzioni/data_ora/year/#esempi","text":"week('2018-05-09') \u2192 19","title":"Esempi"},{"location":"gr_funzioni/data_ora/year/#variabile-intervallo","text":"Calcola la lunghezza in anni di un intervallo.","title":"Variabile intervallo"},{"location":"gr_funzioni/data_ora/year/#sintassi_1","text":"year( interval )","title":"Sintassi"},{"location":"gr_funzioni/data_ora/year/#argomenti_1","text":"interval valore intervallo da cui restituire il numero di anni","title":"Argomenti"},{"location":"gr_funzioni/data_ora/year/#esempi_1","text":"year(to_interval('3 years')) \u2192 3 year(age('2012-01-01','2010-01-01')) \u2192 1.9986","title":"Esempi"},{"location":"gr_funzioni/espressione_utente/espressione_utente_unico/","text":"Gruppo Espressione utente \u21b5 Abstract Questo gruppo contiene espressioni personalizzate memorizzate nel profilo utente. Espressioni Utente \u21b5 scarica file con le espressioni create da Pigreco Per installarle nel proprio profilo cliccare su (1) e selezionare il file espressioni_pigreco.json","title":"Espressioni utente"},{"location":"gr_funzioni/espressione_utente/espressione_utente_unico/#gruppo-espressione-utente","text":"Abstract Questo gruppo contiene espressioni personalizzate memorizzate nel profilo utente.","title":"Gruppo Espressione utente"},{"location":"gr_funzioni/espressione_utente/espressione_utente_unico/#espressioni-utente","text":"scarica file con le espressioni create da Pigreco Per installarle nel proprio profilo cliccare su (1) e selezionare il file espressioni_pigreco.json","title":"Espressioni Utente"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/","text":"Gruppo File e Percorsi \u21b5 Abstract Contiene funzioni che manipolano nomi di file e di percorsi. base_file_name \u21b5 Restituisce il nome del file senza la cartella o il suffisso del file. Sintassi: base_file_name( path ) Argomenti: path Percorso file Esempi: base_file_name('/home/qgis/data/country_boundaries.shp') \u2192 'country_boundaries' file_exists \u21b5 Restituisce vero se un percorso del file esiste. Sintassi: file_exists( path ) Argomenti: path Percorso file Esempi: file_exists('/home/qgis/data/country_boundaries.shp') \u2192 vero file_name \u21b5 Restituisce il nome di un file (compresa l'estensione del file), esclusa la directory. Sintassi: file_name( path ) Argomenti: path Percorso file Esempi: file_name('/home/qgis/data/country_boundaries.shp') \u2192 'country_boundaries.shp' file_path \u21b5 Restituisce il componente della cartella del un percorso di un file. Questo non include il nome del file. Sintassi: file_path( path ) Argomenti: path Percorso file Esempi: file_path('/home/qgis/data/country_boundaries.shp') \u2192 '/home/qgis/data' file_size \u21b5 Restituisce la dimensione (in bites) di un file. Sintassi: file_size( path ) Argomenti: path Percorso file Esempi: file_size('/home/qgis/data/country_boundaries.geojson') \u2192 5674 file_suffix \u21b5 Restituisce il suffisso (estensione) dal percorso di un file. Sintassi: file_suffix( path ) Argomenti: path Percorso file Esempi: file_suffix('/home/qgis/data/country_boundaries.shp') \u2192 'shp' is_directory \u21b5 Restituisce vero se un percorso corrisponde ad una directory. Sintassi: is_directory( path ) Argomenti: path Percorso file Esempi: is_directory('/home/qgis/data/country_boundaries.shp') \u2192 falso is_directory('/home/qgis/data/') \u2192 vero is_file \u21b5 Restituisce vero se un percorso corrisponde ad un file. Sintassi: is_file( path ) Argomenti: path Percorso file Esempi: is_file('/home/qgis/data/country_boundaries.shp') \u2192 vero is_file('/home/qgis/data/') \u2192 falso","title":"File e percorsi"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/#gruppo-file-e-percorsi","text":"Abstract Contiene funzioni che manipolano nomi di file e di percorsi.","title":"Gruppo File e Percorsi"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/#base_file_name","text":"Restituisce il nome del file senza la cartella o il suffisso del file. Sintassi: base_file_name( path ) Argomenti: path Percorso file Esempi: base_file_name('/home/qgis/data/country_boundaries.shp') \u2192 'country_boundaries'","title":"base_file_name"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/#file_exists","text":"Restituisce vero se un percorso del file esiste. Sintassi: file_exists( path ) Argomenti: path Percorso file Esempi: file_exists('/home/qgis/data/country_boundaries.shp') \u2192 vero","title":"file_exists"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/#file_name","text":"Restituisce il nome di un file (compresa l'estensione del file), esclusa la directory. Sintassi: file_name( path ) Argomenti: path Percorso file Esempi: file_name('/home/qgis/data/country_boundaries.shp') \u2192 'country_boundaries.shp'","title":"file_name"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/#file_path","text":"Restituisce il componente della cartella del un percorso di un file. Questo non include il nome del file. Sintassi: file_path( path ) Argomenti: path Percorso file Esempi: file_path('/home/qgis/data/country_boundaries.shp') \u2192 '/home/qgis/data'","title":"file_path"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/#file_size","text":"Restituisce la dimensione (in bites) di un file. Sintassi: file_size( path ) Argomenti: path Percorso file Esempi: file_size('/home/qgis/data/country_boundaries.geojson') \u2192 5674","title":"file_size"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/#file_suffix","text":"Restituisce il suffisso (estensione) dal percorso di un file. Sintassi: file_suffix( path ) Argomenti: path Percorso file Esempi: file_suffix('/home/qgis/data/country_boundaries.shp') \u2192 'shp'","title":"file_suffix"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/#is_directory","text":"Restituisce vero se un percorso corrisponde ad una directory. Sintassi: is_directory( path ) Argomenti: path Percorso file Esempi: is_directory('/home/qgis/data/country_boundaries.shp') \u2192 falso is_directory('/home/qgis/data/') \u2192 vero","title":"is_directory"},{"location":"gr_funzioni/file_e_percorsi/file_e_percorsi_unico/#is_file","text":"Restituisce vero se un percorso corrisponde ad un file. Sintassi: is_file( path ) Argomenti: path Percorso file Esempi: is_file('/home/qgis/data/country_boundaries.shp') \u2192 vero is_file('/home/qgis/data/') \u2192 falso","title":"is_file"},{"location":"gr_funzioni/generale/env/","text":"env \u21b5 Ottiene una variabile di ambiente e restituisce il suo contenuto come stringa. Se non \u00e8 possibile trovare la variabile, sar\u00e0 restituito NULL . Questo \u00e8 utile per specifiche configurazioni di sistema come lettere del disco o prefissi di percorso. La definizione di variabili di ambiente dipende dal sistema operativo, per favore verifica con il tuo amministratore di sistema o con la documentazione del sistema operativo come ci\u00f2 possa essere impostato. Sintassi \u21b5 env( name ) Argomento \u21b5 name Nome della variabile d'ambiente che deve essere richiamata Esempi \u21b5 env( 'LANG' ) \u2192 'en_US.UTF-8' env( 'MIO_PREFISSO_VARIABILE' ) \u2192 'Z:' env( 'I_DO_NOT_EXIST' ) \u2192 NULL env( 'COMPUTERNAME') \u2192 LENOVO_PC (\u00e8 il mio notebook) env('home') \u2192 'C:\\Users\\Salvatore' alcune varibili li trovate qui: Impostazioni | Opzioni | Sistema","title":"env"},{"location":"gr_funzioni/generale/env/#env","text":"Ottiene una variabile di ambiente e restituisce il suo contenuto come stringa. Se non \u00e8 possibile trovare la variabile, sar\u00e0 restituito NULL . Questo \u00e8 utile per specifiche configurazioni di sistema come lettere del disco o prefissi di percorso. La definizione di variabili di ambiente dipende dal sistema operativo, per favore verifica con il tuo amministratore di sistema o con la documentazione del sistema operativo come ci\u00f2 possa essere impostato.","title":"env"},{"location":"gr_funzioni/generale/env/#sintassi","text":"env( name )","title":"Sintassi"},{"location":"gr_funzioni/generale/env/#argomento","text":"name Nome della variabile d'ambiente che deve essere richiamata","title":"Argomento"},{"location":"gr_funzioni/generale/env/#esempi","text":"env( 'LANG' ) \u2192 'en_US.UTF-8' env( 'MIO_PREFISSO_VARIABILE' ) \u2192 'Z:' env( 'I_DO_NOT_EXIST' ) \u2192 NULL env( 'COMPUTERNAME') \u2192 LENOVO_PC (\u00e8 il mio notebook) env('home') \u2192 'C:\\Users\\Salvatore' alcune varibili li trovate qui: Impostazioni | Opzioni | Sistema","title":"Esempi"},{"location":"gr_funzioni/generale/eval/","text":"eval \u21b5 Valuta una espressione che viene passata in una stringa. Molto utile per espandere parametri dinamici passati come variabili contestuali o campi. Sintassi \u21b5 eval( expression ) Argomento \u21b5 expression una stringa espressione Esempi \u21b5 eval(''nice'') \u2192 'nice' eval(@expression_var) \u2192 [qualsiasi risultato che dalla valutazione di @expression_var potrebbe assumere...] eval( '@row_number +10') \u2192 11","title":"eval"},{"location":"gr_funzioni/generale/eval/#eval","text":"Valuta una espressione che viene passata in una stringa. Molto utile per espandere parametri dinamici passati come variabili contestuali o campi.","title":"eval"},{"location":"gr_funzioni/generale/eval/#sintassi","text":"eval( expression )","title":"Sintassi"},{"location":"gr_funzioni/generale/eval/#argomento","text":"expression una stringa espressione","title":"Argomento"},{"location":"gr_funzioni/generale/eval/#esempi","text":"eval(''nice'') \u2192 'nice' eval(@expression_var) \u2192 [qualsiasi risultato che dalla valutazione di @expression_var potrebbe assumere...] eval( '@row_number +10') \u2192 11","title":"Esempi"},{"location":"gr_funzioni/generale/generale/","text":"Generale \u21b5 Questo gruppo contiene un'assortimento di funzioni generiche. Funzione Descrizione env Ottiene una variabile di ambiente e restituisce il suo contenuto come stringa. Se non \u00e8 possibile trovare la variabile, sar\u00e0 restituito NULL . Questo \u00e8 utile per specifiche configurazioni di sistema come lettere del disco o prefissi di percorso. La definizione di variabili di ambiente dipende dal sistema operativo, per favore verifica con il tuo amministratore di sistema o con la documentazione del sistema operativo come ci\u00f2 possa essere impostato eval Valuta una espressione che viene passata in una stringa. Molto utile per espandere parametri dinamici passati come variabili contestuali o campi is_layer_visible Restituisce vero se uno specifico layer \u00e8 visibile - visibile solo nel caso di tematizzazioni layer_property Restituisce una propriet\u00e0 del layer corrispondente o un valore dei metadati var Restituisce il valore memorizzato in una variabile specificata with_variable Questa funzione imposta una variabile per qualunque codice di espressione che sar\u00e0 fornita come argomento terzo. Questo \u00e8 utile solamente per espressioni complicate, in cui lo stesso valore calcolato deve essere usato in posti differenti","title":"Generale"},{"location":"gr_funzioni/generale/generale/#generale","text":"Questo gruppo contiene un'assortimento di funzioni generiche. Funzione Descrizione env Ottiene una variabile di ambiente e restituisce il suo contenuto come stringa. Se non \u00e8 possibile trovare la variabile, sar\u00e0 restituito NULL . Questo \u00e8 utile per specifiche configurazioni di sistema come lettere del disco o prefissi di percorso. La definizione di variabili di ambiente dipende dal sistema operativo, per favore verifica con il tuo amministratore di sistema o con la documentazione del sistema operativo come ci\u00f2 possa essere impostato eval Valuta una espressione che viene passata in una stringa. Molto utile per espandere parametri dinamici passati come variabili contestuali o campi is_layer_visible Restituisce vero se uno specifico layer \u00e8 visibile - visibile solo nel caso di tematizzazioni layer_property Restituisce una propriet\u00e0 del layer corrispondente o un valore dei metadati var Restituisce il valore memorizzato in una variabile specificata with_variable Questa funzione imposta una variabile per qualunque codice di espressione che sar\u00e0 fornita come argomento terzo. Questo \u00e8 utile solamente per espressioni complicate, in cui lo stesso valore calcolato deve essere usato in posti differenti","title":"Generale"},{"location":"gr_funzioni/generale/generale_unico/","text":"Gruppo Generale \u21b5 Abstract Questo gruppo contiene un assortimento di funzioni generiche. env \u21b5 Ottiene una variabile di ambiente e restituisce il suo contenuto come stringa. Se non \u00e8 possibile trovare la variabile, sar\u00e0 restituito NULL . Questo \u00e8 utile per specifiche configurazioni di sistema come lettere del disco o prefissi di percorso. La definizione di variabili di ambiente dipende dal sistema operativo, per favore verifica con il tuo amministratore di sistema o con la documentazione del sistema operativo come ci\u00f2 possa essere impostato. Sintassi: env( name ) Argomento: name Nome della variabile d'ambiente che deve essere richiamata Esempi: env( 'LANG' ) \u2192 'en_US.UTF-8' env( 'MIO_PREFISSO_VARIABILE' ) \u2192 'Z:' env( 'I_DO_NOT_EXIST' ) \u2192 NULL env( 'COMPUTERNAME') \u2192 LENOVO_PC (\u00e8 il mio notebook) env('home') \u2192 'C:\\Users\\Salvatore' alcune varibili li trovate qui: Impostazioni | Opzioni | Sistema eval \u21b5 Valuta una espressione che viene passata in una stringa. Molto utile per espandere parametri dinamici passati come variabili contestuali o campi. Sintassi: eval( expression ) Argomento: expression una stringa espressione Esempi: eval(''nice'') \u2192 'nice' eval(@expression_var) \u2192 [qualsiasi risultato che dalla valutazione di @expression_var potrebbe assumere...] eval( '@row_number +10') \u2192 11 eval_template \u21b5 Valuta un modello che viene passato in una stringa. Molto utile per espandere parametri dinamici passati come variabili contestuali o campi. Sintassi: eval_template( template ) Argomento: template una stringa modello Esempi: eval_template('QGIS [% upper(\\'rocks\\') %]') \u2192 QGIS ROCKS is_layer_visible \u21b5 Restituisce vero se uno specifico layer \u00e8 visibile - la funzione \u00e8 presente/visibile solo nel caso di tematizzazioni cio\u00e8 usando epsilon o la sovrascrittura dei dati . guarda qui Sintassi: is_layer_visible( layer ) Argomento: layer una stringa, rappresentante o un nome di un layer o un ID di layer Esempi: is_layer_visible('baseraster') \u2192 Vero Altri esempi: Due layer sovrapposti ed etichettati. CASE WHEN is_layer_visible('circoscrizioni' ) THEN NULL ELSE \"COMUNE\" END Con questa condizione ' disattiviamo ' etichettatura del layer ' comuni_g ' se il layer ' circoscrizione ' \u00e8 visibile: Animazione: mime_type \u21b5 Restituisce il tipo mime dei dati binari. Sintassi: mime_type( bytes ) Argomento: bytes I dati binari Esempi: mime_type('<html><body></body></html>') \u2192 text/html mime_type(from_base64('R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAIAOw==')) \u2192 image/gif var \u21b5 Restituisce il valore memorizzato in una variabile specificata. Sintassi: var( name ) Argomento: name un nome variabile Esempi: var('qgis_version') \u2192 '3.0.2-Girona' var('user_account_name') \u2192 'Salvatore' Osservazioni Come argomento va usato il nome della variabile senza la chioccila altrimenti non funziona. with_variable \u21b5 Questa funzione imposta una variabile per qualunque codice di espressione che sar\u00e0 fornita come argomento terzo. Questo \u00e8 utile solamente per espressioni complicate, in cui lo stesso valore calcolato deve essere usato in posti differenti. Sintassi: with_variable( name , value , expression ) Argomento: name il nome della variabile da impostare value il valore da impostare expression l'espressione per la quale la variabile sar\u00e0 disponibile Esempi: with_variable('my_sum', 1 + 2 + 3, @my_sum * 2 + @my_sum * 5) \u2192 42 with_variable('duepigreco',2*3.1415, @duepigreco * 2 +@duepigreco*5 ) \u2192 43.981","title":"Generale"},{"location":"gr_funzioni/generale/generale_unico/#gruppo-generale","text":"Abstract Questo gruppo contiene un assortimento di funzioni generiche.","title":"Gruppo Generale"},{"location":"gr_funzioni/generale/generale_unico/#env","text":"Ottiene una variabile di ambiente e restituisce il suo contenuto come stringa. Se non \u00e8 possibile trovare la variabile, sar\u00e0 restituito NULL . Questo \u00e8 utile per specifiche configurazioni di sistema come lettere del disco o prefissi di percorso. La definizione di variabili di ambiente dipende dal sistema operativo, per favore verifica con il tuo amministratore di sistema o con la documentazione del sistema operativo come ci\u00f2 possa essere impostato. Sintassi: env( name ) Argomento: name Nome della variabile d'ambiente che deve essere richiamata Esempi: env( 'LANG' ) \u2192 'en_US.UTF-8' env( 'MIO_PREFISSO_VARIABILE' ) \u2192 'Z:' env( 'I_DO_NOT_EXIST' ) \u2192 NULL env( 'COMPUTERNAME') \u2192 LENOVO_PC (\u00e8 il mio notebook) env('home') \u2192 'C:\\Users\\Salvatore' alcune varibili li trovate qui: Impostazioni | Opzioni | Sistema","title":"env"},{"location":"gr_funzioni/generale/generale_unico/#eval","text":"Valuta una espressione che viene passata in una stringa. Molto utile per espandere parametri dinamici passati come variabili contestuali o campi. Sintassi: eval( expression ) Argomento: expression una stringa espressione Esempi: eval(''nice'') \u2192 'nice' eval(@expression_var) \u2192 [qualsiasi risultato che dalla valutazione di @expression_var potrebbe assumere...] eval( '@row_number +10') \u2192 11","title":"eval"},{"location":"gr_funzioni/generale/generale_unico/#eval_template","text":"Valuta un modello che viene passato in una stringa. Molto utile per espandere parametri dinamici passati come variabili contestuali o campi. Sintassi: eval_template( template ) Argomento: template una stringa modello Esempi: eval_template('QGIS [% upper(\\'rocks\\') %]') \u2192 QGIS ROCKS","title":"eval_template"},{"location":"gr_funzioni/generale/generale_unico/#is_layer_visible","text":"Restituisce vero se uno specifico layer \u00e8 visibile - la funzione \u00e8 presente/visibile solo nel caso di tematizzazioni cio\u00e8 usando epsilon o la sovrascrittura dei dati . guarda qui Sintassi: is_layer_visible( layer ) Argomento: layer una stringa, rappresentante o un nome di un layer o un ID di layer Esempi: is_layer_visible('baseraster') \u2192 Vero Altri esempi: Due layer sovrapposti ed etichettati. CASE WHEN is_layer_visible('circoscrizioni' ) THEN NULL ELSE \"COMUNE\" END Con questa condizione ' disattiviamo ' etichettatura del layer ' comuni_g ' se il layer ' circoscrizione ' \u00e8 visibile: Animazione:","title":"is_layer_visible"},{"location":"gr_funzioni/generale/generale_unico/#mime_type","text":"Restituisce il tipo mime dei dati binari. Sintassi: mime_type( bytes ) Argomento: bytes I dati binari Esempi: mime_type('<html><body></body></html>') \u2192 text/html mime_type(from_base64('R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAIAOw==')) \u2192 image/gif","title":"mime_type"},{"location":"gr_funzioni/generale/generale_unico/#var","text":"Restituisce il valore memorizzato in una variabile specificata. Sintassi: var( name ) Argomento: name un nome variabile Esempi: var('qgis_version') \u2192 '3.0.2-Girona' var('user_account_name') \u2192 'Salvatore' Osservazioni Come argomento va usato il nome della variabile senza la chioccila altrimenti non funziona.","title":"var"},{"location":"gr_funzioni/generale/generale_unico/#with_variable","text":"Questa funzione imposta una variabile per qualunque codice di espressione che sar\u00e0 fornita come argomento terzo. Questo \u00e8 utile solamente per espressioni complicate, in cui lo stesso valore calcolato deve essere usato in posti differenti. Sintassi: with_variable( name , value , expression ) Argomento: name il nome della variabile da impostare value il valore da impostare expression l'espressione per la quale la variabile sar\u00e0 disponibile Esempi: with_variable('my_sum', 1 + 2 + 3, @my_sum * 2 + @my_sum * 5) \u2192 42 with_variable('duepigreco',2*3.1415, @duepigreco * 2 +@duepigreco*5 ) \u2192 43.981","title":"with_variable"},{"location":"gr_funzioni/generale/is_layer_visible/","text":"is_layer_visible \u21b5 Restituisce vero se uno specifico layer \u00e8 visibile - la funzione \u00e8 presente/visibile solo nel caso di tematizzazioni cio\u00e8 usando epsilon o la sovrascrittura dei dati . guarda qui Sintassi \u21b5 is_layer_visible( layer ) Argomento \u21b5 layer una stringa, rappresentante o un nome di un layer o un ID di layer Esempi \u21b5 is_layer_visible('baseraster') \u2192 Vero \u21b5 Altri esempi \u21b5 Due layer sovrapposti ed etichettati. CASE WHEN is_layer_visible('circoscrizioni' ) THEN NULL ELSE \"COMUNE\" END Con questa condizione ' disattiviamo ' etichettatura del layer ' comuni_g ' se il layer ' circoscrizione ' \u00e8 visibile: Animazione:","title":"is_layer_visible"},{"location":"gr_funzioni/generale/is_layer_visible/#is_layer_visible","text":"Restituisce vero se uno specifico layer \u00e8 visibile - la funzione \u00e8 presente/visibile solo nel caso di tematizzazioni cio\u00e8 usando epsilon o la sovrascrittura dei dati . guarda qui","title":"is_layer_visible"},{"location":"gr_funzioni/generale/is_layer_visible/#sintassi","text":"is_layer_visible( layer )","title":"Sintassi"},{"location":"gr_funzioni/generale/is_layer_visible/#argomento","text":"layer una stringa, rappresentante o un nome di un layer o un ID di layer","title":"Argomento"},{"location":"gr_funzioni/generale/is_layer_visible/#esempi","text":"is_layer_visible('baseraster') \u2192 Vero","title":"Esempi"},{"location":"gr_funzioni/generale/is_layer_visible/#_1","text":"","title":""},{"location":"gr_funzioni/generale/is_layer_visible/#altri-esempi","text":"Due layer sovrapposti ed etichettati. CASE WHEN is_layer_visible('circoscrizioni' ) THEN NULL ELSE \"COMUNE\" END Con questa condizione ' disattiviamo ' etichettatura del layer ' comuni_g ' se il layer ' circoscrizione ' \u00e8 visibile: Animazione:","title":"Altri esempi"},{"location":"gr_funzioni/generale/layer_property/","text":"layer_property \u21b5 Restituisce una propriet\u00e0 del layer corrispondente o un valore dei metadati. Sintassi \u21b5 layer_property( layer , property ) Argomento \u21b5 layer una stringa, rappresentante o un nome di un layer o un ID di layer property una stringa corrispondente alla propriet\u00e0 da restituire. Le opzioni valide sono: name : nome del layer id : layer ID title : titolo metadata abstract : metadata abstract string keywords : metadata keywords data_url : metadata URL attribution : stringa di attribuzione dei metadati attribution_url : URL di attribuzione dei metadati source : layer sorgente min_scale : minima scala di visualizzazione per strato max_scale : massima scala di visualizzazione per strato crs : layer CRS crs_definition : layer CRS definizione completa crs_description : layer CRS descrizione extent : estensione del layer (come oggetto geometrico) type : tipo di layer, ad esempio Vector o Raster storage_type : formato di archiviazione (solo livelli vettoriali) geometry_type : tipo di geometria, ad es. Punto (solo livelli vettoriali) feature_count : conteggio approssimativo delle caratteristiche per il livello (solo livelli vettoriali) Esempi \u21b5 layer_property('streets','title') \u2192 'Basemap Streets' layer_property('airports','feature_count') \u2192 120 layer_property('landsat','crs') \u2192 'EPSG:4326'","title":"layer_property"},{"location":"gr_funzioni/generale/layer_property/#layer_property","text":"Restituisce una propriet\u00e0 del layer corrispondente o un valore dei metadati.","title":"layer_property"},{"location":"gr_funzioni/generale/layer_property/#sintassi","text":"layer_property( layer , property )","title":"Sintassi"},{"location":"gr_funzioni/generale/layer_property/#argomento","text":"layer una stringa, rappresentante o un nome di un layer o un ID di layer property una stringa corrispondente alla propriet\u00e0 da restituire. Le opzioni valide sono: name : nome del layer id : layer ID title : titolo metadata abstract : metadata abstract string keywords : metadata keywords data_url : metadata URL attribution : stringa di attribuzione dei metadati attribution_url : URL di attribuzione dei metadati source : layer sorgente min_scale : minima scala di visualizzazione per strato max_scale : massima scala di visualizzazione per strato crs : layer CRS crs_definition : layer CRS definizione completa crs_description : layer CRS descrizione extent : estensione del layer (come oggetto geometrico) type : tipo di layer, ad esempio Vector o Raster storage_type : formato di archiviazione (solo livelli vettoriali) geometry_type : tipo di geometria, ad es. Punto (solo livelli vettoriali) feature_count : conteggio approssimativo delle caratteristiche per il livello (solo livelli vettoriali)","title":"Argomento"},{"location":"gr_funzioni/generale/layer_property/#esempi","text":"layer_property('streets','title') \u2192 'Basemap Streets' layer_property('airports','feature_count') \u2192 120 layer_property('landsat','crs') \u2192 'EPSG:4326'","title":"Esempi"},{"location":"gr_funzioni/generale/mime_type/","text":"mime_type \u21b5 Restituisce il tipo mime dei dati binari. Sintassi \u21b5 mime_type( bytes ) Argomento \u21b5 bytes I dati binari Esempi \u21b5 mime_type('<html><body></body></html>') \u2192 text/html mime_type(from_base64('R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAIAOw==')) \u2192 image/gif \u21b5","title":"mime_type"},{"location":"gr_funzioni/generale/mime_type/#mime_type","text":"Restituisce il tipo mime dei dati binari.","title":"mime_type"},{"location":"gr_funzioni/generale/mime_type/#sintassi","text":"mime_type( bytes )","title":"Sintassi"},{"location":"gr_funzioni/generale/mime_type/#argomento","text":"bytes I dati binari","title":"Argomento"},{"location":"gr_funzioni/generale/mime_type/#esempi","text":"mime_type('<html><body></body></html>') \u2192 text/html mime_type(from_base64('R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAIAOw==')) \u2192 image/gif","title":"Esempi"},{"location":"gr_funzioni/generale/mime_type/#_1","text":"","title":""},{"location":"gr_funzioni/generale/raster_statistic/","text":"raster_statistic \u21b5 Restituisce statistiche da un raster. Sintassi \u21b5 raster_statistic( layer , band , property ) Argomento \u21b5 layer una stringa, rappresentante o un nome di un raster o un ID di layer band intero rappresentante il numero di banda dal raster, partendo da 1 property una stringa che indica la propriet\u00e0 da restituire. Opzioni valide sono: min : valore minimo max : valore massimo avg : valore medio (media) stdev : deviazione standard dei valori range : intervallo dei valori (max - min) sum : somma di tutti i valori dal raster Esempi \u21b5 raster_statistic('lc',1,'avg') \u2192 Valore medio per la banda 1 da un raster layer 'lc' raster_statistic('ac2010',3,'min') \u2192 Valore minimo dalla banda 3 da un layer raster 'ac2010' raster_statistic( 'sicilia_dtm40',1,'max') \u2192 valore massimo del DTM Nota bene \u21b5 Queste statistiche sono riferite sempre a tutto il raster anche se la geometria \u00e8 pi\u00f9 o meno estesa del raster. Nel caso che segue ho popolato il campo raster , del vettore punto, con il valore max dell'intero DTM","title":"raster_statistic"},{"location":"gr_funzioni/generale/raster_statistic/#raster_statistic","text":"Restituisce statistiche da un raster.","title":"raster_statistic"},{"location":"gr_funzioni/generale/raster_statistic/#sintassi","text":"raster_statistic( layer , band , property )","title":"Sintassi"},{"location":"gr_funzioni/generale/raster_statistic/#argomento","text":"layer una stringa, rappresentante o un nome di un raster o un ID di layer band intero rappresentante il numero di banda dal raster, partendo da 1 property una stringa che indica la propriet\u00e0 da restituire. Opzioni valide sono: min : valore minimo max : valore massimo avg : valore medio (media) stdev : deviazione standard dei valori range : intervallo dei valori (max - min) sum : somma di tutti i valori dal raster","title":"Argomento"},{"location":"gr_funzioni/generale/raster_statistic/#esempi","text":"raster_statistic('lc',1,'avg') \u2192 Valore medio per la banda 1 da un raster layer 'lc' raster_statistic('ac2010',3,'min') \u2192 Valore minimo dalla banda 3 da un layer raster 'ac2010' raster_statistic( 'sicilia_dtm40',1,'max') \u2192 valore massimo del DTM","title":"Esempi"},{"location":"gr_funzioni/generale/raster_statistic/#nota-bene","text":"Queste statistiche sono riferite sempre a tutto il raster anche se la geometria \u00e8 pi\u00f9 o meno estesa del raster. Nel caso che segue ho popolato il campo raster , del vettore punto, con il valore max dell'intero DTM","title":"Nota bene"},{"location":"gr_funzioni/generale/var/","text":"var \u21b5 Restituisce il valore memorizzato in una variabile specificata. Sintassi \u21b5 var( name ) Argomento \u21b5 name un nome variabile Esempi \u21b5 var('qgis_version') \u2192 '3.0.2-Girona' var('user_account_name') \u2192 'Salvatore' Osservazioni \u21b5 Come argomento va usato il nome della variabile senza la chioccila altrimenti non funziona.","title":"var"},{"location":"gr_funzioni/generale/var/#var","text":"Restituisce il valore memorizzato in una variabile specificata.","title":"var"},{"location":"gr_funzioni/generale/var/#sintassi","text":"var( name )","title":"Sintassi"},{"location":"gr_funzioni/generale/var/#argomento","text":"name un nome variabile","title":"Argomento"},{"location":"gr_funzioni/generale/var/#esempi","text":"var('qgis_version') \u2192 '3.0.2-Girona' var('user_account_name') \u2192 'Salvatore'","title":"Esempi"},{"location":"gr_funzioni/generale/var/#osservazioni","text":"Come argomento va usato il nome della variabile senza la chioccila altrimenti non funziona.","title":"Osservazioni"},{"location":"gr_funzioni/generale/with_variable/","text":"with_variable \u21b5 Questa funzione imposta una variabile per qualunque codice di espressione che sar\u00e0 fornita come argomento terzo. Questo \u00e8 utile solamente per espressioni complicate, in cui lo stesso valore calcolato deve essere usato in posti differenti. Sintassi \u21b5 with_variable( name , value , node ) Argomento \u21b5 name il nome della variabile da impostare value il valore da impostare node l'espressione per la quale la variabile sar\u00e0 disponibile Esempi \u21b5 with_variable('my_sum', 1 + 2 + 3, @my_sum * 2 + @my_sum * 5) \u2192 42 with_variable('duepigreco',2*3.1415, @duepigreco * 2 +@duepigreco*5 ) \u2192 43.981","title":"with_variable"},{"location":"gr_funzioni/generale/with_variable/#with_variable","text":"Questa funzione imposta una variabile per qualunque codice di espressione che sar\u00e0 fornita come argomento terzo. Questo \u00e8 utile solamente per espressioni complicate, in cui lo stesso valore calcolato deve essere usato in posti differenti.","title":"with_variable"},{"location":"gr_funzioni/generale/with_variable/#sintassi","text":"with_variable( name , value , node )","title":"Sintassi"},{"location":"gr_funzioni/generale/with_variable/#argomento","text":"name il nome della variabile da impostare value il valore da impostare node l'espressione per la quale la variabile sar\u00e0 disponibile","title":"Argomento"},{"location":"gr_funzioni/generale/with_variable/#esempi","text":"with_variable('my_sum', 1 + 2 + 3, @my_sum * 2 + @my_sum * 5) \u2192 42 with_variable('duepigreco',2*3.1415, @duepigreco * 2 +@duepigreco*5 ) \u2192 43.981","title":"Esempi"},{"location":"gr_funzioni/geometria/%24area/","text":"$area \u21b5 Restituisce l'area della geometria corrente. L'area calcolata da questa funzione rispetta sia le impostazioni dell'ellissoide del progetto corrente sia delle unit\u00e0 di misura. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora l'area calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide l'area calcolata sar\u00e0 planimetrica. Sintassi \u21b5 $area Esempi \u21b5 Aggiungiamo un campo area_mq e lo popoliamo con la funzione $area : 1. selezionare un layer vettoriale di tipo poligonale; 2. clic sull'icona del calcolatore di campi di default \u00e8 sempre spuntato; digitiamo il nome del campo area_mq ; il tipo di campo di uscita in questo caso \u00e8 numero decimale (Double) , definire la lunghezza del campo; ricercare la funzione digitando area ; doppio clic sulla funzione $area per inserirlo; clic su OK per eseguire. nell'esempio ho usato un vettore poligonale con EPSG 3004 (sistema proiettato metrico): la superficie di ogni elemento \u00e8 in metri quadrati come evidenziato nella tabella attributi nota bene \u21b5 il SR del layer in cui si sta calcolando l'area ($area) \u00e8 un sistema proiettato (es:EPSG 3003/4; 32632/33/34) quindi l'unit\u00e0 di misura \u00e8 il metro, invece se il SR fosse stato EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe stata in gradi e quindi poco comprensibile e valori piccoli. osservazioni \u21b5 in generale $area <> area($geometry)","title":"$area"},{"location":"gr_funzioni/geometria/%24area/#area","text":"Restituisce l'area della geometria corrente. L'area calcolata da questa funzione rispetta sia le impostazioni dell'ellissoide del progetto corrente sia delle unit\u00e0 di misura. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora l'area calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide l'area calcolata sar\u00e0 planimetrica.","title":"$area"},{"location":"gr_funzioni/geometria/%24area/#sintassi","text":"$area","title":"Sintassi"},{"location":"gr_funzioni/geometria/%24area/#esempi","text":"Aggiungiamo un campo area_mq e lo popoliamo con la funzione $area : 1. selezionare un layer vettoriale di tipo poligonale; 2. clic sull'icona del calcolatore di campi di default \u00e8 sempre spuntato; digitiamo il nome del campo area_mq ; il tipo di campo di uscita in questo caso \u00e8 numero decimale (Double) , definire la lunghezza del campo; ricercare la funzione digitando area ; doppio clic sulla funzione $area per inserirlo; clic su OK per eseguire. nell'esempio ho usato un vettore poligonale con EPSG 3004 (sistema proiettato metrico): la superficie di ogni elemento \u00e8 in metri quadrati come evidenziato nella tabella attributi","title":"Esempi"},{"location":"gr_funzioni/geometria/%24area/#nota-bene","text":"il SR del layer in cui si sta calcolando l'area ($area) \u00e8 un sistema proiettato (es:EPSG 3003/4; 32632/33/34) quindi l'unit\u00e0 di misura \u00e8 il metro, invece se il SR fosse stato EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe stata in gradi e quindi poco comprensibile e valori piccoli.","title":"nota bene"},{"location":"gr_funzioni/geometria/%24area/#osservazioni","text":"in generale $area <> area($geometry)","title":"osservazioni"},{"location":"gr_funzioni/geometria/%24geometry/","text":"$geometry \u21b5 Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni. Sintassi \u21b5 $geometry Esempi \u21b5 geomToWKT( $geometry ) \u2192 POINT(6 50) area($geoamtry) \u2192 1234567.89 mq perimeter($geometry) \u2192 25689.25 m nota bene \u21b5 -- osservazioni \u21b5 il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$geometry"},{"location":"gr_funzioni/geometria/%24geometry/#geometry","text":"Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni.","title":"$geometry"},{"location":"gr_funzioni/geometria/%24geometry/#sintassi","text":"$geometry","title":"Sintassi"},{"location":"gr_funzioni/geometria/%24geometry/#esempi","text":"geomToWKT( $geometry ) \u2192 POINT(6 50) area($geoamtry) \u2192 1234567.89 mq perimeter($geometry) \u2192 25689.25 m","title":"Esempi"},{"location":"gr_funzioni/geometria/%24geometry/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/%24geometry/#osservazioni","text":"il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"osservazioni"},{"location":"gr_funzioni/geometria/%24length/","text":"$length \u21b5 Restituisce la lunghezza di una linestring. Se hai bisogno della lunghezza del bordo di un poligono, utilizza invece $perimeter . La lunghezza calcolata da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora la lunghezza calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide la lunghezza calcolata sar\u00e0 planimetrica. Sintassi \u21b5 $length Esempi \u21b5 $length \u2192 42.4711 nota bene \u21b5 Come evidenziano nella definizione della funzione, $length calcola la lunghezza rispettando le impostazioni di progetto: Occorre cambiare entrambe le impostazioni, sia quelle dell'ellissoide \u2192 'None/Planimetric' sia le Unit\u00e0 di misura per le distanze' \u2192 Gradi Queste modofiche non valgono per l'etichettatura, la lunghezza sar\u00e0 quella relativa alla geometria e quindi al suo SR. osservazioni \u21b5 il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$length"},{"location":"gr_funzioni/geometria/%24length/#length","text":"Restituisce la lunghezza di una linestring. Se hai bisogno della lunghezza del bordo di un poligono, utilizza invece $perimeter . La lunghezza calcolata da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora la lunghezza calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide la lunghezza calcolata sar\u00e0 planimetrica.","title":"$length"},{"location":"gr_funzioni/geometria/%24length/#sintassi","text":"$length","title":"Sintassi"},{"location":"gr_funzioni/geometria/%24length/#esempi","text":"$length \u2192 42.4711","title":"Esempi"},{"location":"gr_funzioni/geometria/%24length/#nota-bene","text":"Come evidenziano nella definizione della funzione, $length calcola la lunghezza rispettando le impostazioni di progetto: Occorre cambiare entrambe le impostazioni, sia quelle dell'ellissoide \u2192 'None/Planimetric' sia le Unit\u00e0 di misura per le distanze' \u2192 Gradi Queste modofiche non valgono per l'etichettatura, la lunghezza sar\u00e0 quella relativa alla geometria e quindi al suo SR.","title":"nota bene"},{"location":"gr_funzioni/geometria/%24length/#osservazioni","text":"il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"osservazioni"},{"location":"gr_funzioni/geometria/%24perimeter/","text":"$perimeter \u21b5 Restituisce la lunghezza del perimetro della geometria corrente. Il perimetro calcolato da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora il perimetro calcolato sar\u00e0 ellisoidico altrimenti se non \u00e8 stato impostato alcun ellissoide il perimetro calcolato sar\u00e0 planimetrico. Sintassi \u21b5 $perimeter Esempi \u21b5 $perimeter \u2192 2545897.26 nota bene \u21b5 Si utilizza SOLO per i poligoni, nel caso di feature lineari $length osservazioni \u21b5 il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$perimeter"},{"location":"gr_funzioni/geometria/%24perimeter/#perimeter","text":"Restituisce la lunghezza del perimetro della geometria corrente. Il perimetro calcolato da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora il perimetro calcolato sar\u00e0 ellisoidico altrimenti se non \u00e8 stato impostato alcun ellissoide il perimetro calcolato sar\u00e0 planimetrico.","title":"$perimeter"},{"location":"gr_funzioni/geometria/%24perimeter/#sintassi","text":"$perimeter","title":"Sintassi"},{"location":"gr_funzioni/geometria/%24perimeter/#esempi","text":"$perimeter \u2192 2545897.26","title":"Esempi"},{"location":"gr_funzioni/geometria/%24perimeter/#nota-bene","text":"Si utilizza SOLO per i poligoni, nel caso di feature lineari $length","title":"nota bene"},{"location":"gr_funzioni/geometria/%24perimeter/#osservazioni","text":"il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"osservazioni"},{"location":"gr_funzioni/geometria/%24x/","text":"$x \u21b5 Restituisce la coordinata x della geometria corrente. Sintassi \u21b5 $x Esempi \u21b5 $x \u2192 12.2568971 nota bene \u21b5 La funzione $x restituisce la coordinata x della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) osservazioni \u21b5 Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni ed: x($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"$x"},{"location":"gr_funzioni/geometria/%24x/#x","text":"Restituisce la coordinata x della geometria corrente.","title":"$x"},{"location":"gr_funzioni/geometria/%24x/#sintassi","text":"$x","title":"Sintassi"},{"location":"gr_funzioni/geometria/%24x/#esempi","text":"$x \u2192 12.2568971","title":"Esempi"},{"location":"gr_funzioni/geometria/%24x/#nota-bene","text":"La funzione $x restituisce la coordinata x della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot)","title":"nota bene"},{"location":"gr_funzioni/geometria/%24x/#osservazioni","text":"Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni ed: x($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"osservazioni"},{"location":"gr_funzioni/geometria/%24x_at/","text":"$x_at \u21b5 Recupera una coordinata x per la geometria dell'elemento corrente. Sintassi \u21b5 $x_at( i ) Argomento \u21b5 i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice) Esempi \u21b5 $x_at(1) \u2192 12.6882843 nota bene \u21b5 -- osservazioni \u21b5 Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"$x_at"},{"location":"gr_funzioni/geometria/%24x_at/#x_at","text":"Recupera una coordinata x per la geometria dell'elemento corrente.","title":"$x_at"},{"location":"gr_funzioni/geometria/%24x_at/#sintassi","text":"$x_at( i )","title":"Sintassi"},{"location":"gr_funzioni/geometria/%24x_at/#argomento","text":"i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice)","title":"Argomento"},{"location":"gr_funzioni/geometria/%24x_at/#esempi","text":"$x_at(1) \u2192 12.6882843","title":"Esempi"},{"location":"gr_funzioni/geometria/%24x_at/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/%24x_at/#osservazioni","text":"Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"osservazioni"},{"location":"gr_funzioni/geometria/%24y/","text":"$y \u21b5 Restituisce la coordinata y della geometria corrente. Sintassi \u21b5 $y Esempi \u21b5 $y \u2192 12.2568971 nota bene \u21b5 La funzione $y restituisce la coordinata y della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) osservazioni \u21b5 Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni es: y($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"$y"},{"location":"gr_funzioni/geometria/%24y/#y","text":"Restituisce la coordinata y della geometria corrente.","title":"$y"},{"location":"gr_funzioni/geometria/%24y/#sintassi","text":"$y","title":"Sintassi"},{"location":"gr_funzioni/geometria/%24y/#esempi","text":"$y \u2192 12.2568971","title":"Esempi"},{"location":"gr_funzioni/geometria/%24y/#nota-bene","text":"La funzione $y restituisce la coordinata y della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot)","title":"nota bene"},{"location":"gr_funzioni/geometria/%24y/#osservazioni","text":"Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni es: y($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"osservazioni"},{"location":"gr_funzioni/geometria/%24y_at/","text":"$y_at \u21b5 Recupera una coordinata y per la geometria dell'elemento corrente. Sintassi \u21b5 $y_at( i ) Argomento \u21b5 i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice) Esempi \u21b5 $y_at(1) \u2192 2 nota bene \u21b5 -- osservazioni \u21b5 Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"$y_at"},{"location":"gr_funzioni/geometria/%24y_at/#y_at","text":"Recupera una coordinata y per la geometria dell'elemento corrente.","title":"$y_at"},{"location":"gr_funzioni/geometria/%24y_at/#sintassi","text":"$y_at( i )","title":"Sintassi"},{"location":"gr_funzioni/geometria/%24y_at/#argomento","text":"i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice)","title":"Argomento"},{"location":"gr_funzioni/geometria/%24y_at/#esempi","text":"$y_at(1) \u2192 2","title":"Esempi"},{"location":"gr_funzioni/geometria/%24y_at/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/%24y_at/#osservazioni","text":"Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"osservazioni"},{"location":"gr_funzioni/geometria/angle_at_vertex/","text":"angle_at_vertex \u21b5 Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi \u21b5 angle_at_vertex( geometry , vertex ) Argomento \u21b5 geometry una geometria di tipo linestring vertex indice vertice, partendo da 0 Esempi \u21b5 angle_at_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 45.0 nota bene \u21b5 Il primo ed ultimo vertice di una lineastring aperta la funzione restituisce il valore dell'angolo e non la bisettrice. osservazioni \u21b5 --","title":"angle_at_vertex"},{"location":"gr_funzioni/geometria/angle_at_vertex/#angle_at_vertex","text":"Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord.","title":"angle_at_vertex"},{"location":"gr_funzioni/geometria/angle_at_vertex/#sintassi","text":"angle_at_vertex( geometry , vertex )","title":"Sintassi"},{"location":"gr_funzioni/geometria/angle_at_vertex/#argomento","text":"geometry una geometria di tipo linestring vertex indice vertice, partendo da 0","title":"Argomento"},{"location":"gr_funzioni/geometria/angle_at_vertex/#esempi","text":"angle_at_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 45.0","title":"Esempi"},{"location":"gr_funzioni/geometria/angle_at_vertex/#nota-bene","text":"Il primo ed ultimo vertice di una lineastring aperta la funzione restituisce il valore dell'angolo e non la bisettrice.","title":"nota bene"},{"location":"gr_funzioni/geometria/angle_at_vertex/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/area/","text":"area \u21b5 Restituisce l'area di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura dell'area restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $area, la quale esegue calcoli ellisoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura dell'area. Sintassi \u21b5 area( geometry ) Argomenti \u21b5 geometry oggetto geometria poligono Esempi \u21b5 nota bene \u21b5 se il SR del layer in cui si sta calcolando l'area (area()) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34) allora l'unit\u00e0 di misura sarebbe il metro, invece se il SR fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe gradi e quindi poco comprensibile e valori piccoli (0.00001). osservazioni \u21b5 in generale area($geometry) <> $area","title":"area"},{"location":"gr_funzioni/geometria/area/#area","text":"Restituisce l'area di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura dell'area restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $area, la quale esegue calcoli ellisoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura dell'area.","title":"area"},{"location":"gr_funzioni/geometria/area/#sintassi","text":"area( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/area/#argomenti","text":"geometry oggetto geometria poligono","title":"Argomenti"},{"location":"gr_funzioni/geometria/area/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/geometria/area/#nota-bene","text":"se il SR del layer in cui si sta calcolando l'area (area()) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34) allora l'unit\u00e0 di misura sarebbe il metro, invece se il SR fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe gradi e quindi poco comprensibile e valori piccoli (0.00001).","title":"nota bene"},{"location":"gr_funzioni/geometria/area/#osservazioni","text":"in generale area($geometry) <> $area","title":"osservazioni"},{"location":"gr_funzioni/geometria/azimuth/","text":"Azimuth \u21b5 Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi \u21b5 azimuth( point_a , point_b ) Argomenti \u21b5 point_a geometria punto point_b geometria punto Esempi \u21b5 nota bene \u21b5 Azimuth per definizione restituisce un angolo in radianti, per trasformarlo in gradi usare la funzione degrees()","title":"Azimuth"},{"location":"gr_funzioni/geometria/azimuth/#azimuth","text":"Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b.","title":"Azimuth"},{"location":"gr_funzioni/geometria/azimuth/#sintassi","text":"azimuth( point_a , point_b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/azimuth/#argomenti","text":"point_a geometria punto point_b geometria punto","title":"Argomenti"},{"location":"gr_funzioni/geometria/azimuth/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/geometria/azimuth/#nota-bene","text":"Azimuth per definizione restituisce un angolo in radianti, per trasformarlo in gradi usare la funzione degrees()","title":"nota bene"},{"location":"gr_funzioni/geometria/boundary/","text":"boundary \u21b5 Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria). Per esempio, una geometria poligonale avr\u00e0 un confine costituito dalle linee di ogni anello nel poligono. Alcuni tipi di geometrie non hanno confini, es collezioni di punti o geometrie e pertanto verr\u00e0 restituito null. Sintassi \u21b5 boundary( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 geom_to_wkt(boundary(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'LineString(1 1,0 0,-1 1,1 1)' nota bene \u21b5 -- osservazioni \u21b5 funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"boundary"},{"location":"gr_funzioni/geometria/boundary/#boundary","text":"Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria). Per esempio, una geometria poligonale avr\u00e0 un confine costituito dalle linee di ogni anello nel poligono. Alcuni tipi di geometrie non hanno confini, es collezioni di punti o geometrie e pertanto verr\u00e0 restituito null.","title":"boundary"},{"location":"gr_funzioni/geometria/boundary/#sintassi","text":"boundary( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/boundary/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/boundary/#esempi","text":"geom_to_wkt(boundary(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'LineString(1 1,0 0,-1 1,1 1)'","title":"Esempi"},{"location":"gr_funzioni/geometria/boundary/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/boundary/#osservazioni","text":"funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"osservazioni"},{"location":"gr_funzioni/geometria/bounds/","text":"bounds \u21b5 Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi \u21b5 bounds( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 bounds($geometry) \u2192 perimetro di delimitazione di $geometry nota bene \u21b5 -- osservazioni \u21b5 funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"bounds"},{"location":"gr_funzioni/geometria/bounds/#bounds","text":"Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria.","title":"bounds"},{"location":"gr_funzioni/geometria/bounds/#sintassi","text":"bounds( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/bounds/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/bounds/#esempi","text":"bounds($geometry) \u2192 perimetro di delimitazione di $geometry","title":"Esempi"},{"location":"gr_funzioni/geometria/bounds/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/bounds/#osservazioni","text":"funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"osservazioni"},{"location":"gr_funzioni/geometria/bounds_height/","text":"bounds_height \u21b5 Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi \u21b5 bounds_height( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 bounds_height($geometry) \u2192 altezza del perimetro di delimitazione di $geometry nota bene \u21b5 -- osservazioni \u21b5 La funzione restituisce un numero che corrisponde all'altezza del rettangolo di ingombro di una geometria.","title":"bounds_height"},{"location":"gr_funzioni/geometria/bounds_height/#bounds_height","text":"Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria.","title":"bounds_height"},{"location":"gr_funzioni/geometria/bounds_height/#sintassi","text":"bounds_height( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/bounds_height/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/bounds_height/#esempi","text":"bounds_height($geometry) \u2192 altezza del perimetro di delimitazione di $geometry","title":"Esempi"},{"location":"gr_funzioni/geometria/bounds_height/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/bounds_height/#osservazioni","text":"La funzione restituisce un numero che corrisponde all'altezza del rettangolo di ingombro di una geometria.","title":"osservazioni"},{"location":"gr_funzioni/geometria/bounds_width/","text":"bounds_width \u21b5 Restituisce la larghezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi \u21b5 bounds_width( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 bounds_width($geometry) \u2192 larghezza del perimetro di delimitazione di $geometry nota bene \u21b5 -- osservazioni \u21b5 La funzione restituisce un numero che corrisponde alla larghezza del rettangolo di ingombro di una geometria.","title":"bounds_width"},{"location":"gr_funzioni/geometria/bounds_width/#bounds_width","text":"Restituisce la larghezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria.","title":"bounds_width"},{"location":"gr_funzioni/geometria/bounds_width/#sintassi","text":"bounds_width( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/bounds_width/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/bounds_width/#esempi","text":"bounds_width($geometry) \u2192 larghezza del perimetro di delimitazione di $geometry","title":"Esempi"},{"location":"gr_funzioni/geometria/bounds_width/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/bounds_width/#osservazioni","text":"La funzione restituisce un numero che corrisponde alla larghezza del rettangolo di ingombro di una geometria.","title":"osservazioni"},{"location":"gr_funzioni/geometria/buffer/","text":"buffer \u21b5 Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita. I calcoli vengono effettuati nel sistema di riferimento spaziale della geometria. Sintassi \u21b5 buffer( geometry , distance ) Argomenti \u21b5 geometry una geometria distance distanza buffer nelle unit\u00e0 del layer Esempi \u21b5 buffer($geometry, 10.5) \u2192 poligono di $geometry bufferizzato di 10.5 unit\u00e0 nota bene \u21b5 Utilizzando SR proiettati l'unit\u00e0 di misura \u00e8 il metro, per SR geografici \u00e8 il grado quindi attenzione al valore della distanza. osservazioni \u21b5 La Funzione restituisce SEMPRE un poligono sia per geometry POINT, LINESTRING o POLYGON","title":"buffer"},{"location":"gr_funzioni/geometria/buffer/#buffer","text":"Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita. I calcoli vengono effettuati nel sistema di riferimento spaziale della geometria.","title":"buffer"},{"location":"gr_funzioni/geometria/buffer/#sintassi","text":"buffer( geometry , distance )","title":"Sintassi"},{"location":"gr_funzioni/geometria/buffer/#argomenti","text":"geometry una geometria distance distanza buffer nelle unit\u00e0 del layer","title":"Argomenti"},{"location":"gr_funzioni/geometria/buffer/#esempi","text":"buffer($geometry, 10.5) \u2192 poligono di $geometry bufferizzato di 10.5 unit\u00e0","title":"Esempi"},{"location":"gr_funzioni/geometria/buffer/#nota-bene","text":"Utilizzando SR proiettati l'unit\u00e0 di misura \u00e8 il metro, per SR geografici \u00e8 il grado quindi attenzione al valore della distanza.","title":"nota bene"},{"location":"gr_funzioni/geometria/buffer/#osservazioni","text":"La Funzione restituisce SEMPRE un poligono sia per geometry POINT, LINESTRING o POLYGON","title":"osservazioni"},{"location":"gr_funzioni/geometria/buffer_by_m/","text":"buffer_by_m \u21b5 Crea un buffer lungo una geometria linestring in cui il diametro del buffer varia in base ai valori m nei vertici della linea. Sintassi \u21b5 buffer_by_m( geometry , segments ) Argomenti \u21b5 geometry la geometria deve essere una (multi) geometria linestring con valori m. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi \u21b5 buffer_by_m(geometry:=geom_from_wkt('LINESTRINGM(1 2 0.5, 4 2 0.2)'),segments:=8) relativa all'esempio di sopra: nota bene \u21b5 -- osservazioni \u21b5 QGIS - feature","title":"buffer_by_m"},{"location":"gr_funzioni/geometria/buffer_by_m/#buffer_by_m","text":"Crea un buffer lungo una geometria linestring in cui il diametro del buffer varia in base ai valori m nei vertici della linea.","title":"buffer_by_m"},{"location":"gr_funzioni/geometria/buffer_by_m/#sintassi","text":"buffer_by_m( geometry , segments )","title":"Sintassi"},{"location":"gr_funzioni/geometria/buffer_by_m/#argomenti","text":"geometry la geometria deve essere una (multi) geometria linestring con valori m. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer","title":"Argomenti"},{"location":"gr_funzioni/geometria/buffer_by_m/#esempi","text":"buffer_by_m(geometry:=geom_from_wkt('LINESTRINGM(1 2 0.5, 4 2 0.2)'),segments:=8) relativa all'esempio di sopra:","title":"Esempi"},{"location":"gr_funzioni/geometria/buffer_by_m/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/buffer_by_m/#osservazioni","text":"QGIS - feature","title":"osservazioni"},{"location":"gr_funzioni/geometria/centroid/","text":"centroid \u21b5 Restituisce il centro geometrico di una geometria. Sintassi \u21b5 centroid( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 centroid($geometry) \u2192 una geometria punto nota bene \u21b5 -- osservazioni \u21b5 La Funzione restituisce SEMPRE una geometry POINT","title":"centroid"},{"location":"gr_funzioni/geometria/centroid/#centroid","text":"Restituisce il centro geometrico di una geometria.","title":"centroid"},{"location":"gr_funzioni/geometria/centroid/#sintassi","text":"centroid( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/centroid/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/centroid/#esempi","text":"centroid($geometry) \u2192 una geometria punto","title":"Esempi"},{"location":"gr_funzioni/geometria/centroid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/centroid/#osservazioni","text":"La Funzione restituisce SEMPRE una geometry POINT","title":"osservazioni"},{"location":"gr_funzioni/geometria/close_line/","text":"close_line \u21b5 Restituisce una linestring chiusa della linestring di input aggiungendo il primo punto alla fine della linea, se non \u00e8 gi\u00e0 chiusa. Se la geometria non \u00e8 una linestring o una MultiLinestring, il risultato sar\u00e0 null. Sintassi \u21b5 close_line( geometry ) Argomenti \u21b5 geometry una geometria linestring Esempi \u21b5 geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1, 0 0)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) nota bene \u21b5 -- osservazioni \u21b5 --","title":"close_line"},{"location":"gr_funzioni/geometria/close_line/#close_line","text":"Restituisce una linestring chiusa della linestring di input aggiungendo il primo punto alla fine della linea, se non \u00e8 gi\u00e0 chiusa. Se la geometria non \u00e8 una linestring o una MultiLinestring, il risultato sar\u00e0 null.","title":"close_line"},{"location":"gr_funzioni/geometria/close_line/#sintassi","text":"close_line( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/close_line/#argomenti","text":"geometry una geometria linestring","title":"Argomenti"},{"location":"gr_funzioni/geometria/close_line/#esempi","text":"geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1, 0 0)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0)","title":"Esempi"},{"location":"gr_funzioni/geometria/close_line/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/close_line/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/closest_point/","text":"closest_point \u21b5 Restituisce il punto sulla geometria 1 che \u00e8 pi\u00f9 vicino alla geometria 2. Sintassi \u21b5 closest_point( geometry 1, geometry 2 ) Argomenti \u21b5 geometry 1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry 2 geometria dalla quale cercare il punto pi\u00f9 vicino Esempi \u21b5 geom_to_wkt(closest_point(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 Point(73.0769 115.384) nota bene \u21b5 -- osservazioni \u21b5 Utilizzando il geometry generator per i temi (il layer strade \u00e8 una unica feature): closest_point( geometry(get_feature('strade', 'reg',19)),$geometry) Gif animata: geometry 1 \u00e8 la rete stradale; geometry 2 sono i punti; in rosso i closestpoint","title":"closest_point"},{"location":"gr_funzioni/geometria/closest_point/#closest_point","text":"Restituisce il punto sulla geometria 1 che \u00e8 pi\u00f9 vicino alla geometria 2.","title":"closest_point"},{"location":"gr_funzioni/geometria/closest_point/#sintassi","text":"closest_point( geometry 1, geometry 2 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/closest_point/#argomenti","text":"geometry 1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry 2 geometria dalla quale cercare il punto pi\u00f9 vicino","title":"Argomenti"},{"location":"gr_funzioni/geometria/closest_point/#esempi","text":"geom_to_wkt(closest_point(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 Point(73.0769 115.384)","title":"Esempi"},{"location":"gr_funzioni/geometria/closest_point/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/closest_point/#osservazioni","text":"Utilizzando il geometry generator per i temi (il layer strade \u00e8 una unica feature): closest_point( geometry(get_feature('strade', 'reg',19)),$geometry) Gif animata: geometry 1 \u00e8 la rete stradale; geometry 2 sono i punti; in rosso i closestpoint","title":"osservazioni"},{"location":"gr_funzioni/geometria/collect_geometries/","text":"collect_geometries \u21b5 Raccoglie un set di geometrie in un oggetto geometria multiparte. Lista argomenti variante 1 \u21b5 Sintassi \u21b5 collect_geometries( geometry 1, geometry 2 ) Argomenti \u21b5 geometry 1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry 2 geometria dalla quale cercare il punto pi\u00f9 vicino Esempi \u21b5 geom_to_wkt(collect_geometries(make_point(1,2), make_point(3,4), make_point(5,6))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Lista argomenti variante con array \u21b5 Sintassi \u21b5 collect_geometries( array ) Argomenti \u21b5 array array con oggetti geometrici Esempi \u21b5 geom_to_wkt(collect_geometries(array(make_point(1,2), make_point(3,4), make_point(5,6)))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' nota bene \u21b5 -- osservazioni \u21b5","title":"collect_geometries"},{"location":"gr_funzioni/geometria/collect_geometries/#collect_geometries","text":"Raccoglie un set di geometrie in un oggetto geometria multiparte.","title":"collect_geometries"},{"location":"gr_funzioni/geometria/collect_geometries/#lista-argomenti-variante-1","text":"","title":"Lista argomenti variante 1"},{"location":"gr_funzioni/geometria/collect_geometries/#sintassi","text":"collect_geometries( geometry 1, geometry 2 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/collect_geometries/#argomenti","text":"geometry 1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry 2 geometria dalla quale cercare il punto pi\u00f9 vicino","title":"Argomenti"},{"location":"gr_funzioni/geometria/collect_geometries/#esempi","text":"geom_to_wkt(collect_geometries(make_point(1,2), make_point(3,4), make_point(5,6))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))'","title":"Esempi"},{"location":"gr_funzioni/geometria/collect_geometries/#lista-argomenti-variante-con-array","text":"","title":"Lista argomenti variante con array"},{"location":"gr_funzioni/geometria/collect_geometries/#sintassi_1","text":"collect_geometries( array )","title":"Sintassi"},{"location":"gr_funzioni/geometria/collect_geometries/#argomenti_1","text":"array array con oggetti geometrici","title":"Argomenti"},{"location":"gr_funzioni/geometria/collect_geometries/#esempi_1","text":"geom_to_wkt(collect_geometries(array(make_point(1,2), make_point(3,4), make_point(5,6)))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))'","title":"Esempi"},{"location":"gr_funzioni/geometria/collect_geometries/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/collect_geometries/#osservazioni","text":"","title":"osservazioni"},{"location":"gr_funzioni/geometria/combine/","text":"combine \u21b5 Restituisce la combinazione di due geometrie. Sintassi \u21b5 combine( geometry1 , geometry2 ) Argomenti \u21b5 geometry1 una geometria geometry2 una geometria Esempi \u21b5 geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 2 1)' ) ) ) \u2192 MULTILINESTRING((4 4, 2 1), (3 3, 4 4), (4 4, 5 5)) geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 6 6, 2 1)' ) ) ) \u2192 LINESTRING(3 3, 4 4, 6 6, 2 1) nota bene \u21b5 -- osservazioni \u21b5 --","title":"combine"},{"location":"gr_funzioni/geometria/combine/#combine","text":"Restituisce la combinazione di due geometrie.","title":"combine"},{"location":"gr_funzioni/geometria/combine/#sintassi","text":"combine( geometry1 , geometry2 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/combine/#argomenti","text":"geometry1 una geometria geometry2 una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/combine/#esempi","text":"geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 2 1)' ) ) ) \u2192 MULTILINESTRING((4 4, 2 1), (3 3, 4 4), (4 4, 5 5)) geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 6 6, 2 1)' ) ) ) \u2192 LINESTRING(3 3, 4 4, 6 6, 2 1)","title":"Esempi"},{"location":"gr_funzioni/geometria/combine/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/combine/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/contains/","text":"contains \u21b5 Verifica se una geometria ne contiene un'altra. Restituisce vero (1) se, e solo se, nessun punto della geometria b giace all'esterno della geometria a , ed almeno un punto dell'interno di b si trova all'interno di a . Sintassi \u21b5 contains( geometry a, geometry b ) Argomenti \u21b5 geometry a una geometria geometry b una geometria Esempi \u21b5 contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'POINT(0.5 0.5 )' ) ) \u2192 vero contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso nota bene \u21b5 -- osservazioni \u21b5 Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry b \u00e8 $geometry seleziono tutti i comuni contains (contenuti) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Lucca). NOT contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"contains"},{"location":"gr_funzioni/geometria/contains/#contains","text":"Verifica se una geometria ne contiene un'altra. Restituisce vero (1) se, e solo se, nessun punto della geometria b giace all'esterno della geometria a , ed almeno un punto dell'interno di b si trova all'interno di a .","title":"contains"},{"location":"gr_funzioni/geometria/contains/#sintassi","text":"contains( geometry a, geometry b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/contains/#argomenti","text":"geometry a una geometria geometry b una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/contains/#esempi","text":"contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'POINT(0.5 0.5 )' ) ) \u2192 vero contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso","title":"Esempi"},{"location":"gr_funzioni/geometria/contains/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/contains/#osservazioni","text":"Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry b \u00e8 $geometry seleziono tutti i comuni contains (contenuti) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Lucca). NOT contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"osservazioni"},{"location":"gr_funzioni/geometria/convex_hull/","text":"convex_hull \u21b5 Restituisce il poligono convesso di una geometria. Rappresenta la minima geometria convessa che racchiude tutte le geometria contenute nell'insieme. Sintassi \u21b5 convex_hull( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 geom_to_wkt( convex_hull( geom_from_wkt( 'LINESTRING(3 3, 4 4, 4 10)' ) ) ) \u2192 POLYGON((3 3,4 10,4 4,3 3)) nota bene \u21b5 -- osservazioni \u21b5 La funzione restituisce sempre un poligono.","title":"convex_hull"},{"location":"gr_funzioni/geometria/convex_hull/#convex_hull","text":"Restituisce il poligono convesso di una geometria. Rappresenta la minima geometria convessa che racchiude tutte le geometria contenute nell'insieme.","title":"convex_hull"},{"location":"gr_funzioni/geometria/convex_hull/#sintassi","text":"convex_hull( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/convex_hull/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/convex_hull/#esempi","text":"geom_to_wkt( convex_hull( geom_from_wkt( 'LINESTRING(3 3, 4 4, 4 10)' ) ) ) \u2192 POLYGON((3 3,4 10,4 4,3 3))","title":"Esempi"},{"location":"gr_funzioni/geometria/convex_hull/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/convex_hull/#osservazioni","text":"La funzione restituisce sempre un poligono.","title":"osservazioni"},{"location":"gr_funzioni/geometria/crosses/","text":"crosses \u21b5 Verifica se una geometria interseca un'altra. Restituisce vero (1) se le geometrie interessate hanno qualche, ma non tutti, punto interno in comune. Sintassi \u21b5 crosses( geometry a , geometry b ) Argomenti \u21b5 geometry a una geometria geometry b una geometria Esempi \u21b5 crosses( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero crosses( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso nota bene \u21b5 -- osservazioni \u21b5 Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry a \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry b \u00e8 $geometry seleziono tutti i comuni crosses (attraversati) dal fiume ARNO PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli attraversati dal fiume ARNO). NOT crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry)","title":"crosses"},{"location":"gr_funzioni/geometria/crosses/#crosses","text":"Verifica se una geometria interseca un'altra. Restituisce vero (1) se le geometrie interessate hanno qualche, ma non tutti, punto interno in comune.","title":"crosses"},{"location":"gr_funzioni/geometria/crosses/#sintassi","text":"crosses( geometry a , geometry b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/crosses/#argomenti","text":"geometry a una geometria geometry b una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/crosses/#esempi","text":"crosses( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero crosses( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso","title":"Esempi"},{"location":"gr_funzioni/geometria/crosses/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/crosses/#osservazioni","text":"Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry a \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry b \u00e8 $geometry seleziono tutti i comuni crosses (attraversati) dal fiume ARNO PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli attraversati dal fiume ARNO). NOT crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry)","title":"osservazioni"},{"location":"gr_funzioni/geometria/difference/","text":"difference \u21b5 Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b . Sintassi \u21b5 difference( geometry_a , geometry_b ) Argomenti \u21b5 geometry_a una geometria geometry_b una geometria Esempi \u21b5 geom_to_wkt( difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(4 4, 5 5) Espressione: -- differenza linea a - linea b difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a -- differenza linea b - linea a difference( make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a prova tu \u21b5 Dati e progetto qgz nota bene \u21b5 -- osservazioni \u21b5 -- Esempio di sopra:","title":"difference"},{"location":"gr_funzioni/geometria/difference/#difference","text":"Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b .","title":"difference"},{"location":"gr_funzioni/geometria/difference/#sintassi","text":"difference( geometry_a , geometry_b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/difference/#argomenti","text":"geometry_a una geometria geometry_b una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/difference/#esempi","text":"geom_to_wkt( difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(4 4, 5 5) Espressione: -- differenza linea a - linea b difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a -- differenza linea b - linea a difference( make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a","title":"Esempi"},{"location":"gr_funzioni/geometria/difference/#prova-tu","text":"Dati e progetto qgz","title":"prova tu"},{"location":"gr_funzioni/geometria/difference/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/difference/#osservazioni","text":"-- Esempio di sopra:","title":"osservazioni"},{"location":"gr_funzioni/geometria/disjoint/","text":"disjoint \u21b5 Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune. Sintassi \u21b5 disjoint( geometry a, geometry b ) Argomenti \u21b5 geometry a una geometria geometry b una geometria Esempi \u21b5 disjoint( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero disjoint( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'POINT(4 4)' )) \u2192 falso nota bene \u21b5 Vero = 1; Falso= 0 osservazioni \u21b5 Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: disjoint(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry a \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry b \u00e8 $geometry seleziono tutti i comuni disjoint (disgiunti) dal fiume ARNO","title":"disjoint"},{"location":"gr_funzioni/geometria/disjoint/#disjoint","text":"Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune.","title":"disjoint"},{"location":"gr_funzioni/geometria/disjoint/#sintassi","text":"disjoint( geometry a, geometry b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/disjoint/#argomenti","text":"geometry a una geometria geometry b una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/disjoint/#esempi","text":"disjoint( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero disjoint( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'POINT(4 4)' )) \u2192 falso","title":"Esempi"},{"location":"gr_funzioni/geometria/disjoint/#nota-bene","text":"Vero = 1; Falso= 0","title":"nota bene"},{"location":"gr_funzioni/geometria/disjoint/#osservazioni","text":"Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: disjoint(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry a \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry b \u00e8 $geometry seleziono tutti i comuni disjoint (disgiunti) dal fiume ARNO","title":"osservazioni"},{"location":"gr_funzioni/geometria/distance/","text":"distance \u21b5 Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate. Sintassi \u21b5 distance( geometry a, geometry b ) Argomenti \u21b5 geometry a una geometria geometry b una geometria Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"distance"},{"location":"gr_funzioni/geometria/distance/#distance","text":"Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate.","title":"distance"},{"location":"gr_funzioni/geometria/distance/#sintassi","text":"distance( geometry a, geometry b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/distance/#argomenti","text":"geometry a una geometria geometry b una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/distance/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/geometria/distance/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/distance/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/distance_to_vertex/","text":"distance_to_vertex \u21b5 Restituisce la distanza lungo una geometria ad un vertice specificato. Sintassi \u21b5 distance_to_vertex( geometry, vertex ) Argomenti \u21b5 geometry una geometria di tipo linestring vertex indice vertice, partendo da 0 Esempi \u21b5 distance_to_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 10.0 nota bene \u21b5 -- osservazioni \u21b5 -- esempio di sopra:","title":"distance_to_vertex"},{"location":"gr_funzioni/geometria/distance_to_vertex/#distance_to_vertex","text":"Restituisce la distanza lungo una geometria ad un vertice specificato.","title":"distance_to_vertex"},{"location":"gr_funzioni/geometria/distance_to_vertex/#sintassi","text":"distance_to_vertex( geometry, vertex )","title":"Sintassi"},{"location":"gr_funzioni/geometria/distance_to_vertex/#argomenti","text":"geometry una geometria di tipo linestring vertex indice vertice, partendo da 0","title":"Argomenti"},{"location":"gr_funzioni/geometria/distance_to_vertex/#esempi","text":"distance_to_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 10.0","title":"Esempi"},{"location":"gr_funzioni/geometria/distance_to_vertex/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/distance_to_vertex/#osservazioni","text":"-- esempio di sopra:","title":"osservazioni"},{"location":"gr_funzioni/geometria/end_point/","text":"end_point \u21b5 Restituisce l'ultimo nodo di una geometria. Sintassi \u21b5 end_point( geometry ) Argomenti \u21b5 geometry oggetto geometria Esempi \u21b5 geom_to_wkt(end_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (0 2)' nota bene \u21b5 -- osservazioni \u21b5 -- End_point di geometria poligonale: End_point di geometria lineare:","title":"end_point"},{"location":"gr_funzioni/geometria/end_point/#end_point","text":"Restituisce l'ultimo nodo di una geometria.","title":"end_point"},{"location":"gr_funzioni/geometria/end_point/#sintassi","text":"end_point( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/end_point/#argomenti","text":"geometry oggetto geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/end_point/#esempi","text":"geom_to_wkt(end_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (0 2)'","title":"Esempi"},{"location":"gr_funzioni/geometria/end_point/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/end_point/#osservazioni","text":"-- End_point di geometria poligonale: End_point di geometria lineare:","title":"osservazioni"},{"location":"gr_funzioni/geometria/expression_qgis216/","text":"funzione descrizione tempo $area 1 More descriptive function help for area/length/perimeter functions 2 years ago $atlasfeature move remaining function_help to json and update it's translation hand\u2026 3 years ago $atlasfeatureid move remaining function_help to json and update it's translation hand\u2026 3 years ago $atlasgeometry move remaining function_help to json and update it's translation hand\u2026 3 years ago $currentfeature 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago $feature move remaining function_help to json and update it's translation hand\u2026 3 years ago $geometry 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago $id 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago $length 1 More descriptive function help for area/length/perimeter functions 2 years ago $map move remaining function_help to json and update it's translation hand\u2026 3 years ago $numfeatures move remaining function_help to json and update it's translation hand\u2026 3 years ago $numpages move remaining function_help to json and update it's translation hand\u2026 3 years ago $page move remaining function_help to json and update it's translation hand\u2026 3 years ago $perimeter 1 More descriptive function help for area/length/perimeter functions 2 years ago $rownum 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago $scale Precise that scale function returns the denominator and not the scale\u2026 2 years ago $x 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago $x_at 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago $y 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago $y_at 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago AND move remaining function_help to json and update it's translation hand\u2026 3 years ago Aggregates Add missing function help (fix #15264) 2 years ago CASE fix linebreaks in function help and CASE (fixes #14189) 2 years ago Color move remaining function_help to json and update it's translation hand\u2026 3 years ago Conditionals move remaining function_help to json and update it's translation hand\u2026 3 years ago Conditions move remaining function_help to json and update it's translation hand\u2026 3 years ago Conversions move remaining function_help to json and update it's translation hand\u2026 3 years ago Custom move remaining function_help to json and update it's translation hand\u2026 3 years ago Date and Time move remaining function_help to json and update it's translation hand\u2026 3 years ago Field fix linebreaks in function help and CASE (fixes #14189) 2 years ago Fields and Values fix linebreaks in function help and CASE (fixes #14189) 2 years ago Fuzzy Matching move remaining function_help to json and update it's translation hand\u2026 3 years ago General move remaining function_help to json and update it's translation hand\u2026 3 years ago GeometryGroup move remaining function_help to json and update it's translation hand\u2026 3 years ago ILIKE [BUGFIX] Expression in like escape % and _ 2 years ago IN move remaining function_help to json and update it's translation hand\u2026 3 years ago IS move remaining function_help to json and update it's translation hand\u2026 3 years ago IS NOT move remaining function_help to json and update it's translation hand\u2026 3 years ago LIKE [BUGFIX] Expression in like escape % and _ 2 years ago Math move remaining function_help to json and update it's translation hand\u2026 3 years ago NOT move remaining function_help to json and update it's translation hand\u2026 3 years ago NULL move remaining function_help to json and update it's translation hand\u2026 3 years ago OR move remaining function_help to json and update it's translation hand\u2026 3 years ago Operators move remaining function_help to json and update it's translation hand\u2026 3 years ago Recent move remaining function_help to json and update it's translation hand\u2026 3 years ago Record move remaining function_help to json and update it's translation hand\u2026 3 years ago String move remaining function_help to json and update it's translation hand\u2026 3 years ago Variables move remaining function_help to json and update it's translation hand\u2026 3 years ago abs move remaining function_help to json and update it's translation hand\u2026 3 years ago acos move remaining function_help to json and update it's translation hand\u2026 3 years ago age fix linebreaks in function help and CASE (fixes #14189) 2 years ago aggregate [FEATURE] Aggregates for expressions 2 years ago area 1 More descriptive function help for area/length/perimeter functions 2 years ago asin move remaining function_help to json and update it's translation hand\u2026 3 years ago atan move remaining function_help to json and update it's translation hand\u2026 3 years ago atan2 move remaining function_help to json and update it's translation hand\u2026 3 years ago attribute move remaining function_help to json and update it's translation hand\u2026 3 years ago azimuth 1 [FEATURE] Allow expression functions to use named parameters 2 years ago bounds 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago bounds_height 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago bounds_width 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago buffer 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago ceil move remaining function_help to json and update it's translation hand\u2026 3 years ago centroid 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago char Add missing function help (fix #15264) 2 years ago clamp move remaining function_help to json and update it's translation hand\u2026 3 years ago closest_point 1 [FEATURE] Add closest_point and shortest_line expression functions 2 years ago coalesce move remaining function_help to json and update it's translation hand\u2026 3 years ago color_cmyk move remaining function_help to json and update it's translation hand\u2026 3 years ago color_cmyka move remaining function_help to json and update it's translation hand\u2026 3 years ago color_hsl move remaining function_help to json and update it's translation hand\u2026 3 years ago color_hsla move remaining function_help to json and update it's translation hand\u2026 3 years ago color_hsv move remaining function_help to json and update it's translation hand\u2026 3 years ago color_hsva move remaining function_help to json and update it's translation hand\u2026 3 years ago color_part Port from expressions+ plugin: color_part, set_color_part, day_of_week 3 years ago color_rgb move remaining function_help to json and update it's translation hand\u2026 3 years ago color_rgba move remaining function_help to json and update it's translation hand\u2026 3 years ago combine 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago concat move remaining function_help to json and update it's translation hand\u2026 3 years ago concatenate [FEATURE] Aggregates for expressions 2 years ago contains 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago convex_hull 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago cos move remaining function_help to json and update it's translation hand\u2026 3 years ago count [FEATURE] Aggregates for expressions 2 years ago count_distinct [FEATURE] Aggregates for expressions 2 years ago count_missing [FEATURE] Aggregates for expressions 2 years ago crosses 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago darker [FEATURE] add darker() and lighter() expression functions 2 years ago day move remaining function_help to json and update it's translation hand\u2026 3 years ago day_of_week Port from expressions+ plugin: color_part, set_color_part, day_of_week 3 years ago degrees [Expression] radians and degrees 2 years ago difference 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago disjoint 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago distance 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago end_point 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago eval [FEATURE] Add an eval expression 2 years ago exp move remaining function_help to json and update it's translation hand\u2026 3 years ago exterior_ring 1 [FEATURE] exterior_ring function for expressions 2 years ago extrude 1 Add extrude function to QgsGeometry 2 years ago floor move remaining function_help to json and update it's translation hand\u2026 3 years ago format move remaining function_help to json and update it's translation hand\u2026 3 years ago format_date move remaining function_help to json and update it's translation hand\u2026 3 years ago format_number move remaining function_help to json and update it's translation hand\u2026 3 years ago geom_from_gml move remaining function_help to json and update it's translation hand\u2026 3 years ago geom_from_wkt move remaining function_help to json and update it's translation hand\u2026 3 years ago geom_to_wkt move remaining function_help to json and update it's translation hand\u2026 3 years ago geometry 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago geometry_n 1 [FEATURE] More geometry functions for expressions 2 years ago get_feature 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago hamming_distance move remaining function_help to json and update it's translation hand\u2026 3 years ago hour move remaining function_help to json and update it's translation hand\u2026 3 years ago if Fix expression \"if\" documentation 2 years ago interior_ring_n 1 [FEATURE] More geometry functions for expressions 2 years ago intersection 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago intersects 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago intersects_bbox 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago iqr [FEATURE] Aggregates for expressions 2 years ago is_closed 1 [FEATURE] is_closed function for expressions 2 years ago layer_property move remaining function_help to json and update it's translation hand\u2026 3 years ago left move remaining function_help to json and update it's translation hand\u2026 3 years ago length 1 More descriptive function help for area/length/perimeter functions 2 years ago levenshtein move remaining function_help to json and update it's translation hand\u2026 3 years ago lighter [FEATURE] add darker() and lighter() expression functions 2 years ago ln move remaining function_help to json and update it's translation hand\u2026 3 years ago log move remaining function_help to json and update it's translation hand\u2026 3 years ago log10 move remaining function_help to json and update it's translation hand\u2026 3 years ago longest_common_substring move remaining function_help to json and update it's translation hand\u2026 3 years ago lower move remaining function_help to json and update it's translation hand\u2026 3 years ago lpad fix lpad/rpad context help (followup b46cbbe) 3 years ago m 1 [expressions] Allow make_point to accept z/m values, add new 3 years ago majority [FEATURE] Aggregates for expressions 2 years ago make_line 1 [expressions] Add make_line and make_polygon functions 3 years ago make_point 1 [expressions] Allow make_point to accept z/m values, add new 3 years ago make_point_m 1 [expressions] Allow make_point to accept z/m values, add new 3 years ago make_polygon 1 [expressions] Add make_line and make_polygon functions 3 years ago max move remaining function_help to json and update it's translation hand\u2026 3 years ago max_length [FEATURE] Aggregates for expressions 2 years ago maximum [FEATURE] Aggregates for expressions 2 years ago mean [FEATURE] Aggregates for expressions 2 years ago median [FEATURE] Aggregates for expressions 2 years ago min move remaining function_help to json and update it's translation hand\u2026 3 years ago min_length [FEATURE] Aggregates for expressions 2 years ago minimum [FEATURE] Aggregates for expressions 2 years ago minority [FEATURE] Aggregates for expressions 2 years ago minute move remaining function_help to json and update it's translation hand\u2026 3 years ago month move remaining function_help to json and update it's translation hand\u2026 3 years ago nodes_to_points 1 [FEATURE] More geometry functions for expressions 2 years ago now move remaining function_help to json and update it's translation hand\u2026 3 years ago num_geometries 1 [FEATURE] More geometry functions for expressions 2 years ago num_interior_rings 1 [FEATURE] More geometry functions for expressions 2 years ago num_points 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago num_rings 1 [FEATURE] More geometry functions for expressions 2 years ago order_parts 1 Fix 2.5D renderer problem when order of walls matters 2 years ago overlaps 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago perimeter 1 More descriptive function help for area/length/perimeter functions 2 years ago pi move remaining function_help to json and update it's translation hand\u2026 3 years ago point_n 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago point_on_surface 1 [expression] add point_on_surface function 2 years ago project 1 [FEATURE] New project(point, distance, bearing) expression function 2 years ago project_color move remaining function_help to json and update it's translation hand\u2026 3 years ago q1 [FEATURE] Aggregates for expressions 2 years ago q3 [FEATURE] Aggregates for expressions 2 years ago radians [Expression] radians and degrees 2 years ago ramp_color move remaining function_help to json and update it's translation hand\u2026 3 years ago rand move remaining function_help to json and update it's translation hand\u2026 3 years ago randf [FEATURE] Allow expression functions to use named parameters 2 years ago range [FEATURE] Aggregates for expressions 2 years ago regexp_match Fix escaping in regexp function help 2 years ago regexp_replace Fix escaping in regexp function help 2 years ago regexp_substr Fix escaping in regexp function help 2 years ago relate Add DE-9IM variant which tests against a specified pattern 3 years ago relation_aggregate [FEATURE] Aggregates for expressions 2 years ago replace move remaining function_help to json and update it's translation hand\u2026 3 years ago reverse 1 [FEATURE] New 'reverse' expression for reversing linestrings 3 years ago right move remaining function_help to json and update it's translation hand\u2026 3 years ago round [FEATURE] Allow expression functions to use named parameters 2 years ago rpad fix lpad/rpad context help (followup b46cbbe) 3 years ago scale_exp move remaining function_help to json and update it's translation hand\u2026 3 years ago scale_linear move remaining function_help to json and update it's translation hand\u2026 3 years ago second move remaining function_help to json and update it's translation hand\u2026 3 years ago segments_to_lines 1 [FEATURE] More geometry functions for expressions 2 years ago set_color_part Port from expressions+ plugin: color_part, set_color_part, day_of_week 3 years ago shortest_line 1 [FEATURE] Add closest_point and shortest_line expression functions 2 years ago sin move remaining function_help to json and update it's translation hand\u2026 3 years ago soundex move remaining function_help to json and update it's translation hand\u2026 3 years ago sqrt move remaining function_help to json and update it's translation hand\u2026 3 years ago start_point 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago stdev [FEATURE] Aggregates for expressions 2 years ago strpos also update strpos function help (followup 2a557db) 3 years ago substr move remaining function_help to json and update it's translation hand\u2026 3 years ago sum [FEATURE] Aggregates for expressions 2 years ago sym_difference move remaining function_help to json and update it's translation hand\u2026 3 years ago tan move remaining function_help to json and update it's translation hand\u2026 3 years ago title move remaining function_help to json and update it's translation hand\u2026 3 years ago to_date move remaining function_help to json and update it's translation hand\u2026 3 years ago to_datetime move remaining function_help to json and update it's translation hand\u2026 3 years ago to_int move remaining function_help to json and update it's translation hand\u2026 3 years ago to_interval move remaining function_help to json and update it's translation hand\u2026 3 years ago to_real move remaining function_help to json and update it's translation hand\u2026 3 years ago to_string move remaining function_help to json and update it's translation hand\u2026 3 years ago to_time move remaining function_help to json and update it's translation hand\u2026 3 years ago touches 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago transform 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago translate 1 [FEATURE] Add translate expression function 2 years ago trim move remaining function_help to json and update it's translation hand\u2026 3 years ago union 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago upper move remaining function_help to json and update it's translation hand\u2026 3 years ago uuid move remaining function_help to json and update it's translation hand\u2026 3 years ago var move remaining function_help to json and update it's translation hand\u2026 3 years ago week move remaining function_help to json and update it's translation hand\u2026 3 years ago within 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago wordwrap fix linebreaks in function help and CASE (fixes #14189) 2 years ago x 1 Add more example 2 years ago x_max 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago x_min 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago y 1 Add more example 2 years ago y_max 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago y_min 1 move remaining function_help to json and update it's translation hand\u2026 3 years ago year move remaining function_help to json and update it's translation hand\u2026 3 years ago z 1 [expressions] Allow make_point to accept z/m values, add new 3 years ago","title":"Expression qgis216"},{"location":"gr_funzioni/geometria/extend/","text":"extend \u21b5 Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata. Le linee sono estese usando la direzione di immersione del primo e dell'ultimo segmento nella linea. Le distanze sono espresse nel SR di tale geometria. Sintassi \u21b5 extend( geometry, start_distance, end_distance ) Argomenti \u21b5 geometry una geometria (multi)linestring start_distance distanza alla quale estendere l'inizio della linea end_distance distanza alla quale estendere la fine della linea. Esempi \u21b5 geom_to_wkt(extend(geom_from_wkt('LineString(0 0, 1 0, 1 1)'),1,2)) \u2192 LineString (-1 0, 1 0, 1 3) nota bene \u21b5 -- osservazioni \u21b5 --","title":"extend"},{"location":"gr_funzioni/geometria/extend/#extend","text":"Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata. Le linee sono estese usando la direzione di immersione del primo e dell'ultimo segmento nella linea. Le distanze sono espresse nel SR di tale geometria.","title":"extend"},{"location":"gr_funzioni/geometria/extend/#sintassi","text":"extend( geometry, start_distance, end_distance )","title":"Sintassi"},{"location":"gr_funzioni/geometria/extend/#argomenti","text":"geometry una geometria (multi)linestring start_distance distanza alla quale estendere l'inizio della linea end_distance distanza alla quale estendere la fine della linea.","title":"Argomenti"},{"location":"gr_funzioni/geometria/extend/#esempi","text":"geom_to_wkt(extend(geom_from_wkt('LineString(0 0, 1 0, 1 1)'),1,2)) \u2192 LineString (-1 0, 1 0, 1 3)","title":"Esempi"},{"location":"gr_funzioni/geometria/extend/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/extend/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/exterior_ring/","text":"exterior_ring \u21b5 Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 nullo. Sintassi \u21b5 exterior_ring( geometry ) Argomenti \u21b5 geometry una geometria poligono Esempi \u21b5 geom_to_wkt(exterior_ring(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2, 0.1, 0.1 0.1))'))) \u2192 'LineString (-1 -1, 4 0, 4 2, 0 2, -1 -1)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"exterior_ring"},{"location":"gr_funzioni/geometria/exterior_ring/#exterior_ring","text":"Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 nullo.","title":"exterior_ring"},{"location":"gr_funzioni/geometria/exterior_ring/#sintassi","text":"exterior_ring( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/exterior_ring/#argomenti","text":"geometry una geometria poligono","title":"Argomenti"},{"location":"gr_funzioni/geometria/exterior_ring/#esempi","text":"geom_to_wkt(exterior_ring(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2, 0.1, 0.1 0.1))'))) \u2192 'LineString (-1 -1, 4 0, 4 2, 0 2, -1 -1)'","title":"Esempi"},{"location":"gr_funzioni/geometria/exterior_ring/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/exterior_ring/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/extrude/","text":"extrude \u21b5 Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y. Sintassi \u21b5 extrude( geometry, x, y ) Argomenti \u21b5 geometry una geometria poligono x estensione x, valore numerico y estensione y, valore numerico Esempi \u21b5 extrude(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), 1, 2) \u2192 Polygon ((1 2, 3 2, 4 3, 5 5, 4 4, 2 4, 1 2)) extrude(geom_from_wkt('MultiLineString((1 2, 3 2), (4 3, 8 3)'), 1, 2) \u2192 MultiPolygon (((1 2, 3 2, 4 4, 2 4, 1 2)),((4 3, 8 3, 9 5, 5 5, 4 3))) nota bene \u21b5 -- osservazioni \u21b5 Nell'esempio ho utilizzato la funzione boundary() perch\u00e9 la geometria di ingresso deve essere lineare.","title":"extrude"},{"location":"gr_funzioni/geometria/extrude/#extrude","text":"Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y.","title":"extrude"},{"location":"gr_funzioni/geometria/extrude/#sintassi","text":"extrude( geometry, x, y )","title":"Sintassi"},{"location":"gr_funzioni/geometria/extrude/#argomenti","text":"geometry una geometria poligono x estensione x, valore numerico y estensione y, valore numerico","title":"Argomenti"},{"location":"gr_funzioni/geometria/extrude/#esempi","text":"extrude(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), 1, 2) \u2192 Polygon ((1 2, 3 2, 4 3, 5 5, 4 4, 2 4, 1 2)) extrude(geom_from_wkt('MultiLineString((1 2, 3 2), (4 3, 8 3)'), 1, 2) \u2192 MultiPolygon (((1 2, 3 2, 4 4, 2 4, 1 2)),((4 3, 8 3, 9 5, 5 5, 4 3)))","title":"Esempi"},{"location":"gr_funzioni/geometria/extrude/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/extrude/#osservazioni","text":"Nell'esempio ho utilizzato la funzione boundary() perch\u00e9 la geometria di ingresso deve essere lineare.","title":"osservazioni"},{"location":"gr_funzioni/geometria/flip_coordinates/","text":"flip_coordinates \u21b5 Restituisce una copia della geometria con le coordinate x e y scambiate. Utile per riparare le geometrie che hanno invertito i valori di latitudine e longitudine. Sintassi \u21b5 flip_coordinates( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 geom_to_wkt(flip_coordinates(make_point(1, 2))) \u2192 Point (2 1) nota bene \u21b5 -- osservazioni \u21b5 -- Esempio con vettore poligonale (aggiorno la geometry): il flip \u00e8 da usare con cautela perch\u00e9 cambia radicalemnte la posizione del vettore","title":"flip_coordinates"},{"location":"gr_funzioni/geometria/flip_coordinates/#flip_coordinates","text":"Restituisce una copia della geometria con le coordinate x e y scambiate. Utile per riparare le geometrie che hanno invertito i valori di latitudine e longitudine.","title":"flip_coordinates"},{"location":"gr_funzioni/geometria/flip_coordinates/#sintassi","text":"flip_coordinates( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/flip_coordinates/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/flip_coordinates/#esempi","text":"geom_to_wkt(flip_coordinates(make_point(1, 2))) \u2192 Point (2 1)","title":"Esempi"},{"location":"gr_funzioni/geometria/flip_coordinates/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/flip_coordinates/#osservazioni","text":"-- Esempio con vettore poligonale (aggiorno la geometry): il flip \u00e8 da usare con cautela perch\u00e9 cambia radicalemnte la posizione del vettore","title":"osservazioni"},{"location":"gr_funzioni/geometria/force_rhr/","text":"force_rhr \u21b5 Forza una geometria a rispettare la regola della mano destra, in cui l'area delimitata da un poligono si trova a destra del limite. In particolare, l'anello esterno \u00e8 orientato in senso orario e l'interno in senso antiorario. Sintassi \u21b5 force_rhr( geometry ) Argomenti \u21b5 geometry una geometria. Qualsiasi geometria non poligonale viene restituita invariata. Esempi \u21b5 geom_to_wkt(force_rhr(geometry:=geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'))) \u2192 Polygon ((-1 -1, 0 2, 4 2, 4 0, -1 -1)) nota bene \u21b5 -- osservazioni \u21b5 Ecco un esempio pratico della funzione (presente anche nelgli strumenti fi processing) ovvero un poligono disegnato in senso antiorario viene forzato in senso orario e l'etichettature \u00e8 visibile correttamente.","title":"force_rhr"},{"location":"gr_funzioni/geometria/force_rhr/#force_rhr","text":"Forza una geometria a rispettare la regola della mano destra, in cui l'area delimitata da un poligono si trova a destra del limite. In particolare, l'anello esterno \u00e8 orientato in senso orario e l'interno in senso antiorario.","title":"force_rhr"},{"location":"gr_funzioni/geometria/force_rhr/#sintassi","text":"force_rhr( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/force_rhr/#argomenti","text":"geometry una geometria. Qualsiasi geometria non poligonale viene restituita invariata.","title":"Argomenti"},{"location":"gr_funzioni/geometria/force_rhr/#esempi","text":"geom_to_wkt(force_rhr(geometry:=geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'))) \u2192 Polygon ((-1 -1, 0 2, 4 2, 4 0, -1 -1))","title":"Esempi"},{"location":"gr_funzioni/geometria/force_rhr/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/force_rhr/#osservazioni","text":"Ecco un esempio pratico della funzione (presente anche nelgli strumenti fi processing) ovvero un poligono disegnato in senso antiorario viene forzato in senso orario e l'etichettature \u00e8 visibile correttamente.","title":"osservazioni"},{"location":"gr_funzioni/geometria/geom_from_gml/","text":"geom_from_gml \u21b5 Restituisce una geometria da una rappresentazione GML di una geometria. Sintassi \u21b5 geom_from_gml(gml) Argomenti \u21b5 gml Rappresentazione GML di una geometria come stringa Esempi \u21b5 geom_to_wkt(geom_from_gml('<gml:LineString srsName=\"EPSG:4326\"><gml:coordinates>4,4 5,5 6,6</gml:coordinates></gml:LineString>') ) \u2192 'LineString (4 4, 5 5, 6 6)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"geom_from_gml"},{"location":"gr_funzioni/geometria/geom_from_gml/#geom_from_gml","text":"Restituisce una geometria da una rappresentazione GML di una geometria.","title":"geom_from_gml"},{"location":"gr_funzioni/geometria/geom_from_gml/#sintassi","text":"geom_from_gml(gml)","title":"Sintassi"},{"location":"gr_funzioni/geometria/geom_from_gml/#argomenti","text":"gml Rappresentazione GML di una geometria come stringa","title":"Argomenti"},{"location":"gr_funzioni/geometria/geom_from_gml/#esempi","text":"geom_to_wkt(geom_from_gml('<gml:LineString srsName=\"EPSG:4326\"><gml:coordinates>4,4 5,5 6,6</gml:coordinates></gml:LineString>') ) \u2192 'LineString (4 4, 5 5, 6 6)'","title":"Esempi"},{"location":"gr_funzioni/geometria/geom_from_gml/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/geom_from_gml/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/geom_from_wkb/","text":"geom_from_wkb \u21b5 Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB). Sintassi \u21b5 geom_from_wkb( binari ) Argomenti \u21b5 binari Rappresentazione binaria ben nota (WKB) di una geometria (come BLOB binario) Esempi \u21b5 geom_from_wkb( geom_to_wkb( make_point(4,5) ) ) \u2192 un oggetto geometria punto nota bene \u21b5 -- osservazioni \u21b5 --","title":"geom_from_wkb"},{"location":"gr_funzioni/geometria/geom_from_wkb/#geom_from_wkb","text":"Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB).","title":"geom_from_wkb"},{"location":"gr_funzioni/geometria/geom_from_wkb/#sintassi","text":"geom_from_wkb( binari )","title":"Sintassi"},{"location":"gr_funzioni/geometria/geom_from_wkb/#argomenti","text":"binari Rappresentazione binaria ben nota (WKB) di una geometria (come BLOB binario)","title":"Argomenti"},{"location":"gr_funzioni/geometria/geom_from_wkb/#esempi","text":"geom_from_wkb( geom_to_wkb( make_point(4,5) ) ) \u2192 un oggetto geometria punto","title":"Esempi"},{"location":"gr_funzioni/geometria/geom_from_wkb/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/geom_from_wkb/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/geom_from_wkt/","text":"geom_from_wkt \u21b5 Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT). Sintassi \u21b5 geom_from_wkt( text ) Argomenti \u21b5 text Rappresentazione Well-Known Text (WKT) di una geometria Esempi \u21b5 geom_from_wkt( 'POINT(4 5)' ) \u2192 un oggetto geometria nota bene \u21b5 -- osservazioni \u21b5 --","title":"geom_from_wkt"},{"location":"gr_funzioni/geometria/geom_from_wkt/#geom_from_wkt","text":"Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT).","title":"geom_from_wkt"},{"location":"gr_funzioni/geometria/geom_from_wkt/#sintassi","text":"geom_from_wkt( text )","title":"Sintassi"},{"location":"gr_funzioni/geometria/geom_from_wkt/#argomenti","text":"text Rappresentazione Well-Known Text (WKT) di una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/geom_from_wkt/#esempi","text":"geom_from_wkt( 'POINT(4 5)' ) \u2192 un oggetto geometria","title":"Esempi"},{"location":"gr_funzioni/geometria/geom_from_wkt/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/geom_from_wkt/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/geom_to_wkb/","text":"geom_to_wkb \u21b5 Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario. Sintassi \u21b5 geom_to_wkb( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 geom_to_wkb( $geometry ) \u2192 BLOB binario contenente un oggetto geometria nota bene \u21b5 -- osservazioni \u21b5 --","title":"geom_to_wkb"},{"location":"gr_funzioni/geometria/geom_to_wkb/#geom_to_wkb","text":"Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario.","title":"geom_to_wkb"},{"location":"gr_funzioni/geometria/geom_to_wkb/#sintassi","text":"geom_to_wkb( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/geom_to_wkb/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/geom_to_wkb/#esempi","text":"geom_to_wkb( $geometry ) \u2192 BLOB binario contenente un oggetto geometria","title":"Esempi"},{"location":"gr_funzioni/geometria/geom_to_wkb/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/geom_to_wkb/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/geom_to_wkt/","text":"geom_to_wkt \u21b5 Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR Sintassi \u21b5 geom_to_wkt( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 geom_to_wkt( $geometry ) \u2192 POINT(6 50) nota bene \u21b5 -- osservazioni \u21b5 --","title":"geom_to_wkt"},{"location":"gr_funzioni/geometria/geom_to_wkt/#geom_to_wkt","text":"Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR","title":"geom_to_wkt"},{"location":"gr_funzioni/geometria/geom_to_wkt/#sintassi","text":"geom_to_wkt( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/geom_to_wkt/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/geom_to_wkt/#esempi","text":"geom_to_wkt( $geometry ) \u2192 POINT(6 50)","title":"Esempi"},{"location":"gr_funzioni/geometria/geom_to_wkt/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/geom_to_wkt/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/geometria/","text":"Geometria \u21b5 Manuale QGIS - in Inglese! Questo gruppo contiene funzioni che operano sugli oggetti geometrici es. lunghezza , area . Funzione Descrizione QGIS $area Restituisce l'area della geometria corrente 2.18 $geometry Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni 2.18 $length Restituisce la lunghezza di una linestring 2.18 $perimeter Restituisce la lunghezza del perimetro della geometria corrente 2.18 $x Restituisce la coordinata x della geometria corrente 2.18 $x_at Recupera una coordinata x per la geometria dell'elemento corrente 2.18 $y Restituisce la coordinata y della geometria corrente 2.18 $y_at Recupera una coordinata y per la geometria dell'elemento corrente 2.18 angle_at_vertex Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. >=2.18 area Restituisce l'area di un oggetto a geometria poligonale 2.18 azimuth Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. 2.18 boundary Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria) >=2.18 bounds Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 bounds_height Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 bounds_width Restituisce la larghezza del perimetro di delimitazione una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 buffer Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita 2.18 buffer_by_m Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in base ai valori m nei vertici della linea >=3.2 centroid Restituisce il centro geometrico di una geometria 2.18 close_line Restituisce una linestring chiusa della linestring >=3.14 closest_point Restituisce il punto sulla geometria 1 che \u00e8 pi\u00f9 vicino alla geometria 2 >=2.14 collect_geometries Raccoglie un set di geometrie in un oggetto geometria multiparte. >=3.10 combine Restituisce la combinazione di due geometrie 2.18 contains Verifica se una geometria ne contiene un'altra 2.18 convex_hull Restituisce il poligono convesso di una geometria 2.18 crosses Verifica se una geometria interseca un'altra 2.18 difference Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b 2.18 disjoint Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune 2.18 distance Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate 2.18 distance_to_vertex Restituisce la distanza lungo un geometria ad un vertice specificato >=2.18 end_point Restituisce l'ultimo nodo di una geometria 2.18 extend Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata >=3.0 exterior_ring Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 nullo. >=2.14 extrude Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y. 2.18 flip_coordinates Restituisce una copia della geometria con le coordinate x e y scambiate >=3.2 geom_from_gml Restituisce una geometria da una rappresentazione GML di una geometria 2.18 geom_from_wkb Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB). >=3.12 geom_from_wkt Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT) 2.18 geom_to_wkb Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario. >=3.12 geom_to_wkt Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR 2.18 geometry Restituisce la geometria di un elemento 2.18 geometry_n Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta >=2.14 hausdorff_distance Restituisce la distanza di Hausdorff tra due geometrie >=3.0 inclination Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b >=3.0 interior_ring_n Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono >=2.14 intersection Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie 2.18 intersects Controlla qualora una geometria ne interseca un'altra 2.18 intersects_bbox Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria 2.18 is_closed Restituisce vero se una line string \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso se una linea string non \u00e8 chiusa >=2.14 is_empty Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null . >=3.12 is_empty_or_null Restituisce vero se una geometria \u00e8 NULL o vuota (senza coordinate) o false in caso contrario. Questa funzione \u00e8 come l'espressione \"$ geometry IS NULL o is_empty ($ geometry)\". >=3.12 is_multipart Restituisce vero se la geometria \u00e8 Multi. >=3.14 is_valid Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole OGC >=3.12 length Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring 2.18 line_interpolate_angle Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring >=2.18 line_interpolate_point Restituisce il punto interpolato ad una specifica distanza lungo un geometria di tipo linestring >=2.18 line_locate_point Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata >=2.18 line_merge Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola >=2.18 line_substring Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate >=3.4 m Restituisce il valore m di una geometria puntuale >=2.14 m_max Restituisce il valore massimo m (misura) di una geometria >=3.14 m_min Restituisce il valore minimo m (misura) di una geometria >=3.14 main_angle Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria. >=3.16 make_circle Crea un poligono circolare >=3.0 make_ellipse Crea un poligono ellittico >=3.0 make_line Crea una geometria linea da una serie di geometrie punto >=2.14 make_point Crea una geometria punto da valori x ed y (e opzionalmente z ed m) >=2.14 make_point_m Crea una geometria punto da una coordinata x, y ed un valore m >=2.14 make_polygon Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne >=2.14 make_rectangle_3points Crea un rettangolo da tre punti >=3.6 make_regular_polygon Crea un poligono regolare >=3.0 make_square Crea un quadrato da una diagonale >=3.6 make_triangle Crea un poligono triangolare >=3.0 minimal_circle Restituisce la circonferenza circoscritta minima di una geometria >=3.0 nodes_to_points Restituisce una geometria multi linea costituita da ogni nodo della geometria in ingresso >=2.14 num_geometries Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta >=2.14 num_interior_rings Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta >=2.14 num_points Restituisce il numero di vertici in una geometria 2.18 num_rings Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta >=2.14 offset_curve Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato >=3.0 order_parts Ordina le parti di una MultiGeometria secondo un dato criterio 2.18 oriented_bbox Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria >=3.0 overlaps Controlla qualora una geometria si sovrapponga ad un'altra 2.18 overlay_contains Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. >=3.16 overlay_crosses Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento da un layer destinazione o un array di risultati basati su espressioni per gli elementi nel layer destinazione attraversati dall'elemento corrente. >=3.16 overlay_disjoint Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che sono disgiunti dall'elemento corrente. >=3.16 overlay_equals Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer di destinazione o una matrice di risultati basati su espressioni per gli elementi nel layer di destinazione che sono spazialmente uguali all'elemento corrente. >=3.16 overlay_intersects Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer di destinazione o un array di risultati basati su espressioni per gli elementi nel layer di destinazione intersecati dall'elemento corrente. >=3.16 overlay_nearest Restituisce se l'elemento corrente ha elementi da un layer di destinazione entro una data distanza o una matrice di risultati basati su espressioni per gli elementi nel layer di destinazione entro una distanza dall'elemento corrente. >=3.16 overlay_touches Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer di destinazione o un array di risultati basati su espressioni per gli elementi nel layer di destinazione toccati dall'elemento corrente. >=3.16 overlay_within Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. >=3.16 perimeter Calcola il perimetro di un oggetto a geometria poligonale 2.18 point_n Restituisce un nodo specifico da una geometria 2.18 point_on_surface Restituisce un punto garantendo che sia giacente sulla superficie della geometria >=2.14 pole_of_inaccessibility Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie >=3.0 project Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti 2.18 relate Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie >=2.14 reverse Inverte la direzione di una line string invertendo l'ordine dei sui vertici >=2.14 rotate Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria. >=3.12 segments_to_lines Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso >=2.14 shortest_line Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2 >=2.14 simplify Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker) >=3.0 simplify_vw Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ) >=3.0 single_sided_buffer Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring >=3.0 smooth Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria >=3.0 start_point Restituisce il primo nodo di una geometria 2.18 sym_difference Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca 2.18 tapered_buffer Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea >=3.2 touches Verifica se una geometria tocca un'altra 2.18 transform Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione 2.18 translate Restituisce una versione traslata di una geometria >=2.14 union Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie 2.18 wedge_buffer Restituisce un buffer a forma di cuneo che ha origine da una geometria del punto >=3.2 within Controlla qualora una geometria sia interna ad un'altra 2.18 x Restituisce la coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale 2.18 x_min Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 x_max Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 y Restituisce la coordinata y di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale 2.18 y_min Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 y_max Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 z Restituisce la coordinata z di una geometria puntuale >=2.14 z_max Restituisce la coordinata z massima di una geometria. >=3.14 z_min Restituisce la coordinata z minima di una geometria. >=3.14 Evoluzione funzioni \u21b5","title":"Geometria"},{"location":"gr_funzioni/geometria/geometria/#geometria","text":"Manuale QGIS - in Inglese! Questo gruppo contiene funzioni che operano sugli oggetti geometrici es. lunghezza , area . Funzione Descrizione QGIS $area Restituisce l'area della geometria corrente 2.18 $geometry Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni 2.18 $length Restituisce la lunghezza di una linestring 2.18 $perimeter Restituisce la lunghezza del perimetro della geometria corrente 2.18 $x Restituisce la coordinata x della geometria corrente 2.18 $x_at Recupera una coordinata x per la geometria dell'elemento corrente 2.18 $y Restituisce la coordinata y della geometria corrente 2.18 $y_at Recupera una coordinata y per la geometria dell'elemento corrente 2.18 angle_at_vertex Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. >=2.18 area Restituisce l'area di un oggetto a geometria poligonale 2.18 azimuth Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. 2.18 boundary Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria) >=2.18 bounds Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 bounds_height Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 bounds_width Restituisce la larghezza del perimetro di delimitazione una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 buffer Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita 2.18 buffer_by_m Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in base ai valori m nei vertici della linea >=3.2 centroid Restituisce il centro geometrico di una geometria 2.18 close_line Restituisce una linestring chiusa della linestring >=3.14 closest_point Restituisce il punto sulla geometria 1 che \u00e8 pi\u00f9 vicino alla geometria 2 >=2.14 collect_geometries Raccoglie un set di geometrie in un oggetto geometria multiparte. >=3.10 combine Restituisce la combinazione di due geometrie 2.18 contains Verifica se una geometria ne contiene un'altra 2.18 convex_hull Restituisce il poligono convesso di una geometria 2.18 crosses Verifica se una geometria interseca un'altra 2.18 difference Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b 2.18 disjoint Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune 2.18 distance Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate 2.18 distance_to_vertex Restituisce la distanza lungo un geometria ad un vertice specificato >=2.18 end_point Restituisce l'ultimo nodo di una geometria 2.18 extend Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata >=3.0 exterior_ring Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 nullo. >=2.14 extrude Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y. 2.18 flip_coordinates Restituisce una copia della geometria con le coordinate x e y scambiate >=3.2 geom_from_gml Restituisce una geometria da una rappresentazione GML di una geometria 2.18 geom_from_wkb Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB). >=3.12 geom_from_wkt Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT) 2.18 geom_to_wkb Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario. >=3.12 geom_to_wkt Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR 2.18 geometry Restituisce la geometria di un elemento 2.18 geometry_n Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta >=2.14 hausdorff_distance Restituisce la distanza di Hausdorff tra due geometrie >=3.0 inclination Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b >=3.0 interior_ring_n Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono >=2.14 intersection Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie 2.18 intersects Controlla qualora una geometria ne interseca un'altra 2.18 intersects_bbox Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria 2.18 is_closed Restituisce vero se una line string \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso se una linea string non \u00e8 chiusa >=2.14 is_empty Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null . >=3.12 is_empty_or_null Restituisce vero se una geometria \u00e8 NULL o vuota (senza coordinate) o false in caso contrario. Questa funzione \u00e8 come l'espressione \"$ geometry IS NULL o is_empty ($ geometry)\". >=3.12 is_multipart Restituisce vero se la geometria \u00e8 Multi. >=3.14 is_valid Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole OGC >=3.12 length Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring 2.18 line_interpolate_angle Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring >=2.18 line_interpolate_point Restituisce il punto interpolato ad una specifica distanza lungo un geometria di tipo linestring >=2.18 line_locate_point Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata >=2.18 line_merge Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola >=2.18 line_substring Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate >=3.4 m Restituisce il valore m di una geometria puntuale >=2.14 m_max Restituisce il valore massimo m (misura) di una geometria >=3.14 m_min Restituisce il valore minimo m (misura) di una geometria >=3.14 main_angle Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria. >=3.16 make_circle Crea un poligono circolare >=3.0 make_ellipse Crea un poligono ellittico >=3.0 make_line Crea una geometria linea da una serie di geometrie punto >=2.14 make_point Crea una geometria punto da valori x ed y (e opzionalmente z ed m) >=2.14 make_point_m Crea una geometria punto da una coordinata x, y ed un valore m >=2.14 make_polygon Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne >=2.14 make_rectangle_3points Crea un rettangolo da tre punti >=3.6 make_regular_polygon Crea un poligono regolare >=3.0 make_square Crea un quadrato da una diagonale >=3.6 make_triangle Crea un poligono triangolare >=3.0 minimal_circle Restituisce la circonferenza circoscritta minima di una geometria >=3.0 nodes_to_points Restituisce una geometria multi linea costituita da ogni nodo della geometria in ingresso >=2.14 num_geometries Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta >=2.14 num_interior_rings Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta >=2.14 num_points Restituisce il numero di vertici in una geometria 2.18 num_rings Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta >=2.14 offset_curve Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato >=3.0 order_parts Ordina le parti di una MultiGeometria secondo un dato criterio 2.18 oriented_bbox Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria >=3.0 overlaps Controlla qualora una geometria si sovrapponga ad un'altra 2.18 overlay_contains Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. >=3.16 overlay_crosses Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento da un layer destinazione o un array di risultati basati su espressioni per gli elementi nel layer destinazione attraversati dall'elemento corrente. >=3.16 overlay_disjoint Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che sono disgiunti dall'elemento corrente. >=3.16 overlay_equals Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer di destinazione o una matrice di risultati basati su espressioni per gli elementi nel layer di destinazione che sono spazialmente uguali all'elemento corrente. >=3.16 overlay_intersects Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer di destinazione o un array di risultati basati su espressioni per gli elementi nel layer di destinazione intersecati dall'elemento corrente. >=3.16 overlay_nearest Restituisce se l'elemento corrente ha elementi da un layer di destinazione entro una data distanza o una matrice di risultati basati su espressioni per gli elementi nel layer di destinazione entro una distanza dall'elemento corrente. >=3.16 overlay_touches Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer di destinazione o un array di risultati basati su espressioni per gli elementi nel layer di destinazione toccati dall'elemento corrente. >=3.16 overlay_within Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. >=3.16 perimeter Calcola il perimetro di un oggetto a geometria poligonale 2.18 point_n Restituisce un nodo specifico da una geometria 2.18 point_on_surface Restituisce un punto garantendo che sia giacente sulla superficie della geometria >=2.14 pole_of_inaccessibility Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie >=3.0 project Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti 2.18 relate Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie >=2.14 reverse Inverte la direzione di una line string invertendo l'ordine dei sui vertici >=2.14 rotate Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria. >=3.12 segments_to_lines Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso >=2.14 shortest_line Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2 >=2.14 simplify Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker) >=3.0 simplify_vw Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ) >=3.0 single_sided_buffer Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring >=3.0 smooth Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria >=3.0 start_point Restituisce il primo nodo di una geometria 2.18 sym_difference Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca 2.18 tapered_buffer Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea >=3.2 touches Verifica se una geometria tocca un'altra 2.18 transform Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione 2.18 translate Restituisce una versione traslata di una geometria >=2.14 union Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie 2.18 wedge_buffer Restituisce un buffer a forma di cuneo che ha origine da una geometria del punto >=3.2 within Controlla qualora una geometria sia interna ad un'altra 2.18 x Restituisce la coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale 2.18 x_min Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 x_max Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 y Restituisce la coordinata y di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale 2.18 y_min Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 y_max Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria 2.18 z Restituisce la coordinata z di una geometria puntuale >=2.14 z_max Restituisce la coordinata z massima di una geometria. >=3.14 z_min Restituisce la coordinata z minima di una geometria. >=3.14","title":"Geometria"},{"location":"gr_funzioni/geometria/geometria/#evoluzione-funzioni","text":"","title":"Evoluzione funzioni"},{"location":"gr_funzioni/geometria/geometria_unico/","text":"Gruppo Geometria \u21b5 Abstract Questo gruppo contiene funzioni che operano sugli oggetti geometrici es: lunghezza , area . $area \u21b5 Restituisce l'area della geometria corrente. L'area calcolata da questa funzione rispetta sia le impostazioni dell'ellissoide del progetto corrente sia delle unit\u00e0 di misura. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora l'area calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide l'area calcolata sar\u00e0 planimetrica. Sintassi: $area Esempi: $area \u2192 131196498,619546 Nota bene: Se il SR del progetto in cui si sta calcolando l'area ( $area ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) allora l'unit\u00e0 di misura sarebbe il metro, invece se il SR del progetto fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe gradi e quindi poco comprensibile e valori piccoli (0.00001). Osservazione: in generale $area <> area($geometry) $geometry \u21b5 Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni. Sintassi: $geometry Esempi: geomToWKT( $geometry ) \u2192 POINT(6 50) area($geoamtry) \u2192 1234567.89 mq perimeter($geometry) \u2192 25689.25 m Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti. $length \u21b5 Restituisce la lunghezza di una linestring. Se hai bisogno della lunghezza del bordo di un poligono, utilizza invece $perimeter . La lunghezza calcolata da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora la lunghezza calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide la lunghezza calcolata sar\u00e0 planimetrica. Sintassi: $length Esempi: $length \u2192 42.4711 Osservazione: Come evidenziano nella definizione della funzione, $length calcola la lunghezza rispettando le impostazioni di progetto: Occorre cambiare entrambe le impostazioni, sia quelle dell'ellissoide \u2192 'None/Planimetric' sia le Unit\u00e0 di misura per le distanze' \u2192 Gradi Queste modofiche non valgono per l'etichettatura, la lunghezza sar\u00e0 quella relativa alla geometria e quindi al suo SR. Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti. $perimeter \u21b5 Restituisce la lunghezza del perimetro della geometria corrente. Il perimetro calcolato da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora il perimetro calcolato sar\u00e0 ellisoidico altrimenti se non \u00e8 stato impostato alcun ellissoide il perimetro calcolato sar\u00e0 planimetrico. Sintassi: $perimeter Esempi: $perimeter \u2192 2545897.26 Nota bene: Si utilizza SOLO per i poligoni, nel caso di feature lineari $length Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti. $x \u21b5 Restituisce la coordinata x della geometria corrente. Sintassi: $x Esempi: $x \u2192 12.2568971 Osservazione: La funzione $x restituisce la coordinata x della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni ed: x($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon) $x_at \u21b5 Recupera una coordinata x per la geometria dell'elemento corrente. Sintassi: $x_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi: $x_at(1) \u2192 12.6882843 Osservazioni: Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice. $y \u21b5 Restituisce la coordinata y della geometria corrente. Sintassi: $y Esempi: $y \u2192 12.2568971 Osservazione: La funzione $y restituisce la coordinata y della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni es: y($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon) $y_at \u21b5 Recupera una coordinata y per la geometria dell'elemento corrente. Sintassi: $y_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi: $y_at(1) \u2192 2 Osservazioni: Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice. angle_at_vertex \u21b5 Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: angle_at_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0 Esempi: angle_at_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 45.0 Osservazione: Il primo ed ultimo vertice di una lineastring aperta la funzione restituisce il valore dell'angolo e non la bisettrice. area \u21b5 Restituisce l'area di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura dell'area restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $area, la quale esegue calcoli ellisoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura dell'area. Sintassi: area( geometry ) Argomenti: geometry oggetto geometria poligono Esempi: area($geometry) \u2192 1234.567 Nota bene: Se il SR del layer in cui si sta calcolando l'area ( area() ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) l'unit\u00e0 di misura sarebbe il metro, invece se il SR del layer fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe in gradi e quindi poco comprensibile e valori piccoli. Osservazioni: in generale area($geometry) <> $area Azimuth \u21b5 Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi: azimuth( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689 Osservazione: Azimuth per definizione restituisce un angolo in radianti, per trasformarlo in gradi usare la funzione degrees() boundary \u21b5 Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria). Per esempio, una geometria poligonale avr\u00e0 un confine costituito dalle linee di ogni anello nel poligono. Alcuni tipi di geometrie non hanno confini, es collezioni di punti o geometrie e pertanto verr\u00e0 restituito null. Sintassi: boundary( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(boundary(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'LineString(1 1,0 0,-1 1,1 1)' geom_to_wkt(boundary(geom_from_wkt('LineString(1 1,0 0,-1 1)'))) \u2192 'MultiPoint ((1 1),(-1 1))' Osservazioni: funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator bounds \u21b5 Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds( geometry ) Argomenti: geometry una geometria Esempi: bounds($geometry) \u2192 perimetro di delimitazione dell'elemento geometrico corrente geom_to_wkt(bounds(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'Polygon ((-1 0, 1 0, 1 1, -1 1, -1 0))' Osservazioni: funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator bounds_height \u21b5 Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_height( geometry ) Argomenti: geometry una geometria Esempi: bounds_height($geometry) \u2192 altezza del perimetro di delimitazione dell'elemento geometrico corrente bounds_height(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')) \u2192 1 Osservazioni: La funzione restituisce un numero che corrisponde all'altezza del rettangolo di ingombro di una geometria. bounds_width \u21b5 Restituisce la larghezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_width( geometry ) Argomenti: geometry una geometria Esempi: bounds_width($geometry) \u2192 larghezza del perimetro di delimitazione di $geometry Osservazioni: La funzione restituisce un numero che corrisponde alla larghezza del rettangolo di ingombro di una geometria. buffer \u21b5 Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita. I calcoli vengono effettuati nel sistema di riferimento spaziale della geometria. Sintassi: buffer( geometry , distance [, segments=8 ]) Argomenti: geometry una geometria distance distanza buffer nelle unit\u00e0 del layer segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. Esempi: buffer($geometry, 10.5) \u2192 poligono di $geometry bufferizzato di 10.5 unit\u00e0 Danger Utilizzando SR proiettati l'unit\u00e0 di misura \u00e8 il metro, mentre, per SR geografici \u00e8 il grado, quindi attenzione al valore della distanza. Nota bene: La Funzione restituisce SEMPRE un poligono sia per geometry POINT , LINESTRING o **POLYGON buffer_by_m \u21b5 Crea un buffer lungo una geometria linestring in cui il diametro del buffer varia in base ai valori m nei vertici della linea. Sintassi: buffer_by_m( geometry , segments ) Argomenti: geometry la geometria deve essere una (multi) geometria linestring con valori m. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi: buffer_by_m(geometry:=geom_from_wkt('LINESTRINGM(1 2 0.5, 4 2 0.2)'),segments:=8) \u2192 Un buffer di larghezza variabile che inizia con un diametro di 0,5 e termina con un diametro di 0,2 lungo la linea. relativa all'esempio di sopra: Osservazioni: QGIS - feature centroid \u21b5 Restituisce il centro geometrico di una geometria. Sintassi: centroid( geometry ) Argomenti: geometry una geometria Esempi: centroid($geometry) \u2192 una geometria punto Osservazioni: La Funzione restituisce SEMPRE una geometry **POINT close_line \u21b5 Restituisce una linestring chiusa della linestring di input aggiungendo il primo punto alla fine della linea, se non \u00e8 gi\u00e0 chiusa. Se la geometria non \u00e8 una linestring o una MultiLinestring, il risultato sar\u00e0 NULL. Sintassi: close_line( geometry ) Argomenti: geometry una geometria linestring Esempi: geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1, 0 0)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) closest_point \u21b5 Restituisce il punto sulla geometria1 che \u00e8 pi\u00f9 vicino alla geometria2. Sintassi: closest_point( geometry1 , _ geometry2 ) Argomenti: geometry1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry geometria dalla quale cercare il punto pi\u00f9 vicino Esempi: geom_to_wkt(closest_point(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 Point(73.0769 115.384) Osservazioni: Utilizzando il geometry generator per i temi (il layer strade \u00e8 una unica feature): closest_point( geometry(get_feature('strade', 'reg',19)),$geometry) Gif animata: geometry 1 \u00e8 la rete stradale; geometry 2 sono i punti; in rosso i closestpoint collect_geometries \u21b5 Raccoglie un set di geometrie in un oggetto geometria multiparte. Variante geometry \u21b5 Sintassi: collect_geometries( geometry1 , geometry2 ...) Argomenti: geometry geometria sulla quale cercare il punto pi\u00f9 vicino Esempi: geom_to_wkt(collect_geometries(make_point(1,2), make_point(3,4), make_point(5,6))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Variante con array \u21b5 Sintassi: collect_geometries( array ) Argomenti: array array con oggetti geometrici Esempi: geom_to_wkt(collect_geometries(array(make_point(1,2), make_point(3,4), make_point(5,6)))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Osservazioni: combine \u21b5 Restituisce la combinazione di due geometrie. Sintassi: combine( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 2 1)' ) ) ) \u2192 MULTILINESTRING((4 4, 2 1), (3 3, 4 4), (4 4, 5 5)) geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 6 6, 2 1)' ) ) ) \u2192 LINESTRING(3 3, 4 4, 6 6, 2 1) contains \u21b5 Verifica se una geometria ne contiene un'altra. Restituisce vero se e solo se nessun punto di geometry2 giace all'esterno di geometry1 e almeno un punto dell'interno di geometry2 si trova all'interno di geometry1. Sintassi: contains( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'POINT(0.5 0.5 )' ) ) \u2192 vero contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry2 \u00e8 $geometry seleziono tutti i comuni contains (contenuti) nella provincia con pk_uid 46 (Lucca) PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Lucca). NOT contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) convex_hull \u21b5 Restituisce il poligono convesso di una geometria. Rappresenta la minima geometria convessa che racchiude tutte le geometria contenute nell'insieme. Sintassi: convex_hull( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt( convex_hull( geom_from_wkt( 'LINESTRING(3 3, 4 4, 4 10)' ) ) ) \u2192 POLYGON((3 3,4 10,4 4,3 3)) Osservazioni: La funzione restituisce sempre un poligono. crosses \u21b5 Verifica se una geometria interseca un'altra. Restituisce vero (1) se le geometrie interessate hanno qualche, ma non tutti, punto interno in comune. Sintassi: crosses( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: crosses( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero crosses( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni crosses (attraversati) dal fiume ARNO PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli attraversati dal fiume ARNO). NOT crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) difference \u21b5 Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b . Sintassi: difference( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(4 4, 5 5) Espressione: Espressione -- differenza linea a - linea b difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a Espressione -- differenza linea b - linea a difference( make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a Prova tu Dati e progetto qgz Esempio di sopra: disjoint \u21b5 Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune. Sintassi: disjoint( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria * geometry2 una geometria Esempi: disjoint( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero disjoint( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'POINT(4 4)' )) \u2192 falso Osservazione: Vero = 1; Falso= 0 Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): disjoint(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni disjoint (disgiunti) dal fiume ARNO distance \u21b5 Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate. Sintassi: distance( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: distance( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(4 8)' ) ) \u2192 4 -- distance_to_vertex \u21b5 Restituisce la distanza lungo una geometria ad un vertice specificato. Sintassi: distance_to_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi: distance_to_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 10.0 -- esempio di sopra: end_point \u21b5 Restituisce l'ultimo nodo di una geometria. Sintassi: end_point( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(end_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (0 2)' -- End_point di geometria poligonale: End_point di geometria lineare: extend \u21b5 Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata. Le linee sono estese usando la direzione di immersione del primo e dell'ultimo segmento nella linea. Le distanze sono espresse nel SR di tale geometria. Sintassi: extend( geometry , start_distance , end_distance ) Argomenti: geometry una geometria (multi)linestring start_distance distanza alla quale estendere l' inizio della linea end_distance distanza alla quale estendere la fine della linea. Esempi: geom_to_wkt(extend(geom_from_wkt('LineString(0 0, 1 0, 1 1)'),1,2)) \u2192 'LineString (-1 0, 1 0, 1 3)' geom_to_wkt(extend(geom_from_wkt('MultiLineString((0 0, 1 0, 1 1), (2 2, 0 2, 0 5))'),1,2)) \u2192 'MultiLineString ((-1 0, 1 0, 1 3),(3 2, 0 2, 0 7))' -- exterior_ring \u21b5 Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 NULL. Sintassi: exterior_ring( geometry ) Argomenti: geometry una geometria poligono Esempi: geom_to_wkt(exterior_ring(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2, 0.1, 0.1 0.1))'))) \u2192 'LineString (-1 -1, 4 0, 4 2, 0 2, -1 -1)' -- extrude \u21b5 Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y. Sintassi: extrude( geometry , x , y ) Argomenti: geometry una geometria poligono x estensione x, valore numerico y estensione y, valore numerico Esempi: extrude(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), 1, 2) \u2192 Polygon ((1 2, 3 2, 4 3, 5 5, 4 4, 2 4, 1 2)) extrude(geom_from_wkt('MultiLineString((1 2, 3 2), (4 3, 8 3)'), 1, 2) \u2192 MultiPolygon (((1 2, 3 2, 4 4, 2 4, 1 2)),((4 3, 8 3, 9 5, 5 5, 4 3))) Osservazioni: Nell'esempio ho utilizzato la funzione [boundary()](boundary.md) perch\u00e9 la geometria di ingresso deve essere lineare. flip_coordinates \u21b5 Restituisce una copia della geometria con le coordinate x e y scambiate. Utile per riparare le geometrie che hanno invertito i valori di latitudine e longitudine. Sintassi: flip_coordinates( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(flip_coordinates(make_point(1, 2))) \u2192 Point (2 1) -- Esempio con vettore poligonale (aggiorno la geometry): il flip \u00e8 da usare con cautela perch\u00e9 cambia radicalemnte la posizione del vettore force_rhr \u21b5 Forza una geometria a rispettare la regola della mano destra, in cui l'area delimitata da un poligono si trova a destra del limite. In particolare, l'anello esterno \u00e8 orientato in senso orario e l'interno in senso antiorario. Sintassi: force_rhr( geometry ) Argomenti: geometry una geometria. Qualsiasi geometria non poligonale viene restituita invariata. Esempi: geom_to_wkt(force_rhr(geometry:=geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'))) \u2192 Polygon ((-1 -1, 0 2, 4 2, 4 0, -1 -1)) Osservazioni: Ecco un esempio pratico della funzione (presente anche nelgli strumenti fi processing) ovvero un poligono disegnato in senso antiorario viene forzato in senso orario e l'etichettature \u00e8 visibile correttamente. geom_from_gml \u21b5 Restituisce una geometria da una rappresentazione GML di una geometria. Sintassi: geom_from_gml( _gml ) Argomenti: gml Rappresentazione GML di una geometria come stringa Esempi: geom_to_wkt(geom_from_gml('<gml:LineString srsName=\"EPSG:4326\"><gml:coordinates>4,4 5,5 6,6</gml:coordinates></gml:LineString>') ) \u2192 'LineString (4 4, 5 5, 6 6)' geom_from_wkb \u21b5 Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB). Sintassi: geom_from_wkb( binari ) Argomenti: binari Rappresentazione binaria ben nota (WKB) di una geometria (come BLOB binario) Esempi: geom_from_wkb( geom_to_wkb( make_point(4,5) ) ) \u2192 un oggetto geometria punto geom_from_wkt \u21b5 Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT). Sintassi: geom_from_wkt_ text _) Argomenti: text Rappresentazione Well-Known Text (WKT) di una geometria Esempi: geom_from_wkt( 'POINT(4 5)' ) \u2192 un oggetto geometria geom_to_wkb \u21b5 Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario. Sintassi: geom_to_wkb( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkb( $geometry ) \u2192 BLOB binario contenente un oggetto geometria geom_to_wkt \u21b5 Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR Sintassi: geom_to_wkt( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt( make_point(6, 50) ) \u2192 'POINT(6 50)' geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'POINT(0 0.66666667)' geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')), 2) \u2192 'POINT(0 0.67)' geometry \u21b5 Restituisce la geometria di un elemento. Sintassi: geometry( feature ) Argomenti: feature un oggetto elemento Esempi: geom_to_wkt( geometry( get_feature( layer, attributeField, value ) ) ) \u2192 'POINT(6 50)'` intersects( $geometry, geometry( get_feature( layer, attributeField, value ) ) ) \u2192 vero` -- Usando il Select by Expression : selezionare le feature di un layer (quartieri) in funzione di altro layer (test): geometry_n \u21b5 Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: geometry_n( geometry , index ) Argomenti: geometry raccolta di geometrie index indice della geometria da restituire, dove 1 \u00e8 la prima geometria nella raccolta Esempi: geom_to_wkt(geometry_n(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))'),3)) \u2192 'Point (1 0)' hausdorff_distance \u21b5 Restituisce la distanza di Hausdorff tra due geometrie. Questa \u00e8 in sostanza una misura di come le 2 geometrie sono simili o dissimili: una distanza pi\u00f9 bassa indica geometrie pi\u00f9 simili. La funzione pu\u00f2 essere eseguita con un argomento opzionale di densificazione della frazione. Se non viene specificato, viene utilizzata una approssimazione alla distanza standard di Hausdorff. Questa approssimazione \u00e8 esatta o abbastanza vicina per un grande sottoinsieme di casi utili. Esempi di questi sono: calcolare la distanza tra Linestrings che sono approssimativamente paralleli tra loro e sono sostanzialmente uguali in lunghezza. Ci\u00f2 si verifica nelle verifica di reti lineari. testare la somiglianza di geometrie. Se l'approssimazione predefinita fornita da questo metodo \u00e8 insufficiente, specifica l'argomento opzionale di densificazione della frazione. Specificando questo argomento si esegue una densificazione del segmento prima di calcolare la distanza Hausdorff discreta. Il parametro imposta la frazione con cui densificare ogni segmento. Ogni segmento sar\u00e0 suddiviso in un numero di subsegmenti di uguale lunghezza, la cui frazione della lunghezza totale \u00e8 la pi\u00f9 vicina alla frazione data. Riducendo il parametro di densificazione della frazione, la distanza restituita si avviciner\u00e0 alla vera distanza Hausdorff per le geometrie. Sintassi: hausdorff_distance( geometry1 , geometry2 , densify_fraction ) Argomenti: geometry1 una geometria geometry2 una geometria densify_fraction quantit\u00e0 di densificazione della frazione Esempi: hausdorff_distance( geometry1:= geom_from_wkt('LINESTRING (0 0, 2 1)'),geometry2:=geom_from_wkt('LINESTRING (0 0, 2 0)')) \u2192 2 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)')) \u2192 14.142135623 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)'),0.5) \u2192 70.0 -- Nel caso di geometrie puntuali la hausdorff_distance coincide con la funzione distance , segue un esempio: Espressione format_number( hausdorff_distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' || '\\n'|| format_number( distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' -- In questo esempio confronto due layer: il numero pi\u00f9 piccolo indica il poligono pi\u00f9 simile a al poligono pi\u00f9 grande. inclination \u21b5 Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b . Sintassi: inclination( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 -- interior_ring_n \u21b5 Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono. Sintassi: interior_ring_n( geometry , index ) Argomenti: geometry geometria poligono index Indice dell'anello interno da restituire, dove 1 \u00e8 il primo anello interno Esempi: geom_to_wkt(interior_ring_n(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1),(-1 -1, 4 0, 4 2, 0 2, -1 -1))'),1)) \u2192 'LineString (-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))' Osservazioni: Restituisce una lineastring!!! intersection \u21b5 Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie. Sintassi: intersection( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 'LINESTRING(3 3, 4 4)' geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'MULTIPOINT(3.5 3.5, 4 5)' ) ) ) \u2192 'POINT(3.5 3.5)' Espressione -- intersezione tra le due linee intersection( make_line( -- linea a start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea b start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz -- intersects \u21b5 Controlla qualora una geometria ne interseca un'altra. Restituisce true (1) se la geometrie si intersecano spazialmente (condividono una porzione di spazio) altrimenti da false (0). Sintassi: intersects( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: intersects( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 falso Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry2 \u00e8 $geometry seleziono tutti i comuni intersects (interseca) nella provincia con pk_uid 46 (Lucca) PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli intersecati con la provincia di Lucca). NOT intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) intersects_bbox \u21b5 Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria. Restituisce vero (1) se le geometrie intersecano spazialmente il perimetro di delimitazione definito e falso (0) se non lo intersecano. Sintassi: intersects_bbox( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: intersects_bbox( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects_bbox( geom_from_wkt( 'POINT(6 5)' ), geom_from_wkt( 'POLYGON((3 3, 4 4, 5 5, 3 3))' ) ) \u2192 falso is_closed \u21b5 Restituisce vero (true) se una linestring \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso (false) se una linestring non \u00e8 chiusa. Se la geometria non \u00e8 una linestring, il risultato sar\u00e0 NULL. Sintassi: is_closed( geometry ) Argomenti: geometry una geometria linestring Esempi: is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero -- is_empty \u21b5 Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null . Sintassi: is_empty( geometry ) Argomenti: geometry una geometria Esempi: is_empty(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty(geom_from_wkt('POINT EMPTY')) \u2192 vero is_empty_or_null \u21b5 Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null_or_null . Sintassi: is_empty_or_null( geometry ) Argomenti: geometry una geometria Esempi: is_empty_or_null(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso iis_empty_or_null(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty_or_null(geom_from_wkt('POINT EMPTY')) \u2192 vero is_multipart \u21b5 Restituisce vero se la geometria \u00e8 di tipo Multi. Sintassi: is_multipart( geometry ) Argomenti: geometry una geometria Esempi: is_multipart(geom_from_wkt('MULTIPOINT ((0 0),(1 1),(2 2))')) \u2192 vero is_multipart(geom_from_wkt('POINT (0 0)')) \u2192 falso is_valid \u21b5 Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole OGC Sintassi: is_valid( geometry ) Argomenti: geometry una geometria Esempi: is_valid(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero is_valid(geom_from_wkt('LINESTRING(0 0)')) \u2192 falso length \u21b5 Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring. Variabile stringa \u21b5 Restituisce il numero di caratteri contenuti in una stringa. Sintassi: length( string ) Argomenti: string stringa della quale calcolare la lunghezza Esempi: length('hello') \u2192 5 Variabile geometria \u21b5 Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length , la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi: length( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4.0 length3D \u21b5 Calcola la lunghezza 3D di un oggetto linea geometrica. Se la geometria non \u00e8 un oggetto linea 3D, restituisce la sua lunghezza 2D. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di questa geometria, e le unit\u00e0 della lunghezza restituita corrisponderanno alle unit\u00e0 per l'SR. Questo differisce dai calcoli eseguiti dalla funzione $length , che eseguir\u00e0 calcoli ellissoidali basati sulle impostazioni dell'ellissoide e dell'unit\u00e0 di distanza del progetto. Sintassi: length3D( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length3D(geom_from_wkt('LINESTRINGZ(0 0 0, 3 0 4)')) \u2192 5.0 line_interpolate_angle \u21b5 Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: line_interpolate_angle( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea a cui interpolare l'angolo Esempi: line_interpolate_angle(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5) \u2192 90.0 -- line_interpolate_point \u21b5 Restituisce il punto interpolato ad una specifica distanza lungo una geometria di tipo linestring. Sintassi: line_interpolate_point( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea Esempi: geom_to_wkt(line_interpolate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5)) \u2192 'Point (4 0)' -- line_locate_point \u21b5 Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata. Sintassi: line_locate_point( geometry , point ) Argomenti: geometry una geometria di tipo linestring point geometria puntuale per cui ricercare la posizione pi\u00f9 vicina sulla linestring Esempi: line_locate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),point:=geom_from_wkt('Point(5 1)')) \u2192 5.0 line_merge \u21b5 Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola. Questa funzione restituir\u00e0 NULL se la geometria considerata non \u00e8 una LineString/MultiLineString. Sintassi: line_merge( geometry ) Argomenti: geometry una geometria di tipo LineString/MultiLineString Esempi: geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(1 1, 2 2))'))) \u2192 'LineString(0 0,1 1,2 2)' geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(11 1, 21 2))'))) \u2192 'MultiLineString((0 0, 1 1),(11 1, 21 2)' -- line_substring \u21b5 Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate (misurata dall'inizio della linea). I valori Z e M sono linearmente interpolati dai valori esistenti. Sintassi: line_substring( geometry , start_distance , end_distance ) Argomenti: geometry una geometria lineare o curva start_distance distanza all'inizio della sottostringa end_distance distanza alla fine della sottostringa Esempi: geom_to_wkt(line_substring(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),start_distance:=2,end_distance:=6)) \u2192 'LineString (2 0,6 0)' line_substring( $geometry, $length *.1,$length *.6) \u2192 <geometria: LineString> -- Funzione utile per la tematizzazione m \u21b5 Restituisce il valore m di una geometria puntuale. Sintassi: m( geometry ) Argomenti: geometry una geometria punto Esempi: ( geom_from_wkt( 'POINTM(2 5 4)' ) ) \u2192 4 m_max \u21b5 Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_max( geometry ) Argomenti: geometry una geometria contenente m valori Esempi: m_max( make_point_m( 0,0,1 ) ) \u2192 1 m_max(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 2 m_min \u21b5 Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_min( geometry ) Argomenti: geometry una geometria contenente m valori Esempi: m_min( make_point_m( 0,0,1 ) ) \u2192 1 m_min(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 0 main_angle \u21b5 Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria. Sintassi: main_angle( geometry ) Argomenti: geometry una geometria poligono Esempi: main_angle(geom_from_wkt('Polygon ((321577 129614, 321581 129618, 321585 129615, 321581 129610, 321577 129614))')) \u2192 38.66 Osservazioni: make_circle \u21b5 Crea un poligono circolare. Sintassi: make_circle( center , radius [, segments=36 ]) [ ] indica componenti opzionali Argomenti: center centro del cerchio radius raggio del cerchio segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt(make_circle(make_point(10,10), 5, 4)) \u2192 'Polygon ((10 15, 15 10, 10 5, 5 10, 10 15))' geom_to_wkt(make_circle(make_point(10,10,5), 5, 4)) \u2192 'PolygonZ ((10 15 5, 15 10 5, 10 5 5, 5 10 5, 10 15 5))'' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 4)) \u2192 'PolygonZM ((10 15 5 30, 15 10 5 30, 10 5 5 30, 5 10 5 30, 10 15 5 30))' make_ellipse \u21b5 Crea un poligono ellittico. Sintassi: make_ellipse( center , semi_major_axis , semi_minor_axis , azimuth [, segments=36 ]) Argomenti: center centro dell'ellisse semi_major_axis semi-asse maggiore dell'ellisse semi_minor_axis semi-asse minore dell'ellisse azimuth orientazione dell'ellisse segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt(make_ellipse(make_point(10,10), 5, 2, 90, 4)) \u2192 'Polygon ((15 10, 10 8, 5 10, 10 12, 15 10)) geom_to_wkt(make_ellipse(make_point(10,10,5), 5, 2, 90, 4)) \u2192 'PolygonZ ((15 10 5, 10 8 5, 5 10 5, 10 12 5, 15 10 5))' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 2, 90, 4)) \u2192 'PolygonZM ((15 10 5 30, 10 8 5 30, 5 10 5 30, 10 12 5 30, 15 10 5 30))' make_line \u21b5 Crea una geometria linea da una serie di geometrie punto. Sintassi: make_line( point1 , point2 , \u2026_) Argomenti: point una geometria punto Esempi: geom_to_wkt(make_line(make_point(2,4),make_point(3,5))) \u2192 'LineString (2 4, 3 5)' geom_to_wkt(make_line(make_point(2,4),make_point(3,5),make_point(9,7))) \u2192 'LineString (2 4, 3 5, 9 7)' Array variant \u21b5 I vertici di linea sono specificati come una matrice di punti. Sintassi: make_line( array ) Argomenti: array Matrice di punti Esempi: geom_to_wkt(make_line(array(make_point(2,4),make_point(3,5),make_point(9,7)))) \u2192 'LineString (2 4, 3 5, 9 7)' Espressione make_line( array(geometry( get_feature_by_id('fontanelle_Palermo',$id))), array(geometry( get_feature_by_id('fontanelle_Palermo',not $id%2))) ) make_point \u21b5 Crea una geometria punto da valori x ed y (e opzionalmente z ed m). Sintassi: make_point( x , y , z , m ) Argomenti: x coordinata x del punto y coordinata y del punto z coordinata opzionale z del punto m valore m del punto Esempi: geom_to_wkt(make_point(2,4,6,8)) \u2192 'PointZM (2 4 6 8)' make_point_m \u21b5 Crea una geometria punto da una coordinata x, y ed un valore m. Sintassi: make_point_m_( x , y , m ) Argomenti: x coordinata x del punto y coordinata y del punto m valore m del punto Esempi: geom_to_wkt(make_point_m(2,4,6)) \u2192 'PointM (2 4 6)' make_polygon \u21b5 Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne. Sintassi: make_polygon( outerRing [, innerRing1 ][, innerRing2 ] \u2026_) [ ] indica componenti opzionali Argomenti: outerRing geometria a linea chiusa per l'anello esterno del poligono innerRing geometria a linea chiusa opzionale per anello interno Esempi: geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0))' geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'),geom_from_wkt('LINESTRING( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1 )'),geom_from_wkt('LINESTRING( 0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0),(0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1),(0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8))' make_rectangle_3points \u21b5 Crea un rettangolo da 3 punti. Sintassi: make_rectangle_3points( point1 , point2 , point3 [,option=0]\u2026) Argomenti: point1 Primo punto point2 Secondo punto point3 Terzo punto option Un argomento facoltativo per costruire il rettangolo. Di default questo valore \u00e8 0. Il valore pu\u00f2 essere 0 (distanza) o 1 (proiettato). Distanza opzione: la seconda distanza \u00e8 uguale alla distanza tra il 2 \u00b0 e il 3 \u00b0 punto. Opzione proiettata: la seconda distanza \u00e8 uguale alla distanza della proiezione perpendicolare del terzo punto sul segmento o della sua estensione. Esempi: geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5), make_point(5, 5), 0))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5),make_point(5, 3), 1))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' -- make_regular_polygon \u21b5 Crea un poligono regolare. Sintassi: make_regular_polygon( center , radius , number_sides [, circle=0 ]) [ ] indica componenti opzionali Argomenti: center centro del poligono regolare radius secondo punto. Il primo se il poligono regolare \u00e8 inscritto. Il punto intermedio del primo lato se il poligono regolare \u00e8 circoscritto. number_sides Numero di lati del poligono regolare circle Argomento opzionale per la costruzione del poligono regolare. Il valore predefinito \u00e8 0. Il valore pu\u00f2 essere 0 (poligono iscritto) o 1 (poligono circoscritto) Esempi: geom_to_wkt(make_regular_polygon(make_point(0,0), make_point(0,5), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' geom_to_wkt(make_regular_polygon(make_point(0,0), project(make_point(0,0), 4.0451, radians(36)), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' make_square \u21b5 Crea un quadrato da una diagonale. Sintassi: make_square( point1 , point2 ) Argomenti: point1 Primo punto della diagonale point2 Secondo punto della diagonale Esempi: geom_to_wkt(make_square( make_point(0,0), make_point(5,5))) \u2192 'Polygon ((0 0, -0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_square( make_point(5,0), make_point(5,5))) \u2192 'Polygon ((5 0, 2.5 2.5, 5 5, 7.5 2.5, 5 0))' make_triangle \u21b5 Crea un poligono triangolare Sintassi: make_triangle( point1 , point2 , point3 ) Argomenti: point1 Primo punto del triangolo point2 Secondo punto del triangolo point3 Secondo punto del triangolo Esempi: geom_to_wkt(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10))) \u2192 'Triangle ((0 0, 5 5, 0 10, 0 0))' geom_to_wkt(boundary(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10)))) \u2192 'LineString (0 0, 5 5, 0 10, 0 0)' minimal_circle \u21b5 Restituisce la circonferenza circoscritta minima di una geometria. Rappresenta il cerchio minimo che circoscrive tutte le geometrie presenti in un dataset. Sintassi: minimal_circle( geometry [, segments=36 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt( minimal_circle( geom_from_wkt( 'LINESTRING(0 5, 0 -5, 2 1)' ), 4 ) ) \u2192 Polygon ((0 5, 5 -0, -0 -5, -5 0, 0 5)) geom_to_wkt( minimal_circle( geom_from_wkt( 'MULTIPOINT(1 2, 3 4, 3 2)' ), 4 ) ) \u2192 Polygon ((3 4, 3 2, 1 2, 1 4, 3 4)) -- nodes_to_points \u21b5 Restituisce una geometria multi-punti costituita da ogni nodo della geometria in ingresso. Sintassi: nodes_to_points( geometry [, ignore_closing_nodes=false ]) Argomenti: geometry oggetto geometria ignore_closing_nodes argomento opzionale che specifica se includere i nodi duplicati che chiudono linee o poligoni ad anello. Normalmente false, impostare a true per evitare di includere questi nodi duplicati nella raccolta in uscita. Esempi: geom_to_wkt(nodes_to_points(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiPoint ((0 0),(1 1),(2 2))' geom_to_wkt(nodes_to_points(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'),true)) \u2192 'MultiPoint ((-1 -1),(4 0),(4 2),(0 2))' -- num_geometries \u21b5 Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: num_geometries( geometry ) Argomenti: geometry raccolta di geometrie Esempi: num_geometries(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))')) \u2192 4 num_interior_rings \u21b5 Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_interior_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi: num_interior_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 1 num_points \u21b5 Restituisce il numero di vertici in una geometria. Sintassi: num_points( geometry ) Argomenti: geometry una geometria Esempi: num_points($geometry) \u2192 numero di vertici in $geometry num_rings \u21b5 Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi: num_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 2 -- offset_curve \u21b5 Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato. Le distanze sono espresse nel SR di tale geometria. Sintassi: offset_curve( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di offset. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in una linea pi\u00f9 morbida, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi: offset_curve($geometry, 10.5) \u2192 linea scostata a sinistra di 10.5 unit\u00e0 offset_curve($geometry, -10.5) \u2192 linea scostata a destra di 10.5 unit\u00e0 offset_curve($geometry, 10.5, segments=16, join=1) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in una curva pi\u00f9 morbida offset_curve($geometry, 10.5, join=3) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando un'unione smussata Osservazioni: La linea \u00e8 scostata a sinistra o destra rispetto al verso della linea: order_parts \u21b5 Ordina le parti di una MultiGeometria secondo un dato criterio Sintassi: order_parts( geometry , orderby [, ascending=true ]) [ ] indica componenti opzionali Argomenti: geometry una geometria multi-tipo orderby un espressione stringa che definisce il criterio di ordinamento ascending booleano, True per ascendente, False per discendente Esempi: order_parts(geom_from_wkt('MultiPolygon (((1 1, 5 1, 5 5, 1 5, 1 1)),((1 1, 9 1, 9 9, 1 9, 1 1)))'), 'area($geometry)', False) \u2192 MultiPolygon (((1 1, 9 1, 9 9, 1 9, 1 1)),((1 1, 5 1, 5 5, 1 5, 1 1))) order_parts(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), '1', True) \u2192 LineString(1 2, 3 2, 4 3) oriented_bbox \u21b5 Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria. Sintassi: oriented_bbox( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(oriented_bbox(geom_from_wkt('MULTIPOINT(1 2, 3 4, 3 2)'))) \u2192 'Polygon ((1 2, 2 1, 4 3, 3 4, 1 2))' overlaps \u21b5 Controlla qualora una geometria si sovrapponga ad un'altra. Restituisce true (1) se le geometrie condividono aree, ma non sono completamente contenute una nell'altra. Sintassi: overlaps( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: overlaps( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 5, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 overlaps( geom_from_wkt( 'LINESTRING(0 0, 1 1)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 0 Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): overlaps(geometry(get_feature( 'cerchio','id','1')), $geometry) dove: geometry1 \u00e8 geometry(get_feature('cerchio','id','1')) geometry2 \u00e8 $geometry seleziono tutti i comuni overlaps (sovrapposti) al cerchio in figura. PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli sovrapposti con il cerchio). NOT overlaps(geometry(get_feature('cerchio','id','1')),$geometry) overlay_contains \u21b5 Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Contains\" sottostante, come descritto nella funzione PostGIS ST_CONTAINS . Sintassi: overlay_contains( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_contains('regions') \u2192 true se l'elemento corrente contiene spazialmente una regione overlay_contains('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente contiene spazialmente una regione con una popolazione maggiore di 10000 overlay_contains('regions', name) \u2192 un array di nomi, per le regioni contenute nell'elemento corrente array_to_string(overlay_contains('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni contenute nell'elemento corrente overlay_contains('regions', name)[0] \u2192 una stringa con il nome della regione contenuta nell'elemento corrente array_sort(overlay_contains(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenute nell'elemento corrente e con una popolazione superiore a 10000 overlay_contains(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenute nell'elemento corrente overlay_crosses \u21b5 Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento di un layer target o un array di risultati basati su espressioni per gli elementi nel layer target attraversati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Crosses\" sottostante, come descritto nella funzione PostGIS ST_Crosses . Sintassi: overlay_crosses( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_crosses('regions') \u2192 true se l'elemento corrente attraversa spazialmente una regione overlay_crosses('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente attraversa spazialmente una regione con una popolazione maggiore di 10000 overlay_crosses('regions', name) \u2192 un array di nomi, per le regioni attraversate dall'elemento corrente array_to_string(overlay_crosses('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni attraversate dall'elemento corrente overlay_crosses('regions', name)[0] \u2192 una stringa con il nome della prima regioni attraversata dall'elemento corrente array_sort(overlay_crosses(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni attraversate dall'elemento corrente e con una popolazione superiore a 10000 overlay_crosses(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni attraversate dall'elemento corrente overlay_disjoint \u21b5 Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer target, o un array di risultati basati su espressione per gli elementi nel layer target che sono disgiunti dall'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Disjoint\", come descritto nella funzione PostGIS ST_Disjoint . Sintassi: overlay_disjoint( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_disjoint('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni overlay_disjoint('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni con una popolazione maggiore di 10000 overlay_disjoint('regions', name) \u2192 un array di nomi, per le regioni spazialmente disgiunte dall'elemento corrente array_to_string(overlay_disjoint('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni spazialmente disgiunte dall'elemento corrente overlay_disjoint('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente disgiunte dall'elemento corrente array_sort(overlay_disjoint(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente disgiunte dall'elemento corrente e con una popolazione superiore a 10000 overlay_disjoint(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente disgiunte dall'elemento corrente overlay_equals \u21b5 Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target che sono spazialmente uguali all'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Equals\" sottostante, come descritto nella funzione PostGIS ST_Equals . Sintassi: overlay_equals( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_equals('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente uguale ad una regione overlay_equals('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente uguale ad una regione con una popolazione maggiore di 10000 overlay_equals('regions', name) \u2192 un array di nomi, per le regioni spazialmente uguali all'elemento corrente array_to_string(overlay_equals('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni spazialmente uguali all'elemento corrente overlay_equals('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente uguale all'elemento corrente array_sort(overlay_equals(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente uguali all'elemento corrente e con una popolazione superiore a 10000 overlay_equals(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente uguali all'elemento corrente overlay_intersects \u21b5 Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target intersecati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Intersects\" sottostante, come descritto nella funzione PostGIS ST_INTERSECTS . Sintassi: overlay_intersects( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_intersects('regions') \u2192 true se l'elemento corrente interseca spazialmente una regione overlay_intersects('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente interseca spazialmente una regione con una popolazione maggiore di 10000 overlay_intersects('regions', name) \u2192 un array di nomi, per le regioni intersecate dall'elemento corrente array_to_string(overlay_intersects('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni intersecate dall'elemento corrente overlay_intersects('regions', name)[0] \u2192 una stringa con il nome della regione intersecata dall'elemento corrente array_sort(overlay_intersects(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni intersecate dall'elemento corrente e con una popolazione maggiore di 10000 overlay_intersects(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni intersecate dall'elemento corrente overlay_nearest \u21b5 Restituisce se l'elemento corrente ha elementi da un layer target entro una data distanza o un array di risultati basati su espressioni per gli elementi nel layer di target entro una distanza dall'elemento corrente. Nota: questa funzione pu\u00f2 essere lenta e consuma molta memoria per layer con molte feature. Sintassi: overlay_contains( layer [, expression ][, filter ][, limit=1 ][, max_distance ][, cache ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); max_distance una distanza opzionale per limitare la ricerca di elementi corrispondenti. Se non impostato, verranno usati tutti gli elementi nel layer di destinazione. cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_nearest('airports') \u2192 true se il layer \"airports\" ha almeno un elemento overlay_nearest('airports', max_distance:= 5000) \u2192 vero se \u00e8 presente un aeroporto entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente overlay_nearest('airports', name) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come array array_to_string(overlay_nearest('airports', name)) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come stringa overlay_nearest(layer:='airports', expression:= name, max_distance:= 5000) \u2192 il nome dell'aereoporto pi\u00f9 vicino entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, come array overlay_nearest(layer:='airports', expression:=\"name\", filter:= \"Use\"='Civilian', limit:=3) \u2192 un array di nomi, per un massimo di tre aeroeporti civili pi\u00f9 vicini ordinati per distanza overlay_nearest(layer:='airports', expression:=\"name\", limit:= -1, max_distance:= 5000) \u2192 un array di nomi, per tutti gli aeroporti entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, ordinato per distanza. Esempio 45: http://hfcqgis.opendatasicilia.it/it/latest/esempi/linea_min_distanza2.html overlay_touches \u21b5 Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target toccati dall'elemento corrente. Leggi ulteriori informazioni sul predicato GEOS \"Touches\", come descritto nella funzione PostGIS ST_TOUCHES . Sintassi: overlay_touches( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_touches('regions') \u2192 true se l'elemento corrente tocca spazialmente una regione overlay_touches('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente tocca spazialmente una regione con una popolazione maggiore di 10000 overlay_touches('regions', name) \u2192 un array di nomi, per le regioni tocacte dall'elemento corrente string_to_array(overlay_touches('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni toccate dall'elemento corrente overlay_touches('regions', name)[0] \u2192 una stringa con il nome della regione toccata dall'elemento corrente array_sort(overlay_touches(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni toccate dall'elemento attuale e con una popolazione superiore a 10000 overlay_touches(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni toccate dall'elemento corrente overlay_within \u21b5 Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Within\", come descritto nella funzione PostGIS ST_WITHIN . Sintassi: overlay_within( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_within('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente all'interno di una regione overlay_within('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente all'interno di una regione con una popolazione maggiore di 10000 overlay_within('regions', name) \u2192 un array di nomi, per le regioni contenenti l'elemento corrente array_to_string(overlay_within('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni che contengono l'elemento corrente overlay_within('regions', name)[0] \u2192 una stringa con il nome della regione che contengono l'elemento corrente array_sort(overlay_within(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenenti l'elemento corrente e con una popolazione superiore a 10000 overlay_within(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenenti l'elemento corrente perimeter \u21b5 Calcola il perimetro di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $perimeter , la quale esegue calcoli ellissoidali basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura della distanza. Sintassi: perimeter( geometry ) Argomenti: geometry oggetto geometria poligono Esempi: perimeter(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))')) \u2192 12.0 point_n \u21b5 Restituisce un nodo specifico da una geometria. Sintassi: point_n( geometry , index ) Argomenti: geometry oggetto geometria index indice del nodo da restituire, dove 1 \u00e8 il primo nodo; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi: geom_to_wkt(point_n(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))'),2)) \u2192 'Point (4 0)' -- Esempi correlati: esempio nro 4 - Come aggiungere la quota Z alla tabella attributi point_on_surface \u21b5 Restituisce un punto garantendo che sia giacente sulla superficie della geometria. Sintassi: point_on_surface( geometry ) Argomenti: geometry una geometria Esempi: point_on_surface($geometry) \u2192 una geometria punto -- pole_of_inaccessibility \u21b5 Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie. Questa funzione usa l'algoritmo 'polylabel' (Vladimir Agafonkin, 2016), che \u00e8 un approccio iterativo garantito per trovare il vero polo dell'inaccessibilit\u00e0 all'interno di una tolleranza specificata. Tolleranze pi\u00f9 precise richiedono pi\u00f9 iterazioni e sar\u00e0 necessario pi\u00f9 tempo per il calcolo. Sintassi: pole_of_inaccessibility( geometry , tolerance ) Argomenti: geometry una geometria tolerance distanza massima tra il punto restituito e la vera posizione del polo Esempi: geom_to_wkt(pole_of_inaccessibility( geom_from_wkt('POLYGON((0 1,0 9,3 10,3 3, 10 3, 10 1, 0 1))'), 0.1)) \u2192 'Point(1.55, 1.55)' -- project \u21b5 Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti. Sintassi: project( point , distance , azimuth [, elevation ]) [ ] indica componenti opzionali Argomenti: point punto di partenza point distanza da proiettare azimuth azimuth in radianti in senso orario, dove 0 corrisponde a nord elevation angolo di inclinazione in radianti Esempi: project(make_point(1, 2), 3, radians(270)) \u2192 Point(-2, 2) -- relate \u21b5 Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Variabile di relazione \u21b5 Restituisce la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Sintassi: relate( geometry , geometry ) ) Argomenti: geometry una geometria geometry una geometria Esempi: relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ) ) \u2192 'FF1F00102' Variabile di corrispondenza del modello \u21b5 Testa se la relazione DE-9IM tra due geometrie corrisponde a un pattern specificato: restituisc true Vero, false Falso. Sintassi: relate( geometry , geometry , pattern ) Argomenti: geometry una geometria geometry una geometria pattern Tratteggio DE-9IM da far corrispondere Esempi: relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ), '**1F001**' ) \u2192 Vero Link utili: Wikipedia OpenGeo reverse \u21b5 Inverte il verso di una linestring invertendo l'ordine dei sui vertici. Sintassi: reverse( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(reverse(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'LINESTRING(2 2, 1 1, 0 0)' -- rotate \u21b5 Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria. Sintassi: rotate( geometry , rotation [, center ]) [ ] indica componenti opzionali Argomenti: geometry una geometria rotation rotazione oraria in gradi center punto centrale di rotazione. Se non specificato, viene utilizzato il centro del perimetro di delimitazione della geometria. Esempi: rotate($geometry, 45, make_point(4, 5)) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al punto (4, 5) rotate($geometry, 45) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al centro del riquadro di delimitazione segments_to_lines \u21b5 Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso. Sintassi: segments_to_lines( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(segments_to_lines(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiLineString ((0 0, 1 1),(1 1, 2 2))' shortest_line \u21b5 Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2. La linea risultante partir\u00e0 dalla geometria 1 e finir\u00e0 nella geometria 2. Sintassi: shortest_line( geometry1 , geometry2 ) Argomenti: geometry1 geometria dalla quale cercare la linea pi\u00f9 corta geometry2 geometria verso la quale cercare la linea pi\u00f9 corta Esempi: geom_to_wkt(shortest_line(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 LineString(73.0769 115.384, 100 100) -- simplify \u21b5 Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker). L'algoritmo mantiene grandi deviazioni nelle geometrie e riduce il numero di vertici in segmenti quasi rettilinei. Sintassi: simplify(simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance deviazione massima dai segmenti rettilinei per i punti da rimuovere Esempi: geom_to_wkt(simplify(geometry:=geom_from_wkt('LineString(0 0, 5 0.1, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' simplify_vw \u21b5 Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ). L'algoritmo rimuove i vertici che creano piccole aree nelle geometrie, ad esempio picchi stretti o segmenti quasi rettilinei. Sintassi: simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance una misura dell'area massima creata da un nodo per il nodo da rimuovere Esempi: geom_from_wkt('LineString(0 0, 5 0, 5.01 10, 5.02 0, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' -- single_sided_buffer \u21b5 Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring. Le distanze sono espresse nel SR di tale geometria. Sintassi: single_sided_buffer( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di buffer. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi: single_sided_buffer($geometry, 10.5) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0 single_sided_buffer($geometry, -10.5) \u2192 linea bufferizzata a destra di 10.5 unit\u00e0 single_sided_buffer($geometry, 10.5, segments:=16, join:=1) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in un buffer pi\u00f9 morbido single_sided_buffer($geometry, 10.5, join:=3) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando un'unione smussata -- smooth \u21b5 Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria. Sintassi: smooth( geometry , iterations=1 , offset=0.25 , min_length=1 , max_angle=180 ) Argomenti: geometry una geometria iterations Numero di iterazioni di smussatura da applicare. Valori pi\u00f9 alti fanno risultare geometria pi\u00f9 morbide, ma pi\u00f9 complesse. offset valore tra 0 e 0.5 che controlla quanto la geometria smussata segua strettamente la geometria originale. Valori pi\u00f9 piccoli risultano in una lisciatura pi\u00f9 stretta, valori pi\u00f9 grandi risultano in una lisciatura pi\u00f9 larga. min_length lunghezza minima dei segmenti ai quali applicare la smussatura. Questo parametro pu\u00f2 essere usato per evitare di posizionare nodi aggiuntivi eccessivi nei segmenti pi\u00f9 corti della geometria. max_angle angolo massimo (0-180) da applicare al nodo per la smussatura. Abbassando intenzionalmente l'angolo massimo si abbassa l'arrotondamento sugli angoli della geometria. Per esempio, un valore di 80 gradi preserver\u00e0 l'angolo nella geometria. Esempi: geom_to_wkt(smooth(geometry:=geom_from_wkt('LineString(0 0, 5 0, 5 5)'),iterations:=1,offset:=0.2,min_length:=-1,max_angle:=180)) \u2192 'LineString (0 0, 4 0, 5 1, 5 5)' start_point \u21b5 Restituisce il primo nodo di una geometria. Sintassi: start_point( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(start_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (4 0)' Start_point di geometria poligonale: Start_point di geometria lineare: sym_difference \u21b5 Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca. Sintassi: sym_difference( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( sym_difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 8 8)' ) ) ) \u2192 LINESTRING(5 5, 8 8) Espressione -- differenza simmetrica tra le due linee sym_difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz -- tapered_buffer \u21b5 Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea. Sintassi: tapered_buffer( geometry , start_width , end_width [, segments=8 ]_) [ ] contrassegna componenti opzionali Argomenti: geometry input geometry. Deve essere una (multi) geometria della linea. start_width larghezza del buffer all'inizio della linea, end_width larghezza del buffer alla fine della riga. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi: tapered_buffer(geometry:=geom_from_wkt('LINESTRING(1 2, 4 2)'),start_width:=1,end_width:=2,segments:=8) \u2192 Un buffer rastremato che inizia con un diametro di 1 e termina con un diametro di 2 lungo la geometria della linea. -- QGIS - feature touches \u21b5 Verifica se una geometria tocca un'altra. Restituisce vero (1) se le geometrie hanno almeno un punto in comune, ma i loro interni non si intersecano. Sintassi: touches( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: touches( geom_from_wkt( 'LINESTRING(5 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 touches( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 0 Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): touches(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','52')) geometry2 \u00e8 $geometry seleziono tutti i comuni touches (toccati) dalla provincia con pk_uid 46 (Siena) PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli toccati dalla provincia di Siena). NOT touches(geometry(get_feature( 'province_rt_rt','pk_uid','52')),$geometry) transform \u21b5 Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione. Sintassi: transform( geometry , source_auth_id , dest_auth_id ) Argomenti: geometry una geometria source_auth_id ID del SR sorgente dest_auth_id ID del SR destinazione Esempi: geom_to_wkt( transform( $geometry, 'EPSG:2154', 'EPSG:4326' ) ) \u2192 POINT(0 51) -- translate \u21b5 Restituisce una versione traslata di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: translate( geometry , dx , dy ) Argomenti: geometry una geometria dx delta x geomdyetry delta y Esempi: translate($geometry, 5, 10) \u2192 una geometria dello stesso tipo come l'originale -- union \u21b5 Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie. Sintassi: union( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( union( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) ) \u2192 MULTIPOINT(4 4, 5 5) Espressione -- unione delle due linee union( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz -- wedge_buffer \u21b5 Restituisce un buffer a forma di cuneo che origina da una geometria del punto. Sintassi: wedge_buffer( geometry , azimuth , width , outer_radius [, inner_radius=0.0 ]) [ ] contrassegna componenti opzionali Argomenti: geometry punto centrale (origine) del buffer. Deve essere una geometria puntuale. azimuth (in gradi) per il centro del cuneo da puntare. width buffer w larghezza (in gradi). Si noti che il cuneo si estender\u00e0 fino a met\u00e0 della larghezza angolare su entrambi i lati della direzione dell'azimut. outer_radius raggio esterno per i buffers inner_radius raggio interno opzionale per i buffers Esempi: wedge_buffer(center:=geom_from_wkt('POINT(1 2)'),azimuth:=90,width:=180,outer_radius:=1) \u2192 Un buffer a forma di cuneo centrato sul punto (1,2), rivolto verso est, con una larghezza di 180 gradi e raggio esterno di 1. -- within \u21b5 Controlla qualora una geometria sia interna ad un'altra. Restituisce 1 (vero) se la geometria a \u00e8 completamente contenuta nella_ geometria b_. Sintassi: within( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: within( geom_from_wkt( 'POINT( 0.5 0.5)' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ) ) \u2192 1 within( geom_from_wkt( 'POINT( 5 5 )' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ) ) \u2192 0 Osservazioni: Usando algoritmo `Seleziona per espressione` presente in strumenti di processing oppure ![icona](https://docs.qgis.org/2.18/en/_images/mIconExpressionSelect.png) (Ctrl+F3): - within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) dove: geometry1 \u00e8 $geometry geometry2 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','53')) seleziono tutti i comuni within (contenuti) nella provincia con pk_uid 53 (Grosseto) PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Grosseto). NOT within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) Altro esempio con condizione sulle etichette Espressione CASE WHEN within( $geometry, geometry(get_feature('poligono','id',1))) = 1 THEN 'INTERNO' ELSE 'NON INTERNO' END x \u21b5 Restituisce la minima coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale. Sintassi: x( geometry ) Argomenti: geometry una geometria Esempi: x( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 2 x( $geometry ) \u2192 coordinata x del centroide dell'elemento corrente -- x_max \u21b5 Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_max( geometry ) Argomenti: geometry una geometria Esempi: x_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 4 -- x_min \u21b5 Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_min( geometry ) Argomenti: geometry una geometria Esempi: x_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 2 -- y \u21b5 Restituisce la coordinata y minima di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale. Sintassi: y( geometry ) Argomenti: geometry una geometria Esempi: y( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 5 y( $geometry ) \u2192 coordinata y del centroide dell'elemento corrente -- y_max \u21b5 Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_max( geometry ) Argomenti: geometry una geometria Esempi: y_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 8 -- y_min \u21b5 Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_min( geometry ) Argomenti: geometry una geometria Esempi: y_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 5 -- z \u21b5 Restituisce la coordinata z di una geometria puntuale. Sintassi: z( geometry ) Argomenti: geometry una geometria punto Esempi: z( geom_from_wkt( 'POINTZ(2 5 7)' ) ) \u2192 7 z_max \u21b5 Restituisce la coordinata z massima di una geometria. Sintassi: z_max( geometry ) Argomenti: geometry una geometria con z coordinata Esempi: z_max( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 z_max( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 3 z_max( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 0 z_max( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 2 z_max( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL z_min \u21b5 Restituisce la coordinata z minima di una geometria. Sintassi: z_min( geometry ) Argomenti: geometry una geometria con z coordinata Esempi: z_min( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 z_min( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 1 z_min( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2 z_min( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 -1 z_min( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL","title":"Geometria"},{"location":"gr_funzioni/geometria/geometria_unico/#gruppo-geometria","text":"Abstract Questo gruppo contiene funzioni che operano sugli oggetti geometrici es: lunghezza , area .","title":"Gruppo Geometria"},{"location":"gr_funzioni/geometria/geometria_unico/#area","text":"Restituisce l'area della geometria corrente. L'area calcolata da questa funzione rispetta sia le impostazioni dell'ellissoide del progetto corrente sia delle unit\u00e0 di misura. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora l'area calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide l'area calcolata sar\u00e0 planimetrica. Sintassi: $area Esempi: $area \u2192 131196498,619546 Nota bene: Se il SR del progetto in cui si sta calcolando l'area ( $area ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) allora l'unit\u00e0 di misura sarebbe il metro, invece se il SR del progetto fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe gradi e quindi poco comprensibile e valori piccoli (0.00001). Osservazione: in generale $area <> area($geometry)","title":"$area"},{"location":"gr_funzioni/geometria/geometria_unico/#geometry","text":"Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni. Sintassi: $geometry Esempi: geomToWKT( $geometry ) \u2192 POINT(6 50) area($geoamtry) \u2192 1234567.89 mq perimeter($geometry) \u2192 25689.25 m Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$geometry"},{"location":"gr_funzioni/geometria/geometria_unico/#length","text":"Restituisce la lunghezza di una linestring. Se hai bisogno della lunghezza del bordo di un poligono, utilizza invece $perimeter . La lunghezza calcolata da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora la lunghezza calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide la lunghezza calcolata sar\u00e0 planimetrica. Sintassi: $length Esempi: $length \u2192 42.4711 Osservazione: Come evidenziano nella definizione della funzione, $length calcola la lunghezza rispettando le impostazioni di progetto: Occorre cambiare entrambe le impostazioni, sia quelle dell'ellissoide \u2192 'None/Planimetric' sia le Unit\u00e0 di misura per le distanze' \u2192 Gradi Queste modofiche non valgono per l'etichettatura, la lunghezza sar\u00e0 quella relativa alla geometria e quindi al suo SR. Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$length"},{"location":"gr_funzioni/geometria/geometria_unico/#perimeter","text":"Restituisce la lunghezza del perimetro della geometria corrente. Il perimetro calcolato da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora il perimetro calcolato sar\u00e0 ellisoidico altrimenti se non \u00e8 stato impostato alcun ellissoide il perimetro calcolato sar\u00e0 planimetrico. Sintassi: $perimeter Esempi: $perimeter \u2192 2545897.26 Nota bene: Si utilizza SOLO per i poligoni, nel caso di feature lineari $length Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$perimeter"},{"location":"gr_funzioni/geometria/geometria_unico/#x","text":"Restituisce la coordinata x della geometria corrente. Sintassi: $x Esempi: $x \u2192 12.2568971 Osservazione: La funzione $x restituisce la coordinata x della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni ed: x($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"$x"},{"location":"gr_funzioni/geometria/geometria_unico/#x_at","text":"Recupera una coordinata x per la geometria dell'elemento corrente. Sintassi: $x_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi: $x_at(1) \u2192 12.6882843 Osservazioni: Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"$x_at"},{"location":"gr_funzioni/geometria/geometria_unico/#y","text":"Restituisce la coordinata y della geometria corrente. Sintassi: $y Esempi: $y \u2192 12.2568971 Osservazione: La funzione $y restituisce la coordinata y della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni es: y($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"$y"},{"location":"gr_funzioni/geometria/geometria_unico/#y_at","text":"Recupera una coordinata y per la geometria dell'elemento corrente. Sintassi: $y_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi: $y_at(1) \u2192 2 Osservazioni: Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"$y_at"},{"location":"gr_funzioni/geometria/geometria_unico/#angle_at_vertex","text":"Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: angle_at_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0 Esempi: angle_at_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 45.0 Osservazione: Il primo ed ultimo vertice di una lineastring aperta la funzione restituisce il valore dell'angolo e non la bisettrice.","title":"angle_at_vertex"},{"location":"gr_funzioni/geometria/geometria_unico/#area_1","text":"Restituisce l'area di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura dell'area restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $area, la quale esegue calcoli ellisoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura dell'area. Sintassi: area( geometry ) Argomenti: geometry oggetto geometria poligono Esempi: area($geometry) \u2192 1234.567 Nota bene: Se il SR del layer in cui si sta calcolando l'area ( area() ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) l'unit\u00e0 di misura sarebbe il metro, invece se il SR del layer fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe in gradi e quindi poco comprensibile e valori piccoli. Osservazioni: in generale area($geometry) <> $area","title":"area"},{"location":"gr_funzioni/geometria/geometria_unico/#azimuth","text":"Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi: azimuth( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689 Osservazione: Azimuth per definizione restituisce un angolo in radianti, per trasformarlo in gradi usare la funzione degrees()","title":"Azimuth"},{"location":"gr_funzioni/geometria/geometria_unico/#boundary","text":"Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria). Per esempio, una geometria poligonale avr\u00e0 un confine costituito dalle linee di ogni anello nel poligono. Alcuni tipi di geometrie non hanno confini, es collezioni di punti o geometrie e pertanto verr\u00e0 restituito null. Sintassi: boundary( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(boundary(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'LineString(1 1,0 0,-1 1,1 1)' geom_to_wkt(boundary(geom_from_wkt('LineString(1 1,0 0,-1 1)'))) \u2192 'MultiPoint ((1 1),(-1 1))' Osservazioni: funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"boundary"},{"location":"gr_funzioni/geometria/geometria_unico/#bounds","text":"Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds( geometry ) Argomenti: geometry una geometria Esempi: bounds($geometry) \u2192 perimetro di delimitazione dell'elemento geometrico corrente geom_to_wkt(bounds(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'Polygon ((-1 0, 1 0, 1 1, -1 1, -1 0))' Osservazioni: funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"bounds"},{"location":"gr_funzioni/geometria/geometria_unico/#bounds_height","text":"Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_height( geometry ) Argomenti: geometry una geometria Esempi: bounds_height($geometry) \u2192 altezza del perimetro di delimitazione dell'elemento geometrico corrente bounds_height(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')) \u2192 1 Osservazioni: La funzione restituisce un numero che corrisponde all'altezza del rettangolo di ingombro di una geometria.","title":"bounds_height"},{"location":"gr_funzioni/geometria/geometria_unico/#bounds_width","text":"Restituisce la larghezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_width( geometry ) Argomenti: geometry una geometria Esempi: bounds_width($geometry) \u2192 larghezza del perimetro di delimitazione di $geometry Osservazioni: La funzione restituisce un numero che corrisponde alla larghezza del rettangolo di ingombro di una geometria.","title":"bounds_width"},{"location":"gr_funzioni/geometria/geometria_unico/#buffer","text":"Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita. I calcoli vengono effettuati nel sistema di riferimento spaziale della geometria. Sintassi: buffer( geometry , distance [, segments=8 ]) Argomenti: geometry una geometria distance distanza buffer nelle unit\u00e0 del layer segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. Esempi: buffer($geometry, 10.5) \u2192 poligono di $geometry bufferizzato di 10.5 unit\u00e0 Danger Utilizzando SR proiettati l'unit\u00e0 di misura \u00e8 il metro, mentre, per SR geografici \u00e8 il grado, quindi attenzione al valore della distanza. Nota bene: La Funzione restituisce SEMPRE un poligono sia per geometry POINT , LINESTRING o **POLYGON","title":"buffer"},{"location":"gr_funzioni/geometria/geometria_unico/#buffer_by_m","text":"Crea un buffer lungo una geometria linestring in cui il diametro del buffer varia in base ai valori m nei vertici della linea. Sintassi: buffer_by_m( geometry , segments ) Argomenti: geometry la geometria deve essere una (multi) geometria linestring con valori m. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi: buffer_by_m(geometry:=geom_from_wkt('LINESTRINGM(1 2 0.5, 4 2 0.2)'),segments:=8) \u2192 Un buffer di larghezza variabile che inizia con un diametro di 0,5 e termina con un diametro di 0,2 lungo la linea. relativa all'esempio di sopra: Osservazioni: QGIS - feature","title":"buffer_by_m"},{"location":"gr_funzioni/geometria/geometria_unico/#centroid","text":"Restituisce il centro geometrico di una geometria. Sintassi: centroid( geometry ) Argomenti: geometry una geometria Esempi: centroid($geometry) \u2192 una geometria punto Osservazioni: La Funzione restituisce SEMPRE una geometry **POINT","title":"centroid"},{"location":"gr_funzioni/geometria/geometria_unico/#close_line","text":"Restituisce una linestring chiusa della linestring di input aggiungendo il primo punto alla fine della linea, se non \u00e8 gi\u00e0 chiusa. Se la geometria non \u00e8 una linestring o una MultiLinestring, il risultato sar\u00e0 NULL. Sintassi: close_line( geometry ) Argomenti: geometry una geometria linestring Esempi: geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1, 0 0)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0)","title":"close_line"},{"location":"gr_funzioni/geometria/geometria_unico/#closest_point","text":"Restituisce il punto sulla geometria1 che \u00e8 pi\u00f9 vicino alla geometria2. Sintassi: closest_point( geometry1 , _ geometry2 ) Argomenti: geometry1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry geometria dalla quale cercare il punto pi\u00f9 vicino Esempi: geom_to_wkt(closest_point(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 Point(73.0769 115.384) Osservazioni: Utilizzando il geometry generator per i temi (il layer strade \u00e8 una unica feature): closest_point( geometry(get_feature('strade', 'reg',19)),$geometry) Gif animata: geometry 1 \u00e8 la rete stradale; geometry 2 sono i punti; in rosso i closestpoint","title":"closest_point"},{"location":"gr_funzioni/geometria/geometria_unico/#collect_geometries","text":"Raccoglie un set di geometrie in un oggetto geometria multiparte.","title":"collect_geometries"},{"location":"gr_funzioni/geometria/geometria_unico/#variante-geometry","text":"Sintassi: collect_geometries( geometry1 , geometry2 ...) Argomenti: geometry geometria sulla quale cercare il punto pi\u00f9 vicino Esempi: geom_to_wkt(collect_geometries(make_point(1,2), make_point(3,4), make_point(5,6))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))'","title":"Variante geometry"},{"location":"gr_funzioni/geometria/geometria_unico/#variante-con-array","text":"Sintassi: collect_geometries( array ) Argomenti: array array con oggetti geometrici Esempi: geom_to_wkt(collect_geometries(array(make_point(1,2), make_point(3,4), make_point(5,6)))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Osservazioni:","title":"Variante con array"},{"location":"gr_funzioni/geometria/geometria_unico/#combine","text":"Restituisce la combinazione di due geometrie. Sintassi: combine( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 2 1)' ) ) ) \u2192 MULTILINESTRING((4 4, 2 1), (3 3, 4 4), (4 4, 5 5)) geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 6 6, 2 1)' ) ) ) \u2192 LINESTRING(3 3, 4 4, 6 6, 2 1)","title":"combine"},{"location":"gr_funzioni/geometria/geometria_unico/#contains","text":"Verifica se una geometria ne contiene un'altra. Restituisce vero se e solo se nessun punto di geometry2 giace all'esterno di geometry1 e almeno un punto dell'interno di geometry2 si trova all'interno di geometry1. Sintassi: contains( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'POINT(0.5 0.5 )' ) ) \u2192 vero contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry2 \u00e8 $geometry seleziono tutti i comuni contains (contenuti) nella provincia con pk_uid 46 (Lucca) PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Lucca). NOT contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"contains"},{"location":"gr_funzioni/geometria/geometria_unico/#convex_hull","text":"Restituisce il poligono convesso di una geometria. Rappresenta la minima geometria convessa che racchiude tutte le geometria contenute nell'insieme. Sintassi: convex_hull( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt( convex_hull( geom_from_wkt( 'LINESTRING(3 3, 4 4, 4 10)' ) ) ) \u2192 POLYGON((3 3,4 10,4 4,3 3)) Osservazioni: La funzione restituisce sempre un poligono.","title":"convex_hull"},{"location":"gr_funzioni/geometria/geometria_unico/#crosses","text":"Verifica se una geometria interseca un'altra. Restituisce vero (1) se le geometrie interessate hanno qualche, ma non tutti, punto interno in comune. Sintassi: crosses( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: crosses( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero crosses( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni crosses (attraversati) dal fiume ARNO PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli attraversati dal fiume ARNO). NOT crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry)","title":"crosses"},{"location":"gr_funzioni/geometria/geometria_unico/#difference","text":"Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b . Sintassi: difference( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(4 4, 5 5) Espressione: Espressione -- differenza linea a - linea b difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a Espressione -- differenza linea b - linea a difference( make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a Prova tu Dati e progetto qgz Esempio di sopra:","title":"difference"},{"location":"gr_funzioni/geometria/geometria_unico/#disjoint","text":"Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune. Sintassi: disjoint( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria * geometry2 una geometria Esempi: disjoint( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero disjoint( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'POINT(4 4)' )) \u2192 falso Osservazione: Vero = 1; Falso= 0 Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): disjoint(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni disjoint (disgiunti) dal fiume ARNO","title":"disjoint"},{"location":"gr_funzioni/geometria/geometria_unico/#distance","text":"Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate. Sintassi: distance( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: distance( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(4 8)' ) ) \u2192 4 --","title":"distance"},{"location":"gr_funzioni/geometria/geometria_unico/#distance_to_vertex","text":"Restituisce la distanza lungo una geometria ad un vertice specificato. Sintassi: distance_to_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi: distance_to_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 10.0 -- esempio di sopra:","title":"distance_to_vertex"},{"location":"gr_funzioni/geometria/geometria_unico/#end_point","text":"Restituisce l'ultimo nodo di una geometria. Sintassi: end_point( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(end_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (0 2)' -- End_point di geometria poligonale: End_point di geometria lineare:","title":"end_point"},{"location":"gr_funzioni/geometria/geometria_unico/#extend","text":"Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata. Le linee sono estese usando la direzione di immersione del primo e dell'ultimo segmento nella linea. Le distanze sono espresse nel SR di tale geometria. Sintassi: extend( geometry , start_distance , end_distance ) Argomenti: geometry una geometria (multi)linestring start_distance distanza alla quale estendere l' inizio della linea end_distance distanza alla quale estendere la fine della linea. Esempi: geom_to_wkt(extend(geom_from_wkt('LineString(0 0, 1 0, 1 1)'),1,2)) \u2192 'LineString (-1 0, 1 0, 1 3)' geom_to_wkt(extend(geom_from_wkt('MultiLineString((0 0, 1 0, 1 1), (2 2, 0 2, 0 5))'),1,2)) \u2192 'MultiLineString ((-1 0, 1 0, 1 3),(3 2, 0 2, 0 7))' --","title":"extend"},{"location":"gr_funzioni/geometria/geometria_unico/#exterior_ring","text":"Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 NULL. Sintassi: exterior_ring( geometry ) Argomenti: geometry una geometria poligono Esempi: geom_to_wkt(exterior_ring(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2, 0.1, 0.1 0.1))'))) \u2192 'LineString (-1 -1, 4 0, 4 2, 0 2, -1 -1)' --","title":"exterior_ring"},{"location":"gr_funzioni/geometria/geometria_unico/#extrude","text":"Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y. Sintassi: extrude( geometry , x , y ) Argomenti: geometry una geometria poligono x estensione x, valore numerico y estensione y, valore numerico Esempi: extrude(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), 1, 2) \u2192 Polygon ((1 2, 3 2, 4 3, 5 5, 4 4, 2 4, 1 2)) extrude(geom_from_wkt('MultiLineString((1 2, 3 2), (4 3, 8 3)'), 1, 2) \u2192 MultiPolygon (((1 2, 3 2, 4 4, 2 4, 1 2)),((4 3, 8 3, 9 5, 5 5, 4 3))) Osservazioni: Nell'esempio ho utilizzato la funzione [boundary()](boundary.md) perch\u00e9 la geometria di ingresso deve essere lineare.","title":"extrude"},{"location":"gr_funzioni/geometria/geometria_unico/#flip_coordinates","text":"Restituisce una copia della geometria con le coordinate x e y scambiate. Utile per riparare le geometrie che hanno invertito i valori di latitudine e longitudine. Sintassi: flip_coordinates( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(flip_coordinates(make_point(1, 2))) \u2192 Point (2 1) -- Esempio con vettore poligonale (aggiorno la geometry): il flip \u00e8 da usare con cautela perch\u00e9 cambia radicalemnte la posizione del vettore","title":"flip_coordinates"},{"location":"gr_funzioni/geometria/geometria_unico/#force_rhr","text":"Forza una geometria a rispettare la regola della mano destra, in cui l'area delimitata da un poligono si trova a destra del limite. In particolare, l'anello esterno \u00e8 orientato in senso orario e l'interno in senso antiorario. Sintassi: force_rhr( geometry ) Argomenti: geometry una geometria. Qualsiasi geometria non poligonale viene restituita invariata. Esempi: geom_to_wkt(force_rhr(geometry:=geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'))) \u2192 Polygon ((-1 -1, 0 2, 4 2, 4 0, -1 -1)) Osservazioni: Ecco un esempio pratico della funzione (presente anche nelgli strumenti fi processing) ovvero un poligono disegnato in senso antiorario viene forzato in senso orario e l'etichettature \u00e8 visibile correttamente.","title":"force_rhr"},{"location":"gr_funzioni/geometria/geometria_unico/#geom_from_gml","text":"Restituisce una geometria da una rappresentazione GML di una geometria. Sintassi: geom_from_gml( _gml ) Argomenti: gml Rappresentazione GML di una geometria come stringa Esempi: geom_to_wkt(geom_from_gml('<gml:LineString srsName=\"EPSG:4326\"><gml:coordinates>4,4 5,5 6,6</gml:coordinates></gml:LineString>') ) \u2192 'LineString (4 4, 5 5, 6 6)'","title":"geom_from_gml"},{"location":"gr_funzioni/geometria/geometria_unico/#geom_from_wkb","text":"Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB). Sintassi: geom_from_wkb( binari ) Argomenti: binari Rappresentazione binaria ben nota (WKB) di una geometria (come BLOB binario) Esempi: geom_from_wkb( geom_to_wkb( make_point(4,5) ) ) \u2192 un oggetto geometria punto","title":"geom_from_wkb"},{"location":"gr_funzioni/geometria/geometria_unico/#geom_from_wkt","text":"Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT). Sintassi: geom_from_wkt_ text _) Argomenti: text Rappresentazione Well-Known Text (WKT) di una geometria Esempi: geom_from_wkt( 'POINT(4 5)' ) \u2192 un oggetto geometria","title":"geom_from_wkt"},{"location":"gr_funzioni/geometria/geometria_unico/#geom_to_wkb","text":"Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario. Sintassi: geom_to_wkb( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkb( $geometry ) \u2192 BLOB binario contenente un oggetto geometria","title":"geom_to_wkb"},{"location":"gr_funzioni/geometria/geometria_unico/#geom_to_wkt","text":"Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR Sintassi: geom_to_wkt( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt( make_point(6, 50) ) \u2192 'POINT(6 50)' geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'POINT(0 0.66666667)' geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')), 2) \u2192 'POINT(0 0.67)'","title":"geom_to_wkt"},{"location":"gr_funzioni/geometria/geometria_unico/#geometry_1","text":"Restituisce la geometria di un elemento. Sintassi: geometry( feature ) Argomenti: feature un oggetto elemento Esempi: geom_to_wkt( geometry( get_feature( layer, attributeField, value ) ) ) \u2192 'POINT(6 50)'` intersects( $geometry, geometry( get_feature( layer, attributeField, value ) ) ) \u2192 vero` -- Usando il Select by Expression : selezionare le feature di un layer (quartieri) in funzione di altro layer (test):","title":"geometry"},{"location":"gr_funzioni/geometria/geometria_unico/#geometry_n","text":"Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: geometry_n( geometry , index ) Argomenti: geometry raccolta di geometrie index indice della geometria da restituire, dove 1 \u00e8 la prima geometria nella raccolta Esempi: geom_to_wkt(geometry_n(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))'),3)) \u2192 'Point (1 0)'","title":"geometry_n"},{"location":"gr_funzioni/geometria/geometria_unico/#hausdorff_distance","text":"Restituisce la distanza di Hausdorff tra due geometrie. Questa \u00e8 in sostanza una misura di come le 2 geometrie sono simili o dissimili: una distanza pi\u00f9 bassa indica geometrie pi\u00f9 simili. La funzione pu\u00f2 essere eseguita con un argomento opzionale di densificazione della frazione. Se non viene specificato, viene utilizzata una approssimazione alla distanza standard di Hausdorff. Questa approssimazione \u00e8 esatta o abbastanza vicina per un grande sottoinsieme di casi utili. Esempi di questi sono: calcolare la distanza tra Linestrings che sono approssimativamente paralleli tra loro e sono sostanzialmente uguali in lunghezza. Ci\u00f2 si verifica nelle verifica di reti lineari. testare la somiglianza di geometrie. Se l'approssimazione predefinita fornita da questo metodo \u00e8 insufficiente, specifica l'argomento opzionale di densificazione della frazione. Specificando questo argomento si esegue una densificazione del segmento prima di calcolare la distanza Hausdorff discreta. Il parametro imposta la frazione con cui densificare ogni segmento. Ogni segmento sar\u00e0 suddiviso in un numero di subsegmenti di uguale lunghezza, la cui frazione della lunghezza totale \u00e8 la pi\u00f9 vicina alla frazione data. Riducendo il parametro di densificazione della frazione, la distanza restituita si avviciner\u00e0 alla vera distanza Hausdorff per le geometrie. Sintassi: hausdorff_distance( geometry1 , geometry2 , densify_fraction ) Argomenti: geometry1 una geometria geometry2 una geometria densify_fraction quantit\u00e0 di densificazione della frazione Esempi: hausdorff_distance( geometry1:= geom_from_wkt('LINESTRING (0 0, 2 1)'),geometry2:=geom_from_wkt('LINESTRING (0 0, 2 0)')) \u2192 2 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)')) \u2192 14.142135623 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)'),0.5) \u2192 70.0 -- Nel caso di geometrie puntuali la hausdorff_distance coincide con la funzione distance , segue un esempio: Espressione format_number( hausdorff_distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' || '\\n'|| format_number( distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' -- In questo esempio confronto due layer: il numero pi\u00f9 piccolo indica il poligono pi\u00f9 simile a al poligono pi\u00f9 grande.","title":"hausdorff_distance"},{"location":"gr_funzioni/geometria/geometria_unico/#inclination","text":"Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b . Sintassi: inclination( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 --","title":"inclination"},{"location":"gr_funzioni/geometria/geometria_unico/#interior_ring_n","text":"Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono. Sintassi: interior_ring_n( geometry , index ) Argomenti: geometry geometria poligono index Indice dell'anello interno da restituire, dove 1 \u00e8 il primo anello interno Esempi: geom_to_wkt(interior_ring_n(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1),(-1 -1, 4 0, 4 2, 0 2, -1 -1))'),1)) \u2192 'LineString (-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))' Osservazioni: Restituisce una lineastring!!!","title":"interior_ring_n"},{"location":"gr_funzioni/geometria/geometria_unico/#intersection","text":"Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie. Sintassi: intersection( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 'LINESTRING(3 3, 4 4)' geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'MULTIPOINT(3.5 3.5, 4 5)' ) ) ) \u2192 'POINT(3.5 3.5)' Espressione -- intersezione tra le due linee intersection( make_line( -- linea a start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea b start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz --","title":"intersection"},{"location":"gr_funzioni/geometria/geometria_unico/#intersects","text":"Controlla qualora una geometria ne interseca un'altra. Restituisce true (1) se la geometrie si intersecano spazialmente (condividono una porzione di spazio) altrimenti da false (0). Sintassi: intersects( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: intersects( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 falso Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry2 \u00e8 $geometry seleziono tutti i comuni intersects (interseca) nella provincia con pk_uid 46 (Lucca) PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli intersecati con la provincia di Lucca). NOT intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"intersects"},{"location":"gr_funzioni/geometria/geometria_unico/#intersects_bbox","text":"Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria. Restituisce vero (1) se le geometrie intersecano spazialmente il perimetro di delimitazione definito e falso (0) se non lo intersecano. Sintassi: intersects_bbox( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: intersects_bbox( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects_bbox( geom_from_wkt( 'POINT(6 5)' ), geom_from_wkt( 'POLYGON((3 3, 4 4, 5 5, 3 3))' ) ) \u2192 falso","title":"intersects_bbox"},{"location":"gr_funzioni/geometria/geometria_unico/#is_closed","text":"Restituisce vero (true) se una linestring \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso (false) se una linestring non \u00e8 chiusa. Se la geometria non \u00e8 una linestring, il risultato sar\u00e0 NULL. Sintassi: is_closed( geometry ) Argomenti: geometry una geometria linestring Esempi: is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero --","title":"is_closed"},{"location":"gr_funzioni/geometria/geometria_unico/#is_empty","text":"Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null . Sintassi: is_empty( geometry ) Argomenti: geometry una geometria Esempi: is_empty(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty(geom_from_wkt('POINT EMPTY')) \u2192 vero","title":"is_empty"},{"location":"gr_funzioni/geometria/geometria_unico/#is_empty_or_null","text":"Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null_or_null . Sintassi: is_empty_or_null( geometry ) Argomenti: geometry una geometria Esempi: is_empty_or_null(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso iis_empty_or_null(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty_or_null(geom_from_wkt('POINT EMPTY')) \u2192 vero","title":"is_empty_or_null"},{"location":"gr_funzioni/geometria/geometria_unico/#is_multipart","text":"Restituisce vero se la geometria \u00e8 di tipo Multi. Sintassi: is_multipart( geometry ) Argomenti: geometry una geometria Esempi: is_multipart(geom_from_wkt('MULTIPOINT ((0 0),(1 1),(2 2))')) \u2192 vero is_multipart(geom_from_wkt('POINT (0 0)')) \u2192 falso","title":"is_multipart"},{"location":"gr_funzioni/geometria/geometria_unico/#is_valid","text":"Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole OGC Sintassi: is_valid( geometry ) Argomenti: geometry una geometria Esempi: is_valid(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero is_valid(geom_from_wkt('LINESTRING(0 0)')) \u2192 falso","title":"is_valid"},{"location":"gr_funzioni/geometria/geometria_unico/#length_1","text":"Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring.","title":"length"},{"location":"gr_funzioni/geometria/geometria_unico/#variabile-stringa","text":"Restituisce il numero di caratteri contenuti in una stringa. Sintassi: length( string ) Argomenti: string stringa della quale calcolare la lunghezza Esempi: length('hello') \u2192 5","title":"Variabile stringa"},{"location":"gr_funzioni/geometria/geometria_unico/#variabile-geometria","text":"Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length , la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi: length( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4.0","title":"Variabile geometria"},{"location":"gr_funzioni/geometria/geometria_unico/#length3d","text":"Calcola la lunghezza 3D di un oggetto linea geometrica. Se la geometria non \u00e8 un oggetto linea 3D, restituisce la sua lunghezza 2D. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di questa geometria, e le unit\u00e0 della lunghezza restituita corrisponderanno alle unit\u00e0 per l'SR. Questo differisce dai calcoli eseguiti dalla funzione $length , che eseguir\u00e0 calcoli ellissoidali basati sulle impostazioni dell'ellissoide e dell'unit\u00e0 di distanza del progetto. Sintassi: length3D( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length3D(geom_from_wkt('LINESTRINGZ(0 0 0, 3 0 4)')) \u2192 5.0","title":"length3D"},{"location":"gr_funzioni/geometria/geometria_unico/#line_interpolate_angle","text":"Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: line_interpolate_angle( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea a cui interpolare l'angolo Esempi: line_interpolate_angle(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5) \u2192 90.0 --","title":"line_interpolate_angle"},{"location":"gr_funzioni/geometria/geometria_unico/#line_interpolate_point","text":"Restituisce il punto interpolato ad una specifica distanza lungo una geometria di tipo linestring. Sintassi: line_interpolate_point( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea Esempi: geom_to_wkt(line_interpolate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5)) \u2192 'Point (4 0)' --","title":"line_interpolate_point"},{"location":"gr_funzioni/geometria/geometria_unico/#line_locate_point","text":"Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata. Sintassi: line_locate_point( geometry , point ) Argomenti: geometry una geometria di tipo linestring point geometria puntuale per cui ricercare la posizione pi\u00f9 vicina sulla linestring Esempi: line_locate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),point:=geom_from_wkt('Point(5 1)')) \u2192 5.0","title":"line_locate_point"},{"location":"gr_funzioni/geometria/geometria_unico/#line_merge","text":"Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola. Questa funzione restituir\u00e0 NULL se la geometria considerata non \u00e8 una LineString/MultiLineString. Sintassi: line_merge( geometry ) Argomenti: geometry una geometria di tipo LineString/MultiLineString Esempi: geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(1 1, 2 2))'))) \u2192 'LineString(0 0,1 1,2 2)' geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(11 1, 21 2))'))) \u2192 'MultiLineString((0 0, 1 1),(11 1, 21 2)' --","title":"line_merge"},{"location":"gr_funzioni/geometria/geometria_unico/#line_substring","text":"Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate (misurata dall'inizio della linea). I valori Z e M sono linearmente interpolati dai valori esistenti. Sintassi: line_substring( geometry , start_distance , end_distance ) Argomenti: geometry una geometria lineare o curva start_distance distanza all'inizio della sottostringa end_distance distanza alla fine della sottostringa Esempi: geom_to_wkt(line_substring(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),start_distance:=2,end_distance:=6)) \u2192 'LineString (2 0,6 0)' line_substring( $geometry, $length *.1,$length *.6) \u2192 <geometria: LineString> -- Funzione utile per la tematizzazione","title":"line_substring"},{"location":"gr_funzioni/geometria/geometria_unico/#m","text":"Restituisce il valore m di una geometria puntuale. Sintassi: m( geometry ) Argomenti: geometry una geometria punto Esempi: ( geom_from_wkt( 'POINTM(2 5 4)' ) ) \u2192 4","title":"m"},{"location":"gr_funzioni/geometria/geometria_unico/#m_max","text":"Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_max( geometry ) Argomenti: geometry una geometria contenente m valori Esempi: m_max( make_point_m( 0,0,1 ) ) \u2192 1 m_max(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 2","title":"m_max"},{"location":"gr_funzioni/geometria/geometria_unico/#m_min","text":"Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_min( geometry ) Argomenti: geometry una geometria contenente m valori Esempi: m_min( make_point_m( 0,0,1 ) ) \u2192 1 m_min(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 0","title":"m_min"},{"location":"gr_funzioni/geometria/geometria_unico/#main_angle","text":"Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria. Sintassi: main_angle( geometry ) Argomenti: geometry una geometria poligono Esempi: main_angle(geom_from_wkt('Polygon ((321577 129614, 321581 129618, 321585 129615, 321581 129610, 321577 129614))')) \u2192 38.66 Osservazioni:","title":"main_angle"},{"location":"gr_funzioni/geometria/geometria_unico/#make_circle","text":"Crea un poligono circolare. Sintassi: make_circle( center , radius [, segments=36 ]) [ ] indica componenti opzionali Argomenti: center centro del cerchio radius raggio del cerchio segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt(make_circle(make_point(10,10), 5, 4)) \u2192 'Polygon ((10 15, 15 10, 10 5, 5 10, 10 15))' geom_to_wkt(make_circle(make_point(10,10,5), 5, 4)) \u2192 'PolygonZ ((10 15 5, 15 10 5, 10 5 5, 5 10 5, 10 15 5))'' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 4)) \u2192 'PolygonZM ((10 15 5 30, 15 10 5 30, 10 5 5 30, 5 10 5 30, 10 15 5 30))'","title":"make_circle"},{"location":"gr_funzioni/geometria/geometria_unico/#make_ellipse","text":"Crea un poligono ellittico. Sintassi: make_ellipse( center , semi_major_axis , semi_minor_axis , azimuth [, segments=36 ]) Argomenti: center centro dell'ellisse semi_major_axis semi-asse maggiore dell'ellisse semi_minor_axis semi-asse minore dell'ellisse azimuth orientazione dell'ellisse segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt(make_ellipse(make_point(10,10), 5, 2, 90, 4)) \u2192 'Polygon ((15 10, 10 8, 5 10, 10 12, 15 10)) geom_to_wkt(make_ellipse(make_point(10,10,5), 5, 2, 90, 4)) \u2192 'PolygonZ ((15 10 5, 10 8 5, 5 10 5, 10 12 5, 15 10 5))' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 2, 90, 4)) \u2192 'PolygonZM ((15 10 5 30, 10 8 5 30, 5 10 5 30, 10 12 5 30, 15 10 5 30))'","title":"make_ellipse"},{"location":"gr_funzioni/geometria/geometria_unico/#make_line","text":"Crea una geometria linea da una serie di geometrie punto. Sintassi: make_line( point1 , point2 , \u2026_) Argomenti: point una geometria punto Esempi: geom_to_wkt(make_line(make_point(2,4),make_point(3,5))) \u2192 'LineString (2 4, 3 5)' geom_to_wkt(make_line(make_point(2,4),make_point(3,5),make_point(9,7))) \u2192 'LineString (2 4, 3 5, 9 7)'","title":"make_line"},{"location":"gr_funzioni/geometria/geometria_unico/#array-variant","text":"I vertici di linea sono specificati come una matrice di punti. Sintassi: make_line( array ) Argomenti: array Matrice di punti Esempi: geom_to_wkt(make_line(array(make_point(2,4),make_point(3,5),make_point(9,7)))) \u2192 'LineString (2 4, 3 5, 9 7)' Espressione make_line( array(geometry( get_feature_by_id('fontanelle_Palermo',$id))), array(geometry( get_feature_by_id('fontanelle_Palermo',not $id%2))) )","title":"Array variant"},{"location":"gr_funzioni/geometria/geometria_unico/#make_point","text":"Crea una geometria punto da valori x ed y (e opzionalmente z ed m). Sintassi: make_point( x , y , z , m ) Argomenti: x coordinata x del punto y coordinata y del punto z coordinata opzionale z del punto m valore m del punto Esempi: geom_to_wkt(make_point(2,4,6,8)) \u2192 'PointZM (2 4 6 8)'","title":"make_point"},{"location":"gr_funzioni/geometria/geometria_unico/#make_point_m","text":"Crea una geometria punto da una coordinata x, y ed un valore m. Sintassi: make_point_m_( x , y , m ) Argomenti: x coordinata x del punto y coordinata y del punto m valore m del punto Esempi: geom_to_wkt(make_point_m(2,4,6)) \u2192 'PointM (2 4 6)'","title":"make_point_m"},{"location":"gr_funzioni/geometria/geometria_unico/#make_polygon","text":"Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne. Sintassi: make_polygon( outerRing [, innerRing1 ][, innerRing2 ] \u2026_) [ ] indica componenti opzionali Argomenti: outerRing geometria a linea chiusa per l'anello esterno del poligono innerRing geometria a linea chiusa opzionale per anello interno Esempi: geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0))' geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'),geom_from_wkt('LINESTRING( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1 )'),geom_from_wkt('LINESTRING( 0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0),(0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1),(0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8))'","title":"make_polygon"},{"location":"gr_funzioni/geometria/geometria_unico/#make_rectangle_3points","text":"Crea un rettangolo da 3 punti. Sintassi: make_rectangle_3points( point1 , point2 , point3 [,option=0]\u2026) Argomenti: point1 Primo punto point2 Secondo punto point3 Terzo punto option Un argomento facoltativo per costruire il rettangolo. Di default questo valore \u00e8 0. Il valore pu\u00f2 essere 0 (distanza) o 1 (proiettato). Distanza opzione: la seconda distanza \u00e8 uguale alla distanza tra il 2 \u00b0 e il 3 \u00b0 punto. Opzione proiettata: la seconda distanza \u00e8 uguale alla distanza della proiezione perpendicolare del terzo punto sul segmento o della sua estensione. Esempi: geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5), make_point(5, 5), 0))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5),make_point(5, 3), 1))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' --","title":"make_rectangle_3points"},{"location":"gr_funzioni/geometria/geometria_unico/#make_regular_polygon","text":"Crea un poligono regolare. Sintassi: make_regular_polygon( center , radius , number_sides [, circle=0 ]) [ ] indica componenti opzionali Argomenti: center centro del poligono regolare radius secondo punto. Il primo se il poligono regolare \u00e8 inscritto. Il punto intermedio del primo lato se il poligono regolare \u00e8 circoscritto. number_sides Numero di lati del poligono regolare circle Argomento opzionale per la costruzione del poligono regolare. Il valore predefinito \u00e8 0. Il valore pu\u00f2 essere 0 (poligono iscritto) o 1 (poligono circoscritto) Esempi: geom_to_wkt(make_regular_polygon(make_point(0,0), make_point(0,5), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' geom_to_wkt(make_regular_polygon(make_point(0,0), project(make_point(0,0), 4.0451, radians(36)), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))'","title":"make_regular_polygon"},{"location":"gr_funzioni/geometria/geometria_unico/#make_square","text":"Crea un quadrato da una diagonale. Sintassi: make_square( point1 , point2 ) Argomenti: point1 Primo punto della diagonale point2 Secondo punto della diagonale Esempi: geom_to_wkt(make_square( make_point(0,0), make_point(5,5))) \u2192 'Polygon ((0 0, -0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_square( make_point(5,0), make_point(5,5))) \u2192 'Polygon ((5 0, 2.5 2.5, 5 5, 7.5 2.5, 5 0))'","title":"make_square"},{"location":"gr_funzioni/geometria/geometria_unico/#make_triangle","text":"Crea un poligono triangolare Sintassi: make_triangle( point1 , point2 , point3 ) Argomenti: point1 Primo punto del triangolo point2 Secondo punto del triangolo point3 Secondo punto del triangolo Esempi: geom_to_wkt(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10))) \u2192 'Triangle ((0 0, 5 5, 0 10, 0 0))' geom_to_wkt(boundary(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10)))) \u2192 'LineString (0 0, 5 5, 0 10, 0 0)'","title":"make_triangle"},{"location":"gr_funzioni/geometria/geometria_unico/#minimal_circle","text":"Restituisce la circonferenza circoscritta minima di una geometria. Rappresenta il cerchio minimo che circoscrive tutte le geometrie presenti in un dataset. Sintassi: minimal_circle( geometry [, segments=36 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt( minimal_circle( geom_from_wkt( 'LINESTRING(0 5, 0 -5, 2 1)' ), 4 ) ) \u2192 Polygon ((0 5, 5 -0, -0 -5, -5 0, 0 5)) geom_to_wkt( minimal_circle( geom_from_wkt( 'MULTIPOINT(1 2, 3 4, 3 2)' ), 4 ) ) \u2192 Polygon ((3 4, 3 2, 1 2, 1 4, 3 4)) --","title":"minimal_circle"},{"location":"gr_funzioni/geometria/geometria_unico/#nodes_to_points","text":"Restituisce una geometria multi-punti costituita da ogni nodo della geometria in ingresso. Sintassi: nodes_to_points( geometry [, ignore_closing_nodes=false ]) Argomenti: geometry oggetto geometria ignore_closing_nodes argomento opzionale che specifica se includere i nodi duplicati che chiudono linee o poligoni ad anello. Normalmente false, impostare a true per evitare di includere questi nodi duplicati nella raccolta in uscita. Esempi: geom_to_wkt(nodes_to_points(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiPoint ((0 0),(1 1),(2 2))' geom_to_wkt(nodes_to_points(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'),true)) \u2192 'MultiPoint ((-1 -1),(4 0),(4 2),(0 2))' --","title":"nodes_to_points"},{"location":"gr_funzioni/geometria/geometria_unico/#num_geometries","text":"Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: num_geometries( geometry ) Argomenti: geometry raccolta di geometrie Esempi: num_geometries(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))')) \u2192 4","title":"num_geometries"},{"location":"gr_funzioni/geometria/geometria_unico/#num_interior_rings","text":"Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_interior_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi: num_interior_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 1","title":"num_interior_rings"},{"location":"gr_funzioni/geometria/geometria_unico/#num_points","text":"Restituisce il numero di vertici in una geometria. Sintassi: num_points( geometry ) Argomenti: geometry una geometria Esempi: num_points($geometry) \u2192 numero di vertici in $geometry","title":"num_points"},{"location":"gr_funzioni/geometria/geometria_unico/#num_rings","text":"Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi: num_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 2 --","title":"num_rings"},{"location":"gr_funzioni/geometria/geometria_unico/#offset_curve","text":"Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato. Le distanze sono espresse nel SR di tale geometria. Sintassi: offset_curve( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di offset. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in una linea pi\u00f9 morbida, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi: offset_curve($geometry, 10.5) \u2192 linea scostata a sinistra di 10.5 unit\u00e0 offset_curve($geometry, -10.5) \u2192 linea scostata a destra di 10.5 unit\u00e0 offset_curve($geometry, 10.5, segments=16, join=1) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in una curva pi\u00f9 morbida offset_curve($geometry, 10.5, join=3) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando un'unione smussata Osservazioni: La linea \u00e8 scostata a sinistra o destra rispetto al verso della linea:","title":"offset_curve"},{"location":"gr_funzioni/geometria/geometria_unico/#order_parts","text":"Ordina le parti di una MultiGeometria secondo un dato criterio Sintassi: order_parts( geometry , orderby [, ascending=true ]) [ ] indica componenti opzionali Argomenti: geometry una geometria multi-tipo orderby un espressione stringa che definisce il criterio di ordinamento ascending booleano, True per ascendente, False per discendente Esempi: order_parts(geom_from_wkt('MultiPolygon (((1 1, 5 1, 5 5, 1 5, 1 1)),((1 1, 9 1, 9 9, 1 9, 1 1)))'), 'area($geometry)', False) \u2192 MultiPolygon (((1 1, 9 1, 9 9, 1 9, 1 1)),((1 1, 5 1, 5 5, 1 5, 1 1))) order_parts(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), '1', True) \u2192 LineString(1 2, 3 2, 4 3)","title":"order_parts"},{"location":"gr_funzioni/geometria/geometria_unico/#oriented_bbox","text":"Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria. Sintassi: oriented_bbox( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(oriented_bbox(geom_from_wkt('MULTIPOINT(1 2, 3 4, 3 2)'))) \u2192 'Polygon ((1 2, 2 1, 4 3, 3 4, 1 2))'","title":"oriented_bbox"},{"location":"gr_funzioni/geometria/geometria_unico/#overlaps","text":"Controlla qualora una geometria si sovrapponga ad un'altra. Restituisce true (1) se le geometrie condividono aree, ma non sono completamente contenute una nell'altra. Sintassi: overlaps( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: overlaps( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 5, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 overlaps( geom_from_wkt( 'LINESTRING(0 0, 1 1)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 0 Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): overlaps(geometry(get_feature( 'cerchio','id','1')), $geometry) dove: geometry1 \u00e8 geometry(get_feature('cerchio','id','1')) geometry2 \u00e8 $geometry seleziono tutti i comuni overlaps (sovrapposti) al cerchio in figura. PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli sovrapposti con il cerchio). NOT overlaps(geometry(get_feature('cerchio','id','1')),$geometry)","title":"overlaps"},{"location":"gr_funzioni/geometria/geometria_unico/#overlay_contains","text":"Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Contains\" sottostante, come descritto nella funzione PostGIS ST_CONTAINS . Sintassi: overlay_contains( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_contains('regions') \u2192 true se l'elemento corrente contiene spazialmente una regione overlay_contains('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente contiene spazialmente una regione con una popolazione maggiore di 10000 overlay_contains('regions', name) \u2192 un array di nomi, per le regioni contenute nell'elemento corrente array_to_string(overlay_contains('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni contenute nell'elemento corrente overlay_contains('regions', name)[0] \u2192 una stringa con il nome della regione contenuta nell'elemento corrente array_sort(overlay_contains(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenute nell'elemento corrente e con una popolazione superiore a 10000 overlay_contains(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenute nell'elemento corrente","title":"overlay_contains"},{"location":"gr_funzioni/geometria/geometria_unico/#overlay_crosses","text":"Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento di un layer target o un array di risultati basati su espressioni per gli elementi nel layer target attraversati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Crosses\" sottostante, come descritto nella funzione PostGIS ST_Crosses . Sintassi: overlay_crosses( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_crosses('regions') \u2192 true se l'elemento corrente attraversa spazialmente una regione overlay_crosses('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente attraversa spazialmente una regione con una popolazione maggiore di 10000 overlay_crosses('regions', name) \u2192 un array di nomi, per le regioni attraversate dall'elemento corrente array_to_string(overlay_crosses('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni attraversate dall'elemento corrente overlay_crosses('regions', name)[0] \u2192 una stringa con il nome della prima regioni attraversata dall'elemento corrente array_sort(overlay_crosses(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni attraversate dall'elemento corrente e con una popolazione superiore a 10000 overlay_crosses(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni attraversate dall'elemento corrente","title":"overlay_crosses"},{"location":"gr_funzioni/geometria/geometria_unico/#overlay_disjoint","text":"Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer target, o un array di risultati basati su espressione per gli elementi nel layer target che sono disgiunti dall'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Disjoint\", come descritto nella funzione PostGIS ST_Disjoint . Sintassi: overlay_disjoint( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_disjoint('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni overlay_disjoint('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni con una popolazione maggiore di 10000 overlay_disjoint('regions', name) \u2192 un array di nomi, per le regioni spazialmente disgiunte dall'elemento corrente array_to_string(overlay_disjoint('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni spazialmente disgiunte dall'elemento corrente overlay_disjoint('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente disgiunte dall'elemento corrente array_sort(overlay_disjoint(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente disgiunte dall'elemento corrente e con una popolazione superiore a 10000 overlay_disjoint(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente disgiunte dall'elemento corrente","title":"overlay_disjoint"},{"location":"gr_funzioni/geometria/geometria_unico/#overlay_equals","text":"Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target che sono spazialmente uguali all'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Equals\" sottostante, come descritto nella funzione PostGIS ST_Equals . Sintassi: overlay_equals( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_equals('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente uguale ad una regione overlay_equals('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente uguale ad una regione con una popolazione maggiore di 10000 overlay_equals('regions', name) \u2192 un array di nomi, per le regioni spazialmente uguali all'elemento corrente array_to_string(overlay_equals('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni spazialmente uguali all'elemento corrente overlay_equals('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente uguale all'elemento corrente array_sort(overlay_equals(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente uguali all'elemento corrente e con una popolazione superiore a 10000 overlay_equals(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente uguali all'elemento corrente","title":"overlay_equals"},{"location":"gr_funzioni/geometria/geometria_unico/#overlay_intersects","text":"Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target intersecati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Intersects\" sottostante, come descritto nella funzione PostGIS ST_INTERSECTS . Sintassi: overlay_intersects( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_intersects('regions') \u2192 true se l'elemento corrente interseca spazialmente una regione overlay_intersects('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente interseca spazialmente una regione con una popolazione maggiore di 10000 overlay_intersects('regions', name) \u2192 un array di nomi, per le regioni intersecate dall'elemento corrente array_to_string(overlay_intersects('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni intersecate dall'elemento corrente overlay_intersects('regions', name)[0] \u2192 una stringa con il nome della regione intersecata dall'elemento corrente array_sort(overlay_intersects(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni intersecate dall'elemento corrente e con una popolazione maggiore di 10000 overlay_intersects(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni intersecate dall'elemento corrente","title":"overlay_intersects"},{"location":"gr_funzioni/geometria/geometria_unico/#overlay_nearest","text":"Restituisce se l'elemento corrente ha elementi da un layer target entro una data distanza o un array di risultati basati su espressioni per gli elementi nel layer di target entro una distanza dall'elemento corrente. Nota: questa funzione pu\u00f2 essere lenta e consuma molta memoria per layer con molte feature. Sintassi: overlay_contains( layer [, expression ][, filter ][, limit=1 ][, max_distance ][, cache ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); max_distance una distanza opzionale per limitare la ricerca di elementi corrispondenti. Se non impostato, verranno usati tutti gli elementi nel layer di destinazione. cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_nearest('airports') \u2192 true se il layer \"airports\" ha almeno un elemento overlay_nearest('airports', max_distance:= 5000) \u2192 vero se \u00e8 presente un aeroporto entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente overlay_nearest('airports', name) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come array array_to_string(overlay_nearest('airports', name)) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come stringa overlay_nearest(layer:='airports', expression:= name, max_distance:= 5000) \u2192 il nome dell'aereoporto pi\u00f9 vicino entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, come array overlay_nearest(layer:='airports', expression:=\"name\", filter:= \"Use\"='Civilian', limit:=3) \u2192 un array di nomi, per un massimo di tre aeroeporti civili pi\u00f9 vicini ordinati per distanza overlay_nearest(layer:='airports', expression:=\"name\", limit:= -1, max_distance:= 5000) \u2192 un array di nomi, per tutti gli aeroporti entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, ordinato per distanza. Esempio 45: http://hfcqgis.opendatasicilia.it/it/latest/esempi/linea_min_distanza2.html","title":"overlay_nearest"},{"location":"gr_funzioni/geometria/geometria_unico/#overlay_touches","text":"Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target toccati dall'elemento corrente. Leggi ulteriori informazioni sul predicato GEOS \"Touches\", come descritto nella funzione PostGIS ST_TOUCHES . Sintassi: overlay_touches( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_touches('regions') \u2192 true se l'elemento corrente tocca spazialmente una regione overlay_touches('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente tocca spazialmente una regione con una popolazione maggiore di 10000 overlay_touches('regions', name) \u2192 un array di nomi, per le regioni tocacte dall'elemento corrente string_to_array(overlay_touches('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni toccate dall'elemento corrente overlay_touches('regions', name)[0] \u2192 una stringa con il nome della regione toccata dall'elemento corrente array_sort(overlay_touches(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni toccate dall'elemento attuale e con una popolazione superiore a 10000 overlay_touches(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni toccate dall'elemento corrente","title":"overlay_touches"},{"location":"gr_funzioni/geometria/geometria_unico/#overlay_within","text":"Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Within\", come descritto nella funzione PostGIS ST_WITHIN . Sintassi: overlay_within( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: overlay_within('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente all'interno di una regione overlay_within('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente all'interno di una regione con una popolazione maggiore di 10000 overlay_within('regions', name) \u2192 un array di nomi, per le regioni contenenti l'elemento corrente array_to_string(overlay_within('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni che contengono l'elemento corrente overlay_within('regions', name)[0] \u2192 una stringa con il nome della regione che contengono l'elemento corrente array_sort(overlay_within(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenenti l'elemento corrente e con una popolazione superiore a 10000 overlay_within(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenenti l'elemento corrente","title":"overlay_within"},{"location":"gr_funzioni/geometria/geometria_unico/#perimeter_1","text":"Calcola il perimetro di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $perimeter , la quale esegue calcoli ellissoidali basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura della distanza. Sintassi: perimeter( geometry ) Argomenti: geometry oggetto geometria poligono Esempi: perimeter(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))')) \u2192 12.0","title":"perimeter"},{"location":"gr_funzioni/geometria/geometria_unico/#point_n","text":"Restituisce un nodo specifico da una geometria. Sintassi: point_n( geometry , index ) Argomenti: geometry oggetto geometria index indice del nodo da restituire, dove 1 \u00e8 il primo nodo; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi: geom_to_wkt(point_n(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))'),2)) \u2192 'Point (4 0)' -- Esempi correlati: esempio nro 4 - Come aggiungere la quota Z alla tabella attributi","title":"point_n"},{"location":"gr_funzioni/geometria/geometria_unico/#point_on_surface","text":"Restituisce un punto garantendo che sia giacente sulla superficie della geometria. Sintassi: point_on_surface( geometry ) Argomenti: geometry una geometria Esempi: point_on_surface($geometry) \u2192 una geometria punto --","title":"point_on_surface"},{"location":"gr_funzioni/geometria/geometria_unico/#pole_of_inaccessibility","text":"Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie. Questa funzione usa l'algoritmo 'polylabel' (Vladimir Agafonkin, 2016), che \u00e8 un approccio iterativo garantito per trovare il vero polo dell'inaccessibilit\u00e0 all'interno di una tolleranza specificata. Tolleranze pi\u00f9 precise richiedono pi\u00f9 iterazioni e sar\u00e0 necessario pi\u00f9 tempo per il calcolo. Sintassi: pole_of_inaccessibility( geometry , tolerance ) Argomenti: geometry una geometria tolerance distanza massima tra il punto restituito e la vera posizione del polo Esempi: geom_to_wkt(pole_of_inaccessibility( geom_from_wkt('POLYGON((0 1,0 9,3 10,3 3, 10 3, 10 1, 0 1))'), 0.1)) \u2192 'Point(1.55, 1.55)' --","title":"pole_of_inaccessibility"},{"location":"gr_funzioni/geometria/geometria_unico/#project","text":"Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti. Sintassi: project( point , distance , azimuth [, elevation ]) [ ] indica componenti opzionali Argomenti: point punto di partenza point distanza da proiettare azimuth azimuth in radianti in senso orario, dove 0 corrisponde a nord elevation angolo di inclinazione in radianti Esempi: project(make_point(1, 2), 3, radians(270)) \u2192 Point(-2, 2) --","title":"project"},{"location":"gr_funzioni/geometria/geometria_unico/#relate","text":"Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie.","title":"relate"},{"location":"gr_funzioni/geometria/geometria_unico/#variabile-di-relazione","text":"Restituisce la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Sintassi: relate( geometry , geometry ) ) Argomenti: geometry una geometria geometry una geometria Esempi: relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ) ) \u2192 'FF1F00102'","title":"Variabile di relazione"},{"location":"gr_funzioni/geometria/geometria_unico/#variabile-di-corrispondenza-del-modello","text":"Testa se la relazione DE-9IM tra due geometrie corrisponde a un pattern specificato: restituisc true Vero, false Falso. Sintassi: relate( geometry , geometry , pattern ) Argomenti: geometry una geometria geometry una geometria pattern Tratteggio DE-9IM da far corrispondere Esempi: relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ), '**1F001**' ) \u2192 Vero Link utili: Wikipedia OpenGeo","title":"Variabile di corrispondenza del modello"},{"location":"gr_funzioni/geometria/geometria_unico/#reverse","text":"Inverte il verso di una linestring invertendo l'ordine dei sui vertici. Sintassi: reverse( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(reverse(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'LINESTRING(2 2, 1 1, 0 0)' --","title":"reverse"},{"location":"gr_funzioni/geometria/geometria_unico/#rotate","text":"Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria. Sintassi: rotate( geometry , rotation [, center ]) [ ] indica componenti opzionali Argomenti: geometry una geometria rotation rotazione oraria in gradi center punto centrale di rotazione. Se non specificato, viene utilizzato il centro del perimetro di delimitazione della geometria. Esempi: rotate($geometry, 45, make_point(4, 5)) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al punto (4, 5) rotate($geometry, 45) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al centro del riquadro di delimitazione","title":"rotate"},{"location":"gr_funzioni/geometria/geometria_unico/#segments_to_lines","text":"Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso. Sintassi: segments_to_lines( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(segments_to_lines(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiLineString ((0 0, 1 1),(1 1, 2 2))'","title":"segments_to_lines"},{"location":"gr_funzioni/geometria/geometria_unico/#shortest_line","text":"Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2. La linea risultante partir\u00e0 dalla geometria 1 e finir\u00e0 nella geometria 2. Sintassi: shortest_line( geometry1 , geometry2 ) Argomenti: geometry1 geometria dalla quale cercare la linea pi\u00f9 corta geometry2 geometria verso la quale cercare la linea pi\u00f9 corta Esempi: geom_to_wkt(shortest_line(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 LineString(73.0769 115.384, 100 100) --","title":"shortest_line"},{"location":"gr_funzioni/geometria/geometria_unico/#simplify","text":"Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker). L'algoritmo mantiene grandi deviazioni nelle geometrie e riduce il numero di vertici in segmenti quasi rettilinei. Sintassi: simplify(simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance deviazione massima dai segmenti rettilinei per i punti da rimuovere Esempi: geom_to_wkt(simplify(geometry:=geom_from_wkt('LineString(0 0, 5 0.1, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)'","title":"simplify"},{"location":"gr_funzioni/geometria/geometria_unico/#simplify_vw","text":"Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ). L'algoritmo rimuove i vertici che creano piccole aree nelle geometrie, ad esempio picchi stretti o segmenti quasi rettilinei. Sintassi: simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance una misura dell'area massima creata da un nodo per il nodo da rimuovere Esempi: geom_from_wkt('LineString(0 0, 5 0, 5.01 10, 5.02 0, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' --","title":"simplify_vw"},{"location":"gr_funzioni/geometria/geometria_unico/#single_sided_buffer","text":"Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring. Le distanze sono espresse nel SR di tale geometria. Sintassi: single_sided_buffer( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di buffer. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi: single_sided_buffer($geometry, 10.5) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0 single_sided_buffer($geometry, -10.5) \u2192 linea bufferizzata a destra di 10.5 unit\u00e0 single_sided_buffer($geometry, 10.5, segments:=16, join:=1) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in un buffer pi\u00f9 morbido single_sided_buffer($geometry, 10.5, join:=3) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando un'unione smussata --","title":"single_sided_buffer"},{"location":"gr_funzioni/geometria/geometria_unico/#smooth","text":"Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria. Sintassi: smooth( geometry , iterations=1 , offset=0.25 , min_length=1 , max_angle=180 ) Argomenti: geometry una geometria iterations Numero di iterazioni di smussatura da applicare. Valori pi\u00f9 alti fanno risultare geometria pi\u00f9 morbide, ma pi\u00f9 complesse. offset valore tra 0 e 0.5 che controlla quanto la geometria smussata segua strettamente la geometria originale. Valori pi\u00f9 piccoli risultano in una lisciatura pi\u00f9 stretta, valori pi\u00f9 grandi risultano in una lisciatura pi\u00f9 larga. min_length lunghezza minima dei segmenti ai quali applicare la smussatura. Questo parametro pu\u00f2 essere usato per evitare di posizionare nodi aggiuntivi eccessivi nei segmenti pi\u00f9 corti della geometria. max_angle angolo massimo (0-180) da applicare al nodo per la smussatura. Abbassando intenzionalmente l'angolo massimo si abbassa l'arrotondamento sugli angoli della geometria. Per esempio, un valore di 80 gradi preserver\u00e0 l'angolo nella geometria. Esempi: geom_to_wkt(smooth(geometry:=geom_from_wkt('LineString(0 0, 5 0, 5 5)'),iterations:=1,offset:=0.2,min_length:=-1,max_angle:=180)) \u2192 'LineString (0 0, 4 0, 5 1, 5 5)'","title":"smooth"},{"location":"gr_funzioni/geometria/geometria_unico/#start_point","text":"Restituisce il primo nodo di una geometria. Sintassi: start_point( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(start_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (4 0)' Start_point di geometria poligonale: Start_point di geometria lineare:","title":"start_point"},{"location":"gr_funzioni/geometria/geometria_unico/#sym_difference","text":"Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca. Sintassi: sym_difference( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( sym_difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 8 8)' ) ) ) \u2192 LINESTRING(5 5, 8 8) Espressione -- differenza simmetrica tra le due linee sym_difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz --","title":"sym_difference"},{"location":"gr_funzioni/geometria/geometria_unico/#tapered_buffer","text":"Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea. Sintassi: tapered_buffer( geometry , start_width , end_width [, segments=8 ]_) [ ] contrassegna componenti opzionali Argomenti: geometry input geometry. Deve essere una (multi) geometria della linea. start_width larghezza del buffer all'inizio della linea, end_width larghezza del buffer alla fine della riga. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi: tapered_buffer(geometry:=geom_from_wkt('LINESTRING(1 2, 4 2)'),start_width:=1,end_width:=2,segments:=8) \u2192 Un buffer rastremato che inizia con un diametro di 1 e termina con un diametro di 2 lungo la geometria della linea. -- QGIS - feature","title":"tapered_buffer"},{"location":"gr_funzioni/geometria/geometria_unico/#touches","text":"Verifica se una geometria tocca un'altra. Restituisce vero (1) se le geometrie hanno almeno un punto in comune, ma i loro interni non si intersecano. Sintassi: touches( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: touches( geom_from_wkt( 'LINESTRING(5 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 touches( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 0 Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): touches(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','52')) geometry2 \u00e8 $geometry seleziono tutti i comuni touches (toccati) dalla provincia con pk_uid 46 (Siena) PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli toccati dalla provincia di Siena). NOT touches(geometry(get_feature( 'province_rt_rt','pk_uid','52')),$geometry)","title":"touches"},{"location":"gr_funzioni/geometria/geometria_unico/#transform","text":"Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione. Sintassi: transform( geometry , source_auth_id , dest_auth_id ) Argomenti: geometry una geometria source_auth_id ID del SR sorgente dest_auth_id ID del SR destinazione Esempi: geom_to_wkt( transform( $geometry, 'EPSG:2154', 'EPSG:4326' ) ) \u2192 POINT(0 51) --","title":"transform"},{"location":"gr_funzioni/geometria/geometria_unico/#translate","text":"Restituisce una versione traslata di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: translate( geometry , dx , dy ) Argomenti: geometry una geometria dx delta x geomdyetry delta y Esempi: translate($geometry, 5, 10) \u2192 una geometria dello stesso tipo come l'originale --","title":"translate"},{"location":"gr_funzioni/geometria/geometria_unico/#union","text":"Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie. Sintassi: union( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( union( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) ) \u2192 MULTIPOINT(4 4, 5 5) Espressione -- unione delle due linee union( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz --","title":"union"},{"location":"gr_funzioni/geometria/geometria_unico/#wedge_buffer","text":"Restituisce un buffer a forma di cuneo che origina da una geometria del punto. Sintassi: wedge_buffer( geometry , azimuth , width , outer_radius [, inner_radius=0.0 ]) [ ] contrassegna componenti opzionali Argomenti: geometry punto centrale (origine) del buffer. Deve essere una geometria puntuale. azimuth (in gradi) per il centro del cuneo da puntare. width buffer w larghezza (in gradi). Si noti che il cuneo si estender\u00e0 fino a met\u00e0 della larghezza angolare su entrambi i lati della direzione dell'azimut. outer_radius raggio esterno per i buffers inner_radius raggio interno opzionale per i buffers Esempi: wedge_buffer(center:=geom_from_wkt('POINT(1 2)'),azimuth:=90,width:=180,outer_radius:=1) \u2192 Un buffer a forma di cuneo centrato sul punto (1,2), rivolto verso est, con una larghezza di 180 gradi e raggio esterno di 1. --","title":"wedge_buffer"},{"location":"gr_funzioni/geometria/geometria_unico/#within","text":"Controlla qualora una geometria sia interna ad un'altra. Restituisce 1 (vero) se la geometria a \u00e8 completamente contenuta nella_ geometria b_. Sintassi: within( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: within( geom_from_wkt( 'POINT( 0.5 0.5)' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ) ) \u2192 1 within( geom_from_wkt( 'POINT( 5 5 )' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ) ) \u2192 0 Osservazioni: Usando algoritmo `Seleziona per espressione` presente in strumenti di processing oppure ![icona](https://docs.qgis.org/2.18/en/_images/mIconExpressionSelect.png) (Ctrl+F3): - within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) dove: geometry1 \u00e8 $geometry geometry2 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','53')) seleziono tutti i comuni within (contenuti) nella provincia con pk_uid 53 (Grosseto) PS:** potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Grosseto). NOT within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) Altro esempio con condizione sulle etichette Espressione CASE WHEN within( $geometry, geometry(get_feature('poligono','id',1))) = 1 THEN 'INTERNO' ELSE 'NON INTERNO' END","title":"within"},{"location":"gr_funzioni/geometria/geometria_unico/#x_1","text":"Restituisce la minima coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale. Sintassi: x( geometry ) Argomenti: geometry una geometria Esempi: x( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 2 x( $geometry ) \u2192 coordinata x del centroide dell'elemento corrente --","title":"x"},{"location":"gr_funzioni/geometria/geometria_unico/#x_max","text":"Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_max( geometry ) Argomenti: geometry una geometria Esempi: x_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 4 --","title":"x_max"},{"location":"gr_funzioni/geometria/geometria_unico/#x_min","text":"Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_min( geometry ) Argomenti: geometry una geometria Esempi: x_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 2 --","title":"x_min"},{"location":"gr_funzioni/geometria/geometria_unico/#y_1","text":"Restituisce la coordinata y minima di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale. Sintassi: y( geometry ) Argomenti: geometry una geometria Esempi: y( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 5 y( $geometry ) \u2192 coordinata y del centroide dell'elemento corrente --","title":"y"},{"location":"gr_funzioni/geometria/geometria_unico/#y_max","text":"Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_max( geometry ) Argomenti: geometry una geometria Esempi: y_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 8 --","title":"y_max"},{"location":"gr_funzioni/geometria/geometria_unico/#y_min","text":"Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_min( geometry ) Argomenti: geometry una geometria Esempi: y_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 5 --","title":"y_min"},{"location":"gr_funzioni/geometria/geometria_unico/#z","text":"Restituisce la coordinata z di una geometria puntuale. Sintassi: z( geometry ) Argomenti: geometry una geometria punto Esempi: z( geom_from_wkt( 'POINTZ(2 5 7)' ) ) \u2192 7","title":"z"},{"location":"gr_funzioni/geometria/geometria_unico/#z_max","text":"Restituisce la coordinata z massima di una geometria. Sintassi: z_max( geometry ) Argomenti: geometry una geometria con z coordinata Esempi: z_max( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 z_max( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 3 z_max( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 0 z_max( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 2 z_max( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL","title":"z_max"},{"location":"gr_funzioni/geometria/geometria_unico/#z_min","text":"Restituisce la coordinata z minima di una geometria. Sintassi: z_min( geometry ) Argomenti: geometry una geometria con z coordinata Esempi: z_min( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 z_min( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 1 z_min( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2 z_min( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 -1 z_min( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL","title":"z_min"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/","text":"Gruppo Geometria \u21b5 Abstract Questo gruppo contiene funzioni che operano sugli oggetti geometrici es: lunghezza , area . Area lunghezza Predicati Overlay_* coordinate vari $area $length contains overlay_contains $x centroid area length crosses overlay_crosses $y buffer - $perimeter disjoint overlay_disjoint x - perimeter intersects overlay_equals y - - overlaps overlay_intersects z - - touches overlay_nearest m - - within overlay_touches - - - - overlay_within - $area \u21b5 Definizione Restituisce l'area della geometria corrente. L'area calcolata da questa funzione rispetta sia le impostazioni dell'ellissoide del progetto corrente sia delle unit\u00e0 di misura. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora l'area calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide l'area calcolata sar\u00e0 planimetrica. Sintassi: $area Esempi * $area \u2192 131196498,619546 Nota bene se il SR del progetto in cui si sta calcolando l'area ( $area ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) allora l'unit\u00e0 di misura sarebbe il metro, invece se il SR del progetto fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe gradi e quindi poco comprensibile e valori piccoli (0.00001). Attenzione! in generale $area <> area($geometry) $geometry \u21b5 Definizione Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni. Sintassi: $geometry Esempi geomToWKT( $geometry ) \u2192 POINT(6 50) area($geoamtry) \u2192 1234567.89 mq perimeter($geometry) \u2192 25689.25 m Osservazioni il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti. $length \u21b5 Definizione Restituisce la lunghezza di una linestring. Se hai bisogno della lunghezza del bordo di un poligono, utilizza invece $perimeter . La lunghezza calcolata da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora la lunghezza calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide la lunghezza calcolata sar\u00e0 planimetrica. Sintassi: $length Esempi * $length \u2192 42.4711 Attenzione! Come evidenziano nella definizione della funzione, $length calcola la lunghezza rispettando le impostazioni di progetto: Occorre cambiare entrambe le impostazioni, sia quelle dell'ellissoide \u2192 'None/Planimetric' sia le Unit\u00e0 di misura per le distanze' \u2192 Gradi Queste modofiche non valgono per l'etichettatura, la lunghezza sar\u00e0 quella relativa alla geometria e quindi al suo SR. Osservazioni il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti. $perimeter \u21b5 Definizione Restituisce la lunghezza del perimetro della geometria corrente. Il perimetro calcolato da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora il perimetro calcolato sar\u00e0 ellisoidico altrimenti se non \u00e8 stato impostato alcun ellissoide il perimetro calcolato sar\u00e0 planimetrico. Sintassi: $perimeter Esempi - $perimeter \u2192 2545897.26 Nota Si utilizza SOLO per i poligoni, nel caso di feature lineari $length Osservazioni il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti. $x \u21b5 Definizione Restituisce la coordinata x della geometria corrente. Sintassi: $x Esempi * $x \u2192 12.2568971 Attenzione! La funzione $x restituisce la coordinata x della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Osservazioni Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni ed: x($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon) $x_at \u21b5 Definizione Recupera una coordinata x per la geometria dell'elemento corrente. Sintassi: $x_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi * $x_at(1) \u2192 12.6882843 Osservazioni Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice. $y \u21b5 Definizione Restituisce la coordinata y della geometria corrente. Sintassi: $y Esempi * $y \u2192 12.2568971 Attenzione! La funzione $y restituisce la coordinata y della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Osservazioni Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni es: y($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon) $y_at \u21b5 Definizione Recupera una coordinata y per la geometria dell'elemento corrente. Sintassi: $y_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi * $y_at(1) \u2192 2 Osservazioni Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice. angle_at_vertex \u21b5 Definizione Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: angle_at_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0 Esempi * angle_at_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 45.0 Attenzione! Il primo ed ultimo vertice di una lineastring aperta la funzione restituisce il valore dell'angolo e non la bisettrice. area \u21b5 Definizione Restituisce l'area di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura dell'area restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $area, la quale esegue calcoli ellisoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura dell'area. Sintassi: area( geometry ) Argomenti: geometry oggetto geometria poligono Esempi - area($geometry) \u2192 1234.567 Occhio Se il SR del layer in cui si sta calcolando l'area ( area() ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) l'unit\u00e0 di misura sarebbe il metro, invece se il SR del layer fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe in gradi e quindi poco comprensibile e valori piccoli. Osservazioni in generale area($geometry) <> $area Azimuth \u21b5 Definizione Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi: azimuth( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi * degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 * degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689 Attenzione! Azimuth per definizione restituisce un angolo in radianti, per trasformarlo in gradi usare la funzione degrees() boundary \u21b5 Definizione Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria). Per esempio, una geometria poligonale avr\u00e0 un confine costituito dalle linee di ogni anello nel poligono. Alcuni tipi di geometrie non hanno confini, es collezioni di punti o geometrie e pertanto verr\u00e0 restituito null. Sintassi: boundary( geometry ) Argomenti: geometry una geometria Esempi - geom_to_wkt(boundary(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'LineString(1 1,0 0,-1 1,1 1)' - geom_to_wkt(boundary(geom_from_wkt('LineString(1 1,0 0,-1 1)'))) \u2192 'MultiPoint ((1 1),(-1 1))' Osservazioni funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator bounds \u21b5 Definizione Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds( geometry ) Argomenti: geometry una geometria Esempi - bounds($geometry) \u2192 perimetro di delimitazione dell'elemento geometrico corrente - geom_to_wkt(bounds(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'Polygon ((-1 0, 1 0, 1 1, -1 1, -1 0))' Osservazioni funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator bounds_height \u21b5 Definizione Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_height( geometry ) Argomenti: geometry una geometria Esempi - bounds_height($geometry) \u2192 altezza del perimetro di delimitazione dell'elemento geometrico corrente - bounds_height(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')) \u2192 1 Osservazioni La funzione restituisce un numero che corrisponde all'altezza del rettangolo di ingombro di una geometria. bounds_width \u21b5 Definizione Restituisce la larghezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_width( geometry ) Argomenti: geometry una geometria Esempi - bounds_width($geometry) \u2192 larghezza del perimetro di delimitazione di $geometry Osservazioni La funzione restituisce un numero che corrisponde alla larghezza del rettangolo di ingombro di una geometria. buffer \u21b5 Definizione Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita. I calcoli vengono effettuati nel sistema di riferimento spaziale della geometria. Sintassi: buffer( geometry , distance [, segments=8 ]) Argomenti: geometry una geometria distance distanza buffer nelle unit\u00e0 del layer segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. Esempi - buffer($geometry, 10.5) \u2192 poligono di $geometry bufferizzato di 10.5 unit\u00e0 Danger Utilizzando SR proiettati l'unit\u00e0 di misura \u00e8 il metro, mentre, per SR geografici \u00e8 il grado, quindi attenzione al valore della distanza. Osservazioni: Nota La Funzione restituisce SEMPRE un poligono sia per geometry POINT , LINESTRING o POLYGON buffer_by_m \u21b5 Definizione Crea un buffer lungo una geometria linestring in cui il diametro del buffer varia in base ai valori m nei vertici della linea. Sintassi: buffer_by_m( geometry , segments ) Argomenti: geometry la geometria deve essere una (multi) geometria linestring con valori m. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi * buffer_by_m(geometry:=geom_from_wkt('LINESTRINGM(1 2 0.5, 4 2 0.2)'),segments:=8) \u2192 Un buffer di larghezza variabile che inizia con un diametro di 0,5 e termina con un diametro di 0,2 lungo la linea. relativa all'esempio di sopra: Osservazioni: QGIS - feature centroid \u21b5 Definizione Restituisce il centro geometrico di una geometria. Sintassi: centroid( geometry ) Argomenti: geometry una geometria Esempi * centroid($geometry) \u2192 una geometria punto Osservazioni La Funzione restituisce SEMPRE una geometry POINT close_line \u21b5 Definizione Restituisce una linestring chiusa della linestring di input aggiungendo il primo punto alla fine della linea, se non \u00e8 gi\u00e0 chiusa. Se la geometria non \u00e8 una linestring o una MultiLinestring, il risultato sar\u00e0 NULL. Sintassi: close_line( geometry ) Argomenti: geometry una geometria linestring Esempi * geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) * geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1, 0 0)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) closest_point \u21b5 Definizione Restituisce il punto sulla geometria1 che \u00e8 pi\u00f9 vicino alla geometria2. Sintassi: closest_point( geometry1 , _ geometry2 ) Argomenti: geometry1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry geometria dalla quale cercare il punto pi\u00f9 vicino Esempi * geom_to_wkt(closest_point(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 Point(73.0769 115.384) Osservazioni Utilizzando il geometry generator per i temi (il layer strade \u00e8 una unica feature): closest_point( geometry(get_feature('strade', 'reg',19)),$geometry) Gif animata: geometry 1 \u00e8 la rete stradale; geometry 2 sono i punti; in rosso i closestpoint collect_geometries \u21b5 Definizione Raccoglie un set di geometrie in un oggetto geometria multiparte. Variante geometry \u21b5 Sintassi: collect_geometries( geometry1 , geometry2 ...) Argomenti: geometry geometria sulla quale cercare il punto pi\u00f9 vicino Esempi * geom_to_wkt(collect_geometries(make_point(1,2), make_point(3,4), make_point(5,6))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Variante con array \u21b5 Sintassi: collect_geometries( array ) Argomenti: array array con oggetti geometrici Esempi * geom_to_wkt(collect_geometries(array(make_point(1,2), make_point(3,4), make_point(5,6)))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Osservazioni: combine \u21b5 Definizione Restituisce la combinazione di due geometrie. Sintassi: combine( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 2 1)' ) ) ) \u2192 MULTILINESTRING((4 4, 2 1), (3 3, 4 4), (4 4, 5 5)) * geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 6 6, 2 1)' ) ) ) \u2192 LINESTRING(3 3, 4 4, 6 6, 2 1) contains \u21b5 Definizione Verifica se una geometria ne contiene un'altra. Restituisce vero se e solo se nessun punto di geometry2 giace all'esterno di geometry1 e almeno un punto dell'interno di geometry2 si trova all'interno di geometry1. Sintassi: contains( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'POINT(0.5 0.5 )' ) ) \u2192 vero * contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry2 \u00e8 $geometry seleziono tutti i comuni contains (contenuti) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Lucca). NOT contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) convex_hull \u21b5 Definizione Restituisce il poligono convesso di una geometria. Rappresenta la minima geometria convessa che racchiude tutte le geometria contenute nell'insieme. Sintassi: convex_hull( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt( convex_hull( geom_from_wkt( 'LINESTRING(3 3, 4 4, 4 10)' ) ) ) \u2192 POLYGON((3 3,4 10,4 4,3 3)) Osservazioni La funzione restituisce sempre un poligono. crosses \u21b5 Definizione Verifica se una geometria interseca un'altra. Restituisce vero (1) se le geometrie interessate hanno qualche, ma non tutti, punto interno in comune. Sintassi: crosses( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * crosses( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero * crosses( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni crosses (attraversati) dal fiume ARNO PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli attraversati dal fiume ARNO). NOT crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) difference \u21b5 Definizione Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b . Sintassi: difference( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(4 4, 5 5) Espressione: Espressione -- differenza linea a - linea b difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a Espressione -- differenza linea b - linea a difference( make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a Prova tu Dati e progetto qgz Esempio di sopra: disjoint \u21b5 Definizione Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune. Sintassi: disjoint( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria * geometry2 una geometria Esempi * disjoint( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero * disjoint( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'POINT(4 4)' )) \u2192 falso Attenzione! Vero = 1; Falso= 0 Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - disjoint(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni disjoint (disgiunti) dal fiume ARNO distance \u21b5 Definizione Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate. Sintassi: distance( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi - distance( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(4 8)' ) ) \u2192 4 -- distance_to_vertex \u21b5 Definizione Restituisce la distanza lungo una geometria ad un vertice specificato. Sintassi: distance_to_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi * distance_to_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 10.0 -- esempio di sopra: end_point \u21b5 Definizione Restituisce l'ultimo nodo di una geometria. Sintassi: end_point( geometry ) Argomenti: geometry oggetto geometria Esempi * geom_to_wkt(end_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (0 2)' -- End_point di geometria poligonale: End_point di geometria lineare: extend \u21b5 Definizione Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata. Le linee sono estese usando la direzione di immersione del primo e dell'ultimo segmento nella linea. Le distanze sono espresse nel SR di tale geometria. Sintassi: extend( geometry , start_distance , end_distance ) Argomenti: geometry una geometria (multi)linestring start_distance distanza alla quale estendere l' inizio della linea end_distance distanza alla quale estendere la fine della linea. Esempi * geom_to_wkt(extend(geom_from_wkt('LineString(0 0, 1 0, 1 1)'),1,2)) \u2192 'LineString (-1 0, 1 0, 1 3)' * geom_to_wkt(extend(geom_from_wkt('MultiLineString((0 0, 1 0, 1 1), (2 2, 0 2, 0 5))'),1,2)) \u2192 'MultiLineString ((-1 0, 1 0, 1 3),(3 2, 0 2, 0 7))' -- exterior_ring \u21b5 Definizione Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 NULL. Sintassi: exterior_ring( geometry ) Argomenti: geometry una geometria poligono Esempi * geom_to_wkt(exterior_ring(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2, 0.1, 0.1 0.1))'))) \u2192 'LineString (-1 -1, 4 0, 4 2, 0 2, -1 -1)' -- extrude \u21b5 Definizione Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y. Sintassi: extrude( geometry , x , y ) Argomenti: geometry una geometria poligono x estensione x, valore numerico y estensione y, valore numerico Esempi * extrude(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), 1, 2) \u2192 Polygon ((1 2, 3 2, 4 3, 5 5, 4 4, 2 4, 1 2)) * extrude(geom_from_wkt('MultiLineString((1 2, 3 2), (4 3, 8 3)'), 1, 2) \u2192 MultiPolygon (((1 2, 3 2, 4 4, 2 4, 1 2)),((4 3, 8 3, 9 5, 5 5, 4 3))) Osservazioni Nell'esempio ho utilizzato la funzione boundary() perch\u00e9 la geometria di ingresso deve essere lineare. flip_coordinates \u21b5 Definizione Restituisce una copia della geometria con le coordinate x e y scambiate. Utile per riparare le geometrie che hanno invertito i valori di latitudine e longitudine. Sintassi: flip_coordinates( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt(flip_coordinates(make_point(1, 2))) \u2192 Point (2 1) -- Esempio con vettore poligonale (aggiorno la geometry): il flip \u00e8 da usare con cautela perch\u00e9 cambia radicalemnte la posizione del vettore force_rhr \u21b5 Definizione Forza una geometria a rispettare la regola della mano destra, in cui l'area delimitata da un poligono si trova a destra del limite. In particolare, l'anello esterno \u00e8 orientato in senso orario e l'interno in senso antiorario. Sintassi: force_rhr( geometry ) Argomenti: geometry una geometria. Qualsiasi geometria non poligonale viene restituita invariata. Esempi * geom_to_wkt(force_rhr(geometry:=geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'))) \u2192 Polygon ((-1 -1, 0 2, 4 2, 4 0, -1 -1)) Osservazioni Ecco un esempio pratico della funzione (presente anche nelgli strumenti fi processing) ovvero un poligono disegnato in senso antiorario viene forzato in senso orario e l'etichettature \u00e8 visibile correttamente. geom_from_gml \u21b5 Definizione Restituisce una geometria da una rappresentazione GML di una geometria. Sintassi: geom_from_gml( _gml ) Argomenti: gml Rappresentazione GML di una geometria come stringa Esempi * geom_to_wkt(geom_from_gml('<gml:LineString srsName=\"EPSG:4326\"><gml:coordinates>4,4 5,5 6,6</gml:coordinates></gml:LineString>') ) \u2192 'LineString (4 4, 5 5, 6 6)' geom_from_wkb \u21b5 Definizione Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB). Sintassi: geom_from_wkb( binari ) Argomenti: binari Rappresentazione binaria ben nota (WKB) di una geometria (come BLOB binario) Esempi * geom_from_wkb( geom_to_wkb( make_point(4,5) ) ) \u2192 un oggetto geometria punto geom_from_wkt \u21b5 Definizione Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT). Sintassi: geom_from_wkt_ text _) Argomenti: text Rappresentazione Well-Known Text (WKT) di una geometria Esempi * geom_from_wkt( 'POINT(4 5)' ) \u2192 un oggetto geometria geom_to_wkb \u21b5 Definizione Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario. Sintassi: geom_to_wkb( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkb( $geometry ) \u2192 BLOB binario contenente un oggetto geometria geom_to_wkt \u21b5 Definizione Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR Sintassi: geom_to_wkt( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt( make_point(6, 50) ) \u2192 'POINT(6 50)' * geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'POINT(0 0.66666667)' * geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')), 2) \u2192 'POINT(0 0.67)' geometry \u21b5 Definizione Restituisce la geometria di un elemento. Sintassi: geometry( feature ) Argomenti: feature un oggetto elemento Esempi geom_to_wkt( geometry( get_feature( layer, attributeField, value ) ) ) \u2192 'POINT(6 50)' intersects( $geometry, geometry( get_feature( layer, attributeField, value ) ) ) \u2192 vero -- Usando il Select by Expression : selezionare le feature di un layer (quartieri) in funzione di altro layer (test): geometry_n \u21b5 Definizione Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: geometry_n( geometry , index ) Argomenti: geometry raccolta di geometrie index indice della geometria da restituire, dove 1 \u00e8 la prima geometria nella raccolta Esempi * geom_to_wkt(geometry_n(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))'),3)) \u2192 'Point (1 0)' hausdorff_distance \u21b5 Definizione Restituisce la distanza di Hausdorff tra due geometrie. Questa \u00e8 in sostanza una misura di come le 2 geometrie sono simili o dissimili: una distanza pi\u00f9 bassa indica geometrie pi\u00f9 simili. La funzione pu\u00f2 essere eseguita con un argomento opzionale di densificazione della frazione. Se non viene specificato, viene utilizzata una approssimazione alla distanza standard di Hausdorff. Questa approssimazione \u00e8 esatta o abbastanza vicina per un grande sottoinsieme di casi utili. Esempi di questi sono: calcolare la distanza tra Linestrings che sono approssimativamente paralleli tra loro e sono sostanzialmente uguali in lunghezza. Ci\u00f2 si verifica nelle verifica di reti lineari. testare la somiglianza di geometrie. Se l'approssimazione predefinita fornita da questo metodo \u00e8 insufficiente, specifica l'argomento opzionale di densificazione della frazione. Specificando questo argomento si esegue una densificazione del segmento prima di calcolare la distanza Hausdorff discreta. Il parametro imposta la frazione con cui densificare ogni segmento. Ogni segmento sar\u00e0 suddiviso in un numero di subsegmenti di uguale lunghezza, la cui frazione della lunghezza totale \u00e8 la pi\u00f9 vicina alla frazione data. Riducendo il parametro di densificazione della frazione, la distanza restituita si avviciner\u00e0 alla vera distanza Hausdorff per le geometrie. Sintassi: hausdorff_distance( geometry1 , geometry2 , densify_fraction ) Argomenti: geometry1 una geometria geometry2 una geometria densify_fraction quantit\u00e0 di densificazione della frazione Esempi * hausdorff_distance( geometry1:= geom_from_wkt('LINESTRING (0 0, 2 1)'),geometry2:=geom_from_wkt('LINESTRING (0 0, 2 0)')) \u2192 2 * hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)')) \u2192 14.142135623 * hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)'),0.5) \u2192 70.0 -- Nel caso di geometrie puntuali la hausdorff_distance coincide con la funzione distance , segue un esempio: Espressione format_number( hausdorff_distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' || '\\n'|| format_number( distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' -- In questo esempio confronto due layer: il numero pi\u00f9 piccolo indica il poligono pi\u00f9 simile a al poligono pi\u00f9 grande. inclination \u21b5 Definizione Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b . Sintassi: inclination( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi * inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 * inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 * inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 * inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 -- interior_ring_n \u21b5 Definizione Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono. Sintassi: interior_ring_n( geometry , index ) Argomenti: geometry geometria poligono index Indice dell'anello interno da restituire, dove 1 \u00e8 il primo anello interno Esempi * geom_to_wkt(interior_ring_n(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1),(-1 -1, 4 0, 4 2, 0 2, -1 -1))'),1)) \u2192 'LineString (-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))' Osservazioni Restituisce una lineastring!!! intersection \u21b5 Definizione Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie. Sintassi: intersection( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 'LINESTRING(3 3, 4 4)' * geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'MULTIPOINT(3.5 3.5, 4 5)' ) ) ) \u2192 'POINT(3.5 3.5)' Espressione -- intersezione tra le due linee intersection( make_line( -- linea a start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea b start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz -- intersects \u21b5 Definizione Controlla qualora una geometria ne interseca un'altra. Restituisce true (1) se la geometrie si intersecano spazialmente (condividono una porzione di spazio) altrimenti da false (0). Sintassi: intersects( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * intersects( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero * intersects( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 falso Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry2 \u00e8 $geometry seleziono tutti i comuni intersects (interseca) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli intersecati con la provincia di Lucca). NOT intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) intersects_bbox \u21b5 Definizione Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria. Restituisce vero (1) se le geometrie intersecano spazialmente il perimetro di delimitazione definito e falso (0) se non lo intersecano. Sintassi: intersects_bbox( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * intersects_bbox( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero * intersects_bbox( geom_from_wkt( 'POINT(6 5)' ), geom_from_wkt( 'POLYGON((3 3, 4 4, 5 5, 3 3))' ) ) \u2192 falso is_closed \u21b5 Definizione Restituisce vero (true) se una linestring \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso (false) se una linestring non \u00e8 chiusa. Se la geometria non \u00e8 una linestring, il risultato sar\u00e0 NULL. Sintassi: is_closed( geometry ) Argomenti: geometry una geometria linestring Esempi * is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso * is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero -- is_empty \u21b5 Definizione Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null . Sintassi: is_empty( geometry ) Argomenti: geometry una geometria Esempi * is_empty(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso * is_empty(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero * is_empty(geom_from_wkt('POINT(7 4)')) \u2192 falso * is_empty(geom_from_wkt('POINT EMPTY')) \u2192 vero is_empty_or_null \u21b5 Definizione Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null_or_null . Sintassi: is_empty_or_null( geometry ) Argomenti: geometry una geometria Esempi * is_empty_or_null(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso * iis_empty_or_null(geom_from_wkt('POINT(7 4)')) \u2192 falso * is_empty_or_null(geom_from_wkt('POINT EMPTY')) \u2192 vero is_multipart \u21b5 Definizione Restituisce vero se la geometria \u00e8 di tipo Multi. Sintassi: is_multipart( geometry ) Argomenti: geometry una geometria Esempi * is_multipart(geom_from_wkt('MULTIPOINT ((0 0),(1 1),(2 2))')) \u2192 vero * is_multipart(geom_from_wkt('POINT (0 0)')) \u2192 falso is_valid \u21b5 Definizione Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole **OGC** Sintassi: is_valid( geometry ) Argomenti: geometry una geometria Esempi * is_valid(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero * is_valid(geom_from_wkt('LINESTRING(0 0)')) \u2192 falso length \u21b5 Definizione Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring. Variabile stringa \u21b5 Restituisce il numero di caratteri contenuti in una stringa. Sintassi: length( string ) Argomenti: string stringa della quale calcolare la lunghezza Esempi * length('hello') \u2192 5 Variabile geometria \u21b5 Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length , la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi: length( geometry ) Argomenti: geometry oggetto geometria linea Esempi length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4.0 length3D \u21b5 Definizione Calcola la lunghezza 3D di un oggetto linea geometrica. Se la geometria non \u00e8 un oggetto linea 3D, restituisce la sua lunghezza 2D. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di questa geometria, e le unit\u00e0 della lunghezza restituita corrisponderanno alle unit\u00e0 per l'SR. Questo differisce dai calcoli eseguiti dalla funzione $length , che eseguir\u00e0 calcoli ellissoidali basati sulle impostazioni dell'ellissoide e dell'unit\u00e0 di distanza del progetto. Sintassi: length3D( geometry ) Argomenti: geometry oggetto geometria linea Esempi - length3D(geom_from_wkt('LINESTRINGZ(0 0 0, 3 0 4)')) \u2192 5.0 line_interpolate_angle \u21b5 Definizione Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: line_interpolate_angle( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea a cui interpolare l'angolo Esempi * line_interpolate_angle(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5) \u2192 90.0 -- line_interpolate_point \u21b5 Definizione Restituisce il punto interpolato ad una specifica distanza lungo una geometria di tipo linestring. Sintassi: line_interpolate_point( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea Esempi * geom_to_wkt(line_interpolate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5)) \u2192 'Point (4 0)' -- line_locate_point \u21b5 Definizione Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata. Sintassi: line_locate_point( geometry , point ) Argomenti: geometry una geometria di tipo linestring point geometria puntuale per cui ricercare la posizione pi\u00f9 vicina sulla linestring Esempi * line_locate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),point:=geom_from_wkt('Point(5 1)')) \u2192 5.0 line_merge \u21b5 Definizione Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola. Questa funzione restituir\u00e0 NULL se la geometria considerata non \u00e8 una LineString/MultiLineString. Sintassi: line_merge( geometry ) Argomenti: geometry una geometria di tipo LineString/MultiLineString Esempi * geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(1 1, 2 2))'))) \u2192 'LineString(0 0,1 1,2 2)' * geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(11 1, 21 2))'))) \u2192 'MultiLineString((0 0, 1 1),(11 1, 21 2)' -- line_substring \u21b5 Definizione Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate (misurata dall'inizio della linea). I valori Z e M sono linearmente interpolati dai valori esistenti. Sintassi: line_substring( geometry , start_distance , end_distance ) Argomenti: geometry una geometria lineare o curva start_distance distanza all'inizio della sottostringa end_distance distanza alla fine della sottostringa Esempi * geom_to_wkt(line_substring(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),start_distance:=2,end_distance:=6)) \u2192 'LineString (2 0,6 0)' * line_substring( $geometry, $length *.1,$length *.6) \u2192 <geometria: LineString> -- Funzione utile per la tematizzazione m \u21b5 Definizione Restituisce il valore m di una geometria puntuale. Sintassi: m( geometry ) Argomenti: geometry una geometria punto Esempi * ( geom_from_wkt( 'POINTM(2 5 4)' ) ) \u2192 4 m_max \u21b5 Definizione Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_max( geometry ) Argomenti: geometry una geometria contenente m valori Esempi * m_max( make_point_m( 0,0,1 ) ) \u2192 1 * m_max(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 2 m_min \u21b5 Definizione Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_min( geometry ) Argomenti: geometry una geometria contenente m valori Esempi * m_min( make_point_m( 0,0,1 ) ) \u2192 1 * m_min(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 0 main_angle \u21b5 Definizione Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria. Sintassi: main_angle( geometry ) Argomenti: geometry una geometria poligono Esempi * main_angle(geom_from_wkt('Polygon ((321577 129614, 321581 129618, 321585 129615, 321581 129610, 321577 129614))')) \u2192 38.66 Osservazioni: make_circle \u21b5 Definizione Crea un poligono circolare. Sintassi: make_circle( center , radius [, segments=36 ]) [ ] indica componenti opzionali Argomenti: center centro del cerchio radius raggio del cerchio segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi * geom_to_wkt(make_circle(make_point(10,10), 5, 4)) \u2192 'Polygon ((10 15, 15 10, 10 5, 5 10, 10 15))' * geom_to_wkt(make_circle(make_point(10,10,5), 5, 4)) \u2192 'PolygonZ ((10 15 5, 15 10 5, 10 5 5, 5 10 5, 10 15 5))'' * geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 4)) \u2192 'PolygonZM ((10 15 5 30, 15 10 5 30, 10 5 5 30, 5 10 5 30, 10 15 5 30))' make_ellipse \u21b5 Definizione Crea un poligono ellittico. Sintassi: make_ellipse( center , semi_major_axis , semi_minor_axis , azimuth [, segments=36 ]) Argomenti: center centro dell'ellisse semi_major_axis semi-asse maggiore dell'ellisse semi_minor_axis semi-asse minore dell'ellisse azimuth orientazione dell'ellisse segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi * geom_to_wkt(make_ellipse(make_point(10,10), 5, 2, 90, 4)) \u2192 'Polygon ((15 10, 10 8, 5 10, 10 12, 15 10)) * geom_to_wkt(make_ellipse(make_point(10,10,5), 5, 2, 90, 4)) \u2192 'PolygonZ ((15 10 5, 10 8 5, 5 10 5, 10 12 5, 15 10 5))' * geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 2, 90, 4)) \u2192 'PolygonZM ((15 10 5 30, 10 8 5 30, 5 10 5 30, 10 12 5 30, 15 10 5 30))' make_line \u21b5 Definizione Crea una geometria linea da una serie di geometrie punto. Sintassi: make_line( point1 , point2 , \u2026_) Argomenti: point una geometria punto Esempi * geom_to_wkt(make_line(make_point(2,4),make_point(3,5))) \u2192 'LineString (2 4, 3 5)' * geom_to_wkt(make_line(make_point(2,4),make_point(3,5),make_point(9,7))) \u2192 'LineString (2 4, 3 5, 9 7)' Array variant \u21b5 I vertici di linea sono specificati come una matrice di punti. Sintassi: make_line( array ) Argomenti: array Matrice di punti Esempi * geom_to_wkt(make_line(array(make_point(2,4),make_point(3,5),make_point(9,7)))) \u2192 'LineString (2 4, 3 5, 9 7)' Espressione make_line( array(geometry( get_feature_by_id('fontanelle_Palermo',$id))), array(geometry( get_feature_by_id('fontanelle_Palermo',not $id%2))) ) make_point \u21b5 Definizione Crea una geometria punto da valori x ed y (e opzionalmente z ed m). Sintassi: make_point( x , y , z , m ) Argomenti: x coordinata x del punto y coordinata y del punto z coordinata opzionale z del punto m valore m del punto Esempi * geom_to_wkt(make_point(2,4,6,8)) \u2192 'PointZM (2 4 6 8)' make_point_m \u21b5 Definizione Crea una geometria punto da una coordinata x, y ed un valore m. Sintassi: make_point_m_( x , y , m ) Argomenti: x coordinata x del punto y coordinata y del punto m valore m del punto Esempi * geom_to_wkt(make_point_m(2,4,6)) \u2192 'PointM (2 4 6)' make_polygon \u21b5 Definizione Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne. Sintassi: make_polygon( outerRing [, innerRing1 ][, innerRing2 ] \u2026_) [ ] indica componenti opzionali Argomenti: outerRing geometria a linea chiusa per l'anello esterno del poligono innerRing geometria a linea chiusa opzionale per anello interno Esempi * geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0))' * geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'),geom_from_wkt('LINESTRING( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1 )'),geom_from_wkt('LINESTRING( 0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0),(0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1),(0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8))' make_rectangle_3points \u21b5 Definizione Crea un rettangolo da 3 punti. Sintassi: make_rectangle_3points( point1 , point2 , point3 [,option=0]\u2026) Argomenti: point1 Primo punto point2 Secondo punto point3 Terzo punto option Un argomento facoltativo per costruire il rettangolo. Di default questo valore \u00e8 0. Il valore pu\u00f2 essere 0 (distanza) o 1 (proiettato). Distanza opzione: la seconda distanza \u00e8 uguale alla distanza tra il 2 \u00b0 e il 3 \u00b0 punto. Opzione proiettata: la seconda distanza \u00e8 uguale alla distanza della proiezione perpendicolare del terzo punto sul segmento o della sua estensione. Esempi * geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5), make_point(5, 5), 0))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' * geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5),make_point(5, 3), 1))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' -- make_regular_polygon \u21b5 Definizione Crea un poligono regolare. Sintassi: make_regular_polygon( center , radius , number_sides [, circle=0 ]) [ ] indica componenti opzionali Argomenti: center centro del poligono regolare radius secondo punto. Il primo se il poligono regolare \u00e8 inscritto. Il punto intermedio del primo lato se il poligono regolare \u00e8 circoscritto. number_sides Numero di lati del poligono regolare circle Argomento opzionale per la costruzione del poligono regolare. Il valore predefinito \u00e8 0. Il valore pu\u00f2 essere 0 (poligono iscritto) o 1 (poligono circoscritto) Esempi * geom_to_wkt(make_regular_polygon(make_point(0,0), make_point(0,5), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' * geom_to_wkt(make_regular_polygon(make_point(0,0), project(make_point(0,0), 4.0451, radians(36)), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' make_square \u21b5 Definizione Crea un quadrato da una diagonale. Sintassi: make_square( point1 , point2 ) Argomenti: point1 Primo punto della diagonale point2 Secondo punto della diagonale Esempi * geom_to_wkt(make_square( make_point(0,0), make_point(5,5))) \u2192 'Polygon ((0 0, -0 5, 5 5, 5 0, 0 0))' * geom_to_wkt(make_square( make_point(5,0), make_point(5,5))) \u2192 'Polygon ((5 0, 2.5 2.5, 5 5, 7.5 2.5, 5 0))' make_triangle \u21b5 Definizione Crea un poligono triangolare Sintassi: make_triangle( point1 , point2 , point3 ) Argomenti: point1 Primo punto del triangolo point2 Secondo punto del triangolo point3 Secondo punto del triangolo Esempi * geom_to_wkt(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10))) \u2192 'Triangle ((0 0, 5 5, 0 10, 0 0))' * geom_to_wkt(boundary(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10)))) \u2192 'LineString (0 0, 5 5, 0 10, 0 0)' minimal_circle \u21b5 Definizione Restituisce la circonferenza circoscritta minima di una geometria. Rappresenta il cerchio minimo che circoscrive tutte le geometrie presenti in un dataset. Sintassi: minimal_circle( geometry [, segments=36 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi * geom_to_wkt( minimal_circle( geom_from_wkt( 'LINESTRING(0 5, 0 -5, 2 1)' ), 4 ) ) \u2192 Polygon ((0 5, 5 -0, -0 -5, -5 0, 0 5)) * geom_to_wkt( minimal_circle( geom_from_wkt( 'MULTIPOINT(1 2, 3 4, 3 2)' ), 4 ) ) \u2192 Polygon ((3 4, 3 2, 1 2, 1 4, 3 4)) -- nodes_to_points \u21b5 Definizione Restituisce una geometria multi-punti costituita da ogni nodo della geometria in ingresso. Sintassi: nodes_to_points( geometry [, ignore_closing_nodes=false ]) Argomenti: geometry oggetto geometria ignore_closing_nodes argomento opzionale che specifica se includere i nodi duplicati che chiudono linee o poligoni ad anello. Normalmente false, impostare a true per evitare di includere questi nodi duplicati nella raccolta in uscita. Esempi * geom_to_wkt(nodes_to_points(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiPoint ((0 0),(1 1),(2 2))' * geom_to_wkt(nodes_to_points(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'),true)) \u2192 'MultiPoint ((-1 -1),(4 0),(4 2),(0 2))' -- num_geometries \u21b5 Definizione Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: num_geometries( geometry ) Argomenti: geometry raccolta di geometrie Esempi * num_geometries(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))')) \u2192 4 num_interior_rings \u21b5 Definizione Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_interior_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi * num_interior_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 1 num_points \u21b5 Definizione Restituisce il numero di vertici in una geometria. Sintassi: num_points( geometry ) Argomenti: geometry una geometria Esempi * num_points($geometry) \u2192 numero di vertici in $geometry num_rings \u21b5 Definizione Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi * num_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 2 -- offset_curve \u21b5 Definizione Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato. Le distanze sono espresse nel SR di tale geometria. Sintassi: offset_curve( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di offset. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in una linea pi\u00f9 morbida, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi * offset_curve($geometry, 10.5) \u2192 linea scostata a sinistra di 10.5 unit\u00e0 * offset_curve($geometry, -10.5) \u2192 linea scostata a destra di 10.5 unit\u00e0 * offset_curve($geometry, 10.5, segments=16, join=1) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in una curva pi\u00f9 morbida * offset_curve($geometry, 10.5, join=3) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando un'unione smussata Osservazioni La linea \u00e8 scostata a sinistra o destra rispetto al verso della linea: order_parts \u21b5 Definizione Ordina le parti di una MultiGeometria secondo un dato criterio Sintassi: order_parts( geometry , orderby [, ascending=true ]) [ ] indica componenti opzionali Argomenti: geometry una geometria multi-tipo orderby un espressione stringa che definisce il criterio di ordinamento ascending booleano, True per ascendente, False per discendente Esempi * order_parts(geom_from_wkt('MultiPolygon (((1 1, 5 1, 5 5, 1 5, 1 1)),((1 1, 9 1, 9 9, 1 9, 1 1)))'), 'area($geometry)', False) \u2192 MultiPolygon (((1 1, 9 1, 9 9, 1 9, 1 1)),((1 1, 5 1, 5 5, 1 5, 1 1))) * order_parts(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), '1', True) \u2192 LineString(1 2, 3 2, 4 3) oriented_bbox \u21b5 Definizione Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria. Sintassi: oriented_bbox( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt(oriented_bbox(geom_from_wkt('MULTIPOINT(1 2, 3 4, 3 2)'))) \u2192 'Polygon ((1 2, 2 1, 4 3, 3 4, 1 2))' overlaps \u21b5 Definizione Controlla qualora una geometria si sovrapponga ad un'altra. Restituisce true (1) se le geometrie condividono aree, ma non sono completamente contenute una nell'altra. Sintassi: overlaps( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * overlaps( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 5, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 * overlaps( geom_from_wkt( 'LINESTRING(0 0, 1 1)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 0 Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - overlaps(geometry(get_feature( 'cerchio','id','1')), $geometry) dove: geometry1 \u00e8 geometry(get_feature('cerchio','id','1')) geometry2 \u00e8 $geometry seleziono tutti i comuni overlaps (sovrapposti) al cerchio in figura. PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli sovrapposti con il cerchio). NOT overlaps(geometry(get_feature('cerchio','id','1')),$geometry) overlay_contains \u21b5 Definizione Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Contains\" sottostante, come descritto nella funzione PostGIS ST_CONTAINS . Sintassi: overlay_contains( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_contains('regions') \u2192 true se l'elemento corrente contiene spazialmente una regione * overlay_contains('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente contiene spazialmente una regione con una popolazione maggiore di 10000 * overlay_contains('regions', name) \u2192 un array di nomi, per le regioni contenute nell'elemento corrente * array_to_string(overlay_contains('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni contenute nell'elemento corrente * overlay_contains('regions', name)[0] \u2192 una stringa con il nome della regione contenuta nell'elemento corrente * array_sort(overlay_contains(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenute nell'elemento corrente e con una popolazione superiore a 10000 * overlay_contains(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenute nell'elemento corrente overlay_crosses \u21b5 Definizione Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento di un layer target o un array di risultati basati su espressioni per gli elementi nel layer target attraversati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Crosses\" sottostante, come descritto nella funzione PostGIS ST_Crosses . Sintassi: overlay_crosses( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_crosses('regions') \u2192 true se l'elemento corrente attraversa spazialmente una regione * overlay_crosses('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente attraversa spazialmente una regione con una popolazione maggiore di 10000 * overlay_crosses('regions', name) \u2192 un array di nomi, per le regioni attraversate dall'elemento corrente * array_to_string(overlay_crosses('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni attraversate dall'elemento corrente * overlay_crosses('regions', name)[0] \u2192 una stringa con il nome della prima regioni attraversata dall'elemento corrente * array_sort(overlay_crosses(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni attraversate dall'elemento corrente e con una popolazione superiore a 10000 * overlay_crosses(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni attraversate dall'elemento corrente overlay_disjoint \u21b5 Definizione Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer target, o un array di risultati basati su espressione per gli elementi nel layer target che sono disgiunti dall'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Disjoint\", come descritto nella funzione PostGIS ST_Disjoint . Sintassi: overlay_disjoint( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_disjoint('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni * overlay_disjoint('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni con una popolazione maggiore di 10000 * overlay_disjoint('regions', name) \u2192 un array di nomi, per le regioni spazialmente disgiunte dall'elemento corrente * array_to_string(overlay_disjoint('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni spazialmente disgiunte dall'elemento corrente * overlay_disjoint('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente disgiunte dall'elemento corrente * array_sort(overlay_disjoint(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente disgiunte dall'elemento corrente e con una popolazione superiore a 10000 * overlay_disjoint(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente disgiunte dall'elemento corrente overlay_equals \u21b5 Definizione Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target che sono spazialmente uguali all'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Equals\" sottostante, come descritto nella funzione PostGIS ST_Equals . Sintassi: overlay_equals( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_equals('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente uguale ad una regione * overlay_equals('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente uguale ad una regione con una popolazione maggiore di 10000 * overlay_equals('regions', name) \u2192 un array di nomi, per le regioni spazialmente uguali all'elemento corrente * array_to_string(overlay_equals('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni spazialmente uguali all'elemento corrente * overlay_equals('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente uguale all'elemento corrente * array_sort(overlay_equals(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente uguali all'elemento corrente e con una popolazione superiore a 10000 * overlay_equals(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente uguali all'elemento corrente overlay_intersects \u21b5 Definizione Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target intersecati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Intersects\" sottostante, come descritto nella funzione PostGIS ST_INTERSECTS . Sintassi: overlay_intersects( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_intersects('regions') \u2192 true se l'elemento corrente interseca spazialmente una regione * overlay_intersects('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente interseca spazialmente una regione con una popolazione maggiore di 10000 * overlay_intersects('regions', name) \u2192 un array di nomi, per le regioni intersecate dall'elemento corrente * array_to_string(overlay_intersects('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni intersecate dall'elemento corrente * overlay_intersects('regions', name)[0] \u2192 una stringa con il nome della regione intersecata dall'elemento corrente * array_sort(overlay_intersects(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni intersecate dall'elemento corrente e con una popolazione maggiore di 10000 * overlay_intersects(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni intersecate dall'elemento corrente overlay_nearest \u21b5 Definizione Restituisce se l'elemento corrente ha elementi da un layer target entro una data distanza o un array di risultati basati su espressioni per gli elementi nel layer di target entro una distanza dall'elemento corrente. Nota: questa funzione pu\u00f2 essere lenta e consuma molta memoria per layer con molte feature. Sintassi: overlay_contains( layer [, expression ][, filter ][, limit=1 ][, max_distance ][, cache ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); max_distance una distanza opzionale per limitare la ricerca di elementi corrispondenti. Se non impostato, verranno usati tutti gli elementi nel layer di destinazione. cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_nearest('airports') \u2192 true se il layer \"airports\" ha almeno un elemento * overlay_nearest('airports', max_distance:= 5000) \u2192 vero se \u00e8 presente un aeroporto entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente * overlay_nearest('airports', name) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come array * array_to_string(overlay_nearest('airports', name)) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come stringa * overlay_nearest(layer:='airports', expression:= name, max_distance:= 5000) \u2192 il nome dell'aereoporto pi\u00f9 vicino entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, come array * overlay_nearest(layer:='airports', expression:=\"name\", filter:= \"Use\"='Civilian', limit:=3) \u2192 un array di nomi, per un massimo di tre aeroeporti civili pi\u00f9 vicini ordinati per distanza * overlay_nearest(layer:='airports', expression:=\"name\", limit:= -1, max_distance:= 5000) \u2192 un array di nomi, per tutti gli aeroporti entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, ordinato per distanza. Esempio 45: http://hfcqgis.opendatasicilia.it/it/latest/esempi/linea_min_distanza2.html overlay_touches \u21b5 Definizione Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target toccati dall'elemento corrente. Leggi ulteriori informazioni sul predicato GEOS \"Touches\", come descritto nella funzione PostGIS ST_TOUCHES . Sintassi: overlay_touches( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_touches('regions') \u2192 true se l'elemento corrente tocca spazialmente una regione * overlay_touches('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente tocca spazialmente una regione con una popolazione maggiore di 10000 * overlay_touches('regions', name) \u2192 un array di nomi, per le regioni tocacte dall'elemento corrente * string_to_array(overlay_touches('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni toccate dall'elemento corrente * overlay_touches('regions', name)[0] \u2192 una stringa con il nome della regione toccata dall'elemento corrente * array_sort(overlay_touches(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni toccate dall'elemento attuale e con una popolazione superiore a 10000 * overlay_touches(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni toccate dall'elemento corrente overlay_within \u21b5 Definizione Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Within\", come descritto nella funzione PostGIS ST_WITHIN . Sintassi: overlay_within( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_within('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente all'interno di una regione * overlay_within('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente all'interno di una regione con una popolazione maggiore di 10000 * overlay_within('regions', name) \u2192 un array di nomi, per le regioni contenenti l'elemento corrente * array_to_string(overlay_within('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni che contengono l'elemento corrente * overlay_within('regions', name)[0] \u2192 una stringa con il nome della regione che contengono l'elemento corrente * array_sort(overlay_within(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenenti l'elemento corrente e con una popolazione superiore a 10000 * overlay_within(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenenti l'elemento corrente perimeter \u21b5 Definizione Calcola il perimetro di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $perimeter , la quale esegue calcoli ellissoidali basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura della distanza. Sintassi: perimeter( geometry ) Argomenti: geometry oggetto geometria poligono Esempi * perimeter(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))')) \u2192 12.0 point_n \u21b5 Definizione Restituisce un nodo specifico da una geometria. Sintassi: point_n( geometry , index ) Argomenti: geometry oggetto geometria index indice del nodo da restituire, dove 1 \u00e8 il primo nodo; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi * geom_to_wkt(point_n(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))'),2)) \u2192 'Point (4 0)' -- Esempi correlati: esempio nro 4 - Come aggiungere la quota Z alla tabella attributi point_on_surface \u21b5 Definizione Restituisce un punto garantendo che sia giacente sulla superficie della geometria. Sintassi: point_on_surface( geometry ) Argomenti: geometry una geometria Esempi * point_on_surface($geometry) \u2192 una geometria punto -- pole_of_inaccessibility \u21b5 Definizione Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie. Questa funzione usa l'algoritmo 'polylabel' (Vladimir Agafonkin, 2016), che \u00e8 un approccio iterativo garantito per trovare il vero polo dell'inaccessibilit\u00e0 all'interno di una tolleranza specificata. Tolleranze pi\u00f9 precise richiedono pi\u00f9 iterazioni e sar\u00e0 necessario pi\u00f9 tempo per il calcolo. Sintassi: pole_of_inaccessibility( geometry , tolerance ) Argomenti: geometry una geometria tolerance distanza massima tra il punto restituito e la vera posizione del polo Esempi * geom_to_wkt(pole_of_inaccessibility( geom_from_wkt('POLYGON((0 1,0 9,3 10,3 3, 10 3, 10 1, 0 1))'), 0.1)) \u2192 'Point(1.55, 1.55)' -- project \u21b5 Definizione Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti. Sintassi: project( point , distance , azimuth [, elevation ]) [ ] indica componenti opzionali Argomenti: point punto di partenza point distanza da proiettare azimuth azimuth in radianti in senso orario, dove 0 corrisponde a nord elevation angolo di inclinazione in radianti Esempi * project(make_point(1, 2), 3, radians(270)) \u2192 Point(-2, 2) -- relate \u21b5 Definizione Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Variabile di relazione \u21b5 Restituisce la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Sintassi: relate( geometry , geometry ) ) Argomenti: geometry una geometria geometry una geometria Esempi * relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ) ) \u2192 'FF1F00102' Variabile di corrispondenza del modello \u21b5 Testa se la relazione DE-9IM tra due geometrie corrisponde a un pattern specificato: restituisc true Vero, false Falso. Sintassi: relate( geometry , geometry , pattern ) Argomenti: geometry una geometria geometry una geometria pattern Tratteggio DE-9IM da far corrispondere Esempi * relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ), '**1F001**' ) \u2192 Vero Link utili: Wikipedia OpenGeo reverse \u21b5 Definizione Inverte il verso di una linestring invertendo l'ordine dei sui vertici. Sintassi: reverse( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt(reverse(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'LINESTRING(2 2, 1 1, 0 0)' -- rotate \u21b5 Definizione Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria. Sintassi: rotate( geometry , rotation [, center ]) [ ] indica componenti opzionali Argomenti: geometry una geometria rotation rotazione oraria in gradi center punto centrale di rotazione. Se non specificato, viene utilizzato il centro del perimetro di delimitazione della geometria. Esempi * rotate($geometry, 45, make_point(4, 5)) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al punto (4, 5) * rotate($geometry, 45) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al centro del riquadro di delimitazione segments_to_lines \u21b5 Definizione Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso. Sintassi: segments_to_lines( geometry ) Argomenti: geometry oggetto geometria Esempi * geom_to_wkt(segments_to_lines(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiLineString ((0 0, 1 1),(1 1, 2 2))' shortest_line \u21b5 Definizione Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2. La linea risultante partir\u00e0 dalla geometria 1 e finir\u00e0 nella geometria 2. Sintassi: shortest_line( geometry1 , geometry2 ) Argomenti: geometry1 geometria dalla quale cercare la linea pi\u00f9 corta geometry2 geometria verso la quale cercare la linea pi\u00f9 corta Esempi * geom_to_wkt(shortest_line(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 LineString(73.0769 115.384, 100 100) -- simplify \u21b5 Definizione Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker). L'algoritmo mantiene grandi deviazioni nelle geometrie e riduce il numero di vertici in segmenti quasi rettilinei. Sintassi: simplify(simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance deviazione massima dai segmenti rettilinei per i punti da rimuovere Esempi * geom_to_wkt(simplify(geometry:=geom_from_wkt('LineString(0 0, 5 0.1, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' simplify_vw \u21b5 Definizione Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ). L'algoritmo rimuove i vertici che creano piccole aree nelle geometrie, ad esempio picchi stretti o segmenti quasi rettilinei. Sintassi: simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance una misura dell'area massima creata da un nodo per il nodo da rimuovere Esempi * geom_from_wkt('LineString(0 0, 5 0, 5.01 10, 5.02 0, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' -- single_sided_buffer \u21b5 Definizione Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring. Le distanze sono espresse nel SR di tale geometria. Sintassi: single_sided_buffer( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di buffer. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi * single_sided_buffer($geometry, 10.5) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0 * single_sided_buffer($geometry, -10.5) \u2192 linea bufferizzata a destra di 10.5 unit\u00e0 * single_sided_buffer($geometry, 10.5, segments:=16, join:=1) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in un buffer pi\u00f9 morbido * single_sided_buffer($geometry, 10.5, join:=3) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando un'unione smussata -- smooth \u21b5 Definizione Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria. Sintassi: smooth( geometry , iterations=1 , offset=0.25 , min_length=1 , max_angle=180 ) Argomenti: geometry una geometria iterations Numero di iterazioni di smussatura da applicare. Valori pi\u00f9 alti fanno risultare geometria pi\u00f9 morbide, ma pi\u00f9 complesse. offset valore tra 0 e 0.5 che controlla quanto la geometria smussata segua strettamente la geometria originale. Valori pi\u00f9 piccoli risultano in una lisciatura pi\u00f9 stretta, valori pi\u00f9 grandi risultano in una lisciatura pi\u00f9 larga. min_length lunghezza minima dei segmenti ai quali applicare la smussatura. Questo parametro pu\u00f2 essere usato per evitare di posizionare nodi aggiuntivi eccessivi nei segmenti pi\u00f9 corti della geometria. max_angle angolo massimo (0-180) da applicare al nodo per la smussatura. Abbassando intenzionalmente l'angolo massimo si abbassa l'arrotondamento sugli angoli della geometria. Per esempio, un valore di 80 gradi preserver\u00e0 l'angolo nella geometria. Esempi - geom_to_wkt(smooth(geometry:=geom_from_wkt('LineString(0 0, 5 0, 5 5)'),iterations:=1,offset:=0.2,min_length:=-1,max_angle:=180)) \u2192 'LineString (0 0, 4 0, 5 1, 5 5)' start_point \u21b5 Definizione Restituisce il primo nodo di una geometria. Sintassi: start_point( geometry ) Argomenti: geometry oggetto geometria Esempi * geom_to_wkt(start_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (4 0)' Start_point di geometria poligonale: Start_point di geometria lineare: sym_difference \u21b5 Definizione Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca. Sintassi: sym_difference( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( sym_difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 8 8)' ) ) ) \u2192 LINESTRING(5 5, 8 8) Espressione -- differenza simmetrica tra le due linee sym_difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz -- tapered_buffer \u21b5 Definizione Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea. Sintassi: tapered_buffer( geometry , start_width , end_width [, segments=8 ]_) [ ] contrassegna componenti opzionali Argomenti: geometry input geometry. Deve essere una (multi) geometria della linea. start_width larghezza del buffer all'inizio della linea, end_width larghezza del buffer alla fine della riga. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi * tapered_buffer(geometry:=geom_from_wkt('LINESTRING(1 2, 4 2)'),start_width:=1,end_width:=2,segments:=8) \u2192 Un buffer rastremato che inizia con un diametro di 1 e termina con un diametro di 2 lungo la geometria della linea. -- QGIS - feature touches \u21b5 Definizione Verifica se una geometria tocca un'altra. Restituisce vero (1) se le geometrie hanno almeno un punto in comune, ma i loro interni non si intersecano. Sintassi: touches( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * touches( geom_from_wkt( 'LINESTRING(5 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 * touches( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 0 Nota bene: -- Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - touches(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','52')) geometry2 \u00e8 $geometry seleziono tutti i comuni touches (toccati) dalla provincia con pk_uid 46 (Siena) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli toccati dalla provincia di Siena). NOT touches(geometry(get_feature( 'province_rt_rt','pk_uid','52')),$geometry) transform \u21b5 Definizione Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione. Sintassi: transform( geometry , source_auth_id , dest_auth_id ) Argomenti: geometry una geometria source_auth_id ID del SR sorgente dest_auth_id ID del SR destinazione Esempi * geom_to_wkt( transform( $geometry, 'EPSG:2154', 'EPSG:4326' ) ) \u2192 POINT(0 51) -- translate \u21b5 Definizione Restituisce una versione traslata di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: translate( geometry , dx , dy ) Argomenti: geometry una geometria dx delta x geomdyetry delta y Esempi * translate($geometry, 5, 10) \u2192 una geometria dello stesso tipo come l'originale -- union \u21b5 Definizione Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie. Sintassi: union( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( union( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) ) \u2192 MULTIPOINT(4 4, 5 5) Espressione -- unione delle due linee union( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz -- wedge_buffer \u21b5 Definizione Restituisce un buffer a forma di cuneo che origina da una geometria del punto. Sintassi: wedge_buffer( geometry , azimuth , width , outer_radius [, inner_radius=0.0 ]) [ ] contrassegna componenti opzionali Argomenti: geometry punto centrale (origine) del buffer. Deve essere una geometria puntuale. azimuth (in gradi) per il centro del cuneo da puntare. width buffer w larghezza (in gradi). Si noti che il cuneo si estender\u00e0 fino a met\u00e0 della larghezza angolare su entrambi i lati della direzione dell'azimut. outer_radius raggio esterno per i buffers inner_radius raggio interno opzionale per i buffers Esempi * wedge_buffer(center:=geom_from_wkt('POINT(1 2)'),azimuth:=90,width:=180,outer_radius:=1) \u2192 Un buffer a forma di cuneo centrato sul punto (1,2), rivolto verso est, con una larghezza di 180 gradi e raggio esterno di 1. -- within \u21b5 Definizione Controlla qualora una geometria sia interna ad un'altra. Restituisce 1 (vero) se la geometria a \u00e8 completamente contenuta nella_ geometria b_. Sintassi: within( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * within( geom_from_wkt( 'POINT( 0.5 0.5)' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ) ) \u2192 1 * within( geom_from_wkt( 'POINT( 5 5 )' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ) ) \u2192 0 Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) dove: geometry1 \u00e8 $geometry geometry2 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','53')) seleziono tutti i comuni within (contenuti) nella provincia con pk_uid 53 (Grosseto) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Grosseto). NOT within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) Altro esempio con condizione sulle etichette Espressione CASE WHEN within( $geometry, geometry(get_feature('poligono','id',1))) = 1 THEN 'INTERNO' ELSE 'NON INTERNO' END x \u21b5 Definizione Restituisce la minima coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale. Sintassi: x( geometry ) Argomenti: geometry una geometria Esempi * x( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 2 * x( $geometry ) \u2192 coordinata x del centroide dell'elemento corrente -- x_max \u21b5 Definizione Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_max( geometry ) Argomenti: geometry una geometria Esempi * x_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 4 -- x_min \u21b5 Definizione Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_min( geometry ) Argomenti: geometry una geometria Esempi * x_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 2 -- y \u21b5 Definizione Restituisce la coordinata y minima di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale. Sintassi: y( geometry ) Argomenti: geometry una geometria Esempi * y( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 5 * y( $geometry ) \u2192 coordinata y del centroide dell'elemento corrente -- y_max \u21b5 Definizione Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_max( geometry ) Argomenti: geometry una geometria Esempi * y_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 8 -- y_min \u21b5 Definizione Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_min( geometry ) Argomenti: geometry una geometria Esempi * y_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 5 -- z \u21b5 Definizione Restituisce la coordinata z di una geometria puntuale. Sintassi: z( geometry ) Argomenti: geometry una geometria punto Esempi * z( geom_from_wkt( 'POINTZ(2 5 7)' ) ) \u2192 7 z_max \u21b5 Definizione Restituisce la coordinata z massima di una geometria. Sintassi: z_max( geometry ) Argomenti: geometry una geometria con z coordinata Esempi * z_max( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 * z_max( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 3 * z_max( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 0 * z_max( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 2 * z_max( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL z_min \u21b5 Definizione Restituisce la coordinata z minima di una geometria. Sintassi: z_min( geometry ) Argomenti: geometry una geometria con z coordinata Esempi * z_min( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 * z_min( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 1 * z_min( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2 * z_min( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 -1 * z_min( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL","title":"Gruppo Geometria"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#gruppo-geometria","text":"Abstract Questo gruppo contiene funzioni che operano sugli oggetti geometrici es: lunghezza , area . Area lunghezza Predicati Overlay_* coordinate vari $area $length contains overlay_contains $x centroid area length crosses overlay_crosses $y buffer - $perimeter disjoint overlay_disjoint x - perimeter intersects overlay_equals y - - overlaps overlay_intersects z - - touches overlay_nearest m - - within overlay_touches - - - - overlay_within -","title":"Gruppo Geometria"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#area","text":"Definizione Restituisce l'area della geometria corrente. L'area calcolata da questa funzione rispetta sia le impostazioni dell'ellissoide del progetto corrente sia delle unit\u00e0 di misura. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora l'area calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide l'area calcolata sar\u00e0 planimetrica. Sintassi: $area Esempi * $area \u2192 131196498,619546 Nota bene se il SR del progetto in cui si sta calcolando l'area ( $area ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) allora l'unit\u00e0 di misura sarebbe il metro, invece se il SR del progetto fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe gradi e quindi poco comprensibile e valori piccoli (0.00001). Attenzione! in generale $area <> area($geometry)","title":"$area"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#geometry","text":"Definizione Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni. Sintassi: $geometry Esempi geomToWKT( $geometry ) \u2192 POINT(6 50) area($geoamtry) \u2192 1234567.89 mq perimeter($geometry) \u2192 25689.25 m Osservazioni il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$geometry"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#length","text":"Definizione Restituisce la lunghezza di una linestring. Se hai bisogno della lunghezza del bordo di un poligono, utilizza invece $perimeter . La lunghezza calcolata da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora la lunghezza calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide la lunghezza calcolata sar\u00e0 planimetrica. Sintassi: $length Esempi * $length \u2192 42.4711 Attenzione! Come evidenziano nella definizione della funzione, $length calcola la lunghezza rispettando le impostazioni di progetto: Occorre cambiare entrambe le impostazioni, sia quelle dell'ellissoide \u2192 'None/Planimetric' sia le Unit\u00e0 di misura per le distanze' \u2192 Gradi Queste modofiche non valgono per l'etichettatura, la lunghezza sar\u00e0 quella relativa alla geometria e quindi al suo SR. Osservazioni il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$length"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#perimeter","text":"Definizione Restituisce la lunghezza del perimetro della geometria corrente. Il perimetro calcolato da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora il perimetro calcolato sar\u00e0 ellisoidico altrimenti se non \u00e8 stato impostato alcun ellissoide il perimetro calcolato sar\u00e0 planimetrico. Sintassi: $perimeter Esempi - $perimeter \u2192 2545897.26 Nota Si utilizza SOLO per i poligoni, nel caso di feature lineari $length Osservazioni il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$perimeter"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#x","text":"Definizione Restituisce la coordinata x della geometria corrente. Sintassi: $x Esempi * $x \u2192 12.2568971 Attenzione! La funzione $x restituisce la coordinata x della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Osservazioni Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni ed: x($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"$x"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#x_at","text":"Definizione Recupera una coordinata x per la geometria dell'elemento corrente. Sintassi: $x_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi * $x_at(1) \u2192 12.6882843 Osservazioni Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"$x_at"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#y","text":"Definizione Restituisce la coordinata y della geometria corrente. Sintassi: $y Esempi * $y \u2192 12.2568971 Attenzione! La funzione $y restituisce la coordinata y della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Osservazioni Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni es: y($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"$y"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#y_at","text":"Definizione Recupera una coordinata y per la geometria dell'elemento corrente. Sintassi: $y_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi * $y_at(1) \u2192 2 Osservazioni Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"$y_at"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#angle_at_vertex","text":"Definizione Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: angle_at_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0 Esempi * angle_at_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 45.0 Attenzione! Il primo ed ultimo vertice di una lineastring aperta la funzione restituisce il valore dell'angolo e non la bisettrice.","title":"angle_at_vertex"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#area_1","text":"Definizione Restituisce l'area di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura dell'area restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $area, la quale esegue calcoli ellisoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura dell'area. Sintassi: area( geometry ) Argomenti: geometry oggetto geometria poligono Esempi - area($geometry) \u2192 1234.567 Occhio Se il SR del layer in cui si sta calcolando l'area ( area() ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) l'unit\u00e0 di misura sarebbe il metro, invece se il SR del layer fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe in gradi e quindi poco comprensibile e valori piccoli. Osservazioni in generale area($geometry) <> $area","title":"area"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#azimuth","text":"Definizione Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi: azimuth( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi * degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 * degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689 Attenzione! Azimuth per definizione restituisce un angolo in radianti, per trasformarlo in gradi usare la funzione degrees()","title":"Azimuth"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#boundary","text":"Definizione Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria). Per esempio, una geometria poligonale avr\u00e0 un confine costituito dalle linee di ogni anello nel poligono. Alcuni tipi di geometrie non hanno confini, es collezioni di punti o geometrie e pertanto verr\u00e0 restituito null. Sintassi: boundary( geometry ) Argomenti: geometry una geometria Esempi - geom_to_wkt(boundary(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'LineString(1 1,0 0,-1 1,1 1)' - geom_to_wkt(boundary(geom_from_wkt('LineString(1 1,0 0,-1 1)'))) \u2192 'MultiPoint ((1 1),(-1 1))' Osservazioni funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"boundary"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#bounds","text":"Definizione Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds( geometry ) Argomenti: geometry una geometria Esempi - bounds($geometry) \u2192 perimetro di delimitazione dell'elemento geometrico corrente - geom_to_wkt(bounds(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'Polygon ((-1 0, 1 0, 1 1, -1 1, -1 0))' Osservazioni funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"bounds"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#bounds_height","text":"Definizione Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_height( geometry ) Argomenti: geometry una geometria Esempi - bounds_height($geometry) \u2192 altezza del perimetro di delimitazione dell'elemento geometrico corrente - bounds_height(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')) \u2192 1 Osservazioni La funzione restituisce un numero che corrisponde all'altezza del rettangolo di ingombro di una geometria.","title":"bounds_height"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#bounds_width","text":"Definizione Restituisce la larghezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_width( geometry ) Argomenti: geometry una geometria Esempi - bounds_width($geometry) \u2192 larghezza del perimetro di delimitazione di $geometry Osservazioni La funzione restituisce un numero che corrisponde alla larghezza del rettangolo di ingombro di una geometria.","title":"bounds_width"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#buffer","text":"Definizione Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita. I calcoli vengono effettuati nel sistema di riferimento spaziale della geometria. Sintassi: buffer( geometry , distance [, segments=8 ]) Argomenti: geometry una geometria distance distanza buffer nelle unit\u00e0 del layer segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. Esempi - buffer($geometry, 10.5) \u2192 poligono di $geometry bufferizzato di 10.5 unit\u00e0 Danger Utilizzando SR proiettati l'unit\u00e0 di misura \u00e8 il metro, mentre, per SR geografici \u00e8 il grado, quindi attenzione al valore della distanza. Osservazioni: Nota La Funzione restituisce SEMPRE un poligono sia per geometry POINT , LINESTRING o POLYGON","title":"buffer"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#buffer_by_m","text":"Definizione Crea un buffer lungo una geometria linestring in cui il diametro del buffer varia in base ai valori m nei vertici della linea. Sintassi: buffer_by_m( geometry , segments ) Argomenti: geometry la geometria deve essere una (multi) geometria linestring con valori m. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi * buffer_by_m(geometry:=geom_from_wkt('LINESTRINGM(1 2 0.5, 4 2 0.2)'),segments:=8) \u2192 Un buffer di larghezza variabile che inizia con un diametro di 0,5 e termina con un diametro di 0,2 lungo la linea. relativa all'esempio di sopra: Osservazioni: QGIS - feature","title":"buffer_by_m"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#centroid","text":"Definizione Restituisce il centro geometrico di una geometria. Sintassi: centroid( geometry ) Argomenti: geometry una geometria Esempi * centroid($geometry) \u2192 una geometria punto Osservazioni La Funzione restituisce SEMPRE una geometry POINT","title":"centroid"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#close_line","text":"Definizione Restituisce una linestring chiusa della linestring di input aggiungendo il primo punto alla fine della linea, se non \u00e8 gi\u00e0 chiusa. Se la geometria non \u00e8 una linestring o una MultiLinestring, il risultato sar\u00e0 NULL. Sintassi: close_line( geometry ) Argomenti: geometry una geometria linestring Esempi * geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) * geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1, 0 0)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0)","title":"close_line"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#closest_point","text":"Definizione Restituisce il punto sulla geometria1 che \u00e8 pi\u00f9 vicino alla geometria2. Sintassi: closest_point( geometry1 , _ geometry2 ) Argomenti: geometry1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry geometria dalla quale cercare il punto pi\u00f9 vicino Esempi * geom_to_wkt(closest_point(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 Point(73.0769 115.384) Osservazioni Utilizzando il geometry generator per i temi (il layer strade \u00e8 una unica feature): closest_point( geometry(get_feature('strade', 'reg',19)),$geometry) Gif animata: geometry 1 \u00e8 la rete stradale; geometry 2 sono i punti; in rosso i closestpoint","title":"closest_point"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#collect_geometries","text":"Definizione Raccoglie un set di geometrie in un oggetto geometria multiparte.","title":"collect_geometries"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#variante-geometry","text":"Sintassi: collect_geometries( geometry1 , geometry2 ...) Argomenti: geometry geometria sulla quale cercare il punto pi\u00f9 vicino Esempi * geom_to_wkt(collect_geometries(make_point(1,2), make_point(3,4), make_point(5,6))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))'","title":"Variante geometry"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#variante-con-array","text":"Sintassi: collect_geometries( array ) Argomenti: array array con oggetti geometrici Esempi * geom_to_wkt(collect_geometries(array(make_point(1,2), make_point(3,4), make_point(5,6)))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Osservazioni:","title":"Variante con array"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#combine","text":"Definizione Restituisce la combinazione di due geometrie. Sintassi: combine( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 2 1)' ) ) ) \u2192 MULTILINESTRING((4 4, 2 1), (3 3, 4 4), (4 4, 5 5)) * geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 6 6, 2 1)' ) ) ) \u2192 LINESTRING(3 3, 4 4, 6 6, 2 1)","title":"combine"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#contains","text":"Definizione Verifica se una geometria ne contiene un'altra. Restituisce vero se e solo se nessun punto di geometry2 giace all'esterno di geometry1 e almeno un punto dell'interno di geometry2 si trova all'interno di geometry1. Sintassi: contains( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'POINT(0.5 0.5 )' ) ) \u2192 vero * contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry2 \u00e8 $geometry seleziono tutti i comuni contains (contenuti) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Lucca). NOT contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"contains"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#convex_hull","text":"Definizione Restituisce il poligono convesso di una geometria. Rappresenta la minima geometria convessa che racchiude tutte le geometria contenute nell'insieme. Sintassi: convex_hull( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt( convex_hull( geom_from_wkt( 'LINESTRING(3 3, 4 4, 4 10)' ) ) ) \u2192 POLYGON((3 3,4 10,4 4,3 3)) Osservazioni La funzione restituisce sempre un poligono.","title":"convex_hull"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#crosses","text":"Definizione Verifica se una geometria interseca un'altra. Restituisce vero (1) se le geometrie interessate hanno qualche, ma non tutti, punto interno in comune. Sintassi: crosses( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * crosses( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero * crosses( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni crosses (attraversati) dal fiume ARNO PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli attraversati dal fiume ARNO). NOT crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry)","title":"crosses"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#difference","text":"Definizione Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b . Sintassi: difference( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(4 4, 5 5) Espressione: Espressione -- differenza linea a - linea b difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a Espressione -- differenza linea b - linea a difference( make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a Prova tu Dati e progetto qgz Esempio di sopra:","title":"difference"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#disjoint","text":"Definizione Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune. Sintassi: disjoint( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria * geometry2 una geometria Esempi * disjoint( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero * disjoint( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'POINT(4 4)' )) \u2192 falso Attenzione! Vero = 1; Falso= 0 Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - disjoint(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni disjoint (disgiunti) dal fiume ARNO","title":"disjoint"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#distance","text":"Definizione Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate. Sintassi: distance( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi - distance( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(4 8)' ) ) \u2192 4 --","title":"distance"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#distance_to_vertex","text":"Definizione Restituisce la distanza lungo una geometria ad un vertice specificato. Sintassi: distance_to_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi * distance_to_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 10.0 -- esempio di sopra:","title":"distance_to_vertex"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#end_point","text":"Definizione Restituisce l'ultimo nodo di una geometria. Sintassi: end_point( geometry ) Argomenti: geometry oggetto geometria Esempi * geom_to_wkt(end_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (0 2)' -- End_point di geometria poligonale: End_point di geometria lineare:","title":"end_point"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#extend","text":"Definizione Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata. Le linee sono estese usando la direzione di immersione del primo e dell'ultimo segmento nella linea. Le distanze sono espresse nel SR di tale geometria. Sintassi: extend( geometry , start_distance , end_distance ) Argomenti: geometry una geometria (multi)linestring start_distance distanza alla quale estendere l' inizio della linea end_distance distanza alla quale estendere la fine della linea. Esempi * geom_to_wkt(extend(geom_from_wkt('LineString(0 0, 1 0, 1 1)'),1,2)) \u2192 'LineString (-1 0, 1 0, 1 3)' * geom_to_wkt(extend(geom_from_wkt('MultiLineString((0 0, 1 0, 1 1), (2 2, 0 2, 0 5))'),1,2)) \u2192 'MultiLineString ((-1 0, 1 0, 1 3),(3 2, 0 2, 0 7))' --","title":"extend"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#exterior_ring","text":"Definizione Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 NULL. Sintassi: exterior_ring( geometry ) Argomenti: geometry una geometria poligono Esempi * geom_to_wkt(exterior_ring(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2, 0.1, 0.1 0.1))'))) \u2192 'LineString (-1 -1, 4 0, 4 2, 0 2, -1 -1)' --","title":"exterior_ring"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#extrude","text":"Definizione Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y. Sintassi: extrude( geometry , x , y ) Argomenti: geometry una geometria poligono x estensione x, valore numerico y estensione y, valore numerico Esempi * extrude(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), 1, 2) \u2192 Polygon ((1 2, 3 2, 4 3, 5 5, 4 4, 2 4, 1 2)) * extrude(geom_from_wkt('MultiLineString((1 2, 3 2), (4 3, 8 3)'), 1, 2) \u2192 MultiPolygon (((1 2, 3 2, 4 4, 2 4, 1 2)),((4 3, 8 3, 9 5, 5 5, 4 3))) Osservazioni Nell'esempio ho utilizzato la funzione boundary() perch\u00e9 la geometria di ingresso deve essere lineare.","title":"extrude"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#flip_coordinates","text":"Definizione Restituisce una copia della geometria con le coordinate x e y scambiate. Utile per riparare le geometrie che hanno invertito i valori di latitudine e longitudine. Sintassi: flip_coordinates( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt(flip_coordinates(make_point(1, 2))) \u2192 Point (2 1) -- Esempio con vettore poligonale (aggiorno la geometry): il flip \u00e8 da usare con cautela perch\u00e9 cambia radicalemnte la posizione del vettore","title":"flip_coordinates"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#force_rhr","text":"Definizione Forza una geometria a rispettare la regola della mano destra, in cui l'area delimitata da un poligono si trova a destra del limite. In particolare, l'anello esterno \u00e8 orientato in senso orario e l'interno in senso antiorario. Sintassi: force_rhr( geometry ) Argomenti: geometry una geometria. Qualsiasi geometria non poligonale viene restituita invariata. Esempi * geom_to_wkt(force_rhr(geometry:=geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'))) \u2192 Polygon ((-1 -1, 0 2, 4 2, 4 0, -1 -1)) Osservazioni Ecco un esempio pratico della funzione (presente anche nelgli strumenti fi processing) ovvero un poligono disegnato in senso antiorario viene forzato in senso orario e l'etichettature \u00e8 visibile correttamente.","title":"force_rhr"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#geom_from_gml","text":"Definizione Restituisce una geometria da una rappresentazione GML di una geometria. Sintassi: geom_from_gml( _gml ) Argomenti: gml Rappresentazione GML di una geometria come stringa Esempi * geom_to_wkt(geom_from_gml('<gml:LineString srsName=\"EPSG:4326\"><gml:coordinates>4,4 5,5 6,6</gml:coordinates></gml:LineString>') ) \u2192 'LineString (4 4, 5 5, 6 6)'","title":"geom_from_gml"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#geom_from_wkb","text":"Definizione Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB). Sintassi: geom_from_wkb( binari ) Argomenti: binari Rappresentazione binaria ben nota (WKB) di una geometria (come BLOB binario) Esempi * geom_from_wkb( geom_to_wkb( make_point(4,5) ) ) \u2192 un oggetto geometria punto","title":"geom_from_wkb"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#geom_from_wkt","text":"Definizione Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT). Sintassi: geom_from_wkt_ text _) Argomenti: text Rappresentazione Well-Known Text (WKT) di una geometria Esempi * geom_from_wkt( 'POINT(4 5)' ) \u2192 un oggetto geometria","title":"geom_from_wkt"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#geom_to_wkb","text":"Definizione Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario. Sintassi: geom_to_wkb( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkb( $geometry ) \u2192 BLOB binario contenente un oggetto geometria","title":"geom_to_wkb"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#geom_to_wkt","text":"Definizione Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR Sintassi: geom_to_wkt( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt( make_point(6, 50) ) \u2192 'POINT(6 50)' * geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'POINT(0 0.66666667)' * geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')), 2) \u2192 'POINT(0 0.67)'","title":"geom_to_wkt"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#geometry_1","text":"Definizione Restituisce la geometria di un elemento. Sintassi: geometry( feature ) Argomenti: feature un oggetto elemento Esempi geom_to_wkt( geometry( get_feature( layer, attributeField, value ) ) ) \u2192 'POINT(6 50)' intersects( $geometry, geometry( get_feature( layer, attributeField, value ) ) ) \u2192 vero -- Usando il Select by Expression : selezionare le feature di un layer (quartieri) in funzione di altro layer (test):","title":"geometry"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#geometry_n","text":"Definizione Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: geometry_n( geometry , index ) Argomenti: geometry raccolta di geometrie index indice della geometria da restituire, dove 1 \u00e8 la prima geometria nella raccolta Esempi * geom_to_wkt(geometry_n(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))'),3)) \u2192 'Point (1 0)'","title":"geometry_n"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#hausdorff_distance","text":"Definizione Restituisce la distanza di Hausdorff tra due geometrie. Questa \u00e8 in sostanza una misura di come le 2 geometrie sono simili o dissimili: una distanza pi\u00f9 bassa indica geometrie pi\u00f9 simili. La funzione pu\u00f2 essere eseguita con un argomento opzionale di densificazione della frazione. Se non viene specificato, viene utilizzata una approssimazione alla distanza standard di Hausdorff. Questa approssimazione \u00e8 esatta o abbastanza vicina per un grande sottoinsieme di casi utili. Esempi di questi sono: calcolare la distanza tra Linestrings che sono approssimativamente paralleli tra loro e sono sostanzialmente uguali in lunghezza. Ci\u00f2 si verifica nelle verifica di reti lineari. testare la somiglianza di geometrie. Se l'approssimazione predefinita fornita da questo metodo \u00e8 insufficiente, specifica l'argomento opzionale di densificazione della frazione. Specificando questo argomento si esegue una densificazione del segmento prima di calcolare la distanza Hausdorff discreta. Il parametro imposta la frazione con cui densificare ogni segmento. Ogni segmento sar\u00e0 suddiviso in un numero di subsegmenti di uguale lunghezza, la cui frazione della lunghezza totale \u00e8 la pi\u00f9 vicina alla frazione data. Riducendo il parametro di densificazione della frazione, la distanza restituita si avviciner\u00e0 alla vera distanza Hausdorff per le geometrie. Sintassi: hausdorff_distance( geometry1 , geometry2 , densify_fraction ) Argomenti: geometry1 una geometria geometry2 una geometria densify_fraction quantit\u00e0 di densificazione della frazione Esempi * hausdorff_distance( geometry1:= geom_from_wkt('LINESTRING (0 0, 2 1)'),geometry2:=geom_from_wkt('LINESTRING (0 0, 2 0)')) \u2192 2 * hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)')) \u2192 14.142135623 * hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)'),0.5) \u2192 70.0 -- Nel caso di geometrie puntuali la hausdorff_distance coincide con la funzione distance , segue un esempio: Espressione format_number( hausdorff_distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' || '\\n'|| format_number( distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' -- In questo esempio confronto due layer: il numero pi\u00f9 piccolo indica il poligono pi\u00f9 simile a al poligono pi\u00f9 grande.","title":"hausdorff_distance"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#inclination","text":"Definizione Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b . Sintassi: inclination( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi * inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 * inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 * inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 * inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 --","title":"inclination"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#interior_ring_n","text":"Definizione Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono. Sintassi: interior_ring_n( geometry , index ) Argomenti: geometry geometria poligono index Indice dell'anello interno da restituire, dove 1 \u00e8 il primo anello interno Esempi * geom_to_wkt(interior_ring_n(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1),(-1 -1, 4 0, 4 2, 0 2, -1 -1))'),1)) \u2192 'LineString (-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))' Osservazioni Restituisce una lineastring!!!","title":"interior_ring_n"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#intersection","text":"Definizione Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie. Sintassi: intersection( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 'LINESTRING(3 3, 4 4)' * geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'MULTIPOINT(3.5 3.5, 4 5)' ) ) ) \u2192 'POINT(3.5 3.5)' Espressione -- intersezione tra le due linee intersection( make_line( -- linea a start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea b start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz --","title":"intersection"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#intersects","text":"Definizione Controlla qualora una geometria ne interseca un'altra. Restituisce true (1) se la geometrie si intersecano spazialmente (condividono una porzione di spazio) altrimenti da false (0). Sintassi: intersects( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * intersects( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero * intersects( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 falso Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry2 \u00e8 $geometry seleziono tutti i comuni intersects (interseca) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli intersecati con la provincia di Lucca). NOT intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"intersects"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#intersects_bbox","text":"Definizione Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria. Restituisce vero (1) se le geometrie intersecano spazialmente il perimetro di delimitazione definito e falso (0) se non lo intersecano. Sintassi: intersects_bbox( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * intersects_bbox( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero * intersects_bbox( geom_from_wkt( 'POINT(6 5)' ), geom_from_wkt( 'POLYGON((3 3, 4 4, 5 5, 3 3))' ) ) \u2192 falso","title":"intersects_bbox"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#is_closed","text":"Definizione Restituisce vero (true) se una linestring \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso (false) se una linestring non \u00e8 chiusa. Se la geometria non \u00e8 una linestring, il risultato sar\u00e0 NULL. Sintassi: is_closed( geometry ) Argomenti: geometry una geometria linestring Esempi * is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso * is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero --","title":"is_closed"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#is_empty","text":"Definizione Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null . Sintassi: is_empty( geometry ) Argomenti: geometry una geometria Esempi * is_empty(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso * is_empty(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero * is_empty(geom_from_wkt('POINT(7 4)')) \u2192 falso * is_empty(geom_from_wkt('POINT EMPTY')) \u2192 vero","title":"is_empty"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#is_empty_or_null","text":"Definizione Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null_or_null . Sintassi: is_empty_or_null( geometry ) Argomenti: geometry una geometria Esempi * is_empty_or_null(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso * iis_empty_or_null(geom_from_wkt('POINT(7 4)')) \u2192 falso * is_empty_or_null(geom_from_wkt('POINT EMPTY')) \u2192 vero","title":"is_empty_or_null"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#is_multipart","text":"Definizione Restituisce vero se la geometria \u00e8 di tipo Multi. Sintassi: is_multipart( geometry ) Argomenti: geometry una geometria Esempi * is_multipart(geom_from_wkt('MULTIPOINT ((0 0),(1 1),(2 2))')) \u2192 vero * is_multipart(geom_from_wkt('POINT (0 0)')) \u2192 falso","title":"is_multipart"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#is_valid","text":"Definizione Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole **OGC** Sintassi: is_valid( geometry ) Argomenti: geometry una geometria Esempi * is_valid(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero * is_valid(geom_from_wkt('LINESTRING(0 0)')) \u2192 falso","title":"is_valid"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#length_1","text":"Definizione Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring.","title":"length"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#variabile-stringa","text":"Restituisce il numero di caratteri contenuti in una stringa. Sintassi: length( string ) Argomenti: string stringa della quale calcolare la lunghezza Esempi * length('hello') \u2192 5","title":"Variabile stringa"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#variabile-geometria","text":"Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length , la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi: length( geometry ) Argomenti: geometry oggetto geometria linea Esempi length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4.0","title":"Variabile geometria"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#length3d","text":"Definizione Calcola la lunghezza 3D di un oggetto linea geometrica. Se la geometria non \u00e8 un oggetto linea 3D, restituisce la sua lunghezza 2D. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di questa geometria, e le unit\u00e0 della lunghezza restituita corrisponderanno alle unit\u00e0 per l'SR. Questo differisce dai calcoli eseguiti dalla funzione $length , che eseguir\u00e0 calcoli ellissoidali basati sulle impostazioni dell'ellissoide e dell'unit\u00e0 di distanza del progetto. Sintassi: length3D( geometry ) Argomenti: geometry oggetto geometria linea Esempi - length3D(geom_from_wkt('LINESTRINGZ(0 0 0, 3 0 4)')) \u2192 5.0","title":"length3D"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#line_interpolate_angle","text":"Definizione Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: line_interpolate_angle( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea a cui interpolare l'angolo Esempi * line_interpolate_angle(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5) \u2192 90.0 --","title":"line_interpolate_angle"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#line_interpolate_point","text":"Definizione Restituisce il punto interpolato ad una specifica distanza lungo una geometria di tipo linestring. Sintassi: line_interpolate_point( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea Esempi * geom_to_wkt(line_interpolate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5)) \u2192 'Point (4 0)' --","title":"line_interpolate_point"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#line_locate_point","text":"Definizione Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata. Sintassi: line_locate_point( geometry , point ) Argomenti: geometry una geometria di tipo linestring point geometria puntuale per cui ricercare la posizione pi\u00f9 vicina sulla linestring Esempi * line_locate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),point:=geom_from_wkt('Point(5 1)')) \u2192 5.0","title":"line_locate_point"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#line_merge","text":"Definizione Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola. Questa funzione restituir\u00e0 NULL se la geometria considerata non \u00e8 una LineString/MultiLineString. Sintassi: line_merge( geometry ) Argomenti: geometry una geometria di tipo LineString/MultiLineString Esempi * geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(1 1, 2 2))'))) \u2192 'LineString(0 0,1 1,2 2)' * geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(11 1, 21 2))'))) \u2192 'MultiLineString((0 0, 1 1),(11 1, 21 2)' --","title":"line_merge"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#line_substring","text":"Definizione Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate (misurata dall'inizio della linea). I valori Z e M sono linearmente interpolati dai valori esistenti. Sintassi: line_substring( geometry , start_distance , end_distance ) Argomenti: geometry una geometria lineare o curva start_distance distanza all'inizio della sottostringa end_distance distanza alla fine della sottostringa Esempi * geom_to_wkt(line_substring(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),start_distance:=2,end_distance:=6)) \u2192 'LineString (2 0,6 0)' * line_substring( $geometry, $length *.1,$length *.6) \u2192 <geometria: LineString> -- Funzione utile per la tematizzazione","title":"line_substring"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#m","text":"Definizione Restituisce il valore m di una geometria puntuale. Sintassi: m( geometry ) Argomenti: geometry una geometria punto Esempi * ( geom_from_wkt( 'POINTM(2 5 4)' ) ) \u2192 4","title":"m"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#m_max","text":"Definizione Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_max( geometry ) Argomenti: geometry una geometria contenente m valori Esempi * m_max( make_point_m( 0,0,1 ) ) \u2192 1 * m_max(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 2","title":"m_max"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#m_min","text":"Definizione Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_min( geometry ) Argomenti: geometry una geometria contenente m valori Esempi * m_min( make_point_m( 0,0,1 ) ) \u2192 1 * m_min(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 0","title":"m_min"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#main_angle","text":"Definizione Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria. Sintassi: main_angle( geometry ) Argomenti: geometry una geometria poligono Esempi * main_angle(geom_from_wkt('Polygon ((321577 129614, 321581 129618, 321585 129615, 321581 129610, 321577 129614))')) \u2192 38.66 Osservazioni:","title":"main_angle"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_circle","text":"Definizione Crea un poligono circolare. Sintassi: make_circle( center , radius [, segments=36 ]) [ ] indica componenti opzionali Argomenti: center centro del cerchio radius raggio del cerchio segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi * geom_to_wkt(make_circle(make_point(10,10), 5, 4)) \u2192 'Polygon ((10 15, 15 10, 10 5, 5 10, 10 15))' * geom_to_wkt(make_circle(make_point(10,10,5), 5, 4)) \u2192 'PolygonZ ((10 15 5, 15 10 5, 10 5 5, 5 10 5, 10 15 5))'' * geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 4)) \u2192 'PolygonZM ((10 15 5 30, 15 10 5 30, 10 5 5 30, 5 10 5 30, 10 15 5 30))'","title":"make_circle"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_ellipse","text":"Definizione Crea un poligono ellittico. Sintassi: make_ellipse( center , semi_major_axis , semi_minor_axis , azimuth [, segments=36 ]) Argomenti: center centro dell'ellisse semi_major_axis semi-asse maggiore dell'ellisse semi_minor_axis semi-asse minore dell'ellisse azimuth orientazione dell'ellisse segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi * geom_to_wkt(make_ellipse(make_point(10,10), 5, 2, 90, 4)) \u2192 'Polygon ((15 10, 10 8, 5 10, 10 12, 15 10)) * geom_to_wkt(make_ellipse(make_point(10,10,5), 5, 2, 90, 4)) \u2192 'PolygonZ ((15 10 5, 10 8 5, 5 10 5, 10 12 5, 15 10 5))' * geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 2, 90, 4)) \u2192 'PolygonZM ((15 10 5 30, 10 8 5 30, 5 10 5 30, 10 12 5 30, 15 10 5 30))'","title":"make_ellipse"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_line","text":"Definizione Crea una geometria linea da una serie di geometrie punto. Sintassi: make_line( point1 , point2 , \u2026_) Argomenti: point una geometria punto Esempi * geom_to_wkt(make_line(make_point(2,4),make_point(3,5))) \u2192 'LineString (2 4, 3 5)' * geom_to_wkt(make_line(make_point(2,4),make_point(3,5),make_point(9,7))) \u2192 'LineString (2 4, 3 5, 9 7)'","title":"make_line"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#array-variant","text":"I vertici di linea sono specificati come una matrice di punti. Sintassi: make_line( array ) Argomenti: array Matrice di punti Esempi * geom_to_wkt(make_line(array(make_point(2,4),make_point(3,5),make_point(9,7)))) \u2192 'LineString (2 4, 3 5, 9 7)' Espressione make_line( array(geometry( get_feature_by_id('fontanelle_Palermo',$id))), array(geometry( get_feature_by_id('fontanelle_Palermo',not $id%2))) )","title":"Array variant"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_point","text":"Definizione Crea una geometria punto da valori x ed y (e opzionalmente z ed m). Sintassi: make_point( x , y , z , m ) Argomenti: x coordinata x del punto y coordinata y del punto z coordinata opzionale z del punto m valore m del punto Esempi * geom_to_wkt(make_point(2,4,6,8)) \u2192 'PointZM (2 4 6 8)'","title":"make_point"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_point_m","text":"Definizione Crea una geometria punto da una coordinata x, y ed un valore m. Sintassi: make_point_m_( x , y , m ) Argomenti: x coordinata x del punto y coordinata y del punto m valore m del punto Esempi * geom_to_wkt(make_point_m(2,4,6)) \u2192 'PointM (2 4 6)'","title":"make_point_m"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_polygon","text":"Definizione Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne. Sintassi: make_polygon( outerRing [, innerRing1 ][, innerRing2 ] \u2026_) [ ] indica componenti opzionali Argomenti: outerRing geometria a linea chiusa per l'anello esterno del poligono innerRing geometria a linea chiusa opzionale per anello interno Esempi * geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0))' * geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'),geom_from_wkt('LINESTRING( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1 )'),geom_from_wkt('LINESTRING( 0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0),(0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1),(0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8))'","title":"make_polygon"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_rectangle_3points","text":"Definizione Crea un rettangolo da 3 punti. Sintassi: make_rectangle_3points( point1 , point2 , point3 [,option=0]\u2026) Argomenti: point1 Primo punto point2 Secondo punto point3 Terzo punto option Un argomento facoltativo per costruire il rettangolo. Di default questo valore \u00e8 0. Il valore pu\u00f2 essere 0 (distanza) o 1 (proiettato). Distanza opzione: la seconda distanza \u00e8 uguale alla distanza tra il 2 \u00b0 e il 3 \u00b0 punto. Opzione proiettata: la seconda distanza \u00e8 uguale alla distanza della proiezione perpendicolare del terzo punto sul segmento o della sua estensione. Esempi * geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5), make_point(5, 5), 0))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' * geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5),make_point(5, 3), 1))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' --","title":"make_rectangle_3points"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_regular_polygon","text":"Definizione Crea un poligono regolare. Sintassi: make_regular_polygon( center , radius , number_sides [, circle=0 ]) [ ] indica componenti opzionali Argomenti: center centro del poligono regolare radius secondo punto. Il primo se il poligono regolare \u00e8 inscritto. Il punto intermedio del primo lato se il poligono regolare \u00e8 circoscritto. number_sides Numero di lati del poligono regolare circle Argomento opzionale per la costruzione del poligono regolare. Il valore predefinito \u00e8 0. Il valore pu\u00f2 essere 0 (poligono iscritto) o 1 (poligono circoscritto) Esempi * geom_to_wkt(make_regular_polygon(make_point(0,0), make_point(0,5), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' * geom_to_wkt(make_regular_polygon(make_point(0,0), project(make_point(0,0), 4.0451, radians(36)), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))'","title":"make_regular_polygon"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_square","text":"Definizione Crea un quadrato da una diagonale. Sintassi: make_square( point1 , point2 ) Argomenti: point1 Primo punto della diagonale point2 Secondo punto della diagonale Esempi * geom_to_wkt(make_square( make_point(0,0), make_point(5,5))) \u2192 'Polygon ((0 0, -0 5, 5 5, 5 0, 0 0))' * geom_to_wkt(make_square( make_point(5,0), make_point(5,5))) \u2192 'Polygon ((5 0, 2.5 2.5, 5 5, 7.5 2.5, 5 0))'","title":"make_square"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#make_triangle","text":"Definizione Crea un poligono triangolare Sintassi: make_triangle( point1 , point2 , point3 ) Argomenti: point1 Primo punto del triangolo point2 Secondo punto del triangolo point3 Secondo punto del triangolo Esempi * geom_to_wkt(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10))) \u2192 'Triangle ((0 0, 5 5, 0 10, 0 0))' * geom_to_wkt(boundary(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10)))) \u2192 'LineString (0 0, 5 5, 0 10, 0 0)'","title":"make_triangle"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#minimal_circle","text":"Definizione Restituisce la circonferenza circoscritta minima di una geometria. Rappresenta il cerchio minimo che circoscrive tutte le geometrie presenti in un dataset. Sintassi: minimal_circle( geometry [, segments=36 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi * geom_to_wkt( minimal_circle( geom_from_wkt( 'LINESTRING(0 5, 0 -5, 2 1)' ), 4 ) ) \u2192 Polygon ((0 5, 5 -0, -0 -5, -5 0, 0 5)) * geom_to_wkt( minimal_circle( geom_from_wkt( 'MULTIPOINT(1 2, 3 4, 3 2)' ), 4 ) ) \u2192 Polygon ((3 4, 3 2, 1 2, 1 4, 3 4)) --","title":"minimal_circle"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#nodes_to_points","text":"Definizione Restituisce una geometria multi-punti costituita da ogni nodo della geometria in ingresso. Sintassi: nodes_to_points( geometry [, ignore_closing_nodes=false ]) Argomenti: geometry oggetto geometria ignore_closing_nodes argomento opzionale che specifica se includere i nodi duplicati che chiudono linee o poligoni ad anello. Normalmente false, impostare a true per evitare di includere questi nodi duplicati nella raccolta in uscita. Esempi * geom_to_wkt(nodes_to_points(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiPoint ((0 0),(1 1),(2 2))' * geom_to_wkt(nodes_to_points(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'),true)) \u2192 'MultiPoint ((-1 -1),(4 0),(4 2),(0 2))' --","title":"nodes_to_points"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#num_geometries","text":"Definizione Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: num_geometries( geometry ) Argomenti: geometry raccolta di geometrie Esempi * num_geometries(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))')) \u2192 4","title":"num_geometries"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#num_interior_rings","text":"Definizione Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_interior_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi * num_interior_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 1","title":"num_interior_rings"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#num_points","text":"Definizione Restituisce il numero di vertici in una geometria. Sintassi: num_points( geometry ) Argomenti: geometry una geometria Esempi * num_points($geometry) \u2192 numero di vertici in $geometry","title":"num_points"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#num_rings","text":"Definizione Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi * num_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 2 --","title":"num_rings"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#offset_curve","text":"Definizione Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato. Le distanze sono espresse nel SR di tale geometria. Sintassi: offset_curve( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di offset. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in una linea pi\u00f9 morbida, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi * offset_curve($geometry, 10.5) \u2192 linea scostata a sinistra di 10.5 unit\u00e0 * offset_curve($geometry, -10.5) \u2192 linea scostata a destra di 10.5 unit\u00e0 * offset_curve($geometry, 10.5, segments=16, join=1) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in una curva pi\u00f9 morbida * offset_curve($geometry, 10.5, join=3) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando un'unione smussata Osservazioni La linea \u00e8 scostata a sinistra o destra rispetto al verso della linea:","title":"offset_curve"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#order_parts","text":"Definizione Ordina le parti di una MultiGeometria secondo un dato criterio Sintassi: order_parts( geometry , orderby [, ascending=true ]) [ ] indica componenti opzionali Argomenti: geometry una geometria multi-tipo orderby un espressione stringa che definisce il criterio di ordinamento ascending booleano, True per ascendente, False per discendente Esempi * order_parts(geom_from_wkt('MultiPolygon (((1 1, 5 1, 5 5, 1 5, 1 1)),((1 1, 9 1, 9 9, 1 9, 1 1)))'), 'area($geometry)', False) \u2192 MultiPolygon (((1 1, 9 1, 9 9, 1 9, 1 1)),((1 1, 5 1, 5 5, 1 5, 1 1))) * order_parts(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), '1', True) \u2192 LineString(1 2, 3 2, 4 3)","title":"order_parts"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#oriented_bbox","text":"Definizione Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria. Sintassi: oriented_bbox( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt(oriented_bbox(geom_from_wkt('MULTIPOINT(1 2, 3 4, 3 2)'))) \u2192 'Polygon ((1 2, 2 1, 4 3, 3 4, 1 2))'","title":"oriented_bbox"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#overlaps","text":"Definizione Controlla qualora una geometria si sovrapponga ad un'altra. Restituisce true (1) se le geometrie condividono aree, ma non sono completamente contenute una nell'altra. Sintassi: overlaps( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * overlaps( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 5, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 * overlaps( geom_from_wkt( 'LINESTRING(0 0, 1 1)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 0 Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - overlaps(geometry(get_feature( 'cerchio','id','1')), $geometry) dove: geometry1 \u00e8 geometry(get_feature('cerchio','id','1')) geometry2 \u00e8 $geometry seleziono tutti i comuni overlaps (sovrapposti) al cerchio in figura. PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli sovrapposti con il cerchio). NOT overlaps(geometry(get_feature('cerchio','id','1')),$geometry)","title":"overlaps"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#overlay_contains","text":"Definizione Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Contains\" sottostante, come descritto nella funzione PostGIS ST_CONTAINS . Sintassi: overlay_contains( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_contains('regions') \u2192 true se l'elemento corrente contiene spazialmente una regione * overlay_contains('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente contiene spazialmente una regione con una popolazione maggiore di 10000 * overlay_contains('regions', name) \u2192 un array di nomi, per le regioni contenute nell'elemento corrente * array_to_string(overlay_contains('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni contenute nell'elemento corrente * overlay_contains('regions', name)[0] \u2192 una stringa con il nome della regione contenuta nell'elemento corrente * array_sort(overlay_contains(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenute nell'elemento corrente e con una popolazione superiore a 10000 * overlay_contains(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenute nell'elemento corrente","title":"overlay_contains"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#overlay_crosses","text":"Definizione Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento di un layer target o un array di risultati basati su espressioni per gli elementi nel layer target attraversati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Crosses\" sottostante, come descritto nella funzione PostGIS ST_Crosses . Sintassi: overlay_crosses( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_crosses('regions') \u2192 true se l'elemento corrente attraversa spazialmente una regione * overlay_crosses('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente attraversa spazialmente una regione con una popolazione maggiore di 10000 * overlay_crosses('regions', name) \u2192 un array di nomi, per le regioni attraversate dall'elemento corrente * array_to_string(overlay_crosses('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni attraversate dall'elemento corrente * overlay_crosses('regions', name)[0] \u2192 una stringa con il nome della prima regioni attraversata dall'elemento corrente * array_sort(overlay_crosses(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni attraversate dall'elemento corrente e con una popolazione superiore a 10000 * overlay_crosses(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni attraversate dall'elemento corrente","title":"overlay_crosses"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#overlay_disjoint","text":"Definizione Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer target, o un array di risultati basati su espressione per gli elementi nel layer target che sono disgiunti dall'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Disjoint\", come descritto nella funzione PostGIS ST_Disjoint . Sintassi: overlay_disjoint( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_disjoint('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni * overlay_disjoint('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni con una popolazione maggiore di 10000 * overlay_disjoint('regions', name) \u2192 un array di nomi, per le regioni spazialmente disgiunte dall'elemento corrente * array_to_string(overlay_disjoint('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni spazialmente disgiunte dall'elemento corrente * overlay_disjoint('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente disgiunte dall'elemento corrente * array_sort(overlay_disjoint(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente disgiunte dall'elemento corrente e con una popolazione superiore a 10000 * overlay_disjoint(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente disgiunte dall'elemento corrente","title":"overlay_disjoint"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#overlay_equals","text":"Definizione Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target che sono spazialmente uguali all'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Equals\" sottostante, come descritto nella funzione PostGIS ST_Equals . Sintassi: overlay_equals( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_equals('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente uguale ad una regione * overlay_equals('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente uguale ad una regione con una popolazione maggiore di 10000 * overlay_equals('regions', name) \u2192 un array di nomi, per le regioni spazialmente uguali all'elemento corrente * array_to_string(overlay_equals('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni spazialmente uguali all'elemento corrente * overlay_equals('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente uguale all'elemento corrente * array_sort(overlay_equals(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente uguali all'elemento corrente e con una popolazione superiore a 10000 * overlay_equals(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente uguali all'elemento corrente","title":"overlay_equals"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#overlay_intersects","text":"Definizione Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target intersecati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Intersects\" sottostante, come descritto nella funzione PostGIS ST_INTERSECTS . Sintassi: overlay_intersects( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_intersects('regions') \u2192 true se l'elemento corrente interseca spazialmente una regione * overlay_intersects('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente interseca spazialmente una regione con una popolazione maggiore di 10000 * overlay_intersects('regions', name) \u2192 un array di nomi, per le regioni intersecate dall'elemento corrente * array_to_string(overlay_intersects('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni intersecate dall'elemento corrente * overlay_intersects('regions', name)[0] \u2192 una stringa con il nome della regione intersecata dall'elemento corrente * array_sort(overlay_intersects(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni intersecate dall'elemento corrente e con una popolazione maggiore di 10000 * overlay_intersects(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni intersecate dall'elemento corrente","title":"overlay_intersects"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#overlay_nearest","text":"Definizione Restituisce se l'elemento corrente ha elementi da un layer target entro una data distanza o un array di risultati basati su espressioni per gli elementi nel layer di target entro una distanza dall'elemento corrente. Nota: questa funzione pu\u00f2 essere lenta e consuma molta memoria per layer con molte feature. Sintassi: overlay_contains( layer [, expression ][, filter ][, limit=1 ][, max_distance ][, cache ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); max_distance una distanza opzionale per limitare la ricerca di elementi corrispondenti. Se non impostato, verranno usati tutti gli elementi nel layer di destinazione. cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_nearest('airports') \u2192 true se il layer \"airports\" ha almeno un elemento * overlay_nearest('airports', max_distance:= 5000) \u2192 vero se \u00e8 presente un aeroporto entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente * overlay_nearest('airports', name) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come array * array_to_string(overlay_nearest('airports', name)) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come stringa * overlay_nearest(layer:='airports', expression:= name, max_distance:= 5000) \u2192 il nome dell'aereoporto pi\u00f9 vicino entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, come array * overlay_nearest(layer:='airports', expression:=\"name\", filter:= \"Use\"='Civilian', limit:=3) \u2192 un array di nomi, per un massimo di tre aeroeporti civili pi\u00f9 vicini ordinati per distanza * overlay_nearest(layer:='airports', expression:=\"name\", limit:= -1, max_distance:= 5000) \u2192 un array di nomi, per tutti gli aeroporti entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, ordinato per distanza. Esempio 45: http://hfcqgis.opendatasicilia.it/it/latest/esempi/linea_min_distanza2.html","title":"overlay_nearest"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#overlay_touches","text":"Definizione Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target toccati dall'elemento corrente. Leggi ulteriori informazioni sul predicato GEOS \"Touches\", come descritto nella funzione PostGIS ST_TOUCHES . Sintassi: overlay_touches( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_touches('regions') \u2192 true se l'elemento corrente tocca spazialmente una regione * overlay_touches('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente tocca spazialmente una regione con una popolazione maggiore di 10000 * overlay_touches('regions', name) \u2192 un array di nomi, per le regioni tocacte dall'elemento corrente * string_to_array(overlay_touches('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni toccate dall'elemento corrente * overlay_touches('regions', name)[0] \u2192 una stringa con il nome della regione toccata dall'elemento corrente * array_sort(overlay_touches(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni toccate dall'elemento attuale e con una popolazione superiore a 10000 * overlay_touches(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni toccate dall'elemento corrente","title":"overlay_touches"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#overlay_within","text":"Definizione Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Within\", come descritto nella funzione PostGIS ST_WITHIN . Sintassi: overlay_within( layer [, expression ][, filter ][, limit ][, cache=false ]) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi * overlay_within('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente all'interno di una regione * overlay_within('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente all'interno di una regione con una popolazione maggiore di 10000 * overlay_within('regions', name) \u2192 un array di nomi, per le regioni contenenti l'elemento corrente * array_to_string(overlay_within('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni che contengono l'elemento corrente * overlay_within('regions', name)[0] \u2192 una stringa con il nome della regione che contengono l'elemento corrente * array_sort(overlay_within(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenenti l'elemento corrente e con una popolazione superiore a 10000 * overlay_within(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenenti l'elemento corrente","title":"overlay_within"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#perimeter_1","text":"Definizione Calcola il perimetro di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $perimeter , la quale esegue calcoli ellissoidali basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura della distanza. Sintassi: perimeter( geometry ) Argomenti: geometry oggetto geometria poligono Esempi * perimeter(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))')) \u2192 12.0","title":"perimeter"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#point_n","text":"Definizione Restituisce un nodo specifico da una geometria. Sintassi: point_n( geometry , index ) Argomenti: geometry oggetto geometria index indice del nodo da restituire, dove 1 \u00e8 il primo nodo; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi * geom_to_wkt(point_n(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))'),2)) \u2192 'Point (4 0)' -- Esempi correlati: esempio nro 4 - Come aggiungere la quota Z alla tabella attributi","title":"point_n"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#point_on_surface","text":"Definizione Restituisce un punto garantendo che sia giacente sulla superficie della geometria. Sintassi: point_on_surface( geometry ) Argomenti: geometry una geometria Esempi * point_on_surface($geometry) \u2192 una geometria punto --","title":"point_on_surface"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#pole_of_inaccessibility","text":"Definizione Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie. Questa funzione usa l'algoritmo 'polylabel' (Vladimir Agafonkin, 2016), che \u00e8 un approccio iterativo garantito per trovare il vero polo dell'inaccessibilit\u00e0 all'interno di una tolleranza specificata. Tolleranze pi\u00f9 precise richiedono pi\u00f9 iterazioni e sar\u00e0 necessario pi\u00f9 tempo per il calcolo. Sintassi: pole_of_inaccessibility( geometry , tolerance ) Argomenti: geometry una geometria tolerance distanza massima tra il punto restituito e la vera posizione del polo Esempi * geom_to_wkt(pole_of_inaccessibility( geom_from_wkt('POLYGON((0 1,0 9,3 10,3 3, 10 3, 10 1, 0 1))'), 0.1)) \u2192 'Point(1.55, 1.55)' --","title":"pole_of_inaccessibility"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#project","text":"Definizione Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti. Sintassi: project( point , distance , azimuth [, elevation ]) [ ] indica componenti opzionali Argomenti: point punto di partenza point distanza da proiettare azimuth azimuth in radianti in senso orario, dove 0 corrisponde a nord elevation angolo di inclinazione in radianti Esempi * project(make_point(1, 2), 3, radians(270)) \u2192 Point(-2, 2) --","title":"project"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#relate","text":"Definizione Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie.","title":"relate"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#variabile-di-relazione","text":"Restituisce la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Sintassi: relate( geometry , geometry ) ) Argomenti: geometry una geometria geometry una geometria Esempi * relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ) ) \u2192 'FF1F00102'","title":"Variabile di relazione"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#variabile-di-corrispondenza-del-modello","text":"Testa se la relazione DE-9IM tra due geometrie corrisponde a un pattern specificato: restituisc true Vero, false Falso. Sintassi: relate( geometry , geometry , pattern ) Argomenti: geometry una geometria geometry una geometria pattern Tratteggio DE-9IM da far corrispondere Esempi * relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ), '**1F001**' ) \u2192 Vero Link utili: Wikipedia OpenGeo","title":"Variabile di corrispondenza del modello"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#reverse","text":"Definizione Inverte il verso di una linestring invertendo l'ordine dei sui vertici. Sintassi: reverse( geometry ) Argomenti: geometry una geometria Esempi * geom_to_wkt(reverse(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'LINESTRING(2 2, 1 1, 0 0)' --","title":"reverse"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#rotate","text":"Definizione Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria. Sintassi: rotate( geometry , rotation [, center ]) [ ] indica componenti opzionali Argomenti: geometry una geometria rotation rotazione oraria in gradi center punto centrale di rotazione. Se non specificato, viene utilizzato il centro del perimetro di delimitazione della geometria. Esempi * rotate($geometry, 45, make_point(4, 5)) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al punto (4, 5) * rotate($geometry, 45) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al centro del riquadro di delimitazione","title":"rotate"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#segments_to_lines","text":"Definizione Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso. Sintassi: segments_to_lines( geometry ) Argomenti: geometry oggetto geometria Esempi * geom_to_wkt(segments_to_lines(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiLineString ((0 0, 1 1),(1 1, 2 2))'","title":"segments_to_lines"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#shortest_line","text":"Definizione Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2. La linea risultante partir\u00e0 dalla geometria 1 e finir\u00e0 nella geometria 2. Sintassi: shortest_line( geometry1 , geometry2 ) Argomenti: geometry1 geometria dalla quale cercare la linea pi\u00f9 corta geometry2 geometria verso la quale cercare la linea pi\u00f9 corta Esempi * geom_to_wkt(shortest_line(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 LineString(73.0769 115.384, 100 100) --","title":"shortest_line"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#simplify","text":"Definizione Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker). L'algoritmo mantiene grandi deviazioni nelle geometrie e riduce il numero di vertici in segmenti quasi rettilinei. Sintassi: simplify(simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance deviazione massima dai segmenti rettilinei per i punti da rimuovere Esempi * geom_to_wkt(simplify(geometry:=geom_from_wkt('LineString(0 0, 5 0.1, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)'","title":"simplify"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#simplify_vw","text":"Definizione Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ). L'algoritmo rimuove i vertici che creano piccole aree nelle geometrie, ad esempio picchi stretti o segmenti quasi rettilinei. Sintassi: simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance una misura dell'area massima creata da un nodo per il nodo da rimuovere Esempi * geom_from_wkt('LineString(0 0, 5 0, 5.01 10, 5.02 0, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' --","title":"simplify_vw"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#single_sided_buffer","text":"Definizione Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring. Le distanze sono espresse nel SR di tale geometria. Sintassi: single_sided_buffer( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di buffer. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi * single_sided_buffer($geometry, 10.5) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0 * single_sided_buffer($geometry, -10.5) \u2192 linea bufferizzata a destra di 10.5 unit\u00e0 * single_sided_buffer($geometry, 10.5, segments:=16, join:=1) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in un buffer pi\u00f9 morbido * single_sided_buffer($geometry, 10.5, join:=3) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando un'unione smussata --","title":"single_sided_buffer"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#smooth","text":"Definizione Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria. Sintassi: smooth( geometry , iterations=1 , offset=0.25 , min_length=1 , max_angle=180 ) Argomenti: geometry una geometria iterations Numero di iterazioni di smussatura da applicare. Valori pi\u00f9 alti fanno risultare geometria pi\u00f9 morbide, ma pi\u00f9 complesse. offset valore tra 0 e 0.5 che controlla quanto la geometria smussata segua strettamente la geometria originale. Valori pi\u00f9 piccoli risultano in una lisciatura pi\u00f9 stretta, valori pi\u00f9 grandi risultano in una lisciatura pi\u00f9 larga. min_length lunghezza minima dei segmenti ai quali applicare la smussatura. Questo parametro pu\u00f2 essere usato per evitare di posizionare nodi aggiuntivi eccessivi nei segmenti pi\u00f9 corti della geometria. max_angle angolo massimo (0-180) da applicare al nodo per la smussatura. Abbassando intenzionalmente l'angolo massimo si abbassa l'arrotondamento sugli angoli della geometria. Per esempio, un valore di 80 gradi preserver\u00e0 l'angolo nella geometria. Esempi - geom_to_wkt(smooth(geometry:=geom_from_wkt('LineString(0 0, 5 0, 5 5)'),iterations:=1,offset:=0.2,min_length:=-1,max_angle:=180)) \u2192 'LineString (0 0, 4 0, 5 1, 5 5)'","title":"smooth"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#start_point","text":"Definizione Restituisce il primo nodo di una geometria. Sintassi: start_point( geometry ) Argomenti: geometry oggetto geometria Esempi * geom_to_wkt(start_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (4 0)' Start_point di geometria poligonale: Start_point di geometria lineare:","title":"start_point"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#sym_difference","text":"Definizione Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca. Sintassi: sym_difference( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( sym_difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 8 8)' ) ) ) \u2192 LINESTRING(5 5, 8 8) Espressione -- differenza simmetrica tra le due linee sym_difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz --","title":"sym_difference"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#tapered_buffer","text":"Definizione Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea. Sintassi: tapered_buffer( geometry , start_width , end_width [, segments=8 ]_) [ ] contrassegna componenti opzionali Argomenti: geometry input geometry. Deve essere una (multi) geometria della linea. start_width larghezza del buffer all'inizio della linea, end_width larghezza del buffer alla fine della riga. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi * tapered_buffer(geometry:=geom_from_wkt('LINESTRING(1 2, 4 2)'),start_width:=1,end_width:=2,segments:=8) \u2192 Un buffer rastremato che inizia con un diametro di 1 e termina con un diametro di 2 lungo la geometria della linea. -- QGIS - feature","title":"tapered_buffer"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#touches","text":"Definizione Verifica se una geometria tocca un'altra. Restituisce vero (1) se le geometrie hanno almeno un punto in comune, ma i loro interni non si intersecano. Sintassi: touches( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * touches( geom_from_wkt( 'LINESTRING(5 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 * touches( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 0 Nota bene: -- Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - touches(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','52')) geometry2 \u00e8 $geometry seleziono tutti i comuni touches (toccati) dalla provincia con pk_uid 46 (Siena) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli toccati dalla provincia di Siena). NOT touches(geometry(get_feature( 'province_rt_rt','pk_uid','52')),$geometry)","title":"touches"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#transform","text":"Definizione Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione. Sintassi: transform( geometry , source_auth_id , dest_auth_id ) Argomenti: geometry una geometria source_auth_id ID del SR sorgente dest_auth_id ID del SR destinazione Esempi * geom_to_wkt( transform( $geometry, 'EPSG:2154', 'EPSG:4326' ) ) \u2192 POINT(0 51) --","title":"transform"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#translate","text":"Definizione Restituisce una versione traslata di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: translate( geometry , dx , dy ) Argomenti: geometry una geometria dx delta x geomdyetry delta y Esempi * translate($geometry, 5, 10) \u2192 una geometria dello stesso tipo come l'originale --","title":"translate"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#union","text":"Definizione Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie. Sintassi: union( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * geom_to_wkt( union( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) ) \u2192 MULTIPOINT(4 4, 5 5) Espressione -- unione delle due linee union( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente Prova tu Dati e progetto qgz --","title":"union"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#wedge_buffer","text":"Definizione Restituisce un buffer a forma di cuneo che origina da una geometria del punto. Sintassi: wedge_buffer( geometry , azimuth , width , outer_radius [, inner_radius=0.0 ]) [ ] contrassegna componenti opzionali Argomenti: geometry punto centrale (origine) del buffer. Deve essere una geometria puntuale. azimuth (in gradi) per il centro del cuneo da puntare. width buffer w larghezza (in gradi). Si noti che il cuneo si estender\u00e0 fino a met\u00e0 della larghezza angolare su entrambi i lati della direzione dell'azimut. outer_radius raggio esterno per i buffers inner_radius raggio interno opzionale per i buffers Esempi * wedge_buffer(center:=geom_from_wkt('POINT(1 2)'),azimuth:=90,width:=180,outer_radius:=1) \u2192 Un buffer a forma di cuneo centrato sul punto (1,2), rivolto verso est, con una larghezza di 180 gradi e raggio esterno di 1. --","title":"wedge_buffer"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#within","text":"Definizione Controlla qualora una geometria sia interna ad un'altra. Restituisce 1 (vero) se la geometria a \u00e8 completamente contenuta nella_ geometria b_. Sintassi: within( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi * within( geom_from_wkt( 'POINT( 0.5 0.5)' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ) ) \u2192 1 * within( geom_from_wkt( 'POINT( 5 5 )' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ) ) \u2192 0 Osservazioni Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (Ctrl+F3): - within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) dove: geometry1 \u00e8 $geometry geometry2 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','53')) seleziono tutti i comuni within (contenuti) nella provincia con pk_uid 53 (Grosseto) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Grosseto). NOT within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) Altro esempio con condizione sulle etichette Espressione CASE WHEN within( $geometry, geometry(get_feature('poligono','id',1))) = 1 THEN 'INTERNO' ELSE 'NON INTERNO' END","title":"within"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#x_1","text":"Definizione Restituisce la minima coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale. Sintassi: x( geometry ) Argomenti: geometry una geometria Esempi * x( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 2 * x( $geometry ) \u2192 coordinata x del centroide dell'elemento corrente --","title":"x"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#x_max","text":"Definizione Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_max( geometry ) Argomenti: geometry una geometria Esempi * x_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 4 --","title":"x_max"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#x_min","text":"Definizione Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_min( geometry ) Argomenti: geometry una geometria Esempi * x_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 2 --","title":"x_min"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#y_1","text":"Definizione Restituisce la coordinata y minima di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale. Sintassi: y( geometry ) Argomenti: geometry una geometria Esempi * y( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 5 * y( $geometry ) \u2192 coordinata y del centroide dell'elemento corrente --","title":"y"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#y_max","text":"Definizione Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_max( geometry ) Argomenti: geometry una geometria Esempi * y_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 8 --","title":"y_max"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#y_min","text":"Definizione Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_min( geometry ) Argomenti: geometry una geometria Esempi * y_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 5 --","title":"y_min"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#z","text":"Definizione Restituisce la coordinata z di una geometria puntuale. Sintassi: z( geometry ) Argomenti: geometry una geometria punto Esempi * z( geom_from_wkt( 'POINTZ(2 5 7)' ) ) \u2192 7","title":"z"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#z_max","text":"Definizione Restituisce la coordinata z massima di una geometria. Sintassi: z_max( geometry ) Argomenti: geometry una geometria con z coordinata Esempi * z_max( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 * z_max( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 3 * z_max( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 0 * z_max( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 2 * z_max( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL","title":"z_max"},{"location":"gr_funzioni/geometria/geometria_unico_con_troppi_colori/#z_min","text":"Definizione Restituisce la coordinata z minima di una geometria. Sintassi: z_min( geometry ) Argomenti: geometry una geometria con z coordinata Esempi * z_min( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 * z_min( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 1 * z_min( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2 * z_min( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 -1 * z_min( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL","title":"z_min"},{"location":"gr_funzioni/geometria/geometria_unico_copia/","text":"Gruppo Geometria \u21b5 Questo gruppo contiene funzioni che operano sugli oggetti geometrici es. lunghezza, area. $area \u21b5 Restituisce l'area della geometria corrente. L'area calcolata da questa funzione rispetta sia le impostazioni dell'ellissoide del progetto corrente sia delle unit\u00e0 di misura. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora l'area calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide l'area calcolata sar\u00e0 planimetrica. Sintassi: $area Esempi: Aggiungiamo un campo area_mq e lo popoliamo con la funzione $area : 1. selezionare un layer vettoriale di tipo poligonale; 2. clic sull'icona del calcolatore di campi di default \u00e8 sempre spuntato; digitare il nome del campo area_mq ; il tipo di campo di uscita in questo caso \u00e8 numero decimale (Double) , definire la lunghezza del campo; ricercare la funzione digitando area ; doppio clic sulla funzione $area per inserirlo; clic su OK per eseguire. nell'esempio ho usato un vettore poligonale con EPSG 3004 (sistema proiettato, unit\u00e0 metro): la superficie di ogni elemento \u00e8 in metri quadrati come evidenziato nella tabella attributi Nota bene: Danger se il SR del progetto in cui si sta calcolando l'area ( $area ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) allora l'unit\u00e0 di misura sarebbe il metro, invece se il SR del progetto fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe gradi e quindi poco comprensibile e valori piccoli (0.00001). Osservazioni: in generale $area <> area($geometry) $geometry \u21b5 Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni. Sintassi: $geometry Esempi: * geomToWKT( $geometry ) \u2192 POINT(6 50) * area($geoamtry) \u2192 1234567.89 mq * perimeter($geometry) \u2192 25689.25 m Nota bene: -- Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti. $length \u21b5 Restituisce la lunghezza di una linestring. Se hai bisogno della lunghezza del bordo di un poligono, utilizza invece $perimeter . La lunghezza calcolata da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora la lunghezza calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide la lunghezza calcolata sar\u00e0 planimetrica. Sintassi: $length Esempi: $length \u2192 42.4711 Nota bene: Come evidenziano nella definizione della funzione, $length calcola la lunghezza rispettando le impostazioni di progetto: Occorre cambiare entrambe le impostazioni, sia quelle dell'ellissoide \u2192 'None/Planimetric' sia le Unit\u00e0 di misura per le distanze' \u2192 Gradi Queste modofiche non valgono per l'etichettatura, la lunghezza sar\u00e0 quella relativa alla geometria e quindi al suo SR. Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti. $perimeter \u21b5 Restituisce la lunghezza del perimetro della geometria corrente. Il perimetro calcolato da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora il perimetro calcolato sar\u00e0 ellisoidico altrimenti se non \u00e8 stato impostato alcun ellissoide il perimetro calcolato sar\u00e0 planimetrico. Sintassi: $perimeter Esempi: $perimeter \u2192 2545897.26 Nota bene: Nota Si utilizza SOLO per i poligoni, nel caso di feature lineari \\$length Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti. $x \u21b5 Restituisce la coordinata x della geometria corrente. Sintassi: $x Esempi: $x \u2192 12.2568971 Nota bene: La funzione $x restituisce la coordinata x della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Osservazioni: Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni ed: x($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon) $x_at \u21b5 Recupera una coordinata x per la geometria dell'elemento corrente. Sintassi: $x_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi: $x_at(1) \u2192 12.6882843 Nota bene: -- Osservazioni: Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice. $y \u21b5 Restituisce la coordinata y della geometria corrente. Sintassi: $y Esempi: $y \u2192 12.2568971 Nota bene: La funzione $y restituisce la coordinata y della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Osservazioni: Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni es: y($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon) $y_at \u21b5 Recupera una coordinata y per la geometria dell'elemento corrente. Sintassi: $y_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi: $y_at(1) \u2192 2 Nota bene: -- Osservazioni: Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice. angle_at_vertex \u21b5 Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: angle_at_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0 Esempi: angle_at_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 45.0 Nota bene: Il primo ed ultimo vertice di una lineastring aperta la funzione restituisce il valore dell'angolo e non la bisettrice. Osservazioni: -- area \u21b5 Restituisce l'area di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura dell'area restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $area, la quale esegue calcoli ellisoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura dell'area. Sintassi: area( geometry ) Argomenti: geometry oggetto geometria poligono Esempi: Nota bene: Occhio Se il SR del layer in cui si sta calcolando l'area ( area() ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) l'unit\u00e0 di misura sarebbe il metro, invece se il SR del layer fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe in gradi e quindi poco comprensibile e valori piccoli. Osservazioni: in generale area($geometry) <> $area Azimuth \u21b5 Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi: azimuth( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: * degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 * degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689 Nota bene: Azimuth per definizione restituisce un angolo in radianti, per trasformarlo in gradi usare la funzione degrees() boundary \u21b5 Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria). Per esempio, una geometria poligonale avr\u00e0 un confine costituito dalle linee di ogni anello nel poligono. Alcuni tipi di geometrie non hanno confini, es collezioni di punti o geometrie e pertanto verr\u00e0 restituito null. Sintassi: boundary( geometry ) Argomenti: geometry una geometria Esempi: - geom_to_wkt(boundary(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'LineString(1 1,0 0,-1 1,1 1)' - geom_to_wkt(boundary(geom_from_wkt('LineString(1 1,0 0,-1 1)'))) \u2192 'MultiPoint ((1 1),(-1 1))' Nota bene: -- Osservazioni: funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator bounds \u21b5 Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds( geometry ) Argomenti: geometry una geometria Esempi: - bounds($geometry) \u2192 perimetro di delimitazione dell'elemento geometrico corrente - geom_to_wkt(bounds(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'Polygon ((-1 0, 1 0, 1 1, -1 1, -1 0))' Nota bene: -- Osservazioni: funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator bounds_height \u21b5 Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_height( geometry ) Argomenti: geometry una geometria Esempi: - bounds_height($geometry) \u2192 altezza del perimetro di delimitazione dell'elemento geometrico corrente - bounds_height(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')) \u2192 1 Nota bene: -- Osservazioni: La funzione restituisce un numero che corrisponde all'altezza del rettangolo di ingombro di una geometria. bounds_width \u21b5 Restituisce la larghezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_width( geometry ) Argomenti: geometry una geometria Esempi: bounds_width($geometry) \u2192 larghezza del perimetro di delimitazione di $geometry Nota bene: -- Osservazioni: La funzione restituisce un numero che corrisponde alla larghezza del rettangolo di ingombro di una geometria. buffer \u21b5 Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita. I calcoli vengono effettuati nel sistema di riferimento spaziale della geometria. Sintassi: buffer( geometry , distance [, segments=8 ]) Argomenti: geometry una geometria distance distanza buffer nelle unit\u00e0 del layer segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. Esempi: buffer($geometry, 10.5) \u2192 poligono di $geometry bufferizzato di 10.5 unit\u00e0 Nota bene: Utilizzando SR proiettati l'unit\u00e0 di misura \u00e8 il metro, mentre, per SR geografici \u00e8 il grado, quindi attenzione al valore della distanza. Osservazioni: La Funzione restituisce SEMPRE un poligono sia per geometry POINT , LINESTRING o POLYGON buffer_by_m \u21b5 Crea un buffer lungo una geometria linestring in cui il diametro del buffer varia in base ai valori m nei vertici della linea. Sintassi: buffer_by_m( geometry , segments ) Argomenti: geometry la geometria deve essere una (multi) geometria linestring con valori m. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi: * buffer_by_m(geometry:=geom_from_wkt('LINESTRINGM(1 2 0.5, 4 2 0.2)'),segments:=8) \u2192 Un buffer di larghezza variabile che inizia con un diametro di 0,5 e termina con un diametro di 0,2 lungo la linea. relativa all'esempio di sopra: Nota bene: -- Osservazioni: QGIS - feature centroid \u21b5 Restituisce il centro geometrico di una geometria. Sintassi: centroid( geometry ) Argomenti: geometry una geometria Esempi: centroid($geometry) \u2192 una geometria punto Nota bene: -- Osservazioni: La Funzione restituisce SEMPRE una geometry POINT close_line \u21b5 Restituisce una linestring chiusa della linestring di input aggiungendo il primo punto alla fine della linea, se non \u00e8 gi\u00e0 chiusa. Se la geometria non \u00e8 una linestring o una MultiLinestring, il risultato sar\u00e0 NULL. Sintassi: close_line( geometry ) Argomenti: geometry una geometria linestring Esempi: geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1, 0 0)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) Nota bene: -- Osservazioni: -- closest_point \u21b5 Restituisce il punto sulla geometria1 che \u00e8 pi\u00f9 vicino alla geometria2. Sintassi: closest_point( geometry1 , _ geometry2 ) Argomenti: geometry1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry geometria dalla quale cercare il punto pi\u00f9 vicino Esempi: geom_to_wkt(closest_point(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 Point(73.0769 115.384) Nota bene: -- Osservazioni: Utilizzando il geometry generator per i temi (il layer strade \u00e8 una unica feature): closest_point( geometry(get_feature('strade', 'reg',19)),$geometry) Gif animata: geometry 1 \u00e8 la rete stradale; geometry 2 sono i punti; in rosso i closestpoint collect_geometries \u21b5 Raccoglie un set di geometrie in un oggetto geometria multiparte. Variante geometry \u21b5 Sintassi: collect_geometries( geometry1 , geometry2 ...) Argomenti: geometry geometria sulla quale cercare il punto pi\u00f9 vicino Esempi: geom_to_wkt(collect_geometries(make_point(1,2), make_point(3,4), make_point(5,6))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Variante con array \u21b5 Sintassi: collect_geometries( array ) Argomenti: array array con oggetti geometrici Esempi: geom_to_wkt(collect_geometries(array(make_point(1,2), make_point(3,4), make_point(5,6)))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Nota bene: -- Osservazioni: combine \u21b5 Restituisce la combinazione di due geometrie. Sintassi: combine( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 2 1)' ) ) ) \u2192 MULTILINESTRING((4 4, 2 1), (3 3, 4 4), (4 4, 5 5)) geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 6 6, 2 1)' ) ) ) \u2192 LINESTRING(3 3, 4 4, 6 6, 2 1) Nota bene: -- Osservazioni: -- contains \u21b5 Verifica se una geometria ne contiene un'altra. Restituisce vero se e solo se nessun punto di geometry2 giace all'esterno di geometry1 e almeno un punto dell'interno di geometry2 si trova all'interno di geometry1. Sintassi: contains( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'POINT(0.5 0.5 )' ) ) \u2192 vero contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry b \u00e8 $geometry seleziono tutti i comuni contains (contenuti) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Lucca). NOT contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) convex_hull \u21b5 Restituisce il poligono convesso di una geometria. Rappresenta la minima geometria convessa che racchiude tutte le geometria contenute nell'insieme. Sintassi: convex_hull( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt( convex_hull( geom_from_wkt( 'LINESTRING(3 3, 4 4, 4 10)' ) ) ) \u2192 POLYGON((3 3,4 10,4 4,3 3)) Nota bene: -- Osservazioni: La funzione restituisce sempre un poligono. crosses \u21b5 Verifica se una geometria interseca un'altra. Restituisce vero (1) se le geometrie interessate hanno qualche, ma non tutti, punto interno in comune. Sintassi: crosses( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: crosses( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero crosses( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry a \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry b \u00e8 $geometry seleziono tutti i comuni crosses (attraversati) dal fiume ARNO PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli attraversati dal fiume ARNO). NOT crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) difference \u21b5 Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b . Sintassi: difference( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(4 4, 5 5) Espressione: -- differenza linea a - linea b difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a -- differenza linea b - linea a difference( make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a prova tu: Dati e progetto qgz Nota bene: -- Osservazioni: -- Esempio di sopra: disjoint \u21b5 Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune. Sintassi: disjoint( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria * geometry2 una geometria Esempi: disjoint( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero disjoint( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'POINT(4 4)' )) \u2192 falso Nota bene: Vero = 1; Falso= 0 Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: disjoint(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni disjoint (disgiunti) dal fiume ARNO distance \u21b5 Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate. Sintassi: distance( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: Nota bene: -- Osservazioni: -- distance_to_vertex \u21b5 Restituisce la distanza lungo una geometria ad un vertice specificato. Sintassi: distance_to_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi: distance_to_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 10.0 Nota bene: -- Osservazioni: -- esempio di sopra: end_point \u21b5 Restituisce l'ultimo nodo di una geometria. Sintassi: end_point( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(end_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (0 2)' Nota bene: -- Osservazioni: -- End_point di geometria poligonale: End_point di geometria lineare: extend \u21b5 Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata. Le linee sono estese usando la direzione di immersione del primo e dell'ultimo segmento nella linea. Le distanze sono espresse nel SR di tale geometria. Sintassi: extend( geometry , start_distance , end_distance ) Argomenti: geometry una geometria (multi)linestring start_distance distanza alla quale estendere l' inizio della linea end_distance distanza alla quale estendere la fine della linea. Esempi: * geom_to_wkt(extend(geom_from_wkt('LineString(0 0, 1 0, 1 1)'),1,2)) \u2192 'LineString (-1 0, 1 0, 1 3)' * geom_to_wkt(extend(geom_from_wkt('MultiLineString((0 0, 1 0, 1 1), (2 2, 0 2, 0 5))'),1,2)) \u2192 'MultiLineString ((-1 0, 1 0, 1 3),(3 2, 0 2, 0 7))' Nota bene: -- Osservazioni: -- exterior_ring \u21b5 Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 NULL. Sintassi: exterior_ring( geometry ) Argomenti: geometry una geometria poligono Esempi: geom_to_wkt(exterior_ring(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2, 0.1, 0.1 0.1))'))) \u2192 'LineString (-1 -1, 4 0, 4 2, 0 2, -1 -1)' Nota bene: -- Osservazioni: -- extrude \u21b5 Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y. Sintassi: extrude( geometry , x , y ) Argomenti: geometry una geometria poligono x estensione x, valore numerico y estensione y, valore numerico Esempi: extrude(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), 1, 2) \u2192 Polygon ((1 2, 3 2, 4 3, 5 5, 4 4, 2 4, 1 2)) extrude(geom_from_wkt('MultiLineString((1 2, 3 2), (4 3, 8 3)'), 1, 2) \u2192 MultiPolygon (((1 2, 3 2, 4 4, 2 4, 1 2)),((4 3, 8 3, 9 5, 5 5, 4 3))) Nota bene: -- Osservazioni: Nell'esempio ho utilizzato la funzione boundary() perch\u00e9 la geometria di ingresso deve essere lineare. flip_coordinates \u21b5 Restituisce una copia della geometria con le coordinate x e y scambiate. Utile per riparare le geometrie che hanno invertito i valori di latitudine e longitudine. Sintassi: flip_coordinates( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(flip_coordinates(make_point(1, 2))) \u2192 Point (2 1) Nota bene: -- Osservazioni: -- Esempio con vettore poligonale (aggiorno la geometry): il flip \u00e8 da usare con cautela perch\u00e9 cambia radicalemnte la posizione del vettore force_rhr \u21b5 Forza una geometria a rispettare la regola della mano destra, in cui l'area delimitata da un poligono si trova a destra del limite. In particolare, l'anello esterno \u00e8 orientato in senso orario e l'interno in senso antiorario. Sintassi: force_rhr( geometry ) Argomenti: geometry una geometria. Qualsiasi geometria non poligonale viene restituita invariata. Esempi: geom_to_wkt(force_rhr(geometry:=geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'))) \u2192 Polygon ((-1 -1, 0 2, 4 2, 4 0, -1 -1)) Nota bene: -- Osservazioni: Ecco un esempio pratico della funzione (presente anche nelgli strumenti fi processing) ovvero un poligono disegnato in senso antiorario viene forzato in senso orario e l'etichettature \u00e8 visibile correttamente. geom_from_gml \u21b5 Restituisce una geometria da una rappresentazione GML di una geometria. Sintassi: geom_from_gml( _gml ) Argomenti: gml Rappresentazione GML di una geometria come stringa Esempi: geom_to_wkt(geom_from_gml('<gml:LineString srsName=\"EPSG:4326\"><gml:coordinates>4,4 5,5 6,6</gml:coordinates></gml:LineString>') ) \u2192 'LineString (4 4, 5 5, 6 6)' Nota bene: -- Osservazioni: geom_from_wkb \u21b5 Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB). Sintassi: geom_from_wkb( binari ) Argomenti: binari Rappresentazione binaria ben nota (WKB) di una geometria (come BLOB binario) Esempi: geom_from_wkb( geom_to_wkb( make_point(4,5) ) ) \u2192 un oggetto geometria punto Nota bene: -- Osservazioni: -- geom_from_wkt \u21b5 Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT). Sintassi: geom_from_wkt_ text _) Argomenti: text Rappresentazione Well-Known Text (WKT) di una geometria Esempi: geom_from_wkt( 'POINT(4 5)' ) \u2192 un oggetto geometria Nota bene: -- Osservazioni: geom_to_wkb \u21b5 Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario. Sintassi: geom_to_wkb( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkb( $geometry ) \u2192 BLOB binario contenente un oggetto geometria Nota bene: -- Osservazioni: geom_to_wkt \u21b5 Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR Sintassi: geom_to_wkt( geometry ) Argomenti: geometry una geometria Esempi: * geom_to_wkt( make_point(6, 50) ) \u2192 'POINT(6 50)' * geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'POINT(0 0.66666667)' * geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')), 2) \u2192 'POINT(0 0.67)' Nota bene: -- Osservazioni: geometry \u21b5 Restituisce la geometria di un elemento. Sintassi: geometry( feature ) Argomenti: feature un oggetto elemento Esempi: geom_to_wkt( geometry( get_feature( layer, attributeField, value ) ) ) \u2192 'POINT(6 50)' intersects( $geometry, geometry( get_feature( layer, attributeField, value ) ) ) \u2192 vero Nota bene: -- Osservazioni: -- Usando il Select by Expression : selezionare le feature di un layer (quartieri) in funzione di altro layer (test): geometry_n \u21b5 Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: geometry_n( geometry , index ) Argomenti: geometry raccolta di geometrie index indice della geometria da restituire, dove 1 \u00e8 la prima geometria nella raccolta Esempi: geom_to_wkt(geometry_n(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))'),3)) \u2192 'Point (1 0)' Nota bene: -- Osservazioni: hausdorff_distance \u21b5 Restituisce la distanza di Hausdorff tra due geometrie. Questa \u00e8 in sostanza una misura di come le 2 geometrie sono simili o dissimili: una distanza pi\u00f9 bassa indica geometrie pi\u00f9 simili. La funzione pu\u00f2 essere eseguita con un argomento opzionale di densificazione della frazione. Se non viene specificato, viene utilizzata una approssimazione alla distanza standard di Hausdorff. Questa approssimazione \u00e8 esatta o abbastanza vicina per un grande sottoinsieme di casi utili. Esempi di questi sono: calcolare la distanza tra Linestrings che sono approssimativamente paralleli tra loro e sono sostanzialmente uguali in lunghezza. Ci\u00f2 si verifica nelle verifica di reti lineari. testare la somiglianza di geometrie. Se l'approssimazione predefinita fornita da questo metodo \u00e8 insufficiente, specifica l'argomento opzionale di densificazione della frazione. Specificando questo argomento si esegue una densificazione del segmento prima di calcolare la distanza Hausdorff discreta. Il parametro imposta la frazione con cui densificare ogni segmento. Ogni segmento sar\u00e0 suddiviso in un numero di subsegmenti di uguale lunghezza, la cui frazione della lunghezza totale \u00e8 la pi\u00f9 vicina alla frazione data. Riducendo il parametro di densificazione della frazione, la distanza restituita si avviciner\u00e0 alla vera distanza Hausdorff per le geometrie. Sintassi: hausdorff_distance( geometry1 , geometry2 , densify_fraction ) Argomenti: geometry1 una geometria geometry2 una geometria densify_fraction quantit\u00e0 di densificazione della frazione Esempi: hausdorff_distance( geometry1:= geom_from_wkt('LINESTRING (0 0, 2 1)'),geometry2:=geom_from_wkt('LINESTRING (0 0, 2 0)')) \u2192 2 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)')) \u2192 14.142135623 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)'),0.5) \u2192 70.0 Nota bene: -- Osservazioni: -- Nel caso di geometrie puntuali la hausdorff_distance coincide con la funzione distance , segue un esempio: format_number( hausdorff_distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' || '\\n'|| format_number( distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' In questo esempio confronto due layer: il numero pi\u00f9 piccolo indica il poligono pi\u00f9 simile a al poligono pi\u00f9 grande. inclination \u21b5 Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b . Sintassi: inclination( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 Nota bene: -- Osservazioni: -- interior_ring_n \u21b5 Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono. Sintassi: interior_ring_n( geometry , index ) Argomenti: geometry geometria poligono index Indice dell'anello interno da restituire, dove 1 \u00e8 il primo anello interno Esempi: geom_to_wkt(interior_ring_n(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1),(-1 -1, 4 0, 4 2, 0 2, -1 -1))'),1)) \u2192 'LineString (-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))' Nota bene: -- Osservazioni: Restituisce una lineastring!!! intersection \u21b5 Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie. Sintassi: intersection( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: * geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 'LINESTRING(3 3, 4 4)' * geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'MULTIPOINT(3.5 3.5, 4 5)' ) ) ) \u2192 'POINT(3.5 3.5)' Espressione: -- intersezione tra le due linee intersection( make_line( -- linea a start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea b start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente prova tu: Dati e progetto qgz Nota bene: -- Osservazioni: -- intersects \u21b5 Controlla qualora una geometria ne interseca un'altra. Restituisce true (1) se la geometrie si intersecano spazialmente (condividono una porzione di spazio) altrimenti da false (0). Sintassi: intersects( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: intersects( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 falso Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry b \u00e8 $geometry seleziono tutti i comuni intersects (interseca) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli intersecati con la provincia di Lucca). NOT intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) intersects_bbox \u21b5 Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria. Restituisce vero (1) se le geometrie intersecano spazialmente il perimetro di delimitazione definito e falso (0) se non lo intersecano. Sintassi: intersects_bbox( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: intersects_bbox( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects_bbox( geom_from_wkt( 'POINT(6 5)' ), geom_from_wkt( 'POLYGON((3 3, 4 4, 5 5, 3 3))' ) ) \u2192 falso Nota bene: -- Osservazioni: is_closed \u21b5 Restituisce vero (true) se una linestring \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso (false) se una linestring non \u00e8 chiusa. Se la geometria non \u00e8 una linestring, il risultato sar\u00e0 NULL. Sintassi: is_closed( geometry ) Argomenti: geometry una geometria linestring Esempi: is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero Nota bene: -- Osservazioni: -- is_empty \u21b5 Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null . Sintassi: is_empty( geometry ) Argomenti: geometry una geometria Esempi: is_empty(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty(geom_from_wkt('POINT EMPTY')) \u2192 vero Nota bene: -- Osservazioni: is_empty_or_null \u21b5 Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null_or_null . Sintassi: is_empty_or_null( geometry ) Argomenti: geometry una geometria Esempi: is_empty_or_null(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty_or_null(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty_or_null(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty_or_null(geom_from_wkt('POINT EMPTY')) \u2192 vero Nota bene: -- Osservazioni: is_multipart \u21b5 Restituisce vero se la geometria \u00e8 di tipo Multi. Sintassi: is_multipart( geometry ) Argomenti: geometry una geometria Esempi: is_multipart(geom_from_wkt('MULTIPOINT ((0 0),(1 1),(2 2))')) \u2192 vero is_multipart(geom_from_wkt('POINT (0 0)')) \u2192 falso Nota bene: -- Osservazioni: is_valid \u21b5 Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole OGC Sintassi: is_valid( geometry ) Argomenti: geometry una geometria Esempi: is_valid(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero is_valid(geom_from_wkt('LINESTRING(0 0)')) \u2192 falso Nota bene: -- Osservazioni: length \u21b5 Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring. Variabile stringa \u21b5 Restituisce il numero di caratteri contenuti in una stringa. Sintassi: length( string ) Argomenti: string stringa della quale calcolare la lunghezza Esempi: length('hello') \u2192 5 Variabile geometria \u21b5 Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length , la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi: length( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4.0 Nota bene: -- Osservazioni: length3D \u21b5 Calcola la lunghezza 3D di un oggetto linea geometrica. Se la geometria non \u00e8 un oggetto linea 3D, restituisce la sua lunghezza 2D. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di questa geometria, e le unit\u00e0 della lunghezza restituita corrisponderanno alle unit\u00e0 per l'SR. Questo differisce dai calcoli eseguiti dalla funzione \\$length , che eseguir\u00e0 calcoli ellissoidali basati sulle impostazioni dell'ellissoide e dell'unit\u00e0 di distanza del progetto. Sintassi: length3D( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length3D(geom_from_wkt('LINESTRINGZ(0 0 0, 3 0 4)')) \u2192 5.0 Nota bene: -- Osservazioni: line_interpolate_angle \u21b5 Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: line_interpolate_angle( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea a cui interpolare l'angolo Esempi: line_interpolate_angle(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5) \u2192 90.0 Nota bene: -- Osservazioni: -- line_interpolate_point \u21b5 Restituisce il punto interpolato ad una specifica distanza lungo una geometria di tipo linestring. Sintassi: line_interpolate_point( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea Esempi: geom_to_wkt(line_interpolate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5)) \u2192 'Point (4 0)' Nota bene: -- Osservazioni: -- line_locate_point \u21b5 Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata. Sintassi: line_locate_point( geometry , point ) Argomenti: geometry una geometria di tipo linestring point geometria puntuale per cui ricercare la posizione pi\u00f9 vicina sulla linestring Esempi: line_locate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),point:=geom_from_wkt('Point(5 1)')) \u2192 5.0 Nota bene: -- Osservazioni: -- line_merge \u21b5 Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola. Questa funzione restituir\u00e0 NULL se la geometria considerata non \u00e8 una LineString/MultiLineString. Sintassi: line_merge( geometry ) Argomenti: geometry una geometria di tipo LineString/MultiLineString Esempi: geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(1 1, 2 2))'))) \u2192 'LineString(0 0,1 1,2 2)' geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(11 1, 21 2))'))) \u2192 'MultiLineString((0 0, 1 1),(11 1, 21 2)' Nota bene: -- Osservazioni: -- line_substring \u21b5 Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate (misurata dall'inizio della linea). I valori Z e M sono linearmente interpolati dai valori esistenti. Sintassi: line_substring( geometry , start_distance , end_distance ) Argomenti: geometry una geometria lineare o curva start_distance distanza all'inizio della sottostringa end_distance distanza alla fine della sottostringa Esempi: geom_to_wkt(line_substring(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),start_distance:=2,end_distance:=6)) \u2192 'LineString (2 0,6 0)' line_substring( $geometry, $length *.1,$length *.6) \u2192 <geometria: LineString> Nota bene: -- Osservazioni: -- Funzione utile per la tematizzazione m \u21b5 Restituisce il valore m di una geometria puntuale. Sintassi: m( geometry ) Argomenti: geometry una geometria punto Esempi: ( geom_from_wkt( 'POINTM(2 5 4)' ) ) \u2192 4 Nota bene: -- Osservazioni: m_max \u21b5 Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_max( geometry ) Argomenti: geometry una geometria contenente m valori Esempi: m_max( make_point_m( 0,0,1 ) ) \u2192 1 m_max(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 2 Nota bene: -- Osservazioni: -- m_min \u21b5 Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_min( geometry ) Argomenti: geometry una geometria contenente m valori Esempi: m_min( make_point_m( 0,0,1 ) ) \u2192 1 m_min(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 0 Nota bene: -- Osservazioni: main_angle \u21b5 Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria. Sintassi: main_angle( geometry ) Argomenti: geometry una geometria poligono Esempi: main_angle(geom_from_wkt('Polygon ((321577 129614, 321581 129618, 321585 129615, 321581 129610, 321577 129614))')) \u2192 38.66 Nota bene: -- Osservazioni: make_circle \u21b5 Crea un poligono circolare. Sintassi: make_circle( center , radius [, segments=36 ]) [ ] indica componenti opzionali Argomenti: center centro del cerchio radius raggio del cerchio segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt(make_circle(make_point(10,10), 5, 4)) \u2192 'Polygon ((10 15, 15 10, 10 5, 5 10, 10 15))' geom_to_wkt(make_circle(make_point(10,10,5), 5, 4)) \u2192 'PolygonZ ((10 15 5, 15 10 5, 10 5 5, 5 10 5, 10 15 5))'' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 4)) \u2192 'PolygonZM ((10 15 5 30, 15 10 5 30, 10 5 5 30, 5 10 5 30, 10 15 5 30))' Nota bene: -- Osservazioni: -- make_ellipse \u21b5 Crea un poligono ellittico. Sintassi: make_ellipse( center , semi_major_axis , semi_minor_axis , azimuth [, segments=36 ]) Argomenti: center centro dell'ellisse semi_major_axis semi-asse maggiore dell'ellisse semi_minor_axis semi-asse minore dell'ellisse azimuth orientazione dell'ellisse segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt(make_ellipse(make_point(10,10), 5, 2, 90, 4)) \u2192 'Polygon ((15 10, 10 8, 5 10, 10 12, 15 10)) geom_to_wkt(make_ellipse(make_point(10,10,5), 5, 2, 90, 4)) \u2192 'PolygonZ ((15 10 5, 10 8 5, 5 10 5, 10 12 5, 15 10 5))' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 2, 90, 4)) \u2192 'PolygonZM ((15 10 5 30, 10 8 5 30, 5 10 5 30, 10 12 5 30, 15 10 5 30))' Nota bene: -- Osservazioni: -- make_line \u21b5 Crea una geometria linea da una serie di geometrie punto. Sintassi: make_line( point1 , point2 , \u2026_) Argomenti: point una geometria punto Esempi: geom_to_wkt(make_line(make_point(2,4),make_point(3,5))) \u2192 'LineString (2 4, 3 5)' geom_to_wkt(make_line(make_point(2,4),make_point(3,5),make_point(9,7))) \u2192 'LineString (2 4, 3 5, 9 7)' Array variant \u21b5 I vertici di linea sono specificati come una matrice di punti. Sintassi: make_line( array ) Argomenti: array Matrice di punti Esempi:o geom_to_wkt(make_line(array(make_point(2,4),make_point(3,5),make_point(9,7)))) \u2192 'LineString (2 4, 3 5, 9 7)' Espressione usata make_line( array(geometry( get_feature_by_id('fontanelle_Palermo',$id))), array(geometry( get_feature_by_id('fontanelle_Palermo',not $id%2))) ) Nota bene: -- Osservazioni: -- make_point \u21b5 Crea una geometria punto da valori x ed y (e opzionalmente z ed m). Sintassi: make_point( x , y , z , m ) Argomenti: x coordinata x del punto y coordinata y del punto z coordinata opzionale z del punto m valore m del punto Esempi: geom_to_wkt(make_point(2,4,6,8)) \u2192 'PointZM (2 4 6 8)' Nota bene: -- Osservazioni: make_point_m \u21b5 Crea una geometria punto da una coordinata x, y ed un valore m. Sintassi: make_point_m_( x , y , m ) Argomenti: x coordinata x del punto y coordinata y del punto m valore m del punto Esempi: geom_to_wkt(make_point_m(2,4,6)) \u2192 'PointM (2 4 6)' Nota bene: -- Osservazioni: make_polygon \u21b5 Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne. Sintassi: make_polygon( outerRing [, innerRing1 ][, innerRing2 ] \u2026_) [ ] indica componenti opzionali Argomenti: outerRing geometria a linea chiusa per l'anello esterno del poligono innerRing geometria a linea chiusa opzionale per anello interno Esempi: * geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0))' * geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'),geom_from_wkt('LINESTRING( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1 )'),geom_from_wkt('LINESTRING( 0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0),(0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1),(0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8))' Nota bene: -- Osservazioni: make_rectangle_3points \u21b5 Crea un rettangolo da 3 punti. Sintassi: make_rectangle_3points( point1 , point2 , point3 [,option=0]\u2026) Argomenti: point1 Primo punto point2 Secondo punto point3 Terzo punto option Un argomento facoltativo per costruire il rettangolo. Di default questo valore \u00e8 0. Il valore pu\u00f2 essere 0 (distanza) o 1 (proiettato). Distanza opzione: la seconda distanza \u00e8 uguale alla distanza tra il 2 \u00b0 e il 3 \u00b0 punto. Opzione proiettata: la seconda distanza \u00e8 uguale alla distanza della proiezione perpendicolare del terzo punto sul segmento o della sua estensione. Esempi: geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5), make_point(5, 5), 0))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5),make_point(5, 3), 1))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' Nota bene: -- Osservazioni: -- make_regular_polygon \u21b5 Crea un poligono regolare. Sintassi: make_regular_polygon( center , radius , number_sides [, circle=0 ]) [ ] indica componenti opzionali Argomenti: center centro del poligono regolare radius secondo punto. Il primo se il poligono regolare \u00e8 inscritto. Il punto intermedio del primo lato se il poligono regolare \u00e8 circoscritto. number_sides Numero di lati del poligono regolare circle Argomento opzionale per la costruzione del poligono regolare. Il valore predefinito \u00e8 0. Il valore pu\u00f2 essere 0 (poligono iscritto) o 1 (poligono circoscritto) Esempi: geom_to_wkt(make_regular_polygon(make_point(0,0), make_point(0,5), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' geom_to_wkt(make_regular_polygon(make_point(0,0), project(make_point(0,0), 4.0451, radians(36)), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' Nota bene: -- Osservazioni: -- make_square \u21b5 Crea un quadrato da una diagonale. Sintassi: make_square( point1 , point2 ) Argomenti: point1 Primo punto della diagonale point2 Secondo punto della diagonale Esempi: geom_to_wkt(make_square( make_point(0,0), make_point(5,5))) \u2192 'Polygon ((0 0, -0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_square( make_point(5,0), make_point(5,5))) \u2192 'Polygon ((5 0, 2.5 2.5, 5 5, 7.5 2.5, 5 0))' Nota bene: -- Osservazioni: make_triangle \u21b5 Crea un poligono triangolare Sintassi: make_triangle( point1 , point2 , point3 ) Argomenti: point1 Primo punto del triangolo point2 Secondo punto del triangolo point3 Secondo punto del triangolo Esempi: geom_to_wkt(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10))) \u2192 'Triangle ((0 0, 5 5, 0 10, 0 0))' geom_to_wkt(boundary(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10)))) \u2192 'LineString (0 0, 5 5, 0 10, 0 0)' Nota bene: -- Osservazioni: minimal_circle \u21b5 Restituisce la circonferenza circoscritta minima di una geometria. Rappresenta il cerchio minimo che circoscrive tutte le geometrie presenti in un dataset. Sintassi: minimal_circle( geometry [, segments=36 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt( minimal_circle( geom_from_wkt( 'LINESTRING(0 5, 0 -5, 2 1)' ), 4 ) ) \u2192 Polygon ((0 5, 5 -0, -0 -5, -5 0, 0 5)) geom_to_wkt( minimal_circle( geom_from_wkt( 'MULTIPOINT(1 2, 3 4, 3 2)' ), 4 ) ) \u2192 Polygon ((3 4, 3 2, 1 2, 1 4, 3 4)) Nota bene: -- Osservazioni: -- nodes_to_points \u21b5 Restituisce una geometria multi-punti costituita da ogni nodo della geometria in ingresso. Sintassi: nodes_to_points( geometry [, ignore_closing_nodes=false ]) Argomenti: geometry oggetto geometria ignore_closing_nodes argomento opzionale che specifica se includere i nodi duplicati che chiudono linee o poligoni ad anello. Normalmente false, impostare a true per evitare di includere questi nodi duplicati nella raccolta in uscita. Esempi: geom_to_wkt(nodes_to_points(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiPoint ((0 0),(1 1),(2 2))' geom_to_wkt(nodes_to_points(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'),true)) \u2192 'MultiPoint ((-1 -1),(4 0),(4 2),(0 2))' Nota bene: -- Osservazioni: -- num_geometries \u21b5 Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: num_geometries( geometry ) Argomenti: geometry raccolta di geometrie Esempi: num_geometries(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))')) \u2192 4 Nota bene: -- Osservazioni: num_interior_rings \u21b5 Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_interior_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi: num_interior_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 1 Nota bene: -- Osservazioni: -- num_points \u21b5 Restituisce il numero di vertici in una geometria. Sintassi: num_points( geometry ) Argomenti: geometry una geometria Esempi: num_points($geometry) \u2192 numero di vertici in $geometry Nota bene: -- Osservazioni: num_rings \u21b5 Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi: num_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 2 Nota bene: -- Osservazioni: -- offset_curve \u21b5 Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato. Le distanze sono espresse nel SR di tale geometria. Sintassi: offset_curve( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di offset. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in una linea pi\u00f9 morbida, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi: offset_curve($geometry, 10.5) \u2192 linea scostata a sinistra di 10.5 unit\u00e0 offset_curve($geometry, -10.5) \u2192 linea scostata a destra di 10.5 unit\u00e0 offset_curve($geometry, 10.5, segments=16, join=1) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in una curva pi\u00f9 morbida offset_curve($geometry, 10.5, join=3) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando un'unione smussata Nota bene: -- Osservazioni: La linea \u00e8 scostata a sinistra o destra rispetto al verso della linea: order_parts \u21b5 Ordina le parti di una MultiGeometria secondo un dato criterio Sintassi: order_parts( geometry , orderby [, ascending=true ]) [ ] indica componenti opzionali Argomenti: geometry una geometria multi-tipo orderby un espressione stringa che definisce il criterio di ordinamento ascending booleano, True per ascendente, False per discendente Esempi: order_parts(geom_from_wkt('MultiPolygon (((1 1, 5 1, 5 5, 1 5, 1 1)),((1 1, 9 1, 9 9, 1 9, 1 1)))'), 'area($geometry)', False) \u2192 MultiPolygon (((1 1, 9 1, 9 9, 1 9, 1 1)),((1 1, 5 1, 5 5, 1 5, 1 1))) order_parts(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), '1', True) \u2192 LineString(1 2, 3 2, 4 3) Nota bene: -- Osservazioni: oriented_bbox \u21b5 Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria. Sintassi: oriented_bbox( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(oriented_bbox(geom_from_wkt('MULTIPOINT(1 2, 3 4, 3 2)'))) \u2192 'Polygon ((1 2, 2 1, 4 3, 3 4, 1 2))' Nota bene: -- Osservazioni: -- overlaps \u21b5 Controlla qualora una geometria si sovrapponga ad un'altra. Restituisce true (1) se le geometrie condividono aree, ma non sono completamente contenute una nell'altra. Sintassi: overlaps( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: overlaps( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 5, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 overlaps( geom_from_wkt( 'LINESTRING(0 0, 1 1)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 0 Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: overlaps(geometry(get_feature( 'cerchio','id','1')), $geometry) dove: geometry1 \u00e8 geometry(get_feature('cerchio','id','1')) geometry2 \u00e8 $geometry seleziono tutti i comuni overlaps (sovrapposti) al cerchio in figura. PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli sovrapposti con il cerchio). NOT overlaps(geometry(get_feature('cerchio','id','1')),$geometry) overlay_contains \u21b5 Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Contains\" sottostante, come descritto nella funzione PostGIS ST_CONTAINS . Sintassi: overlay_contains( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_contains('regions') \u2192 true se l'elemento corrente contiene spazialmente una regione * overlay_contains('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente contiene spazialmente una regione con una popolazione maggiore di 10000 * overlay_contains('regions', name) \u2192 un array di nomi, per le regioni contenute nell'elemento corrente * array_to_string(overlay_contains('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni contenute nell'elemento corrente * overlay_contains('regions', name)[0] \u2192 una stringa con il nome della regione contenuta nell'elemento corrente * array_sort(overlay_contains(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenute nell'elemento corrente e con una popolazione superiore a 10000 * overlay_contains(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenute nell'elemento corrente Nota bene: -- Osservazioni: overlay_crosses \u21b5 Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento di un layer target o un array di risultati basati su espressioni per gli elementi nel layer target attraversati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Crosses\" sottostante, come descritto nella funzione PostGIS ST_Crosses . Sintassi: overlay_crosses( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_crosses('regions') \u2192 true se l'elemento corrente attraversa spazialmente una regione * overlay_crosses('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente attraversa spazialmente una regione con una popolazione maggiore di 10000 * overlay_crosses('regions', name) \u2192 un array di nomi, per le regioni attraversate dall'elemento corrente * array_to_string(overlay_crosses('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni attraversate dall'elemento corrente * overlay_crosses('regions', name)[0] \u2192 una stringa con il nome della prima regioni attraversata dall'elemento corrente * array_sort(overlay_crosses(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni attraversate dall'elemento corrente e con una popolazione superiore a 10000 * overlay_crosses(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni attraversate dall'elemento corrente Nota bene: -- Osservazioni: overlay_disjoint \u21b5 Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer target, o un array di risultati basati su espressione per gli elementi nel layer target che sono disgiunti dall'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Disjoint\", come descritto nella funzione PostGIS ST_Disjoint . Sintassi: overlay_disjoint( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_disjoint('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni * overlay_disjoint('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni con una popolazione maggiore di 10000 * overlay_disjoint('regions', name) \u2192 un array di nomi, per le regioni spazialmente disgiunte dall'elemento corrente * array_to_string(overlay_disjoint('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni spazialmente disgiunte dall'elemento corrente * overlay_disjoint('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente disgiunte dall'elemento corrente * array_sort(overlay_disjoint(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente disgiunte dall'elemento corrente e con una popolazione superiore a 10000 * overlay_disjoint(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente disgiunte dall'elemento corrente Nota bene: -- Osservazioni:overlay_disjoint overlay_equals \u21b5 Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target che sono spazialmente uguali all'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Equals\" sottostante, come descritto nella funzione PostGIS ST_Equals . Sintassi: overlay_equals( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_equals('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente uguale ad una regione * overlay_equals('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente uguale ad una regione con una popolazione maggiore di 10000 * overlay_equals('regions', name) \u2192 un array di nomi, per le regioni spazialmente uguali all'elemento corrente * array_to_string(overlay_equals('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni spazialmente uguali all'elemento corrente * overlay_equals('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente uguale all'elemento corrente * array_sort(overlay_equals(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente uguali all'elemento corrente e con una popolazione superiore a 10000 * overlay_equals(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente uguali all'elemento corrente Nota bene: -- Osservazioni: overlay_intersects \u21b5 Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target intersecati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Intersects\" sottostante, come descritto nella funzione PostGIS ST_INTERSECTS . Sintassi: overlay_intersects( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_intersects('regions') \u2192 true se l'elemento corrente interseca spazialmente una regione * overlay_intersects('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente interseca spazialmente una regione con una popolazione maggiore di 10000 * overlay_intersects('regions', name) \u2192 un array di nomi, per le regioni intersecate dall'elemento corrente * array_to_string(overlay_intersects('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni intersecate dall'elemento corrente * overlay_intersects('regions', name)[0] \u2192 una stringa con il nome della regione intersecata dall'elemento corrente * array_sort(overlay_intersects(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni intersecate dall'elemento corrente e con una popolazione maggiore di 10000 * overlay_intersects(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni intersecate dall'elemento corrente Nota bene: -- Osservazioni: overlay_nearest \u21b5 Restituisce se l'elemento corrente ha elementi da un layer target entro una data distanza o un array di risultati basati su espressioni per gli elementi nel layer di target entro una distanza dall'elemento corrente. Nota: questa funzione pu\u00f2 essere lenta e consuma molta memoria per layer con molte feature. Sintassi: overlay_contains( layer [, expression ][, filter ][, limit=1 ][, max_distance ][, cache ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); max_distance una distanza opzionale per limitare la ricerca di elementi corrispondenti. Se non impostato, verranno usati tutti gli elementi nel layer di destinazione. cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_nearest('airports') \u2192 true se il layer \"airports\" ha almeno un elemento * overlay_nearest('airports', max_distance:= 5000) \u2192 vero se \u00e8 presente un aeroporto entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente * overlay_nearest('airports', name) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come array * array_to_string(overlay_nearest('airports', name)) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come stringa * overlay_nearest(layer:='airports', expression:= name, max_distance:= 5000) \u2192 il nome dell'aereoporto pi\u00f9 vicino entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, come array * overlay_nearest(layer:='airports', expression:=\"name\", filter:= \"Use\"='Civilian', limit:=3) \u2192 un array di nomi, per un massimo di tre aeroeporti civili pi\u00f9 vicini ordinati per distanza * overlay_nearest(layer:='airports', expression:=\"name\", limit:= -1, max_distance:= 5000) \u2192 un array di nomi, per tutti gli aeroporti entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, ordinato per distanza. Nota bene: -- Osservazioni: Esempio 45: http://hfcqgis.opendatasicilia.it/it/latest/esempi/linea_min_distanza2.html overlay_touches \u21b5 Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target toccati dall'elemento corrente. Leggi ulteriori informazioni sul predicato GEOS \"Touches\", come descritto nella funzione PostGIS ST_TOUCHES . Sintassi: overlay_touches( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_touches('regions') \u2192 true se l'elemento corrente tocca spazialmente una regione * overlay_touches('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente tocca spazialmente una regione con una popolazione maggiore di 10000 * overlay_touches('regions', name) \u2192 un array di nomi, per le regioni tocacte dall'elemento corrente * string_to_array(overlay_touches('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni toccate dall'elemento corrente * overlay_touches('regions', name)[0] \u2192 una stringa con il nome della regione toccata dall'elemento corrente * array_sort(overlay_touches(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni toccate dall'elemento attuale e con una popolazione superiore a 10000 * overlay_touches(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni toccate dall'elemento corrente Nota bene: -- Osservazioni: overlay_within \u21b5 Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Within\", come descritto nella funzione PostGIS ST_WITHIN . Sintassi: overlay_within( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_within('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente all'interno di una regione * overlay_within('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente all'interno di una regione con una popolazione maggiore di 10000 * overlay_within('regions', name) \u2192 un array di nomi, per le regioni contenenti l'elemento corrente * array_to_string(overlay_within('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni che contengono l'elemento corrente * overlay_within('regions', name)[0] \u2192 una stringa con il nome della regione che contengono l'elemento corrente * array_sort(overlay_within(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenenti l'elemento corrente e con una popolazione superiore a 10000 * overlay_within(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenenti l'elemento corrente Nota bene: -- Osservazioni: perimeter \u21b5 Calcola il perimetro di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $perimeter , la quale esegue calcoli ellissoidali basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura della distanza. Sintassi: perimeter( geometry ) Argomenti: geometry oggetto geometria poligono Esempi: perimeter(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))')) \u2192 12.0 Nota bene: -- Osservazioni: point_n \u21b5 Restituisce un nodo specifico da una geometria. Sintassi: point_n( geometry , index ) Argomenti: geometry oggetto geometria index indice del nodo da restituire, dove 1 \u00e8 il primo nodo; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi: geom_to_wkt(point_n(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))'),2)) \u2192 'Point (4 0)' Nota bene: -- Osservazioni: -- Esempi: correlati esempio nro 4 - Come aggiungere la quota Z alla tabella attributi point_on_surface \u21b5 Restituisce un punto garantendo che sia giacente sulla superficie della geometria. Sintassi: point_on_surface( geometry ) Argomenti: geometry una geometria Esempi: point_on_surface($geometry) \u2192 una geometria punto Nota bene: -- Osservazioni: -- pole_of_inaccessibility \u21b5 Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie. Questa funzione usa l'algoritmo 'polylabel' (Vladimir Agafonkin, 2016), che \u00e8 un approccio iterativo garantito per trovare il vero polo dell'inaccessibilit\u00e0 all'interno di una tolleranza specificata. Tolleranze pi\u00f9 precise richiedono pi\u00f9 iterazioni e sar\u00e0 necessario pi\u00f9 tempo per il calcolo. Sintassi: pole_of_inaccessibility( geometry , tolerance ) Argomenti: geometry una geometria tolerance distanza massima tra il punto restituito e la vera posizione del polo Esempi: geom_to_wkt(pole_of_inaccessibility( geom_from_wkt('POLYGON((0 1,0 9,3 10,3 3, 10 3, 10 1, 0 1))'), 0.1)) \u2192 'Point(1.55, 1.55)' Nota bene: -- Osservazioni: -- project \u21b5 Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti. Sintassi: project( point , distance , azimuth [, elevation ]) [ ] indica componenti opzionali Argomenti: point punto di partenza point distanza da proiettare azimuth azimuth in radianti in senso orario, dove 0 corrisponde a nord elevation angolo di inclinazione in radianti Esempi: project(make_point(1, 2), 3, radians(270)) \u2192 Point(-2, 2) Nota bene: -- Osservazioni: -- relate \u21b5 Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Variabile di relazione \u21b5 Restituisce la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Sintassi: relate( geometry , geometry , geometry_) ) Argomenti: geometry una geometria geometry una geometria Esempi: relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ) ) \u2192 'FF1F00102' Variabile di corrispondenza del modello \u21b5 Testa se la relazione DE-9IM tra due geometrie corrisponde a un pattern specificato: restituisc true Vero, false Falso. Sintassi: relate( geometry , geometry , pattern ) Argomenti: geometry una geometria geometry una geometria pattern Tratteggio DE-9IM da far corrispondere Esempi:o relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ), '**1F001**' ) \u2192 Vero Nota bene: -- Osservazioni: -- Link utili: Wikipedia OpenGeo reverse \u21b5 Inverte il verso di una linestring invertendo l'ordine dei sui vertici Sintassi: reverse( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(reverse(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'LINESTRING(2 2, 1 1, 0 0)' Nota bene: -- Osservazioni: -- rotate \u21b5 Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria. Sintassi: rotate( geometry , rotation [, center ]) [ ] indica componenti opzionali Argomenti: geometry una geometria rotation rotazione oraria in gradi center punto centrale di rotazione. Se non specificato, viene utilizzato il centro del perimetro di delimitazione della geometria. Esempi: rotate($geometry, 45, make_point(4, 5)) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al punto (4, 5) rotate($geometry, 45) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al centro del riquadro di delimitazione Nota bene: -- Osservazioni: segments_to_lines \u21b5 Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso. Sintassi: segments_to_lines( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(segments_to_lines(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiLineString ((0 0, 1 1),(1 1, 2 2))' Nota bene: -- Osservazioni: shortest_line \u21b5 Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2. La linea risultante partir\u00e0 dalla geometria 1 e finir\u00e0 nella geometria 2. Sintassi: shortest_line( geometry1 , geometry2 ) Argomenti: geometry1 geometria dalla quale cercare la linea pi\u00f9 corta geometry2 geometria verso la quale cercare la linea pi\u00f9 corta Esempi: geom_to_wkt(shortest_line(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 LineString(73.0769 115.384, 100 100) Nota bene: -- Osservazioni: -- simplify \u21b5 Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker). L'algoritmo mantiene grandi deviazioni nelle geometrie e riduce il numero di vertici in segmenti quasi rettilinei. Sintassi: simplify(simplify_vw( geometry , tolerance ) Argomenti: _ geometry una geometria _ tolerance deviazione massima dai segmenti rettilinei per i punti da rimuovere Esempi: geom_to_wkt(simplify(geometry:=geom_from_wkt('LineString(0 0, 5 0.1, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' Nota bene: -- Osservazioni: simplify_vw \u21b5 Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ). L'algoritmo rimuove i vertici che creano piccole aree nelle geometrie, ad esempio picchi stretti o segmenti quasi rettilinei. Sintassi: simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance una misura dell'area massima creata da un nodo per il nodo da rimuovere Esempi: geom_from_wkt('LineString(0 0, 5 0, 5.01 10, 5.02 0, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' Nota bene: -- Osservazioni: -- single_sided_buffer \u21b5 Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring. Le distanze sono espresse nel SR di tale geometria. Sintassi: single_sided_buffer( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di buffer. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi: single_sided_buffer($geometry, 10.5) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0 single_sided_buffer($geometry, -10.5) \u2192 linea bufferizzata a destra di 10.5 unit\u00e0 single_sided_buffer($geometry, 10.5, segments:=16, join:=1) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in un buffer pi\u00f9 morbido single_sided_buffer($geometry, 10.5, join:=3) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando un'unione smussata Nota bene: -- Osservazioni: -- smooth \u21b5 Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria. Sintassi: smooth( geometry , iterations=1 , offset=0.25 , min_length=1 , max_angle=180 ) Argomenti: geometry una geometria iterations Numero di iterazioni di smussatura da applicare. Valori pi\u00f9 alti fanno risultare geometria pi\u00f9 morbide, ma pi\u00f9 complesse. offset valore tra 0 e 0.5 che controlla quanto la geometria smussata segua strettamente la geometria originale. Valori pi\u00f9 piccoli risultano in una lisciatura pi\u00f9 stretta, valori pi\u00f9 grandi risultano in una lisciatura pi\u00f9 larga. min_length lunghezza minima dei segmenti ai quali applicare la smussatura. Questo parametro pu\u00f2 essere usato per evitare di posizionare nodi aggiuntivi eccessivi nei segmenti pi\u00f9 corti della geometria. max_angle angolo massimo (0-180) da applicare al nodo per la smussatura. Abbassando intenzionalmente l'angolo massimo si abbassa l'arrotondamento sugli angoli della geometria. Per esempio, un valore di 80 gradi preserver\u00e0 l'angolo nella geometria. Esempi: Nota bene: -- Osservazioni: start_point \u21b5 Restituisce il primo nodo di una geometria. Sintassi: start_point( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(start_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (4 0)' Nota bene: -- Osservazioni: geometry -- Start_point di geometria poligonale: Start_point di geometria lineare: sym_difference \u21b5 Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca. Sintassi: sym_difference( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( sym_difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 8 8)' ) ) ) \u2192 LINESTRING(5 5, 8 8) Espressione: -- differenza simmetrica tra le due linee sym_difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente prova tu: Dati e progetto qgz Nota bene: -- Osservazioni: -- tapered_buffer \u21b5 Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea. Sintassi: tapered_buffer( geometry , start_width , end_width [, segments=8 ]_) [ ] contrassegna componenti opzionali Argomenti: geometry input geometry. Deve essere una (multi) geometria della linea. start_width larghezza del buffer all'inizio della linea, end_width larghezza del buffer alla fine della riga. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi: tapered_buffer(geometry:=geom_from_wkt('LINESTRING(1 2, 4 2)'),start_width:=1,end_width:=2,segments:=8) \u2192 Un buffer rastremato che inizia con un diametro di 1 e termina con un diametro di 2 lungo la geometria della linea. Nota bene: -- Osservazioni: -- QGIS - feature touches \u21b5 Verifica se una geometria tocca un'altra. Restituisce vero (1) se le geometrie hanno almeno un punto in comune, ma i loro interni non si intersecano. Sintassi: touches( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: touches( geom_from_wkt( 'LINESTRING(5 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 touches( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 0 Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: touches(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','52')) geometry2 \u00e8 $geometry seleziono tutti i comuni touches (toccati) dalla provincia con pk_uid 46 (Siena) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli toccati dalla provincia di Siena). NOT touches(geometry(get_feature( 'province_rt_rt','pk_uid','52')),$geometry) transform \u21b5 Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione. Sintassi: transform( geometry , source_auth_id , dest_auth_id ) Argomenti: geometry una geometria source_auth_id ID del SR sorgente dest_auth_id ID del SR destinazione Esempi: geom_to_wkt( transform( $geometry, 'EPSG:2154', 'EPSG:4326' ) ) \u2192 POINT(0 51) Nota bene: -- Osservazioni: -- translate \u21b5 Restituisce una versione traslata di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: translate( geometry , dx , dy ) Argomenti: geometry una geometria dx delta x geomdyetry delta y Esempi: translate($geometry, 5, 10) \u2192 una geometria dello stesso tipo come l'originale Nota bene: -- Osservazioni: -- union \u21b5 Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie. Sintassi: union( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( union( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) ) \u2192 MULTIPOINT(4 4, 5 5) Espressione: -- unione delle due linee union( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente prova tu: Dati e progetto qgz Nota bene: -- Osservazioni: -- wedge_buffer \u21b5 Restituisce un buffer a forma di cuneo che origina da una geometria del punto. Sintassi: wedge_buffer( geometry , azimuth , width , outer_radius [, inner_radius=0.0 ]_) [ ] contrassegna componenti opzionali Argomenti: geometry punto centrale (origine) del buffer. Deve essere una geometria puntuale. azimuth (in gradi) per il centro del cuneo da puntare. width buffer w larghezza (in gradi). Si noti che il cuneo si estender\u00e0 fino a met\u00e0 della larghezza angolare su entrambi i lati della direzione dell'azimut. outer_radius raggio esterno per i buffers inner_radius raggio interno opzionale per i buffers Esempi: wedge_buffer(center:=geom_from_wkt('POINT(1 2)'),azimuth:=90,width:=180,outer_radius:=1) \u2192 Un buffer a forma di cuneo centrato sul punto (1,2), rivolto verso est, con una larghezza di 180 gradi e raggio esterno di 1. Nota bene: -- Osservazioni: -- within \u21b5 Controlla qualora una geometria sia interna ad un'altra. Restituisce 1 (vero) se la geometria a \u00e8 completamente contenuta nella_ geometria b_. Sintassi: within( geometry1 , geometry2 ) Argomenti: geometry1 _ una geometria geometry2 una geometria Esempi: within( geom_from_wkt( 'POINT( 0.5 0.5)' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ) ) \u2192 1 within( geom_from_wkt( 'POINT( 5 5 )' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ) ) \u2192 0 Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) dove: geometry1 \u00e8 $geometry geometry2 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','53')) seleziono tutti i comuni within (contenuti) nella provincia con pk_uid 53 (Grosseto) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Grosseto). NOT within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) Altro esempio con condizione sulle etichette CASE WHEN within( $geometry, geometry(get_feature('poligono','id',1))) = 1 THEN 'INTERNO' ELSE 'NON INTERNO' END x \u21b5 Restituisce la minima coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale. Sintassi: x( geometry ) Argomenti: geometry una geometria Esempi: x( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 2 x( $geometry ) \u2192 coordinata x del centroide dell'elemento corrente Nota bene: -- Osservazioni: -- x_max \u21b5 Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_max( geometry ) Argomenti: geometry una geometria Esempi: x_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 4 Nota bene: -- Osservazioni: -- x_min \u21b5 Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_min( geometry ) Argomenti: geometry una geometria Esempi: x_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 2 Nota bene: -- Osservazioni: -- y \u21b5 Restituisce la coordinata y minima di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale. Sintassi: y( geometry ) Argomenti: geometry una geometria Esempi: y( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 5 y( $geometry ) \u2192 coordinata y del centroide dell'elemento corrente Nota bene: -- Osservazioni: -- y_max \u21b5 Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_max( geometry ) Argomenti: geometry una geometria Esempi: y_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 8 Nota bene: -- Osservazioni: -- y_min \u21b5 Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_min( geometry ) Argomenti: geometry una geometria Esempi: y_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 5 Nota bene: -- Osservazioni: -- z \u21b5 Restituisce la coordinata z di una geometria puntuale. Sintassi: z( geometry ) Argomenti: geometry una geometria punto Esempi: z( geom_from_wkt( 'POINTZ(2 5 7)' ) ) \u2192 7 Nota bene: -- Osservazioni: z_max \u21b5 Restituisce la coordinata z massima di una geometria. Sintassi: z_max( geometry ) Argomenti: geometry una geometria con z coordinata Esempi: * z_max( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 * z_max( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 3 * z_max( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 0 * z_max( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 2 * z_max( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL Nota bene: -- Osservazioni: -- z_min \u21b5 Restituisce la coordinata z minima di una geometria. Sintassi: z_min( geometry ) Argomenti: geometry una geometria con z coordinata Esempi: * z_min( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 * z_min( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 1 * z_min( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2 * z_min( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 -1 * z_min( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL Nota bene: -- Osservazioni: --","title":"Gruppo Geometria"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#gruppo-geometria","text":"Questo gruppo contiene funzioni che operano sugli oggetti geometrici es. lunghezza, area.","title":"Gruppo Geometria"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#area","text":"Restituisce l'area della geometria corrente. L'area calcolata da questa funzione rispetta sia le impostazioni dell'ellissoide del progetto corrente sia delle unit\u00e0 di misura. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora l'area calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide l'area calcolata sar\u00e0 planimetrica. Sintassi: $area Esempi: Aggiungiamo un campo area_mq e lo popoliamo con la funzione $area : 1. selezionare un layer vettoriale di tipo poligonale; 2. clic sull'icona del calcolatore di campi di default \u00e8 sempre spuntato; digitare il nome del campo area_mq ; il tipo di campo di uscita in questo caso \u00e8 numero decimale (Double) , definire la lunghezza del campo; ricercare la funzione digitando area ; doppio clic sulla funzione $area per inserirlo; clic su OK per eseguire. nell'esempio ho usato un vettore poligonale con EPSG 3004 (sistema proiettato, unit\u00e0 metro): la superficie di ogni elemento \u00e8 in metri quadrati come evidenziato nella tabella attributi Nota bene: Danger se il SR del progetto in cui si sta calcolando l'area ( $area ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) allora l'unit\u00e0 di misura sarebbe il metro, invece se il SR del progetto fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe gradi e quindi poco comprensibile e valori piccoli (0.00001). Osservazioni: in generale $area <> area($geometry)","title":"$area"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#geometry","text":"Restituisce la geometria dell'elemento attuale. Pu\u00f2 essere usato per il processamento con altre funzioni. Sintassi: $geometry Esempi: * geomToWKT( $geometry ) \u2192 POINT(6 50) * area($geoamtry) \u2192 1234567.89 mq * perimeter($geometry) \u2192 25689.25 m Nota bene: -- Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$geometry"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#length","text":"Restituisce la lunghezza di una linestring. Se hai bisogno della lunghezza del bordo di un poligono, utilizza invece $perimeter . La lunghezza calcolata da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora la lunghezza calcolata sar\u00e0 ellisoidica altrimenti se non \u00e8 stato impostato alcun ellissoide la lunghezza calcolata sar\u00e0 planimetrica. Sintassi: $length Esempi: $length \u2192 42.4711 Nota bene: Come evidenziano nella definizione della funzione, $length calcola la lunghezza rispettando le impostazioni di progetto: Occorre cambiare entrambe le impostazioni, sia quelle dell'ellissoide \u2192 'None/Planimetric' sia le Unit\u00e0 di misura per le distanze' \u2192 Gradi Queste modofiche non valgono per l'etichettatura, la lunghezza sar\u00e0 quella relativa alla geometria e quindi al suo SR. Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$length"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#perimeter","text":"Restituisce la lunghezza del perimetro della geometria corrente. Il perimetro calcolato da questa funzione rispetta le impostazioni sia dell'ellissoide sia delle unit\u00e0 di misura del progetto corrente. Per esempio, se \u00e8 stato impostato un ellissoide per il progetto allora il perimetro calcolato sar\u00e0 ellisoidico altrimenti se non \u00e8 stato impostato alcun ellissoide il perimetro calcolato sar\u00e0 planimetrico. Sintassi: $perimeter Esempi: $perimeter \u2192 2545897.26 Nota bene: Nota Si utilizza SOLO per i poligoni, nel caso di feature lineari \\$length Osservazioni: il $ indica che \u00e8 relativo all'elemento corrente e non ha bisogno di argomenti.","title":"$perimeter"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#x","text":"Restituisce la coordinata x della geometria corrente. Sintassi: $x Esempi: $x \u2192 12.2568971 Nota bene: La funzione $x restituisce la coordinata x della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Osservazioni: Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni ed: x($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"$x"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#x_at","text":"Recupera una coordinata x per la geometria dell'elemento corrente. Sintassi: $x_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi: $x_at(1) \u2192 12.6882843 Nota bene: -- Osservazioni: Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"$x_at"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#y","text":"Restituisce la coordinata y della geometria corrente. Sintassi: $y Esempi: $y \u2192 12.2568971 Nota bene: La funzione $y restituisce la coordinata y della geometria corrente purch\u00e8 sia un POINT altrimenti restituisce NULL (vedi screenshot) Osservazioni: Per ottenere le coordinate x o y occorre utilizzare una combinazione di funzioni es: y($geometry) che vale per qualunque tipologia di geometria (point, linestring, polygon)","title":"$y"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#y_at","text":"Recupera una coordinata y per la geometria dell'elemento corrente. Sintassi: $y_at( i ) Argomenti: i indice del punto di una linea (indici partono da 0; valori negativi si applicano dall'ultimo indice, partendo da -1) Esempi: $y_at(1) \u2192 2 Nota bene: -- Osservazioni: Le lineastring hanno un verso e quindi l'indice 0 indica il primo vertice mentre indici negativi significano che la conta inizia dalla l'ultimo vertice: -10 significa il 10-mo vertice partendo dall'ultimo vertice.","title":"$y_at"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#angle_at_vertex","text":"Restituisce l'angolo della bisettrice (angolo medio) della geometria per un vertice specifico di una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: angle_at_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0 Esempi: angle_at_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 45.0 Nota bene: Il primo ed ultimo vertice di una lineastring aperta la funzione restituisce il valore dell'angolo e non la bisettrice. Osservazioni: --","title":"angle_at_vertex"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#area_1","text":"Restituisce l'area di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura dell'area restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $area, la quale esegue calcoli ellisoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura dell'area. Sintassi: area( geometry ) Argomenti: geometry oggetto geometria poligono Esempi: Nota bene: Occhio Se il SR del layer in cui si sta calcolando l'area ( area() ) fosse un sistema proiettato (es:EPSG 3003/4; 32632/33/34 ecc..) l'unit\u00e0 di misura sarebbe il metro, invece se il SR del layer fosse EPSG 4326, cio\u00e8 un sistema geografico, allora l'unit\u00e0 di misura dell'area sarebbe in gradi e quindi poco comprensibile e valori piccoli. Osservazioni: in generale area($geometry) <> $area","title":"area"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#azimuth","text":"Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi: azimuth( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: * degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 * degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689 Nota bene: Azimuth per definizione restituisce un angolo in radianti, per trasformarlo in gradi usare la funzione degrees()","title":"Azimuth"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#boundary","text":"Restituisce l'area minima della combinazione dei confini della geometria (cio\u00e8 il confine topologico della geometria). Per esempio, una geometria poligonale avr\u00e0 un confine costituito dalle linee di ogni anello nel poligono. Alcuni tipi di geometrie non hanno confini, es collezioni di punti o geometrie e pertanto verr\u00e0 restituito null. Sintassi: boundary( geometry ) Argomenti: geometry una geometria Esempi: - geom_to_wkt(boundary(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'LineString(1 1,0 0,-1 1,1 1)' - geom_to_wkt(boundary(geom_from_wkt('LineString(1 1,0 0,-1 1)'))) \u2192 'MultiPoint ((1 1),(-1 1))' Nota bene: -- Osservazioni: funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"boundary"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#bounds","text":"Restituisce la geometria che rappresenta il perimetro di delimitazione di una geometria in ingresso. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds( geometry ) Argomenti: geometry una geometria Esempi: - bounds($geometry) \u2192 perimetro di delimitazione dell'elemento geometrico corrente - geom_to_wkt(bounds(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'Polygon ((-1 0, 1 0, 1 1, -1 1, -1 0))' Nota bene: -- Osservazioni: funzione molto utile per la tematizzazione aggiungendo un nuovo layer con geometry generator","title":"bounds"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#bounds_height","text":"Restituisce l'altezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_height( geometry ) Argomenti: geometry una geometria Esempi: - bounds_height($geometry) \u2192 altezza del perimetro di delimitazione dell'elemento geometrico corrente - bounds_height(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')) \u2192 1 Nota bene: -- Osservazioni: La funzione restituisce un numero che corrisponde all'altezza del rettangolo di ingombro di una geometria.","title":"bounds_height"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#bounds_width","text":"Restituisce la larghezza del perimetro di delimitazione di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: bounds_width( geometry ) Argomenti: geometry una geometria Esempi: bounds_width($geometry) \u2192 larghezza del perimetro di delimitazione di $geometry Nota bene: -- Osservazioni: La funzione restituisce un numero che corrisponde alla larghezza del rettangolo di ingombro di una geometria.","title":"bounds_width"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#buffer","text":"Restituisce una geometria che rappresenta tutti i punti la cui distanza dalla geometria \u00e8 minore o uguale alla distanza inserita. I calcoli vengono effettuati nel sistema di riferimento spaziale della geometria. Sintassi: buffer( geometry , distance [, segments=8 ]) Argomenti: geometry una geometria distance distanza buffer nelle unit\u00e0 del layer segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. Esempi: buffer($geometry, 10.5) \u2192 poligono di $geometry bufferizzato di 10.5 unit\u00e0 Nota bene: Utilizzando SR proiettati l'unit\u00e0 di misura \u00e8 il metro, mentre, per SR geografici \u00e8 il grado, quindi attenzione al valore della distanza. Osservazioni: La Funzione restituisce SEMPRE un poligono sia per geometry POINT , LINESTRING o POLYGON","title":"buffer"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#buffer_by_m","text":"Crea un buffer lungo una geometria linestring in cui il diametro del buffer varia in base ai valori m nei vertici della linea. Sintassi: buffer_by_m( geometry , segments ) Argomenti: geometry la geometria deve essere una (multi) geometria linestring con valori m. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi: * buffer_by_m(geometry:=geom_from_wkt('LINESTRINGM(1 2 0.5, 4 2 0.2)'),segments:=8) \u2192 Un buffer di larghezza variabile che inizia con un diametro di 0,5 e termina con un diametro di 0,2 lungo la linea. relativa all'esempio di sopra: Nota bene: -- Osservazioni: QGIS - feature","title":"buffer_by_m"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#centroid","text":"Restituisce il centro geometrico di una geometria. Sintassi: centroid( geometry ) Argomenti: geometry una geometria Esempi: centroid($geometry) \u2192 una geometria punto Nota bene: -- Osservazioni: La Funzione restituisce SEMPRE una geometry POINT","title":"centroid"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#close_line","text":"Restituisce una linestring chiusa della linestring di input aggiungendo il primo punto alla fine della linea, se non \u00e8 gi\u00e0 chiusa. Se la geometria non \u00e8 una linestring o una MultiLinestring, il risultato sar\u00e0 NULL. Sintassi: close_line( geometry ) Argomenti: geometry una geometria linestring Esempi: geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) geom_to_wkt(close_line(geom_from_wkt('LINESTRING(0 0, 1 0, 1 1, 0 0)'))) \u2192 LineString (0 0, 1 0, 1 1, 0 0) Nota bene: -- Osservazioni: --","title":"close_line"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#closest_point","text":"Restituisce il punto sulla geometria1 che \u00e8 pi\u00f9 vicino alla geometria2. Sintassi: closest_point( geometry1 , _ geometry2 ) Argomenti: geometry1 geometria sulla quale cercare il punto pi\u00f9 vicino geometry geometria dalla quale cercare il punto pi\u00f9 vicino Esempi: geom_to_wkt(closest_point(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 Point(73.0769 115.384) Nota bene: -- Osservazioni: Utilizzando il geometry generator per i temi (il layer strade \u00e8 una unica feature): closest_point( geometry(get_feature('strade', 'reg',19)),$geometry) Gif animata: geometry 1 \u00e8 la rete stradale; geometry 2 sono i punti; in rosso i closestpoint","title":"closest_point"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#collect_geometries","text":"Raccoglie un set di geometrie in un oggetto geometria multiparte.","title":"collect_geometries"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#variante-geometry","text":"Sintassi: collect_geometries( geometry1 , geometry2 ...) Argomenti: geometry geometria sulla quale cercare il punto pi\u00f9 vicino Esempi: geom_to_wkt(collect_geometries(make_point(1,2), make_point(3,4), make_point(5,6))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))'","title":"Variante geometry"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#variante-con-array","text":"Sintassi: collect_geometries( array ) Argomenti: array array con oggetti geometrici Esempi: geom_to_wkt(collect_geometries(array(make_point(1,2), make_point(3,4), make_point(5,6)))) \u2192 'MultiPoint ((1 2),(3 4),(5 6))' Nota bene: -- Osservazioni:","title":"Variante con array"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#combine","text":"Restituisce la combinazione di due geometrie. Sintassi: combine( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 2 1)' ) ) ) \u2192 MULTILINESTRING((4 4, 2 1), (3 3, 4 4), (4 4, 5 5)) geom_to_wkt( combine( geom_from_wkt( 'LINESTRING(3 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 6 6, 2 1)' ) ) ) \u2192 LINESTRING(3 3, 4 4, 6 6, 2 1) Nota bene: -- Osservazioni: --","title":"combine"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#contains","text":"Verifica se una geometria ne contiene un'altra. Restituisce vero se e solo se nessun punto di geometry2 giace all'esterno di geometry1 e almeno un punto dell'interno di geometry2 si trova all'interno di geometry1. Sintassi: contains( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'POINT(0.5 0.5 )' ) ) \u2192 vero contains( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry b \u00e8 $geometry seleziono tutti i comuni contains (contenuti) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Lucca). NOT contains(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"contains"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#convex_hull","text":"Restituisce il poligono convesso di una geometria. Rappresenta la minima geometria convessa che racchiude tutte le geometria contenute nell'insieme. Sintassi: convex_hull( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt( convex_hull( geom_from_wkt( 'LINESTRING(3 3, 4 4, 4 10)' ) ) ) \u2192 POLYGON((3 3,4 10,4 4,3 3)) Nota bene: -- Osservazioni: La funzione restituisce sempre un poligono.","title":"convex_hull"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#crosses","text":"Verifica se una geometria interseca un'altra. Restituisce vero (1) se le geometrie interessate hanno qualche, ma non tutti, punto interno in comune. Sintassi: crosses( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: crosses( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero crosses( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 falso Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry a \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry b \u00e8 $geometry seleziono tutti i comuni crosses (attraversati) dal fiume ARNO PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli attraversati dal fiume ARNO). NOT crosses(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry)","title":"crosses"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#difference","text":"Restituisce una geometria che rappresenta la porzione della geometry_a che non interseca la geometry_b . Sintassi: difference( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(4 4, 5 5) Espressione: -- differenza linea a - linea b difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a -- differenza linea b - linea a difference( make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- \u00e8 importante ordine delle geometrie -- a - b \u00e8 diverso da b - a prova tu: Dati e progetto qgz Nota bene: -- Osservazioni: -- Esempio di sopra:","title":"difference"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#disjoint","text":"Controlla qualora una geometria non ne interseca spazialmente un'altra. Restituisce true (1) se le geometrie non condividono nessuno spazio comune. Sintassi: disjoint( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria * geometry2 una geometria Esempi: disjoint( geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero disjoint( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'POINT(4 4)' )) \u2192 falso Nota bene: Vero = 1; Falso= 0 Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: disjoint(geometry(get_feature( 'fiume_arno','nome','ARNO')), $geometry) dove: geometry1 \u00e8 geometry(get_feature( 'fiume_arno','nome','ARNO')) geometry2 \u00e8 $geometry seleziono tutti i comuni disjoint (disgiunti) dal fiume ARNO","title":"disjoint"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#distance","text":"Restituisce la distanza minima (basata su riferimento spaziale) tra due geometrie in unit\u00e0 proiettate. Sintassi: distance( geometry1 , _ geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: Nota bene: -- Osservazioni: --","title":"distance"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#distance_to_vertex","text":"Restituisce la distanza lungo una geometria ad un vertice specificato. Sintassi: distance_to_vertex( geometry , vertex ) Argomenti: geometry una geometria di tipo linestring vertex indice vertice, partendo da 0; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi: distance_to_vertex(geometry:=geom_from_wkt('LineString(0 0, 10 0, 10 10)'),vertex:=1) \u2192 10.0 Nota bene: -- Osservazioni: -- esempio di sopra:","title":"distance_to_vertex"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#end_point","text":"Restituisce l'ultimo nodo di una geometria. Sintassi: end_point( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(end_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (0 2)' Nota bene: -- Osservazioni: -- End_point di geometria poligonale: End_point di geometria lineare:","title":"end_point"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#extend","text":"Estende l'inizio e la fine di una geometria di tipo linestring di una quantit\u00e0 specificata. Le linee sono estese usando la direzione di immersione del primo e dell'ultimo segmento nella linea. Le distanze sono espresse nel SR di tale geometria. Sintassi: extend( geometry , start_distance , end_distance ) Argomenti: geometry una geometria (multi)linestring start_distance distanza alla quale estendere l' inizio della linea end_distance distanza alla quale estendere la fine della linea. Esempi: * geom_to_wkt(extend(geom_from_wkt('LineString(0 0, 1 0, 1 1)'),1,2)) \u2192 'LineString (-1 0, 1 0, 1 3)' * geom_to_wkt(extend(geom_from_wkt('MultiLineString((0 0, 1 0, 1 1), (2 2, 0 2, 0 5))'),1,2)) \u2192 'MultiLineString ((-1 0, 1 0, 1 3),(3 2, 0 2, 0 7))' Nota bene: -- Osservazioni: --","title":"extend"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#exterior_ring","text":"Restituisce una linestring che rappresenta l'anello esterno di una geometria poligonale. Se la geometria non \u00e8 un poligono, il risultato sar\u00e0 NULL. Sintassi: exterior_ring( geometry ) Argomenti: geometry una geometria poligono Esempi: geom_to_wkt(exterior_ring(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2, 0.1, 0.1 0.1))'))) \u2192 'LineString (-1 -1, 4 0, 4 2, 0 2, -1 -1)' Nota bene: -- Osservazioni: --","title":"exterior_ring"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#extrude","text":"Restituisce una versione estrusa della geometria (Multi-)Curve o (Multi-)Linestring in ingresso, con un'estensione specificata da x e y. Sintassi: extrude( geometry , x , y ) Argomenti: geometry una geometria poligono x estensione x, valore numerico y estensione y, valore numerico Esempi: extrude(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), 1, 2) \u2192 Polygon ((1 2, 3 2, 4 3, 5 5, 4 4, 2 4, 1 2)) extrude(geom_from_wkt('MultiLineString((1 2, 3 2), (4 3, 8 3)'), 1, 2) \u2192 MultiPolygon (((1 2, 3 2, 4 4, 2 4, 1 2)),((4 3, 8 3, 9 5, 5 5, 4 3))) Nota bene: -- Osservazioni: Nell'esempio ho utilizzato la funzione boundary() perch\u00e9 la geometria di ingresso deve essere lineare.","title":"extrude"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#flip_coordinates","text":"Restituisce una copia della geometria con le coordinate x e y scambiate. Utile per riparare le geometrie che hanno invertito i valori di latitudine e longitudine. Sintassi: flip_coordinates( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(flip_coordinates(make_point(1, 2))) \u2192 Point (2 1) Nota bene: -- Osservazioni: -- Esempio con vettore poligonale (aggiorno la geometry): il flip \u00e8 da usare con cautela perch\u00e9 cambia radicalemnte la posizione del vettore","title":"flip_coordinates"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#force_rhr","text":"Forza una geometria a rispettare la regola della mano destra, in cui l'area delimitata da un poligono si trova a destra del limite. In particolare, l'anello esterno \u00e8 orientato in senso orario e l'interno in senso antiorario. Sintassi: force_rhr( geometry ) Argomenti: geometry una geometria. Qualsiasi geometria non poligonale viene restituita invariata. Esempi: geom_to_wkt(force_rhr(geometry:=geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'))) \u2192 Polygon ((-1 -1, 0 2, 4 2, 4 0, -1 -1)) Nota bene: -- Osservazioni: Ecco un esempio pratico della funzione (presente anche nelgli strumenti fi processing) ovvero un poligono disegnato in senso antiorario viene forzato in senso orario e l'etichettature \u00e8 visibile correttamente.","title":"force_rhr"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#geom_from_gml","text":"Restituisce una geometria da una rappresentazione GML di una geometria. Sintassi: geom_from_gml( _gml ) Argomenti: gml Rappresentazione GML di una geometria come stringa Esempi: geom_to_wkt(geom_from_gml('<gml:LineString srsName=\"EPSG:4326\"><gml:coordinates>4,4 5,5 6,6</gml:coordinates></gml:LineString>') ) \u2192 'LineString (4 4, 5 5, 6 6)' Nota bene: -- Osservazioni:","title":"geom_from_gml"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#geom_from_wkb","text":"Restituisce una geometria creata da una rappresentazione binaria ben nota (WKB). Sintassi: geom_from_wkb( binari ) Argomenti: binari Rappresentazione binaria ben nota (WKB) di una geometria (come BLOB binario) Esempi: geom_from_wkb( geom_to_wkb( make_point(4,5) ) ) \u2192 un oggetto geometria punto Nota bene: -- Osservazioni: --","title":"geom_from_wkb"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#geom_from_wkt","text":"Restituisce una geometria creata da una rappresentazione Well-Known Text (WKT). Sintassi: geom_from_wkt_ text _) Argomenti: text Rappresentazione Well-Known Text (WKT) di una geometria Esempi: geom_from_wkt( 'POINT(4 5)' ) \u2192 un oggetto geometria Nota bene: -- Osservazioni:","title":"geom_from_wkt"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#geom_to_wkb","text":"Restituisce la rappresentazione binaria ben nota (WKB) di una geometria come BLOB binario. Sintassi: geom_to_wkb( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkb( $geometry ) \u2192 BLOB binario contenente un oggetto geometria Nota bene: -- Osservazioni:","title":"geom_to_wkb"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#geom_to_wkt","text":"Restituisce la rappresentazione Well-Known Text (WKT) della geometria senza metadati del SR Sintassi: geom_to_wkt( geometry ) Argomenti: geometry una geometria Esempi: * geom_to_wkt( make_point(6, 50) ) \u2192 'POINT(6 50)' * geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))'))) \u2192 'POINT(0 0.66666667)' * geom_to_wkt(centroid(geom_from_wkt('Polygon((1 1, 0 0, -1 1, 1 1))')), 2) \u2192 'POINT(0 0.67)' Nota bene: -- Osservazioni:","title":"geom_to_wkt"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#geometry_1","text":"Restituisce la geometria di un elemento. Sintassi: geometry( feature ) Argomenti: feature un oggetto elemento Esempi: geom_to_wkt( geometry( get_feature( layer, attributeField, value ) ) ) \u2192 'POINT(6 50)' intersects( $geometry, geometry( get_feature( layer, attributeField, value ) ) ) \u2192 vero Nota bene: -- Osservazioni: -- Usando il Select by Expression : selezionare le feature di un layer (quartieri) in funzione di altro layer (test):","title":"geometry"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#geometry_n","text":"Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: geometry_n( geometry , index ) Argomenti: geometry raccolta di geometrie index indice della geometria da restituire, dove 1 \u00e8 la prima geometria nella raccolta Esempi: geom_to_wkt(geometry_n(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))'),3)) \u2192 'Point (1 0)' Nota bene: -- Osservazioni:","title":"geometry_n"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#hausdorff_distance","text":"Restituisce la distanza di Hausdorff tra due geometrie. Questa \u00e8 in sostanza una misura di come le 2 geometrie sono simili o dissimili: una distanza pi\u00f9 bassa indica geometrie pi\u00f9 simili. La funzione pu\u00f2 essere eseguita con un argomento opzionale di densificazione della frazione. Se non viene specificato, viene utilizzata una approssimazione alla distanza standard di Hausdorff. Questa approssimazione \u00e8 esatta o abbastanza vicina per un grande sottoinsieme di casi utili. Esempi di questi sono: calcolare la distanza tra Linestrings che sono approssimativamente paralleli tra loro e sono sostanzialmente uguali in lunghezza. Ci\u00f2 si verifica nelle verifica di reti lineari. testare la somiglianza di geometrie. Se l'approssimazione predefinita fornita da questo metodo \u00e8 insufficiente, specifica l'argomento opzionale di densificazione della frazione. Specificando questo argomento si esegue una densificazione del segmento prima di calcolare la distanza Hausdorff discreta. Il parametro imposta la frazione con cui densificare ogni segmento. Ogni segmento sar\u00e0 suddiviso in un numero di subsegmenti di uguale lunghezza, la cui frazione della lunghezza totale \u00e8 la pi\u00f9 vicina alla frazione data. Riducendo il parametro di densificazione della frazione, la distanza restituita si avviciner\u00e0 alla vera distanza Hausdorff per le geometrie. Sintassi: hausdorff_distance( geometry1 , geometry2 , densify_fraction ) Argomenti: geometry1 una geometria geometry2 una geometria densify_fraction quantit\u00e0 di densificazione della frazione Esempi: hausdorff_distance( geometry1:= geom_from_wkt('LINESTRING (0 0, 2 1)'),geometry2:=geom_from_wkt('LINESTRING (0 0, 2 0)')) \u2192 2 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)')) \u2192 14.142135623 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)'),0.5) \u2192 70.0 Nota bene: -- Osservazioni: -- Nel caso di geometrie puntuali la hausdorff_distance coincide con la funzione distance , segue un esempio: format_number( hausdorff_distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' || '\\n'|| format_number( distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' In questo esempio confronto due layer: il numero pi\u00f9 piccolo indica il poligono pi\u00f9 simile a al poligono pi\u00f9 grande.","title":"hausdorff_distance"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#inclination","text":"Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b . Sintassi: inclination( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 Nota bene: -- Osservazioni: --","title":"inclination"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#interior_ring_n","text":"Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono. Sintassi: interior_ring_n( geometry , index ) Argomenti: geometry geometria poligono index Indice dell'anello interno da restituire, dove 1 \u00e8 il primo anello interno Esempi: geom_to_wkt(interior_ring_n(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1),(-1 -1, 4 0, 4 2, 0 2, -1 -1))'),1)) \u2192 'LineString (-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))' Nota bene: -- Osservazioni: Restituisce una lineastring!!!","title":"interior_ring_n"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#intersection","text":"Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie. Sintassi: intersection( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: * geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 'LINESTRING(3 3, 4 4)' * geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'MULTIPOINT(3.5 3.5, 4 5)' ) ) ) \u2192 'POINT(3.5 3.5)' Espressione: -- intersezione tra le due linee intersection( make_line( -- linea a start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea b start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente prova tu: Dati e progetto qgz Nota bene: -- Osservazioni: --","title":"intersection"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#intersects","text":"Controlla qualora una geometria ne interseca un'altra. Restituisce true (1) se la geometrie si intersecano spazialmente (condividono una porzione di spazio) altrimenti da false (0). Sintassi: intersects( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: intersects( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 falso Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry b \u00e8 $geometry seleziono tutti i comuni intersects (interseca) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli intersecati con la provincia di Lucca). NOT intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"intersects"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#intersects_bbox","text":"Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria. Restituisce vero (1) se le geometrie intersecano spazialmente il perimetro di delimitazione definito e falso (0) se non lo intersecano. Sintassi: intersects_bbox( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: intersects_bbox( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects_bbox( geom_from_wkt( 'POINT(6 5)' ), geom_from_wkt( 'POLYGON((3 3, 4 4, 5 5, 3 3))' ) ) \u2192 falso Nota bene: -- Osservazioni:","title":"intersects_bbox"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#is_closed","text":"Restituisce vero (true) se una linestring \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso (false) se una linestring non \u00e8 chiusa. Se la geometria non \u00e8 una linestring, il risultato sar\u00e0 NULL. Sintassi: is_closed( geometry ) Argomenti: geometry una geometria linestring Esempi: is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero Nota bene: -- Osservazioni: --","title":"is_closed"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#is_empty","text":"Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null . Sintassi: is_empty( geometry ) Argomenti: geometry una geometria Esempi: is_empty(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty(geom_from_wkt('POINT EMPTY')) \u2192 vero Nota bene: -- Osservazioni:","title":"is_empty"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#is_empty_or_null","text":"Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null_or_null . Sintassi: is_empty_or_null( geometry ) Argomenti: geometry una geometria Esempi: is_empty_or_null(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty_or_null(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty_or_null(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty_or_null(geom_from_wkt('POINT EMPTY')) \u2192 vero Nota bene: -- Osservazioni:","title":"is_empty_or_null"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#is_multipart","text":"Restituisce vero se la geometria \u00e8 di tipo Multi. Sintassi: is_multipart( geometry ) Argomenti: geometry una geometria Esempi: is_multipart(geom_from_wkt('MULTIPOINT ((0 0),(1 1),(2 2))')) \u2192 vero is_multipart(geom_from_wkt('POINT (0 0)')) \u2192 falso Nota bene: -- Osservazioni:","title":"is_multipart"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#is_valid","text":"Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole OGC Sintassi: is_valid( geometry ) Argomenti: geometry una geometria Esempi: is_valid(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero is_valid(geom_from_wkt('LINESTRING(0 0)')) \u2192 falso Nota bene: -- Osservazioni:","title":"is_valid"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#length_1","text":"Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring.","title":"length"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#variabile-stringa","text":"Restituisce il numero di caratteri contenuti in una stringa. Sintassi: length( string ) Argomenti: string stringa della quale calcolare la lunghezza Esempi: length('hello') \u2192 5","title":"Variabile stringa"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#variabile-geometria","text":"Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length , la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi: length( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4.0 Nota bene: -- Osservazioni:","title":"Variabile geometria"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#length3d","text":"Calcola la lunghezza 3D di un oggetto linea geometrica. Se la geometria non \u00e8 un oggetto linea 3D, restituisce la sua lunghezza 2D. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di questa geometria, e le unit\u00e0 della lunghezza restituita corrisponderanno alle unit\u00e0 per l'SR. Questo differisce dai calcoli eseguiti dalla funzione \\$length , che eseguir\u00e0 calcoli ellissoidali basati sulle impostazioni dell'ellissoide e dell'unit\u00e0 di distanza del progetto. Sintassi: length3D( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length3D(geom_from_wkt('LINESTRINGZ(0 0 0, 3 0 4)')) \u2192 5.0 Nota bene: -- Osservazioni:","title":"length3D"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#line_interpolate_angle","text":"Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi: line_interpolate_angle( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea a cui interpolare l'angolo Esempi: line_interpolate_angle(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5) \u2192 90.0 Nota bene: -- Osservazioni: --","title":"line_interpolate_angle"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#line_interpolate_point","text":"Restituisce il punto interpolato ad una specifica distanza lungo una geometria di tipo linestring. Sintassi: line_interpolate_point( geometry , distance ) Argomenti: geometry una geometria di tipo linestring distance distanza lungo la linea Esempi: geom_to_wkt(line_interpolate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5)) \u2192 'Point (4 0)' Nota bene: -- Osservazioni: --","title":"line_interpolate_point"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#line_locate_point","text":"Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata. Sintassi: line_locate_point( geometry , point ) Argomenti: geometry una geometria di tipo linestring point geometria puntuale per cui ricercare la posizione pi\u00f9 vicina sulla linestring Esempi: line_locate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),point:=geom_from_wkt('Point(5 1)')) \u2192 5.0 Nota bene: -- Osservazioni: --","title":"line_locate_point"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#line_merge","text":"Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola. Questa funzione restituir\u00e0 NULL se la geometria considerata non \u00e8 una LineString/MultiLineString. Sintassi: line_merge( geometry ) Argomenti: geometry una geometria di tipo LineString/MultiLineString Esempi: geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(1 1, 2 2))'))) \u2192 'LineString(0 0,1 1,2 2)' geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(11 1, 21 2))'))) \u2192 'MultiLineString((0 0, 1 1),(11 1, 21 2)' Nota bene: -- Osservazioni: --","title":"line_merge"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#line_substring","text":"Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate (misurata dall'inizio della linea). I valori Z e M sono linearmente interpolati dai valori esistenti. Sintassi: line_substring( geometry , start_distance , end_distance ) Argomenti: geometry una geometria lineare o curva start_distance distanza all'inizio della sottostringa end_distance distanza alla fine della sottostringa Esempi: geom_to_wkt(line_substring(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),start_distance:=2,end_distance:=6)) \u2192 'LineString (2 0,6 0)' line_substring( $geometry, $length *.1,$length *.6) \u2192 <geometria: LineString> Nota bene: -- Osservazioni: -- Funzione utile per la tematizzazione","title":"line_substring"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#m","text":"Restituisce il valore m di una geometria puntuale. Sintassi: m( geometry ) Argomenti: geometry una geometria punto Esempi: ( geom_from_wkt( 'POINTM(2 5 4)' ) ) \u2192 4 Nota bene: -- Osservazioni:","title":"m"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#m_max","text":"Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_max( geometry ) Argomenti: geometry una geometria contenente m valori Esempi: m_max( make_point_m( 0,0,1 ) ) \u2192 1 m_max(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 2 Nota bene: -- Osservazioni: --","title":"m_max"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#m_min","text":"Restituisce il valore minimo m (misura) di una geometria. Sintassi: m_min( geometry ) Argomenti: geometry una geometria contenente m valori Esempi: m_min( make_point_m( 0,0,1 ) ) \u2192 1 m_min(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 0 Nota bene: -- Osservazioni:","title":"m_min"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#main_angle","text":"Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria. Sintassi: main_angle( geometry ) Argomenti: geometry una geometria poligono Esempi: main_angle(geom_from_wkt('Polygon ((321577 129614, 321581 129618, 321585 129615, 321581 129610, 321577 129614))')) \u2192 38.66 Nota bene: -- Osservazioni:","title":"main_angle"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_circle","text":"Crea un poligono circolare. Sintassi: make_circle( center , radius [, segments=36 ]) [ ] indica componenti opzionali Argomenti: center centro del cerchio radius raggio del cerchio segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt(make_circle(make_point(10,10), 5, 4)) \u2192 'Polygon ((10 15, 15 10, 10 5, 5 10, 10 15))' geom_to_wkt(make_circle(make_point(10,10,5), 5, 4)) \u2192 'PolygonZ ((10 15 5, 15 10 5, 10 5 5, 5 10 5, 10 15 5))'' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 4)) \u2192 'PolygonZM ((10 15 5 30, 15 10 5 30, 10 5 5 30, 5 10 5 30, 10 15 5 30))' Nota bene: -- Osservazioni: --","title":"make_circle"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_ellipse","text":"Crea un poligono ellittico. Sintassi: make_ellipse( center , semi_major_axis , semi_minor_axis , azimuth [, segments=36 ]) Argomenti: center centro dell'ellisse semi_major_axis semi-asse maggiore dell'ellisse semi_minor_axis semi-asse minore dell'ellisse azimuth orientazione dell'ellisse segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt(make_ellipse(make_point(10,10), 5, 2, 90, 4)) \u2192 'Polygon ((15 10, 10 8, 5 10, 10 12, 15 10)) geom_to_wkt(make_ellipse(make_point(10,10,5), 5, 2, 90, 4)) \u2192 'PolygonZ ((15 10 5, 10 8 5, 5 10 5, 10 12 5, 15 10 5))' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 2, 90, 4)) \u2192 'PolygonZM ((15 10 5 30, 10 8 5 30, 5 10 5 30, 10 12 5 30, 15 10 5 30))' Nota bene: -- Osservazioni: --","title":"make_ellipse"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_line","text":"Crea una geometria linea da una serie di geometrie punto. Sintassi: make_line( point1 , point2 , \u2026_) Argomenti: point una geometria punto Esempi: geom_to_wkt(make_line(make_point(2,4),make_point(3,5))) \u2192 'LineString (2 4, 3 5)' geom_to_wkt(make_line(make_point(2,4),make_point(3,5),make_point(9,7))) \u2192 'LineString (2 4, 3 5, 9 7)'","title":"make_line"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#array-variant","text":"I vertici di linea sono specificati come una matrice di punti. Sintassi: make_line( array ) Argomenti: array Matrice di punti Esempi:o geom_to_wkt(make_line(array(make_point(2,4),make_point(3,5),make_point(9,7)))) \u2192 'LineString (2 4, 3 5, 9 7)' Espressione usata make_line( array(geometry( get_feature_by_id('fontanelle_Palermo',$id))), array(geometry( get_feature_by_id('fontanelle_Palermo',not $id%2))) ) Nota bene: -- Osservazioni: --","title":"Array variant"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_point","text":"Crea una geometria punto da valori x ed y (e opzionalmente z ed m). Sintassi: make_point( x , y , z , m ) Argomenti: x coordinata x del punto y coordinata y del punto z coordinata opzionale z del punto m valore m del punto Esempi: geom_to_wkt(make_point(2,4,6,8)) \u2192 'PointZM (2 4 6 8)' Nota bene: -- Osservazioni:","title":"make_point"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_point_m","text":"Crea una geometria punto da una coordinata x, y ed un valore m. Sintassi: make_point_m_( x , y , m ) Argomenti: x coordinata x del punto y coordinata y del punto m valore m del punto Esempi: geom_to_wkt(make_point_m(2,4,6)) \u2192 'PointM (2 4 6)' Nota bene: -- Osservazioni:","title":"make_point_m"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_polygon","text":"Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne. Sintassi: make_polygon( outerRing [, innerRing1 ][, innerRing2 ] \u2026_) [ ] indica componenti opzionali Argomenti: outerRing geometria a linea chiusa per l'anello esterno del poligono innerRing geometria a linea chiusa opzionale per anello interno Esempi: * geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0))' * geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'),geom_from_wkt('LINESTRING( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1 )'),geom_from_wkt('LINESTRING( 0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0),(0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1),(0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8))' Nota bene: -- Osservazioni:","title":"make_polygon"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_rectangle_3points","text":"Crea un rettangolo da 3 punti. Sintassi: make_rectangle_3points( point1 , point2 , point3 [,option=0]\u2026) Argomenti: point1 Primo punto point2 Secondo punto point3 Terzo punto option Un argomento facoltativo per costruire il rettangolo. Di default questo valore \u00e8 0. Il valore pu\u00f2 essere 0 (distanza) o 1 (proiettato). Distanza opzione: la seconda distanza \u00e8 uguale alla distanza tra il 2 \u00b0 e il 3 \u00b0 punto. Opzione proiettata: la seconda distanza \u00e8 uguale alla distanza della proiezione perpendicolare del terzo punto sul segmento o della sua estensione. Esempi: geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5), make_point(5, 5), 0))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5),make_point(5, 3), 1))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' Nota bene: -- Osservazioni: --","title":"make_rectangle_3points"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_regular_polygon","text":"Crea un poligono regolare. Sintassi: make_regular_polygon( center , radius , number_sides [, circle=0 ]) [ ] indica componenti opzionali Argomenti: center centro del poligono regolare radius secondo punto. Il primo se il poligono regolare \u00e8 inscritto. Il punto intermedio del primo lato se il poligono regolare \u00e8 circoscritto. number_sides Numero di lati del poligono regolare circle Argomento opzionale per la costruzione del poligono regolare. Il valore predefinito \u00e8 0. Il valore pu\u00f2 essere 0 (poligono iscritto) o 1 (poligono circoscritto) Esempi: geom_to_wkt(make_regular_polygon(make_point(0,0), make_point(0,5), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' geom_to_wkt(make_regular_polygon(make_point(0,0), project(make_point(0,0), 4.0451, radians(36)), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' Nota bene: -- Osservazioni: --","title":"make_regular_polygon"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_square","text":"Crea un quadrato da una diagonale. Sintassi: make_square( point1 , point2 ) Argomenti: point1 Primo punto della diagonale point2 Secondo punto della diagonale Esempi: geom_to_wkt(make_square( make_point(0,0), make_point(5,5))) \u2192 'Polygon ((0 0, -0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_square( make_point(5,0), make_point(5,5))) \u2192 'Polygon ((5 0, 2.5 2.5, 5 5, 7.5 2.5, 5 0))' Nota bene: -- Osservazioni:","title":"make_square"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#make_triangle","text":"Crea un poligono triangolare Sintassi: make_triangle( point1 , point2 , point3 ) Argomenti: point1 Primo punto del triangolo point2 Secondo punto del triangolo point3 Secondo punto del triangolo Esempi: geom_to_wkt(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10))) \u2192 'Triangle ((0 0, 5 5, 0 10, 0 0))' geom_to_wkt(boundary(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10)))) \u2192 'LineString (0 0, 5 5, 0 10, 0 0)' Nota bene: -- Osservazioni:","title":"make_triangle"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#minimal_circle","text":"Restituisce la circonferenza circoscritta minima di una geometria. Rappresenta il cerchio minimo che circoscrive tutte le geometrie presenti in un dataset. Sintassi: minimal_circle( geometry [, segments=36 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria segments argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi: geom_to_wkt( minimal_circle( geom_from_wkt( 'LINESTRING(0 5, 0 -5, 2 1)' ), 4 ) ) \u2192 Polygon ((0 5, 5 -0, -0 -5, -5 0, 0 5)) geom_to_wkt( minimal_circle( geom_from_wkt( 'MULTIPOINT(1 2, 3 4, 3 2)' ), 4 ) ) \u2192 Polygon ((3 4, 3 2, 1 2, 1 4, 3 4)) Nota bene: -- Osservazioni: --","title":"minimal_circle"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#nodes_to_points","text":"Restituisce una geometria multi-punti costituita da ogni nodo della geometria in ingresso. Sintassi: nodes_to_points( geometry [, ignore_closing_nodes=false ]) Argomenti: geometry oggetto geometria ignore_closing_nodes argomento opzionale che specifica se includere i nodi duplicati che chiudono linee o poligoni ad anello. Normalmente false, impostare a true per evitare di includere questi nodi duplicati nella raccolta in uscita. Esempi: geom_to_wkt(nodes_to_points(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiPoint ((0 0),(1 1),(2 2))' geom_to_wkt(nodes_to_points(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'),true)) \u2192 'MultiPoint ((-1 -1),(4 0),(4 2),(0 2))' Nota bene: -- Osservazioni: --","title":"nodes_to_points"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#num_geometries","text":"Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi: num_geometries( geometry ) Argomenti: geometry raccolta di geometrie Esempi: num_geometries(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))')) \u2192 4 Nota bene: -- Osservazioni:","title":"num_geometries"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#num_interior_rings","text":"Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_interior_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi: num_interior_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 1 Nota bene: -- Osservazioni: --","title":"num_interior_rings"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#num_points","text":"Restituisce il numero di vertici in una geometria. Sintassi: num_points( geometry ) Argomenti: geometry una geometria Esempi: num_points($geometry) \u2192 numero di vertici in $geometry Nota bene: -- Osservazioni:","title":"num_points"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#num_rings","text":"Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi: num_rings( geometry ) Argomenti: geometry geometria in ingresso Esempi: num_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 2 Nota bene: -- Osservazioni: --","title":"num_rings"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#offset_curve","text":"Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato. Le distanze sono espresse nel SR di tale geometria. Sintassi: offset_curve( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di offset. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in una linea pi\u00f9 morbida, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi: offset_curve($geometry, 10.5) \u2192 linea scostata a sinistra di 10.5 unit\u00e0 offset_curve($geometry, -10.5) \u2192 linea scostata a destra di 10.5 unit\u00e0 offset_curve($geometry, 10.5, segments=16, join=1) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in una curva pi\u00f9 morbida offset_curve($geometry, 10.5, join=3) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando un'unione smussata Nota bene: -- Osservazioni: La linea \u00e8 scostata a sinistra o destra rispetto al verso della linea:","title":"offset_curve"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#order_parts","text":"Ordina le parti di una MultiGeometria secondo un dato criterio Sintassi: order_parts( geometry , orderby [, ascending=true ]) [ ] indica componenti opzionali Argomenti: geometry una geometria multi-tipo orderby un espressione stringa che definisce il criterio di ordinamento ascending booleano, True per ascendente, False per discendente Esempi: order_parts(geom_from_wkt('MultiPolygon (((1 1, 5 1, 5 5, 1 5, 1 1)),((1 1, 9 1, 9 9, 1 9, 1 1)))'), 'area($geometry)', False) \u2192 MultiPolygon (((1 1, 9 1, 9 9, 1 9, 1 1)),((1 1, 5 1, 5 5, 1 5, 1 1))) order_parts(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), '1', True) \u2192 LineString(1 2, 3 2, 4 3) Nota bene: -- Osservazioni:","title":"order_parts"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#oriented_bbox","text":"Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria. Sintassi: oriented_bbox( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(oriented_bbox(geom_from_wkt('MULTIPOINT(1 2, 3 4, 3 2)'))) \u2192 'Polygon ((1 2, 2 1, 4 3, 3 4, 1 2))' Nota bene: -- Osservazioni: --","title":"oriented_bbox"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#overlaps","text":"Controlla qualora una geometria si sovrapponga ad un'altra. Restituisce true (1) se le geometrie condividono aree, ma non sono completamente contenute una nell'altra. Sintassi: overlaps( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: overlaps( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 5, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 overlaps( geom_from_wkt( 'LINESTRING(0 0, 1 1)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 0 Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: overlaps(geometry(get_feature( 'cerchio','id','1')), $geometry) dove: geometry1 \u00e8 geometry(get_feature('cerchio','id','1')) geometry2 \u00e8 $geometry seleziono tutti i comuni overlaps (sovrapposti) al cerchio in figura. PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli sovrapposti con il cerchio). NOT overlaps(geometry(get_feature('cerchio','id','1')),$geometry)","title":"overlaps"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#overlay_contains","text":"Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Contains\" sottostante, come descritto nella funzione PostGIS ST_CONTAINS . Sintassi: overlay_contains( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_contains('regions') \u2192 true se l'elemento corrente contiene spazialmente una regione * overlay_contains('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente contiene spazialmente una regione con una popolazione maggiore di 10000 * overlay_contains('regions', name) \u2192 un array di nomi, per le regioni contenute nell'elemento corrente * array_to_string(overlay_contains('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni contenute nell'elemento corrente * overlay_contains('regions', name)[0] \u2192 una stringa con il nome della regione contenuta nell'elemento corrente * array_sort(overlay_contains(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenute nell'elemento corrente e con una popolazione superiore a 10000 * overlay_contains(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenute nell'elemento corrente Nota bene: -- Osservazioni:","title":"overlay_contains"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#overlay_crosses","text":"Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento di un layer target o un array di risultati basati su espressioni per gli elementi nel layer target attraversati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Crosses\" sottostante, come descritto nella funzione PostGIS ST_Crosses . Sintassi: overlay_crosses( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_crosses('regions') \u2192 true se l'elemento corrente attraversa spazialmente una regione * overlay_crosses('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente attraversa spazialmente una regione con una popolazione maggiore di 10000 * overlay_crosses('regions', name) \u2192 un array di nomi, per le regioni attraversate dall'elemento corrente * array_to_string(overlay_crosses('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni attraversate dall'elemento corrente * overlay_crosses('regions', name)[0] \u2192 una stringa con il nome della prima regioni attraversata dall'elemento corrente * array_sort(overlay_crosses(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni attraversate dall'elemento corrente e con una popolazione superiore a 10000 * overlay_crosses(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni attraversate dall'elemento corrente Nota bene: -- Osservazioni:","title":"overlay_crosses"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#overlay_disjoint","text":"Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer target, o un array di risultati basati su espressione per gli elementi nel layer target che sono disgiunti dall'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Disjoint\", come descritto nella funzione PostGIS ST_Disjoint . Sintassi: overlay_disjoint( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_disjoint('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni * overlay_disjoint('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni con una popolazione maggiore di 10000 * overlay_disjoint('regions', name) \u2192 un array di nomi, per le regioni spazialmente disgiunte dall'elemento corrente * array_to_string(overlay_disjoint('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni spazialmente disgiunte dall'elemento corrente * overlay_disjoint('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente disgiunte dall'elemento corrente * array_sort(overlay_disjoint(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente disgiunte dall'elemento corrente e con una popolazione superiore a 10000 * overlay_disjoint(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente disgiunte dall'elemento corrente Nota bene: -- Osservazioni:overlay_disjoint","title":"overlay_disjoint"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#overlay_equals","text":"Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target che sono spazialmente uguali all'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Equals\" sottostante, come descritto nella funzione PostGIS ST_Equals . Sintassi: overlay_equals( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_equals('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente uguale ad una regione * overlay_equals('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente uguale ad una regione con una popolazione maggiore di 10000 * overlay_equals('regions', name) \u2192 un array di nomi, per le regioni spazialmente uguali all'elemento corrente * array_to_string(overlay_equals('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni spazialmente uguali all'elemento corrente * overlay_equals('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente uguale all'elemento corrente * array_sort(overlay_equals(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente uguali all'elemento corrente e con una popolazione superiore a 10000 * overlay_equals(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente uguali all'elemento corrente Nota bene: -- Osservazioni:","title":"overlay_equals"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#overlay_intersects","text":"Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target intersecati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Intersects\" sottostante, come descritto nella funzione PostGIS ST_INTERSECTS . Sintassi: overlay_intersects( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_intersects('regions') \u2192 true se l'elemento corrente interseca spazialmente una regione * overlay_intersects('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente interseca spazialmente una regione con una popolazione maggiore di 10000 * overlay_intersects('regions', name) \u2192 un array di nomi, per le regioni intersecate dall'elemento corrente * array_to_string(overlay_intersects('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni intersecate dall'elemento corrente * overlay_intersects('regions', name)[0] \u2192 una stringa con il nome della regione intersecata dall'elemento corrente * array_sort(overlay_intersects(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni intersecate dall'elemento corrente e con una popolazione maggiore di 10000 * overlay_intersects(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni intersecate dall'elemento corrente Nota bene: -- Osservazioni:","title":"overlay_intersects"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#overlay_nearest","text":"Restituisce se l'elemento corrente ha elementi da un layer target entro una data distanza o un array di risultati basati su espressioni per gli elementi nel layer di target entro una distanza dall'elemento corrente. Nota: questa funzione pu\u00f2 essere lenta e consuma molta memoria per layer con molte feature. Sintassi: overlay_contains( layer [, expression ][, filter ][, limit=1 ][, max_distance ][, cache ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); max_distance una distanza opzionale per limitare la ricerca di elementi corrispondenti. Se non impostato, verranno usati tutti gli elementi nel layer di destinazione. cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_nearest('airports') \u2192 true se il layer \"airports\" ha almeno un elemento * overlay_nearest('airports', max_distance:= 5000) \u2192 vero se \u00e8 presente un aeroporto entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente * overlay_nearest('airports', name) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come array * array_to_string(overlay_nearest('airports', name)) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come stringa * overlay_nearest(layer:='airports', expression:= name, max_distance:= 5000) \u2192 il nome dell'aereoporto pi\u00f9 vicino entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, come array * overlay_nearest(layer:='airports', expression:=\"name\", filter:= \"Use\"='Civilian', limit:=3) \u2192 un array di nomi, per un massimo di tre aeroeporti civili pi\u00f9 vicini ordinati per distanza * overlay_nearest(layer:='airports', expression:=\"name\", limit:= -1, max_distance:= 5000) \u2192 un array di nomi, per tutti gli aeroporti entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, ordinato per distanza. Nota bene: -- Osservazioni: Esempio 45: http://hfcqgis.opendatasicilia.it/it/latest/esempi/linea_min_distanza2.html","title":"overlay_nearest"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#overlay_touches","text":"Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target toccati dall'elemento corrente. Leggi ulteriori informazioni sul predicato GEOS \"Touches\", come descritto nella funzione PostGIS ST_TOUCHES . Sintassi: overlay_touches( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_touches('regions') \u2192 true se l'elemento corrente tocca spazialmente una regione * overlay_touches('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente tocca spazialmente una regione con una popolazione maggiore di 10000 * overlay_touches('regions', name) \u2192 un array di nomi, per le regioni tocacte dall'elemento corrente * string_to_array(overlay_touches('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni toccate dall'elemento corrente * overlay_touches('regions', name)[0] \u2192 una stringa con il nome della regione toccata dall'elemento corrente * array_sort(overlay_touches(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni toccate dall'elemento attuale e con una popolazione superiore a 10000 * overlay_touches(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni toccate dall'elemento corrente Nota bene: -- Osservazioni:","title":"overlay_touches"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#overlay_within","text":"Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Within\", come descritto nella funzione PostGIS ST_WITHIN . Sintassi: overlay_within( layer [, expression ][, filter ][, limit ][, cache=false ]_) [ ] indica componenti opzionali Argomenti: layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi: * overlay_within('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente all'interno di una regione * overlay_within('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente all'interno di una regione con una popolazione maggiore di 10000 * overlay_within('regions', name) \u2192 un array di nomi, per le regioni contenenti l'elemento corrente * array_to_string(overlay_within('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni che contengono l'elemento corrente * overlay_within('regions', name)[0] \u2192 una stringa con il nome della regione che contengono l'elemento corrente * array_sort(overlay_within(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenenti l'elemento corrente e con una popolazione superiore a 10000 * overlay_within(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenenti l'elemento corrente Nota bene: -- Osservazioni:","title":"overlay_within"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#perimeter_1","text":"Calcola il perimetro di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $perimeter , la quale esegue calcoli ellissoidali basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura della distanza. Sintassi: perimeter( geometry ) Argomenti: geometry oggetto geometria poligono Esempi: perimeter(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))')) \u2192 12.0 Nota bene: -- Osservazioni:","title":"perimeter"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#point_n","text":"Restituisce un nodo specifico da una geometria. Sintassi: point_n( geometry , index ) Argomenti: geometry oggetto geometria index indice del nodo da restituire, dove 1 \u00e8 il primo nodo; se il valore \u00e8 negativo, l'indice del vertice selezionato sar\u00e0 il suo conteggio totale meno il valore assoluto Esempi: geom_to_wkt(point_n(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))'),2)) \u2192 'Point (4 0)' Nota bene: -- Osservazioni: -- Esempi: correlati esempio nro 4 - Come aggiungere la quota Z alla tabella attributi","title":"point_n"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#point_on_surface","text":"Restituisce un punto garantendo che sia giacente sulla superficie della geometria. Sintassi: point_on_surface( geometry ) Argomenti: geometry una geometria Esempi: point_on_surface($geometry) \u2192 una geometria punto Nota bene: -- Osservazioni: --","title":"point_on_surface"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#pole_of_inaccessibility","text":"Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie. Questa funzione usa l'algoritmo 'polylabel' (Vladimir Agafonkin, 2016), che \u00e8 un approccio iterativo garantito per trovare il vero polo dell'inaccessibilit\u00e0 all'interno di una tolleranza specificata. Tolleranze pi\u00f9 precise richiedono pi\u00f9 iterazioni e sar\u00e0 necessario pi\u00f9 tempo per il calcolo. Sintassi: pole_of_inaccessibility( geometry , tolerance ) Argomenti: geometry una geometria tolerance distanza massima tra il punto restituito e la vera posizione del polo Esempi: geom_to_wkt(pole_of_inaccessibility( geom_from_wkt('POLYGON((0 1,0 9,3 10,3 3, 10 3, 10 1, 0 1))'), 0.1)) \u2192 'Point(1.55, 1.55)' Nota bene: -- Osservazioni: --","title":"pole_of_inaccessibility"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#project","text":"Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti. Sintassi: project( point , distance , azimuth [, elevation ]) [ ] indica componenti opzionali Argomenti: point punto di partenza point distanza da proiettare azimuth azimuth in radianti in senso orario, dove 0 corrisponde a nord elevation angolo di inclinazione in radianti Esempi: project(make_point(1, 2), 3, radians(270)) \u2192 Point(-2, 2) Nota bene: -- Osservazioni: --","title":"project"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#relate","text":"Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie.","title":"relate"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#variabile-di-relazione","text":"Restituisce la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Sintassi: relate( geometry , geometry , geometry_) ) Argomenti: geometry una geometria geometry una geometria Esempi: relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ) ) \u2192 'FF1F00102'","title":"Variabile di relazione"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#variabile-di-corrispondenza-del-modello","text":"Testa se la relazione DE-9IM tra due geometrie corrisponde a un pattern specificato: restituisc true Vero, false Falso. Sintassi: relate( geometry , geometry , pattern ) Argomenti: geometry una geometria geometry una geometria pattern Tratteggio DE-9IM da far corrispondere Esempi:o relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ), '**1F001**' ) \u2192 Vero Nota bene: -- Osservazioni: -- Link utili: Wikipedia OpenGeo","title":"Variabile di corrispondenza del modello"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#reverse","text":"Inverte il verso di una linestring invertendo l'ordine dei sui vertici Sintassi: reverse( geometry ) Argomenti: geometry una geometria Esempi: geom_to_wkt(reverse(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'LINESTRING(2 2, 1 1, 0 0)' Nota bene: -- Osservazioni: --","title":"reverse"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#rotate","text":"Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria. Sintassi: rotate( geometry , rotation [, center ]) [ ] indica componenti opzionali Argomenti: geometry una geometria rotation rotazione oraria in gradi center punto centrale di rotazione. Se non specificato, viene utilizzato il centro del perimetro di delimitazione della geometria. Esempi: rotate($geometry, 45, make_point(4, 5)) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al punto (4, 5) rotate($geometry, 45) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al centro del riquadro di delimitazione Nota bene: -- Osservazioni:","title":"rotate"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#segments_to_lines","text":"Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso. Sintassi: segments_to_lines( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(segments_to_lines(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiLineString ((0 0, 1 1),(1 1, 2 2))' Nota bene: -- Osservazioni:","title":"segments_to_lines"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#shortest_line","text":"Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2. La linea risultante partir\u00e0 dalla geometria 1 e finir\u00e0 nella geometria 2. Sintassi: shortest_line( geometry1 , geometry2 ) Argomenti: geometry1 geometria dalla quale cercare la linea pi\u00f9 corta geometry2 geometria verso la quale cercare la linea pi\u00f9 corta Esempi: geom_to_wkt(shortest_line(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 LineString(73.0769 115.384, 100 100) Nota bene: -- Osservazioni: --","title":"shortest_line"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#simplify","text":"Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker). L'algoritmo mantiene grandi deviazioni nelle geometrie e riduce il numero di vertici in segmenti quasi rettilinei. Sintassi: simplify(simplify_vw( geometry , tolerance ) Argomenti: _ geometry una geometria _ tolerance deviazione massima dai segmenti rettilinei per i punti da rimuovere Esempi: geom_to_wkt(simplify(geometry:=geom_from_wkt('LineString(0 0, 5 0.1, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' Nota bene: -- Osservazioni:","title":"simplify"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#simplify_vw","text":"Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ). L'algoritmo rimuove i vertici che creano piccole aree nelle geometrie, ad esempio picchi stretti o segmenti quasi rettilinei. Sintassi: simplify_vw( geometry , tolerance ) Argomenti: geometry una geometria tolerance una misura dell'area massima creata da un nodo per il nodo da rimuovere Esempi: geom_from_wkt('LineString(0 0, 5 0, 5.01 10, 5.02 0, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' Nota bene: -- Osservazioni: --","title":"simplify_vw"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#single_sided_buffer","text":"Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring. Le distanze sono espresse nel SR di tale geometria. Sintassi: single_sided_buffer( geometry , distance [, segments=8 ][, join=1 ][, miter_limit=2.0 ]) [ ] indica componenti opzionali Argomenti: geometry una geometria (multi)linestring distance distanza di buffer. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi: single_sided_buffer($geometry, 10.5) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0 single_sided_buffer($geometry, -10.5) \u2192 linea bufferizzata a destra di 10.5 unit\u00e0 single_sided_buffer($geometry, 10.5, segments:=16, join:=1) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in un buffer pi\u00f9 morbido single_sided_buffer($geometry, 10.5, join:=3) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando un'unione smussata Nota bene: -- Osservazioni: --","title":"single_sided_buffer"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#smooth","text":"Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria. Sintassi: smooth( geometry , iterations=1 , offset=0.25 , min_length=1 , max_angle=180 ) Argomenti: geometry una geometria iterations Numero di iterazioni di smussatura da applicare. Valori pi\u00f9 alti fanno risultare geometria pi\u00f9 morbide, ma pi\u00f9 complesse. offset valore tra 0 e 0.5 che controlla quanto la geometria smussata segua strettamente la geometria originale. Valori pi\u00f9 piccoli risultano in una lisciatura pi\u00f9 stretta, valori pi\u00f9 grandi risultano in una lisciatura pi\u00f9 larga. min_length lunghezza minima dei segmenti ai quali applicare la smussatura. Questo parametro pu\u00f2 essere usato per evitare di posizionare nodi aggiuntivi eccessivi nei segmenti pi\u00f9 corti della geometria. max_angle angolo massimo (0-180) da applicare al nodo per la smussatura. Abbassando intenzionalmente l'angolo massimo si abbassa l'arrotondamento sugli angoli della geometria. Per esempio, un valore di 80 gradi preserver\u00e0 l'angolo nella geometria. Esempi: Nota bene: -- Osservazioni:","title":"smooth"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#start_point","text":"Restituisce il primo nodo di una geometria. Sintassi: start_point( geometry ) Argomenti: geometry oggetto geometria Esempi: geom_to_wkt(start_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (4 0)' Nota bene: -- Osservazioni: geometry -- Start_point di geometria poligonale: Start_point di geometria lineare:","title":"start_point"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#sym_difference","text":"Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca. Sintassi: sym_difference( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( sym_difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 8 8)' ) ) ) \u2192 LINESTRING(5 5, 8 8) Espressione: -- differenza simmetrica tra le due linee sym_difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente prova tu: Dati e progetto qgz Nota bene: -- Osservazioni: --","title":"sym_difference"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#tapered_buffer","text":"Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea. Sintassi: tapered_buffer( geometry , start_width , end_width [, segments=8 ]_) [ ] contrassegna componenti opzionali Argomenti: geometry input geometry. Deve essere una (multi) geometria della linea. start_width larghezza del buffer all'inizio della linea, end_width larghezza del buffer alla fine della riga. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi: tapered_buffer(geometry:=geom_from_wkt('LINESTRING(1 2, 4 2)'),start_width:=1,end_width:=2,segments:=8) \u2192 Un buffer rastremato che inizia con un diametro di 1 e termina con un diametro di 2 lungo la geometria della linea. Nota bene: -- Osservazioni: -- QGIS - feature","title":"tapered_buffer"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#touches","text":"Verifica se una geometria tocca un'altra. Restituisce vero (1) se le geometrie hanno almeno un punto in comune, ma i loro interni non si intersecano. Sintassi: touches( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: touches( geom_from_wkt( 'LINESTRING(5 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 touches( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 0 Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: touches(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry1 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','52')) geometry2 \u00e8 $geometry seleziono tutti i comuni touches (toccati) dalla provincia con pk_uid 46 (Siena) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli toccati dalla provincia di Siena). NOT touches(geometry(get_feature( 'province_rt_rt','pk_uid','52')),$geometry)","title":"touches"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#transform","text":"Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione. Sintassi: transform( geometry , source_auth_id , dest_auth_id ) Argomenti: geometry una geometria source_auth_id ID del SR sorgente dest_auth_id ID del SR destinazione Esempi: geom_to_wkt( transform( $geometry, 'EPSG:2154', 'EPSG:4326' ) ) \u2192 POINT(0 51) Nota bene: -- Osservazioni: --","title":"transform"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#translate","text":"Restituisce una versione traslata di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: translate( geometry , dx , dy ) Argomenti: geometry una geometria dx delta x geomdyetry delta y Esempi: translate($geometry, 5, 10) \u2192 una geometria dello stesso tipo come l'originale Nota bene: -- Osservazioni: --","title":"translate"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#union","text":"Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie. Sintassi: union( geometry1 , geometry2 ) Argomenti: geometry1 una geometria geometry2 una geometria Esempi: geom_to_wkt( union( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) ) \u2192 MULTIPOINT(4 4, 5 5) Espressione: -- unione delle due linee union( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente prova tu: Dati e progetto qgz Nota bene: -- Osservazioni: --","title":"union"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#wedge_buffer","text":"Restituisce un buffer a forma di cuneo che origina da una geometria del punto. Sintassi: wedge_buffer( geometry , azimuth , width , outer_radius [, inner_radius=0.0 ]_) [ ] contrassegna componenti opzionali Argomenti: geometry punto centrale (origine) del buffer. Deve essere una geometria puntuale. azimuth (in gradi) per il centro del cuneo da puntare. width buffer w larghezza (in gradi). Si noti che il cuneo si estender\u00e0 fino a met\u00e0 della larghezza angolare su entrambi i lati della direzione dell'azimut. outer_radius raggio esterno per i buffers inner_radius raggio interno opzionale per i buffers Esempi: wedge_buffer(center:=geom_from_wkt('POINT(1 2)'),azimuth:=90,width:=180,outer_radius:=1) \u2192 Un buffer a forma di cuneo centrato sul punto (1,2), rivolto verso est, con una larghezza di 180 gradi e raggio esterno di 1. Nota bene: -- Osservazioni: --","title":"wedge_buffer"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#within","text":"Controlla qualora una geometria sia interna ad un'altra. Restituisce 1 (vero) se la geometria a \u00e8 completamente contenuta nella_ geometria b_. Sintassi: within( geometry1 , geometry2 ) Argomenti: geometry1 _ una geometria geometry2 una geometria Esempi: within( geom_from_wkt( 'POINT( 0.5 0.5)' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ) ) \u2192 1 within( geom_from_wkt( 'POINT( 5 5 )' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ) ) \u2192 0 Nota bene: -- Osservazioni: Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) dove: geometry1 \u00e8 $geometry geometry2 \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','53')) seleziono tutti i comuni within (contenuti) nella provincia con pk_uid 53 (Grosseto) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Grosseto). NOT within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) Altro esempio con condizione sulle etichette CASE WHEN within( $geometry, geometry(get_feature('poligono','id',1))) = 1 THEN 'INTERNO' ELSE 'NON INTERNO' END","title":"within"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#x_1","text":"Restituisce la minima coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale. Sintassi: x( geometry ) Argomenti: geometry una geometria Esempi: x( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 2 x( $geometry ) \u2192 coordinata x del centroide dell'elemento corrente Nota bene: -- Osservazioni: --","title":"x"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#x_max","text":"Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_max( geometry ) Argomenti: geometry una geometria Esempi: x_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 4 Nota bene: -- Osservazioni: --","title":"x_max"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#x_min","text":"Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: x_min( geometry ) Argomenti: geometry una geometria Esempi: x_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 2 Nota bene: -- Osservazioni: --","title":"x_min"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#y_1","text":"Restituisce la coordinata y minima di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale. Sintassi: y( geometry ) Argomenti: geometry una geometria Esempi: y( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 5 y( $geometry ) \u2192 coordinata y del centroide dell'elemento corrente Nota bene: -- Osservazioni: --","title":"y"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#y_max","text":"Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_max( geometry ) Argomenti: geometry una geometria Esempi: y_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 8 Nota bene: -- Osservazioni: --","title":"y_max"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#y_min","text":"Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi: y_min( geometry ) Argomenti: geometry una geometria Esempi: y_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 5 Nota bene: -- Osservazioni: --","title":"y_min"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#z","text":"Restituisce la coordinata z di una geometria puntuale. Sintassi: z( geometry ) Argomenti: geometry una geometria punto Esempi: z( geom_from_wkt( 'POINTZ(2 5 7)' ) ) \u2192 7 Nota bene: -- Osservazioni:","title":"z"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#z_max","text":"Restituisce la coordinata z massima di una geometria. Sintassi: z_max( geometry ) Argomenti: geometry una geometria con z coordinata Esempi: * z_max( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 * z_max( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 3 * z_max( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 0 * z_max( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 2 * z_max( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL Nota bene: -- Osservazioni: --","title":"z_max"},{"location":"gr_funzioni/geometria/geometria_unico_copia/#z_min","text":"Restituisce la coordinata z minima di una geometria. Sintassi: z_min( geometry ) Argomenti: geometry una geometria con z coordinata Esempi: * z_min( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 * z_min( geom_from_wkt( 'MULTIPOINT ( 0 0 1 , 1 1 3 )' ) ) \u2192 1 * z_min( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2 * z_min( geom_from_wkt( 'LINESTRING( 0 0 0, 1 0 2, 1 1 -1 )' ) ) \u2192 -1 * z_min( geom_from_wkt( 'POINT ( 0 0 )' ) ) \u2192 NULL Nota bene: -- Osservazioni: --","title":"z_min"},{"location":"gr_funzioni/geometria/geometry/","text":"geometry \u21b5 Restituisce la geometria di un elemento. Sintassi \u21b5 geometry( feature ) Argomenti \u21b5 feature un oggetto geometria Esempi \u21b5 geom_to_wkt( geometry( get_feature( layer, attributeField, value ) ) ) \u2192 'POINT(6 50)' intersects( $geometry, geometry( get_feature( layer, attributeField, value ) ) ) \u2192 vero nota bene \u21b5 -- osservazioni \u21b5 -- Usando il Select by Expression : selezionare le feature di un layer (quartieri) in funzione di altro layer (test):","title":"geometry"},{"location":"gr_funzioni/geometria/geometry/#geometry","text":"Restituisce la geometria di un elemento.","title":"geometry"},{"location":"gr_funzioni/geometria/geometry/#sintassi","text":"geometry( feature )","title":"Sintassi"},{"location":"gr_funzioni/geometria/geometry/#argomenti","text":"feature un oggetto geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/geometry/#esempi","text":"geom_to_wkt( geometry( get_feature( layer, attributeField, value ) ) ) \u2192 'POINT(6 50)' intersects( $geometry, geometry( get_feature( layer, attributeField, value ) ) ) \u2192 vero","title":"Esempi"},{"location":"gr_funzioni/geometria/geometry/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/geometry/#osservazioni","text":"-- Usando il Select by Expression : selezionare le feature di un layer (quartieri) in funzione di altro layer (test):","title":"osservazioni"},{"location":"gr_funzioni/geometria/geometry_n/","text":"geometry_n \u21b5 Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi \u21b5 geometry_n( geometry, index ) Argomenti \u21b5 geometry raccolta di geometrie index indice della geometria da restituire, dove 1 \u00e8 la prima geometria nella raccolta Esempi \u21b5 geom_to_wkt(geometry_n(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))'),3)) \u2192 'Point (1 0)' nota bene \u21b5 -- osservazioni \u21b5 Personalmente mai usata!","title":"geometry_n"},{"location":"gr_funzioni/geometria/geometry_n/#geometry_n","text":"Restituisce una geometria specifica da una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta.","title":"geometry_n"},{"location":"gr_funzioni/geometria/geometry_n/#sintassi","text":"geometry_n( geometry, index )","title":"Sintassi"},{"location":"gr_funzioni/geometria/geometry_n/#argomenti","text":"geometry raccolta di geometrie index indice della geometria da restituire, dove 1 \u00e8 la prima geometria nella raccolta","title":"Argomenti"},{"location":"gr_funzioni/geometria/geometry_n/#esempi","text":"geom_to_wkt(geometry_n(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))'),3)) \u2192 'Point (1 0)'","title":"Esempi"},{"location":"gr_funzioni/geometria/geometry_n/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/geometry_n/#osservazioni","text":"Personalmente mai usata!","title":"osservazioni"},{"location":"gr_funzioni/geometria/hausdorff_distance/","text":"hausdorff_distance \u21b5 Restituisce la distanza di Hausdorff tra due geometrie. Questa \u00e8 in sostanza una misura di come le 2 geometrie sono simili o dissimili: una distanza pi\u00f9 bassa indica geometrie pi\u00f9 simili. La funzione pu\u00f2 essere eseguita con un argomento opzionale di densificazione della frazione. Se non viene specificato, viene utilizzata una approssimazione alla distanza standard di Hausdorff. Questa approssimazione \u00e8 esatta o abbastanza vicina per un grande sottoinsieme di casi utili. Esempi di questi sono: calcolare la distanza tra Linestrings che sono approssimativamente paralleli tra loro e sono sostanzialmente uguali in lunghezza. Ci\u00f2 si verifica nelle verifica di reti lineari. testare la somiglianza di geometrie. Se l'approssimazione predefinita fornita da questo metodo \u00e8 insufficiente, specifica l'argomento opzionale di densificazione della frazione. Specificando questo argomento si esegue una densificazione del segmento prima di calcolare la distanza Hausdorff discreta. Il parametro imposta la frazione con cui densificare ogni segmento. Ogni segmento sar\u00e0 suddiviso in un numero di subsegmenti di uguale lunghezza, la cui frazione della lunghezza totale \u00e8 la pi\u00f9 vicina alla frazione data. Riducendo il parametro di densificazione della frazione, la distanza restituita si avviciner\u00e0 alla vera distanza Hausdorff per le geometrie. Sintassi \u21b5 hausdorff_distance( geometry a, geometry b, densify_fraction ) Argomenti \u21b5 geometry a una geometria geometry b una geometria densify_fraction quantit\u00e0 di densificazione della frazione Esempi \u21b5 hausdorff_distance( geometry1:= geom_from_wkt('LINESTRING (0 0, 2 1)'),geometry2:=geom_from_wkt('LINESTRING (0 0, 2 0)')) \u2192 2 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)')) \u2192 14.142135623 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)'),0.5) \u2192 70.0 nota bene \u21b5 -- osservazioni \u21b5 -- Nel caso di geometrie puntuali la hausdorff_distance coincide con la funzione distance , segue un esempio: format_number( hausdorff_distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' || '\\n'|| format_number( distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' In questo esempio confronto due layer: il numero pi\u00f9 piccolo indica il poligono pi\u00f9 simile a al poligono pi\u00f9 grande.","title":"hausdorff_distance"},{"location":"gr_funzioni/geometria/hausdorff_distance/#hausdorff_distance","text":"Restituisce la distanza di Hausdorff tra due geometrie. Questa \u00e8 in sostanza una misura di come le 2 geometrie sono simili o dissimili: una distanza pi\u00f9 bassa indica geometrie pi\u00f9 simili. La funzione pu\u00f2 essere eseguita con un argomento opzionale di densificazione della frazione. Se non viene specificato, viene utilizzata una approssimazione alla distanza standard di Hausdorff. Questa approssimazione \u00e8 esatta o abbastanza vicina per un grande sottoinsieme di casi utili. Esempi di questi sono: calcolare la distanza tra Linestrings che sono approssimativamente paralleli tra loro e sono sostanzialmente uguali in lunghezza. Ci\u00f2 si verifica nelle verifica di reti lineari. testare la somiglianza di geometrie. Se l'approssimazione predefinita fornita da questo metodo \u00e8 insufficiente, specifica l'argomento opzionale di densificazione della frazione. Specificando questo argomento si esegue una densificazione del segmento prima di calcolare la distanza Hausdorff discreta. Il parametro imposta la frazione con cui densificare ogni segmento. Ogni segmento sar\u00e0 suddiviso in un numero di subsegmenti di uguale lunghezza, la cui frazione della lunghezza totale \u00e8 la pi\u00f9 vicina alla frazione data. Riducendo il parametro di densificazione della frazione, la distanza restituita si avviciner\u00e0 alla vera distanza Hausdorff per le geometrie.","title":"hausdorff_distance"},{"location":"gr_funzioni/geometria/hausdorff_distance/#sintassi","text":"hausdorff_distance( geometry a, geometry b, densify_fraction )","title":"Sintassi"},{"location":"gr_funzioni/geometria/hausdorff_distance/#argomenti","text":"geometry a una geometria geometry b una geometria densify_fraction quantit\u00e0 di densificazione della frazione","title":"Argomenti"},{"location":"gr_funzioni/geometria/hausdorff_distance/#esempi","text":"hausdorff_distance( geometry1:= geom_from_wkt('LINESTRING (0 0, 2 1)'),geometry2:=geom_from_wkt('LINESTRING (0 0, 2 0)')) \u2192 2 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)')) \u2192 14.142135623 hausdorff_distance( geom_from_wkt('LINESTRING (130 0, 0 0, 0 150)'),geom_from_wkt('LINESTRING (10 10, 10 150, 130 10)'),0.5) \u2192 70.0","title":"Esempi"},{"location":"gr_funzioni/geometria/hausdorff_distance/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/hausdorff_distance/#osservazioni","text":"-- Nel caso di geometrie puntuali la hausdorff_distance coincide con la funzione distance , segue un esempio: format_number( hausdorff_distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' || '\\n'|| format_number( distance( transform($geometry,'EPSG:4326','EPSG:3004'), transform(geometry(get_feature('fontanelle','n',1)),'EPSG:4326','EPSG:3004'))/1000,4) || ' km' In questo esempio confronto due layer: il numero pi\u00f9 piccolo indica il poligono pi\u00f9 simile a al poligono pi\u00f9 grande.","title":"osservazioni"},{"location":"gr_funzioni/geometria/inclination/","text":"inclination \u21b5 Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b . Sintassi \u21b5 inclination( point_a, point_b ) Argomenti \u21b5 point_a geometria punto point_b geometria punto Esempi \u21b5 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"inclination"},{"location":"gr_funzioni/geometria/inclination/#inclination","text":"Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b .","title":"inclination"},{"location":"gr_funzioni/geometria/inclination/#sintassi","text":"inclination( point_a, point_b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/inclination/#argomenti","text":"point_a geometria punto point_b geometria punto","title":"Argomenti"},{"location":"gr_funzioni/geometria/inclination/#esempi","text":"inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0","title":"Esempi"},{"location":"gr_funzioni/geometria/inclination/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/inclination/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/interior_ring_n/","text":"interior_ring_n \u21b5 Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono. Sintassi \u21b5 interior_ring_n( geometry, index ) Argomenti \u21b5 geometry geometria poligono index Indice dell'anello interno da restituire, dove 1 \u00e8 il primo anello interno Esempi \u21b5 geom_to_wkt(interior_ring_n(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1),(-1 -1, 4 0, 4 2, 0 2, -1 -1))'),1)) \u2192 'LineString (-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))' nota bene \u21b5 -- osservazioni \u21b5 Restituisce una lineastring!!!","title":"interior_ring_n"},{"location":"gr_funzioni/geometria/interior_ring_n/#interior_ring_n","text":"Restituisce un anello interno specifico da una geometria poligonale, o null se la geometria non \u00e8 un poligono.","title":"interior_ring_n"},{"location":"gr_funzioni/geometria/interior_ring_n/#sintassi","text":"interior_ring_n( geometry, index )","title":"Sintassi"},{"location":"gr_funzioni/geometria/interior_ring_n/#argomenti","text":"geometry geometria poligono index Indice dell'anello interno da restituire, dove 1 \u00e8 il primo anello interno","title":"Argomenti"},{"location":"gr_funzioni/geometria/interior_ring_n/#esempi","text":"geom_to_wkt(interior_ring_n(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1),(-1 -1, 4 0, 4 2, 0 2, -1 -1))'),1)) \u2192 'LineString (-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))'","title":"Esempi"},{"location":"gr_funzioni/geometria/interior_ring_n/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/interior_ring_n/#osservazioni","text":"Restituisce una lineastring!!!","title":"osservazioni"},{"location":"gr_funzioni/geometria/intersection/","text":"intersection \u21b5 Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie. Sintassi \u21b5 intersection( geometry1 , geometry2 ) Argomenti \u21b5 geometry1 una geometria geometry2 una geometria Esempi \u21b5 geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(3 3, 4 4) Espressione: -- intersezione tra le due linee intersection( make_line( -- linea a start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea b start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente prova tu \u21b5 Dati e progetto qgz nota bene \u21b5 -- osservazioni \u21b5 --","title":"intersection"},{"location":"gr_funzioni/geometria/intersection/#intersection","text":"Restituisce una geometria che rappresenta la porzione condivisa fra le due geometrie.","title":"intersection"},{"location":"gr_funzioni/geometria/intersection/#sintassi","text":"intersection( geometry1 , geometry2 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/intersection/#argomenti","text":"geometry1 una geometria geometry2 una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/intersection/#esempi","text":"geom_to_wkt( intersection( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4)' ) ) ) \u2192 LINESTRING(3 3, 4 4) Espressione: -- intersezione tra le due linee intersection( make_line( -- linea a start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)), make_line( -- linea b start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente","title":"Esempi"},{"location":"gr_funzioni/geometria/intersection/#prova-tu","text":"Dati e progetto qgz","title":"prova tu"},{"location":"gr_funzioni/geometria/intersection/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/intersection/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/intersects/","text":"intersects \u21b5 Controlla qualora una geometria ne interseca un'altra. Restituisce true (1) se la geometrie si intersecano spazialmente (condividono una porzione di spazio) altrimenti da false (0). Sintassi \u21b5 intersects( geometry a , geometry b ) Argomenti \u21b5 geometry a una geometria geometry b una geometria Esempi \u21b5 intersects( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 falso nota bene \u21b5 -- osservazioni \u21b5 Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry b \u00e8 $geometry seleziono tutti i comuni intersects (interseca) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli intersecati con la provincia di Lucca). NOT intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"intersects"},{"location":"gr_funzioni/geometria/intersects/#intersects","text":"Controlla qualora una geometria ne interseca un'altra. Restituisce true (1) se la geometrie si intersecano spazialmente (condividono una porzione di spazio) altrimenti da false (0).","title":"intersects"},{"location":"gr_funzioni/geometria/intersects/#sintassi","text":"intersects( geometry a , geometry b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/intersects/#argomenti","text":"geometry a una geometria geometry b una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/intersects/#esempi","text":"intersects( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 falso","title":"Esempi"},{"location":"gr_funzioni/geometria/intersects/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/intersects/#osservazioni","text":"Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','46')) geometry b \u00e8 $geometry seleziono tutti i comuni intersects (interseca) nella provincia con pk_uid 46 (Lucca) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli intersecati con la provincia di Lucca). NOT intersects(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry)","title":"osservazioni"},{"location":"gr_funzioni/geometria/intersects_bbox/","text":"intersects_bbox \u21b5 Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria. Restituisce vero (1) se le geometrie intersecano spazialmente il perimetro di delimitazione definito e falso (0) se non lo intersecano. Sintassi \u21b5 intersects_bbox( geometry1 , geometry2 ) Argomenti \u21b5 geometry1 una geometria geometry2 una geometria Esempi \u21b5 intersects_bbox( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects_bbox( geom_from_wkt( 'POINT(6 5)' ), geom_from_wkt( 'POLYGON((3 3, 4 4, 5 5, 3 3))' ) ) \u2192 falso nota bene \u21b5 -- osservazioni \u21b5 --","title":"intersects_bbox"},{"location":"gr_funzioni/geometria/intersects_bbox/#intersects_bbox","text":"Controlla se il perimetro di delimitazione della geometria si sovrappone a quello di un'altra geometria. Restituisce vero (1) se le geometrie intersecano spazialmente il perimetro di delimitazione definito e falso (0) se non lo intersecano.","title":"intersects_bbox"},{"location":"gr_funzioni/geometria/intersects_bbox/#sintassi","text":"intersects_bbox( geometry1 , geometry2 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/intersects_bbox/#argomenti","text":"geometry1 una geometria geometry2 una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/intersects_bbox/#esempi","text":"intersects_bbox( geom_from_wkt( 'POINT(4 5)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 vero intersects_bbox( geom_from_wkt( 'POINT(6 5)' ), geom_from_wkt( 'POLYGON((3 3, 4 4, 5 5, 3 3))' ) ) \u2192 falso","title":"Esempi"},{"location":"gr_funzioni/geometria/intersects_bbox/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/intersects_bbox/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/is_closed/","text":"is_closed \u21b5 Restituisce vero (true) se una linestring \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso (false) se una linestring non \u00e8 chiusa. Se la geometria non \u00e8 una linestring, il risultato sar\u00e0 NULL. Sintassi \u21b5 is_closed( geometry ) Argomenti \u21b5 geometry una geometria linestring Esempi \u21b5 is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero nota bene \u21b5 -- osservazioni \u21b5 --","title":"is_closed"},{"location":"gr_funzioni/geometria/is_closed/#is_closed","text":"Restituisce vero (true) se una linestring \u00e8 chiusa (i punti di inizio e di fine coincidono), o falso (false) se una linestring non \u00e8 chiusa. Se la geometria non \u00e8 una linestring, il risultato sar\u00e0 NULL.","title":"is_closed"},{"location":"gr_funzioni/geometria/is_closed/#sintassi","text":"is_closed( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/is_closed/#argomenti","text":"geometry una geometria linestring","title":"Argomenti"},{"location":"gr_funzioni/geometria/is_closed/#esempi","text":"is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_closed(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero","title":"Esempi"},{"location":"gr_funzioni/geometria/is_closed/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/is_closed/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/is_empty/","text":"is_empty \u21b5 Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null . Sintassi \u21b5 is_empty( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 is_empty(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty(geom_from_wkt('POINT EMPTY')) \u2192 vero nota bene \u21b5 -- osservazioni \u21b5","title":"is_empty"},{"location":"gr_funzioni/geometria/is_empty/#is_empty","text":"Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null .","title":"is_empty"},{"location":"gr_funzioni/geometria/is_empty/#sintassi","text":"is_empty( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/is_empty/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/is_empty/#esempi","text":"is_empty(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty(geom_from_wkt('POINT EMPTY')) \u2192 vero","title":"Esempi"},{"location":"gr_funzioni/geometria/is_empty/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/is_empty/#osservazioni","text":"","title":"osservazioni"},{"location":"gr_funzioni/geometria/is_empty_or_null/","text":"is_empty_or_null \u21b5 Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null_or_null . Sintassi \u21b5 is_empty_or_null( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 is_empty_or_null(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty_or_null(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty_or_null(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty_or_null(geom_from_wkt('POINT EMPTY')) \u2192 vero nota bene \u21b5 -- osservazioni \u21b5","title":"is_empty_or_null"},{"location":"gr_funzioni/geometria/is_empty_or_null/#is_empty_or_null","text":"Restituisce vero se una geometria \u00e8 vuota (senza coordinate), falso se la geometria non \u00e8 vuota e NULL se non c'\u00e8 geometria. Vedi anche is_empty_or_null_or_null .","title":"is_empty_or_null"},{"location":"gr_funzioni/geometria/is_empty_or_null/#sintassi","text":"is_empty_or_null( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/is_empty_or_null/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/is_empty_or_null/#esempi","text":"is_empty_or_null(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)')) \u2192 falso is_empty_or_null(geom_from_wkt('LINESTRING EMPTY')) \u2192 vero is_empty_or_null(geom_from_wkt('POINT(7 4)')) \u2192 falso is_empty_or_null(geom_from_wkt('POINT EMPTY')) \u2192 vero","title":"Esempi"},{"location":"gr_funzioni/geometria/is_empty_or_null/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/is_empty_or_null/#osservazioni","text":"","title":"osservazioni"},{"location":"gr_funzioni/geometria/is_multipart/","text":"is_multipart \u21b5 Restituisce vero se la geometria \u00e8 di tipo Multi. Sintassi \u21b5 is_multipart( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 is_multipart(geom_from_wkt('MULTIPOINT ((0 0),(1 1),(2 2))')) \u2192 vero is_multipart(geom_from_wkt('POINT (0 0)')) \u2192 falso nota bene \u21b5 -- osservazioni \u21b5 --","title":"is_multipart"},{"location":"gr_funzioni/geometria/is_multipart/#is_multipart","text":"Restituisce vero se la geometria \u00e8 di tipo Multi.","title":"is_multipart"},{"location":"gr_funzioni/geometria/is_multipart/#sintassi","text":"is_multipart( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/is_multipart/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/is_multipart/#esempi","text":"is_multipart(geom_from_wkt('MULTIPOINT ((0 0),(1 1),(2 2))')) \u2192 vero is_multipart(geom_from_wkt('POINT (0 0)')) \u2192 falso","title":"Esempi"},{"location":"gr_funzioni/geometria/is_multipart/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/is_multipart/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/is_valid/","text":"is_valid \u21b5 Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole OGC Sintassi \u21b5 is_valid( geom ) Argomenti \u21b5 geom una geometria Esempi \u21b5 is_valid(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero is_valid(geom_from_wkt('LINESTRING(0 0)')) \u2192 falso nota bene \u21b5 -- osservazioni \u21b5 --","title":"is_valid"},{"location":"gr_funzioni/geometria/is_valid/#is_valid","text":"Restituisce vero se una geometria \u00e8 valida; se \u00e8 ben formato in 2D secondo le regole OGC","title":"is_valid"},{"location":"gr_funzioni/geometria/is_valid/#sintassi","text":"is_valid( geom )","title":"Sintassi"},{"location":"gr_funzioni/geometria/is_valid/#argomenti","text":"geom una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/is_valid/#esempi","text":"is_valid(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2, 0 0)')) \u2192 vero is_valid(geom_from_wkt('LINESTRING(0 0)')) \u2192 falso","title":"Esempi"},{"location":"gr_funzioni/geometria/is_valid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/is_valid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/length/","text":"length \u21b5 Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring. Variabile stringa \u21b5 Restituisce il numero di caratteri contenuti in una stringa. Sintassi \u21b5 length( string ) Argomenti \u21b5 string stringa della quale calcolare la lunghezza Esempi \u21b5 length('hello') \u2192 5 Variabile geometria \u21b5 Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length, la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi \u21b5 length( geometry ) Esempi \u21b5 length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4.0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"length"},{"location":"gr_funzioni/geometria/length/#length","text":"Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring.","title":"length"},{"location":"gr_funzioni/geometria/length/#variabile-stringa","text":"Restituisce il numero di caratteri contenuti in una stringa.","title":"Variabile stringa"},{"location":"gr_funzioni/geometria/length/#sintassi","text":"length( string )","title":"Sintassi"},{"location":"gr_funzioni/geometria/length/#argomenti","text":"string stringa della quale calcolare la lunghezza","title":"Argomenti"},{"location":"gr_funzioni/geometria/length/#esempi","text":"length('hello') \u2192 5","title":"Esempi"},{"location":"gr_funzioni/geometria/length/#variabile-geometria","text":"Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length, la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza.","title":"Variabile geometria"},{"location":"gr_funzioni/geometria/length/#sintassi_1","text":"length( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/length/#esempi_1","text":"length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4.0","title":"Esempi"},{"location":"gr_funzioni/geometria/length/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/length/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/length3D/","text":"Funzione length3D \u21b5 Calcola la lunghezza 3D di un oggetto linea geometrica. Se la geometria non \u00e8 un oggetto linea 3D, restituisce la sua lunghezza 2D. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di questa geometria, e le unit\u00e0 della lunghezza restituita corrisponderanno alle unit\u00e0 per l'SR. Questo differisce dai calcoli eseguiti dalla funzione $length, che eseguir\u00e0 calcoli ellissoidali basati sulle impostazioni dell'ellissoide e dell'unit\u00e0 di distanza del progetto. Variabile stringa \u21b5 Restituisce il numero di caratteri contenuti in una stringa. Sintassi \u21b5 length3D(geometry) Argomenti \u21b5 geometry oggetto geometria linea Esempi \u21b5 length3D(geom_from_wkt('LINESTRINGZ(0 0 0, 3 0 4)')) \u2192 5.0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"length3D"},{"location":"gr_funzioni/geometria/length3D/#funzione-length3d","text":"Calcola la lunghezza 3D di un oggetto linea geometrica. Se la geometria non \u00e8 un oggetto linea 3D, restituisce la sua lunghezza 2D. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di questa geometria, e le unit\u00e0 della lunghezza restituita corrisponderanno alle unit\u00e0 per l'SR. Questo differisce dai calcoli eseguiti dalla funzione $length, che eseguir\u00e0 calcoli ellissoidali basati sulle impostazioni dell'ellissoide e dell'unit\u00e0 di distanza del progetto.","title":"Funzione length3D"},{"location":"gr_funzioni/geometria/length3D/#variabile-stringa","text":"Restituisce il numero di caratteri contenuti in una stringa.","title":"Variabile stringa"},{"location":"gr_funzioni/geometria/length3D/#sintassi","text":"length3D(geometry)","title":"Sintassi"},{"location":"gr_funzioni/geometria/length3D/#argomenti","text":"geometry oggetto geometria linea","title":"Argomenti"},{"location":"gr_funzioni/geometria/length3D/#esempi","text":"length3D(geom_from_wkt('LINESTRINGZ(0 0 0, 3 0 4)')) \u2192 5.0","title":"Esempi"},{"location":"gr_funzioni/geometria/length3D/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/length3D/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/line_interpolate_angle/","text":"line_interpolate_angle \u21b5 Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord. Sintassi \u21b5 line_interpolate_angle( geometry, distance ) Argomenti \u21b5 geometry una geometria di tipo linestring distance distanza lungo la linea a cui interpolare l'angolo Esempi \u21b5 line_interpolate_angle(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5) \u2192 90.0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"line_interpolate_angle"},{"location":"gr_funzioni/geometria/line_interpolate_angle/#line_interpolate_angle","text":"Restituisce l'angolo parallelo alla geometria ad una distanza specifica lungo una geometria di tipo linestring. Gli angoli sono in gradi in senso orario dal nord.","title":"line_interpolate_angle"},{"location":"gr_funzioni/geometria/line_interpolate_angle/#sintassi","text":"line_interpolate_angle( geometry, distance )","title":"Sintassi"},{"location":"gr_funzioni/geometria/line_interpolate_angle/#argomenti","text":"geometry una geometria di tipo linestring distance distanza lungo la linea a cui interpolare l'angolo","title":"Argomenti"},{"location":"gr_funzioni/geometria/line_interpolate_angle/#esempi","text":"line_interpolate_angle(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5) \u2192 90.0","title":"Esempi"},{"location":"gr_funzioni/geometria/line_interpolate_angle/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/line_interpolate_angle/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/line_interpolate_point/","text":"line_interpolate_point \u21b5 Restituisce il punto interpolato ad una specifica distanza lungo una geometria di tipo linestring. Sintassi \u21b5 line_interpolate_point( geometry, distance ) Argomenti \u21b5 geometry una geometria di tipo linestring distance distanza da interpolare lungo la linea Esempi \u21b5 geom_to_wkt(line_interpolate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5)) \u2192 'Point (4 0)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"line_interpolate_point"},{"location":"gr_funzioni/geometria/line_interpolate_point/#line_interpolate_point","text":"Restituisce il punto interpolato ad una specifica distanza lungo una geometria di tipo linestring.","title":"line_interpolate_point"},{"location":"gr_funzioni/geometria/line_interpolate_point/#sintassi","text":"line_interpolate_point( geometry, distance )","title":"Sintassi"},{"location":"gr_funzioni/geometria/line_interpolate_point/#argomenti","text":"geometry una geometria di tipo linestring distance distanza da interpolare lungo la linea","title":"Argomenti"},{"location":"gr_funzioni/geometria/line_interpolate_point/#esempi","text":"geom_to_wkt(line_interpolate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),distance:=5)) \u2192 'Point (4 0)'","title":"Esempi"},{"location":"gr_funzioni/geometria/line_interpolate_point/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/line_interpolate_point/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/line_locate_point/","text":"line_locate_point \u21b5 Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata. Sintassi \u21b5 line_locate_point( geometry, point ) Argomenti \u21b5 geometry una geometria di tipo linestring point geometria puntuale per cui ricercare la posizione pi\u00f9 vicina sulla linestring Esempi \u21b5 line_locate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),point:=geom_from_wkt('Point(5 1)')) \u2192 5.0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"line_locate_point"},{"location":"gr_funzioni/geometria/line_locate_point/#line_locate_point","text":"Restituisce la distanza lungo una linestring corrispondente alla posizione pi\u00f9 vicina alla linestring di una geometria puntuale specificata.","title":"line_locate_point"},{"location":"gr_funzioni/geometria/line_locate_point/#sintassi","text":"line_locate_point( geometry, point )","title":"Sintassi"},{"location":"gr_funzioni/geometria/line_locate_point/#argomenti","text":"geometry una geometria di tipo linestring point geometria puntuale per cui ricercare la posizione pi\u00f9 vicina sulla linestring","title":"Argomenti"},{"location":"gr_funzioni/geometria/line_locate_point/#esempi","text":"line_locate_point(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),point:=geom_from_wkt('Point(5 1)')) \u2192 5.0","title":"Esempi"},{"location":"gr_funzioni/geometria/line_locate_point/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/line_locate_point/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/line_merge/","text":"line_merge \u21b5 Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola. Questa funzione restituir\u00e0 null se la geometria considerata non \u00e8 una LineString/MultiLineString. Sintassi \u21b5 line_merge( geometry ) Argomenti \u21b5 geometry una geometria di tipo LineString/MultiLineString Esempi \u21b5 geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(1 1, 2 2))'))) \u2192 'LineString(0 0,1 1,2 2)' geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(11 1, 21 2))'))) \u2192 'MultiLineString((0 0, 1 1),(11 1, 21 2)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"line_merge"},{"location":"gr_funzioni/geometria/line_merge/#line_merge","text":"Restituisce una geometria di tipo LineString o MultiLineString, dove qualsiasi LineString connessa dalla geometria in ingresso \u00e8 stata fusa (merge) in una linestring singola. Questa funzione restituir\u00e0 null se la geometria considerata non \u00e8 una LineString/MultiLineString.","title":"line_merge"},{"location":"gr_funzioni/geometria/line_merge/#sintassi","text":"line_merge( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/line_merge/#argomenti","text":"geometry una geometria di tipo LineString/MultiLineString","title":"Argomenti"},{"location":"gr_funzioni/geometria/line_merge/#esempi","text":"geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(1 1, 2 2))'))) \u2192 'LineString(0 0,1 1,2 2)' geom_to_wkt(line_merge(geom_from_wkt('MULTILINESTRING((0 0, 1 1),(11 1, 21 2))'))) \u2192 'MultiLineString((0 0, 1 1),(11 1, 21 2)'","title":"Esempi"},{"location":"gr_funzioni/geometria/line_merge/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/line_merge/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/line_substring/","text":"line_substring \u21b5 Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate (misurata dall'inizio della linea). I valori Z e M sono linearmente interpolati dai valori esistenti. Sintassi \u21b5 line_substring( geometry , start_distance , end_distance ) Argomenti \u21b5 geometry una geometria lineare o curva start_distance distanza all'inizio della sottostringa end_distance distanza alla fine della sottostringa Esempi \u21b5 geom_to_wkt(line_substring(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),start_distance:=2,end_distance:=6)) \u2192 'LineString (2 0,6 0)' line_substring( $geometry, $length *.1,$length *.6) \u2192 <geometria: LineString> nota bene \u21b5 -- osservazioni \u21b5 -- Funzione utile per la tematizzazione","title":"line_substring"},{"location":"gr_funzioni/geometria/line_substring/#line_substring","text":"Restituisce la porzione di una geometria di linea (o curva) che rientra tra le distanze iniziale e finale specificate (misurata dall'inizio della linea). I valori Z e M sono linearmente interpolati dai valori esistenti.","title":"line_substring"},{"location":"gr_funzioni/geometria/line_substring/#sintassi","text":"line_substring( geometry , start_distance , end_distance )","title":"Sintassi"},{"location":"gr_funzioni/geometria/line_substring/#argomenti","text":"geometry una geometria lineare o curva start_distance distanza all'inizio della sottostringa end_distance distanza alla fine della sottostringa","title":"Argomenti"},{"location":"gr_funzioni/geometria/line_substring/#esempi","text":"geom_to_wkt(line_substring(geometry:=geom_from_wkt('LineString(0 0, 10 0)'),start_distance:=2,end_distance:=6)) \u2192 'LineString (2 0,6 0)' line_substring( $geometry, $length *.1,$length *.6) \u2192 <geometria: LineString>","title":"Esempi"},{"location":"gr_funzioni/geometria/line_substring/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/line_substring/#osservazioni","text":"-- Funzione utile per la tematizzazione","title":"osservazioni"},{"location":"gr_funzioni/geometria/m/","text":"m \u21b5 Restituisce il valore m di una geometria puntuale. Sintassi \u21b5 m( geometry ) Argomenti \u21b5 geometry una geometria punto Esempi \u21b5 ( geom_from_wkt( 'POINTM(2 5 4)' ) ) \u2192 4 nota bene \u21b5 -- osservazioni \u21b5 --","title":"m"},{"location":"gr_funzioni/geometria/m/#m","text":"Restituisce il valore m di una geometria puntuale.","title":"m"},{"location":"gr_funzioni/geometria/m/#sintassi","text":"m( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/m/#argomenti","text":"geometry una geometria punto","title":"Argomenti"},{"location":"gr_funzioni/geometria/m/#esempi","text":"( geom_from_wkt( 'POINTM(2 5 4)' ) ) \u2192 4","title":"Esempi"},{"location":"gr_funzioni/geometria/m/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/m/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/m_max/","text":"m_max \u21b5 Restituisce il valore minimo m (misura) di una geometria. Sintassi \u21b5 m_max( geometry ) Argomenti \u21b5 geometry una geometria contenente m valori Esempi \u21b5 m_max( make_point_m( 0,0,1 ) ) \u2192 1 m_max(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 2 nota bene \u21b5 -- osservazioni \u21b5 --","title":"m_max"},{"location":"gr_funzioni/geometria/m_max/#m_max","text":"Restituisce il valore minimo m (misura) di una geometria.","title":"m_max"},{"location":"gr_funzioni/geometria/m_max/#sintassi","text":"m_max( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/m_max/#argomenti","text":"geometry una geometria contenente m valori","title":"Argomenti"},{"location":"gr_funzioni/geometria/m_max/#esempi","text":"m_max( make_point_m( 0,0,1 ) ) \u2192 1 m_max(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 2","title":"Esempi"},{"location":"gr_funzioni/geometria/m_max/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/m_max/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/m_min/","text":"m_min \u21b5 Restituisce il valore minimo m (misura) di una geometria. Sintassi \u21b5 m_min( geometry ) Argomenti \u21b5 geometry una geometria contenente m valori Esempi \u21b5 m_min( make_point_m( 0,0,1 ) ) \u2192 1 m_min(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"m_min"},{"location":"gr_funzioni/geometria/m_min/#m_min","text":"Restituisce il valore minimo m (misura) di una geometria.","title":"m_min"},{"location":"gr_funzioni/geometria/m_min/#sintassi","text":"m_min( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/m_min/#argomenti","text":"geometry una geometria contenente m valori","title":"Argomenti"},{"location":"gr_funzioni/geometria/m_min/#esempi","text":"m_min( make_point_m( 0,0,1 ) ) \u2192 1 m_min(make_line( make_point_m( 0,0,1 ), make_point_m( -1,-1,2 ), make_point_m( -2,-2,0 ) ) ) \u2192 0","title":"Esempi"},{"location":"gr_funzioni/geometria/m_min/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/m_min/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/main_angle/","text":"main_angle \u21b5 Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria. Sintassi \u21b5 main_angle( geometry ) Argomenti \u21b5 geometry una geometria poligono Esempi \u21b5 main_angle(geom_from_wkt('Polygon ((321577 129614, 321581 129618, 321585 129615, 321581 129610, 321577 129614))')) \u2192 38.66 nota bene \u21b5 -- osservazioni \u21b5","title":"main_angle"},{"location":"gr_funzioni/geometria/main_angle/#main_angle","text":"Restituisce l'angolo principale di una geometria (senso orario, in gradi dal Nord), il quale rappresenta l'angolo dell'orientamento del rettangolo minimo che copre completamente la geometria.","title":"main_angle"},{"location":"gr_funzioni/geometria/main_angle/#sintassi","text":"main_angle( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/main_angle/#argomenti","text":"geometry una geometria poligono","title":"Argomenti"},{"location":"gr_funzioni/geometria/main_angle/#esempi","text":"main_angle(geom_from_wkt('Polygon ((321577 129614, 321581 129618, 321585 129615, 321581 129610, 321577 129614))')) \u2192 38.66","title":"Esempi"},{"location":"gr_funzioni/geometria/main_angle/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/main_angle/#osservazioni","text":"","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_circle/","text":"make_circle \u21b5 Crea un poligono circolare. Sintassi \u21b5 make_circle( center, radius, segment\u2026 ) Argomenti \u21b5 center centro del cerchio radius raggio del cerchio segment argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi \u21b5 geom_to_wkt(make_circle(make_point(10,10), 5, 4)) \u2192 'Polygon ((10 15, 15 10, 10 5, 5 10, 10 15))' geom_to_wkt(make_circle(make_point(10,10,5), 5, 4)) \u2192 'PolygonZ ((10 15 5, 15 10 5, 10 5 5, 5 10 5, 10 15 5))'' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 4)) \u2192 'PolygonZM ((10 15 5 30, 15 10 5 30, 10 5 5 30, 5 10 5 30, 10 15 5 30))' nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_circle"},{"location":"gr_funzioni/geometria/make_circle/#make_circle","text":"Crea un poligono circolare.","title":"make_circle"},{"location":"gr_funzioni/geometria/make_circle/#sintassi","text":"make_circle( center, radius, segment\u2026 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_circle/#argomenti","text":"center centro del cerchio radius raggio del cerchio segment argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_circle/#esempi","text":"geom_to_wkt(make_circle(make_point(10,10), 5, 4)) \u2192 'Polygon ((10 15, 15 10, 10 5, 5 10, 10 15))' geom_to_wkt(make_circle(make_point(10,10,5), 5, 4)) \u2192 'PolygonZ ((10 15 5, 15 10 5, 10 5 5, 5 10 5, 10 15 5))'' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 4)) \u2192 'PolygonZM ((10 15 5 30, 15 10 5 30, 10 5 5 30, 5 10 5 30, 10 15 5 30))'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_circle/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_circle/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_ellipse/","text":"make_ellipse \u21b5 Crea un poligono ellittico. Sintassi \u21b5 make_ellipse( center, semi_major_axis, semi_minor_axis, azimuth, segment\u2026 ) Argomenti \u21b5 center centro dell'ellisse semi_major_axis semi-asse maggiore dell'ellisse semi_minor_axis semi-asse minore dell'ellisse azimuth orientazione dell'ellisse segment argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi \u21b5 geom_to_wkt(make_ellipse(make_point(10,10), 5, 2, 90, 4)) \u2192 'Polygon ((15 10, 10 8, 5 10, 10 12, 15 10)) geom_to_wkt(make_ellipse(make_point(10,10,5), 5, 2, 90, 4)) \u2192 'PolygonZ ((15 10 5, 10 8 5, 5 10 5, 10 12 5, 15 10 5))' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 2, 90, 4)) \u2192 'PolygonZM ((15 10 5 30, 10 8 5 30, 5 10 5 30, 10 12 5 30, 15 10 5 30))' nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_ellipse"},{"location":"gr_funzioni/geometria/make_ellipse/#make_ellipse","text":"Crea un poligono ellittico.","title":"make_ellipse"},{"location":"gr_funzioni/geometria/make_ellipse/#sintassi","text":"make_ellipse( center, semi_major_axis, semi_minor_axis, azimuth, segment\u2026 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_ellipse/#argomenti","text":"center centro dell'ellisse semi_major_axis semi-asse maggiore dell'ellisse semi_minor_axis semi-asse minore dell'ellisse azimuth orientazione dell'ellisse segment argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_ellipse/#esempi","text":"geom_to_wkt(make_ellipse(make_point(10,10), 5, 2, 90, 4)) \u2192 'Polygon ((15 10, 10 8, 5 10, 10 12, 15 10)) geom_to_wkt(make_ellipse(make_point(10,10,5), 5, 2, 90, 4)) \u2192 'PolygonZ ((15 10 5, 10 8 5, 5 10 5, 10 12 5, 15 10 5))' geom_to_wkt(make_circle(make_point(10,10,5,30), 5, 2, 90, 4)) \u2192 'PolygonZM ((15 10 5 30, 10 8 5 30, 5 10 5 30, 10 12 5 30, 15 10 5 30))'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_ellipse/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_ellipse/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_line/","text":"make_line \u21b5 Crea una geometria linea da una serie di geometrie punto. Sintassi \u21b5 make_line( point1, point2, \u2026 ) Argomenti \u21b5 point una geometria punto Esempi \u21b5 geom_to_wkt(make_line(make_point(2,4),make_point(3,5))) \u2192 'LineString (2 4, 3 5)' geom_to_wkt(make_line(make_point(2,4),make_point(3,5),make_point(9,7))) \u2192 'LineString (2 4, 3 5, 9 7)' Array variant >= QGIS 3.10 \u21b5 I vertici di linea sono specificati come una matrice di punti. Sintassi \u21b5 make_line( array ) Argomenti \u21b5 array Matrice di punti Esempio \u21b5 geom_to_wkt(make_line(array(make_point(2,4),make_point(3,5),make_point(9,7)))) \u2192 'LineString (2 4, 3 5, 9 7)' Espressione usata make_line( array(geometry( get_feature_by_id('fontanelle_Palermo',$id))), array(geometry( get_feature_by_id('fontanelle_Palermo',not $id%2))) ) nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_line"},{"location":"gr_funzioni/geometria/make_line/#make_line","text":"Crea una geometria linea da una serie di geometrie punto.","title":"make_line"},{"location":"gr_funzioni/geometria/make_line/#sintassi","text":"make_line( point1, point2, \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_line/#argomenti","text":"point una geometria punto","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_line/#esempi","text":"geom_to_wkt(make_line(make_point(2,4),make_point(3,5))) \u2192 'LineString (2 4, 3 5)' geom_to_wkt(make_line(make_point(2,4),make_point(3,5),make_point(9,7))) \u2192 'LineString (2 4, 3 5, 9 7)'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_line/#array-variant-qgis-310","text":"I vertici di linea sono specificati come una matrice di punti.","title":"Array variant &gt;= QGIS 3.10"},{"location":"gr_funzioni/geometria/make_line/#sintassi_1","text":"make_line( array )","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_line/#argomenti_1","text":"array Matrice di punti","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_line/#esempio","text":"geom_to_wkt(make_line(array(make_point(2,4),make_point(3,5),make_point(9,7)))) \u2192 'LineString (2 4, 3 5, 9 7)' Espressione usata make_line( array(geometry( get_feature_by_id('fontanelle_Palermo',$id))), array(geometry( get_feature_by_id('fontanelle_Palermo',not $id%2))) )","title":"Esempio"},{"location":"gr_funzioni/geometria/make_line/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_line/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_point/","text":"make_point \u21b5 Crea una geometria punto da valori x ed y (e opzionalmente z ed m). Sintassi \u21b5 make_point(x, y, z, m) Argomenti \u21b5 x coordinata x del punto y coordinata y del punto z coordinata opzionale z del punto m valore m opzionale del punto Esempi \u21b5 geom_to_wkt(make_point(2,4,6,8)) \u2192 'PointZM (2 4 6 8)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_point"},{"location":"gr_funzioni/geometria/make_point/#make_point","text":"Crea una geometria punto da valori x ed y (e opzionalmente z ed m).","title":"make_point"},{"location":"gr_funzioni/geometria/make_point/#sintassi","text":"make_point(x, y, z, m)","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_point/#argomenti","text":"x coordinata x del punto y coordinata y del punto z coordinata opzionale z del punto m valore m opzionale del punto","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_point/#esempi","text":"geom_to_wkt(make_point(2,4,6,8)) \u2192 'PointZM (2 4 6 8)'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_point/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_point/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_point_m/","text":"make_point_m \u21b5 Crea una geometria punto da una coordinata x, y ed un valore m. Sintassi \u21b5 make_point_m_(x, y, m_) Argomenti \u21b5 x coordinata x del punto y coordinata y del punto m valore m del punto Esempi \u21b5 geom_to_wkt(make_point_m(2,4,6)) \u2192 'PointM (2 4 6)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_point_m"},{"location":"gr_funzioni/geometria/make_point_m/#make_point_m","text":"Crea una geometria punto da una coordinata x, y ed un valore m.","title":"make_point_m"},{"location":"gr_funzioni/geometria/make_point_m/#sintassi","text":"make_point_m_(x, y, m_)","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_point_m/#argomenti","text":"x coordinata x del punto y coordinata y del punto m valore m del punto","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_point_m/#esempi","text":"geom_to_wkt(make_point_m(2,4,6)) \u2192 'PointM (2 4 6)'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_point_m/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_point_m/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_polygon/","text":"make_polygon \u21b5 Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne. Sintassi \u21b5 make_polygon( outerRing, innerRing1, innerRing2, \u2026 ) Argomenti \u21b5 outerRing geometria a linea chiusa per l'anello esterno del poligono innerRing geometria a linea chiusa opzionale per anello interno Esempi \u21b5 geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0))' geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'),geom_from_wkt('LINESTRING( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1 )'),geom_from_wkt('LINESTRING( 0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0),(0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1),(0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8))' nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_polygon"},{"location":"gr_funzioni/geometria/make_polygon/#make_polygon","text":"Crea una geometria poligono da un'anello esterno e opzionalmente da geometrie ad anello interne.","title":"make_polygon"},{"location":"gr_funzioni/geometria/make_polygon/#sintassi","text":"make_polygon( outerRing, innerRing1, innerRing2, \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_polygon/#argomenti","text":"outerRing geometria a linea chiusa per l'anello esterno del poligono innerRing geometria a linea chiusa opzionale per anello interno","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_polygon/#esempi","text":"geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0))' geom_to_wkt(make_polygon(geom_from_wkt('LINESTRING( 0 0, 0 1, 1 1, 1 0, 0 0 )'),geom_from_wkt('LINESTRING( 0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1 )'),geom_from_wkt('LINESTRING( 0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8 )'))) \u2192 'Polygon ((0 0, 0 1, 1 1, 1 0, 0 0),(0.1 0.1, 0.1 0.2, 0.2 0.2, 0.2 0.1, 0.1 0.1),(0.8 0.8, 0.8 0.9, 0.9 0.9, 0.9 0.8, 0.8 0.8))'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_polygon/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_polygon/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_rectangle_3points/","text":"make_rectangle_3points \u21b5 Crea un rettangolo da 3 punti. Sintassi \u21b5 make_rectangle_3points( point1 , point2 , point3 [,option=0]\u2026) Argomenti \u21b5 point1 Primo punto punto2 Secondo punto point3 Terzo punto option Un argomento facoltativo per costruire il rettangolo. Di default questo valore \u00e8 0. Il valore pu\u00f2 essere 0 (distanza) o 1 (proiettato). Distanza opzione: la seconda distanza \u00e8 uguale alla distanza tra il 2 \u00b0 e il 3 \u00b0 punto. Opzione proiettata: la seconda distanza \u00e8 uguale alla distanza della proiezione perpendicolare del terzo punto sul segmento o della sua estensione. Esempi \u21b5 geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5), make_point(5, 5), 0))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5),make_point(5, 3), 1))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_rectangle_3points"},{"location":"gr_funzioni/geometria/make_rectangle_3points/#make_rectangle_3points","text":"Crea un rettangolo da 3 punti.","title":"make_rectangle_3points"},{"location":"gr_funzioni/geometria/make_rectangle_3points/#sintassi","text":"make_rectangle_3points( point1 , point2 , point3 [,option=0]\u2026)","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_rectangle_3points/#argomenti","text":"point1 Primo punto punto2 Secondo punto point3 Terzo punto option Un argomento facoltativo per costruire il rettangolo. Di default questo valore \u00e8 0. Il valore pu\u00f2 essere 0 (distanza) o 1 (proiettato). Distanza opzione: la seconda distanza \u00e8 uguale alla distanza tra il 2 \u00b0 e il 3 \u00b0 punto. Opzione proiettata: la seconda distanza \u00e8 uguale alla distanza della proiezione perpendicolare del terzo punto sul segmento o della sua estensione.","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_rectangle_3points/#esempi","text":"geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5), make_point(5, 5), 0))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_rectangle_3points(make_point(0, 0), make_point(0,5),make_point(5, 3), 1))) \u2192 'Polygon ((0 0, 0 5, 5 5, 5 0, 0 0))'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_rectangle_3points/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_rectangle_3points/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_regular_polygon/","text":"make_regular_polygon \u21b5 Crea un poligono regolare. Sintassi \u21b5 make_regular_polygon( center, radius, number_sides, circle\u2026 ) Argomenti \u21b5 center centro del poligono regolare radius secondo punto. Il primo se il poligono regolare \u00e8 inscritto. Il punto intermedio del primo lato se il poligono regolare \u00e8 circoscritto. number_sides Numero di lati del poligono regolare circle Argomento opzionale per la costruzione del poligono regolare. Il valore predefinito \u00e8 0. Il valore pu\u00f2 essere 0 (poligono iscritto) o 1 (poligono circoscritto) Esempi \u21b5 geom_to_wkt(make_regular_polygon(make_point(0,0), make_point(0,5), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' geom_to_wkt(make_regular_polygon(make_point(0,0), project(make_point(0,0), 4.0451, radians(36)), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_regular_polygon"},{"location":"gr_funzioni/geometria/make_regular_polygon/#make_regular_polygon","text":"Crea un poligono regolare.","title":"make_regular_polygon"},{"location":"gr_funzioni/geometria/make_regular_polygon/#sintassi","text":"make_regular_polygon( center, radius, number_sides, circle\u2026 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_regular_polygon/#argomenti","text":"center centro del poligono regolare radius secondo punto. Il primo se il poligono regolare \u00e8 inscritto. Il punto intermedio del primo lato se il poligono regolare \u00e8 circoscritto. number_sides Numero di lati del poligono regolare circle Argomento opzionale per la costruzione del poligono regolare. Il valore predefinito \u00e8 0. Il valore pu\u00f2 essere 0 (poligono iscritto) o 1 (poligono circoscritto)","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_regular_polygon/#esempi","text":"geom_to_wkt(make_regular_polygon(make_point(0,0), make_point(0,5), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))' geom_to_wkt(make_regular_polygon(make_point(0,0), project(make_point(0,0), 4.0451, radians(36)), 5)) \u2192 'Polygon ((0 5, 4.76 1.55, 2.94 -4.05, -2.94 -4.05, -4.76 1.55, 0 5))'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_regular_polygon/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_regular_polygon/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_square/","text":"make_square \u21b5 Crea un quadrato da una diagonale. Sintassi \u21b5 make_square( point1 , point2\u2026 ) Argomenti \u21b5 point1 Primo punto del poligono regolare point2 Secondo punto Esempi \u21b5 geom_to_wkt(make_square( make_point(0,0), make_point(5,5))) \u2192 'Polygon ((0 0, -0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_square( make_point(5,0), make_point(5,5))) \u2192 'Polygon ((5 0, 2.5 2.5, 5 5, 7.5 2.5, 5 0))' nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_square"},{"location":"gr_funzioni/geometria/make_square/#make_square","text":"Crea un quadrato da una diagonale.","title":"make_square"},{"location":"gr_funzioni/geometria/make_square/#sintassi","text":"make_square( point1 , point2\u2026 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_square/#argomenti","text":"point1 Primo punto del poligono regolare point2 Secondo punto","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_square/#esempi","text":"geom_to_wkt(make_square( make_point(0,0), make_point(5,5))) \u2192 'Polygon ((0 0, -0 5, 5 5, 5 0, 0 0))' geom_to_wkt(make_square( make_point(5,0), make_point(5,5))) \u2192 'Polygon ((5 0, 2.5 2.5, 5 5, 7.5 2.5, 5 0))'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_square/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_square/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/make_triangle/","text":"make_triangle \u21b5 Crea un poligono triangolare Sintassi \u21b5 make_triangle( point 1, point 2, point 3 ) Argomenti \u21b5 point 1 primo punto del triangolo point 2 secondo punto del triangolo point 3 terzo punto del triangolo Esempi \u21b5 geom_to_wkt(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10))) \u2192 'Triangle ((0 0, 5 5, 0 10, 0 0))' geom_to_wkt(boundary(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10)))) \u2192 'LineString (0 0, 5 5, 0 10, 0 0)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"make_triangle"},{"location":"gr_funzioni/geometria/make_triangle/#make_triangle","text":"Crea un poligono triangolare","title":"make_triangle"},{"location":"gr_funzioni/geometria/make_triangle/#sintassi","text":"make_triangle( point 1, point 2, point 3 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/make_triangle/#argomenti","text":"point 1 primo punto del triangolo point 2 secondo punto del triangolo point 3 terzo punto del triangolo","title":"Argomenti"},{"location":"gr_funzioni/geometria/make_triangle/#esempi","text":"geom_to_wkt(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10))) \u2192 'Triangle ((0 0, 5 5, 0 10, 0 0))' geom_to_wkt(boundary(make_triangle(make_point(0,0), make_point(5,5), make_point(0,10)))) \u2192 'LineString (0 0, 5 5, 0 10, 0 0)'","title":"Esempi"},{"location":"gr_funzioni/geometria/make_triangle/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/make_triangle/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/minimal_circle/","text":"minimal_circle \u21b5 Restituisce la circonferenza circoscritta minima di una geometria. Rappresenta il cerchio minimo che circoscrive tutte le geometrie presenti in un dataset. Sintassi \u21b5 minimal_circle(geometry, segment) Argomenti \u21b5 geometry una geometria segment argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36 Esempi \u21b5 geom_to_wkt( minimal_circle( geom_from_wkt( 'LINESTRING(0 5, 0 -5, 2 1)' ), 4 ) ) \u2192 Polygon ((0 5, 5 -0, -0 -5, -5 0, 0 5)) geom_to_wkt( minimal_circle( geom_from_wkt( 'MULTIPOINT(1 2, 3 4, 3 2)' ), 4 ) ) \u2192 Polygon ((3 4, 3 2, 1 2, 1 4, 3 4)) nota bene \u21b5 -- osservazioni \u21b5 --","title":"minimal_circle"},{"location":"gr_funzioni/geometria/minimal_circle/#minimal_circle","text":"Restituisce la circonferenza circoscritta minima di una geometria. Rappresenta il cerchio minimo che circoscrive tutte le geometrie presenti in un dataset.","title":"minimal_circle"},{"location":"gr_funzioni/geometria/minimal_circle/#sintassi","text":"minimal_circle(geometry, segment)","title":"Sintassi"},{"location":"gr_funzioni/geometria/minimal_circle/#argomenti","text":"geometry una geometria segment argomento opzionale per la segmentazione del poligono. Valore predefinito pari a 36","title":"Argomenti"},{"location":"gr_funzioni/geometria/minimal_circle/#esempi","text":"geom_to_wkt( minimal_circle( geom_from_wkt( 'LINESTRING(0 5, 0 -5, 2 1)' ), 4 ) ) \u2192 Polygon ((0 5, 5 -0, -0 -5, -5 0, 0 5)) geom_to_wkt( minimal_circle( geom_from_wkt( 'MULTIPOINT(1 2, 3 4, 3 2)' ), 4 ) ) \u2192 Polygon ((3 4, 3 2, 1 2, 1 4, 3 4))","title":"Esempi"},{"location":"gr_funzioni/geometria/minimal_circle/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/minimal_circle/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/nodes_to_points/","text":"nodes_to_points \u21b5 Restituisce una geometria multi-punti costituita da ogni nodo della geometria in ingresso. Sintassi \u21b5 nodes_to_points( geometry, ignore_closing_nodes ) Argomenti \u21b5 geometry oggetto geometria ignore_closing_nodes argomento opzionale che specifica se includere i nodi duplicati che chiudono linee o poligoni ad anello. Normalmente false, impostare a true per evitare di includere questi nodi duplicati nella raccolta in uscita. Esempi \u21b5 geom_to_wkt(nodes_to_points(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiPoint ((0 0),(1 1),(2 2))' geom_to_wkt(nodes_to_points(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'),true)) \u2192 'MultiPoint ((-1 -1),(4 0),(4 2),(0 2))' nota bene \u21b5 -- osservazioni \u21b5 --","title":"nodes_to_points"},{"location":"gr_funzioni/geometria/nodes_to_points/#nodes_to_points","text":"Restituisce una geometria multi-punti costituita da ogni nodo della geometria in ingresso.","title":"nodes_to_points"},{"location":"gr_funzioni/geometria/nodes_to_points/#sintassi","text":"nodes_to_points( geometry, ignore_closing_nodes )","title":"Sintassi"},{"location":"gr_funzioni/geometria/nodes_to_points/#argomenti","text":"geometry oggetto geometria ignore_closing_nodes argomento opzionale che specifica se includere i nodi duplicati che chiudono linee o poligoni ad anello. Normalmente false, impostare a true per evitare di includere questi nodi duplicati nella raccolta in uscita.","title":"Argomenti"},{"location":"gr_funzioni/geometria/nodes_to_points/#esempi","text":"geom_to_wkt(nodes_to_points(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiPoint ((0 0),(1 1),(2 2))' geom_to_wkt(nodes_to_points(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1))'),true)) \u2192 'MultiPoint ((-1 -1),(4 0),(4 2),(0 2))'","title":"Esempi"},{"location":"gr_funzioni/geometria/nodes_to_points/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/nodes_to_points/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/num_geometries/","text":"num_geometries \u21b5 Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta. Sintassi \u21b5 num_geometries( geometry ) Argomenti \u21b5 geometry raccolta di geometrie Esempi \u21b5 num_geometries(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))')) \u2192 4 nota bene \u21b5 -- osservazioni \u21b5 --","title":"num_geometries"},{"location":"gr_funzioni/geometria/num_geometries/#num_geometries","text":"Restituisce il numero di geometrie in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 una raccolta.","title":"num_geometries"},{"location":"gr_funzioni/geometria/num_geometries/#sintassi","text":"num_geometries( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/num_geometries/#argomenti","text":"geometry raccolta di geometrie","title":"Argomenti"},{"location":"gr_funzioni/geometria/num_geometries/#esempi","text":"num_geometries(geom_from_wkt('GEOMETRYCOLLECTION(POINT(0 1), POINT(0 0), POINT(1 0), POINT(1 1))')) \u2192 4","title":"Esempi"},{"location":"gr_funzioni/geometria/num_geometries/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/num_geometries/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/num_interior_rings/","text":"num_interior_rings \u21b5 Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi \u21b5 num_interior_rings( geometry ) Argomenti \u21b5 geometry geometria in ingresso Esempi \u21b5 num_interior_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 1 nota bene \u21b5 -- osservazioni \u21b5 --","title":"num_interior_rings"},{"location":"gr_funzioni/geometria/num_interior_rings/#num_interior_rings","text":"Restituisce il numero di anelli interni in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta.","title":"num_interior_rings"},{"location":"gr_funzioni/geometria/num_interior_rings/#sintassi","text":"num_interior_rings( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/num_interior_rings/#argomenti","text":"geometry geometria in ingresso","title":"Argomenti"},{"location":"gr_funzioni/geometria/num_interior_rings/#esempi","text":"num_interior_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 1","title":"Esempi"},{"location":"gr_funzioni/geometria/num_interior_rings/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/num_interior_rings/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/num_points/","text":"num_points \u21b5 Restituisce il numero di vertici in una geometria. Sintassi \u21b5 num_points(geometry) Argomenti \u21b5 geometry una geometria Esempi \u21b5 num_points($geometry) \u2192 numero di vertici in $geometry nota bene \u21b5 -- osservazioni \u21b5 --","title":"num_points"},{"location":"gr_funzioni/geometria/num_points/#num_points","text":"Restituisce il numero di vertici in una geometria.","title":"num_points"},{"location":"gr_funzioni/geometria/num_points/#sintassi","text":"num_points(geometry)","title":"Sintassi"},{"location":"gr_funzioni/geometria/num_points/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/num_points/#esempi","text":"num_points($geometry) \u2192 numero di vertici in $geometry","title":"Esempi"},{"location":"gr_funzioni/geometria/num_points/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/num_points/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/num_rings/","text":"num_rings \u21b5 Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta. Sintassi \u21b5 num_rings( geometry ) Argomenti \u21b5 geometry geometria in ingresso Esempi \u21b5 num_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 2 nota bene \u21b5 -- osservazioni \u21b5 --","title":"num_rings"},{"location":"gr_funzioni/geometria/num_rings/#num_rings","text":"Restituisce il numero di anelli (includendo anche anelli esterni) in un poligono o in una raccolta di geometrie, o null se la geometria in ingresso non \u00e8 un poligono o una raccolta.","title":"num_rings"},{"location":"gr_funzioni/geometria/num_rings/#sintassi","text":"num_rings( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/num_rings/#argomenti","text":"geometry geometria in ingresso","title":"Argomenti"},{"location":"gr_funzioni/geometria/num_rings/#esempi","text":"num_rings(geom_from_wkt('POLYGON((-1 -1, 4 0, 4 2, 0 2, -1 -1),(-0.1 -0.1, 0.4 0, 0.4 0.2, 0 0.2, -0.1 -0.1))')) \u2192 2","title":"Esempi"},{"location":"gr_funzioni/geometria/num_rings/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/num_rings/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/offset_curve/","text":"offset_curve \u21b5 Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato. Le distanze sono espresse nel SR di tale geometria. Sintassi \u21b5 offset_curve( geometry, distance, segments, join, miter_limit ) Argomenti \u21b5 geometry una geometria (multi)linestring distance distanza di offset. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in una linea pi\u00f9 morbida, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi \u21b5 offset_curve($geometry, 10.5) \u2192 linea scostata a sinistra di 10.5 unit\u00e0 offset_curve($geometry, -10.5) \u2192 linea scostata a destra di 10.5 unit\u00e0 offset_curve($geometry, 10.5, segments=16, join=1) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in una curva pi\u00f9 morbida offset_curve($geometry, 10.5, join=3) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando un'unione smussata nota bene \u21b5 -- osservazioni \u21b5 La linea \u00e8 scostata a sinistra o destra rispetto al verso della linea:","title":"offset_curve"},{"location":"gr_funzioni/geometria/offset_curve/#offset_curve","text":"Restituisce una geometria formata facendo l'offset di una geometria di tipo linestring a lato. Le distanze sono espresse nel SR di tale geometria.","title":"offset_curve"},{"location":"gr_funzioni/geometria/offset_curve/#sintassi","text":"offset_curve( geometry, distance, segments, join, miter_limit )","title":"Sintassi"},{"location":"gr_funzioni/geometria/offset_curve/#argomenti","text":"geometry una geometria (multi)linestring distance distanza di offset. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in una linea pi\u00f9 morbida, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate)","title":"Argomenti"},{"location":"gr_funzioni/geometria/offset_curve/#esempi","text":"offset_curve($geometry, 10.5) \u2192 linea scostata a sinistra di 10.5 unit\u00e0 offset_curve($geometry, -10.5) \u2192 linea scostata a destra di 10.5 unit\u00e0 offset_curve($geometry, 10.5, segments=16, join=1) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in una curva pi\u00f9 morbida offset_curve($geometry, 10.5, join=3) \u2192 linea scostata a sinistra di 10.5 unit\u00e0, usando un'unione smussata","title":"Esempi"},{"location":"gr_funzioni/geometria/offset_curve/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/offset_curve/#osservazioni","text":"La linea \u00e8 scostata a sinistra o destra rispetto al verso della linea:","title":"osservazioni"},{"location":"gr_funzioni/geometria/order_parts/","text":"order_parts \u21b5 Ordina le parti di una MultiGeometria secondo un dato criterio Sintassi \u21b5 order_parts( geometry, orderby, ascending ) Argomenti \u21b5 geometry una geometria multi-tipo orderby un espressione stringa che definisce il criterio di ordinamento ascending booleano, True per ascendente, False per discendente Esempi \u21b5 order_parts(geom_from_wkt('MultiPolygon (((1 1, 5 1, 5 5, 1 5, 1 1)),((1 1, 9 1, 9 9, 1 9, 1 1)))'), 'area($geometry)', False) \u2192 MultiPolygon (((1 1, 9 1, 9 9, 1 9, 1 1)),((1 1, 5 1, 5 5, 1 5, 1 1))) order_parts(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), '1', True) \u2192 LineString(1 2, 3 2, 4 3) nota bene \u21b5 -- osservazioni \u21b5 --","title":"order_parts"},{"location":"gr_funzioni/geometria/order_parts/#order_parts","text":"Ordina le parti di una MultiGeometria secondo un dato criterio","title":"order_parts"},{"location":"gr_funzioni/geometria/order_parts/#sintassi","text":"order_parts( geometry, orderby, ascending )","title":"Sintassi"},{"location":"gr_funzioni/geometria/order_parts/#argomenti","text":"geometry una geometria multi-tipo orderby un espressione stringa che definisce il criterio di ordinamento ascending booleano, True per ascendente, False per discendente","title":"Argomenti"},{"location":"gr_funzioni/geometria/order_parts/#esempi","text":"order_parts(geom_from_wkt('MultiPolygon (((1 1, 5 1, 5 5, 1 5, 1 1)),((1 1, 9 1, 9 9, 1 9, 1 1)))'), 'area($geometry)', False) \u2192 MultiPolygon (((1 1, 9 1, 9 9, 1 9, 1 1)),((1 1, 5 1, 5 5, 1 5, 1 1))) order_parts(geom_from_wkt('LineString(1 2, 3 2, 4 3)'), '1', True) \u2192 LineString(1 2, 3 2, 4 3)","title":"Esempi"},{"location":"gr_funzioni/geometria/order_parts/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/order_parts/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/oriented_bbox/","text":"oriented_bbox \u21b5 Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria. Sintassi \u21b5 oriented_bbox( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 geom_to_wkt(oriented_bbox(geom_from_wkt('MULTIPOINT(1 2, 3 4, 3 2)'))) \u2192 'Polygon ((1 2, 2 1, 4 3, 3 4, 1 2))' nota bene \u21b5 -- osservazioni \u21b5 --","title":"oriented_bbox"},{"location":"gr_funzioni/geometria/oriented_bbox/#oriented_bbox","text":"Restituisce una geometria che rappresenta il perimetro di delimitazione minimo orientato di una geometria.","title":"oriented_bbox"},{"location":"gr_funzioni/geometria/oriented_bbox/#sintassi","text":"oriented_bbox( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/oriented_bbox/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/oriented_bbox/#esempi","text":"geom_to_wkt(oriented_bbox(geom_from_wkt('MULTIPOINT(1 2, 3 4, 3 2)'))) \u2192 'Polygon ((1 2, 2 1, 4 3, 3 4, 1 2))'","title":"Esempi"},{"location":"gr_funzioni/geometria/oriented_bbox/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/oriented_bbox/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/overlaps/","text":"overlaps \u21b5 Controlla qualora una geometria si sovrapponga ad un'altra. Restituisce true (1) se le geometrie condividono aree, ma non sono completamente contenute una nell'altra. Sintassi \u21b5 overlaps( geometry a, geometry b ) Argomenti \u21b5 geometry a una geometria geometry b una geometria Esempi \u21b5 overlaps( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 5, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 overlaps( geom_from_wkt( 'LINESTRING(0 0, 1 1)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 0 nota bene \u21b5 -- osservazioni \u21b5 Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: overlaps(geometry(get_feature( 'cerchio','id','1')), $geometry) dove: geometry a \u00e8 geometry(get_feature('cerchio','id','1')) geometry b \u00e8 $geometry seleziono tutti i comuni overlaps (sovrapposti) al cerchio in figura. PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli sovrapposti con il cerchio). NOT overlaps(geometry(get_feature('cerchio','id','1')),$geometry)","title":"overlaps"},{"location":"gr_funzioni/geometria/overlaps/#overlaps","text":"Controlla qualora una geometria si sovrapponga ad un'altra. Restituisce true (1) se le geometrie condividono aree, ma non sono completamente contenute una nell'altra.","title":"overlaps"},{"location":"gr_funzioni/geometria/overlaps/#sintassi","text":"overlaps( geometry a, geometry b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/overlaps/#argomenti","text":"geometry a una geometria geometry b una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/overlaps/#esempi","text":"overlaps( geom_from_wkt( 'LINESTRING(3 5, 4 4, 5 5, 5 3)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 overlaps( geom_from_wkt( 'LINESTRING(0 0, 1 1)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 0","title":"Esempi"},{"location":"gr_funzioni/geometria/overlaps/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/overlaps/#osservazioni","text":"Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: overlaps(geometry(get_feature( 'cerchio','id','1')), $geometry) dove: geometry a \u00e8 geometry(get_feature('cerchio','id','1')) geometry b \u00e8 $geometry seleziono tutti i comuni overlaps (sovrapposti) al cerchio in figura. PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli sovrapposti con il cerchio). NOT overlaps(geometry(get_feature('cerchio','id','1')),$geometry)","title":"osservazioni"},{"location":"gr_funzioni/geometria/overlay_contains/","text":"overlay_contains \u21b5 Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Contains\" sottostante, come descritto nella funzione PostGIS ST_CONTAINS . Sintassi \u21b5 overlay_contains( layer ,expression ,limit ) [ ] indica componenti opzionali Argomenti \u21b5 layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi \u21b5 * overlay_contains('regions') \u2192 true se l'elemento corrente contiene spazialmente una regione * overlay_contains('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente contiene spazialmente una regione con una popolazione maggiore di 10000 * overlay_contains('regions', name) \u2192 un array di nomi, per le regioni contenute nell'elemento corrente * array_to_string(overlay_contains('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni contenute nell'elemento corrente * overlay_contains('regions', name)[0] \u2192 una stringa con il nome della regione contenuta nell'elemento corrente * array_sort(overlay_contains(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenute nell'elemento corrente e con una popolazione superiore a 10000 * overlay_contains(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenute nell'elemento corrente nota bene \u21b5 -- osservazioni \u21b5 --","title":"overlay_contains"},{"location":"gr_funzioni/geometria/overlay_contains/#overlay_contains","text":"Restituisce se l'elemento corrente contiene spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target contenuti nell'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Contains\" sottostante, come descritto nella funzione PostGIS ST_CONTAINS .","title":"overlay_contains"},{"location":"gr_funzioni/geometria/overlay_contains/#sintassi","text":"overlay_contains( layer ,expression ,limit ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/overlay_contains/#argomenti","text":"layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali","title":"Argomenti"},{"location":"gr_funzioni/geometria/overlay_contains/#esempi","text":"* overlay_contains('regions') \u2192 true se l'elemento corrente contiene spazialmente una regione * overlay_contains('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente contiene spazialmente una regione con una popolazione maggiore di 10000 * overlay_contains('regions', name) \u2192 un array di nomi, per le regioni contenute nell'elemento corrente * array_to_string(overlay_contains('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni contenute nell'elemento corrente * overlay_contains('regions', name)[0] \u2192 una stringa con il nome della regione contenuta nell'elemento corrente * array_sort(overlay_contains(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenute nell'elemento corrente e con una popolazione superiore a 10000 * overlay_contains(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenute nell'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/geometria/overlay_contains/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/overlay_contains/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/overlay_crosses/","text":"overlay_crosses \u21b5 Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento di un layer target o un array di risultati basati su espressioni per gli elementi nel layer target attraversati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Crosses\" sottostante, come descritto nella funzione PostGIS ST_Crosses . Sintassi \u21b5 overlay_crosses( ayer ,expression ,limit ) [ ] indica componenti opzionali Argomenti \u21b5 layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi \u21b5 * overlay_crosses('regions') \u2192 true se l'elemento corrente attraversa spazialmente una regione * overlay_crosses('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente attraversa spazialmente una regione con una popolazione maggiore di 10000 * overlay_crosses('regions', name) \u2192 un array di nomi, per le regioni attraversate dall'elemento corrente * array_to_string(overlay_crosses('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni attraversate dall'elemento corrente * overlay_crosses('regions', name)[0] \u2192 una stringa con il nome della prima regioni attraversata dall'elemento corrente * array_sort(overlay_crosses(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni attraversate dall'elemento corrente e con una popolazione superiore a 10000 * overlay_crosses(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni attraversate dall'elemento corrente nota bene \u21b5 -- osservazioni \u21b5 --","title":"overlay_crosses"},{"location":"gr_funzioni/geometria/overlay_crosses/#overlay_crosses","text":"Restituisce se l'elemento corrente attraversa spazialmente almeno un elemento di un layer target o un array di risultati basati su espressioni per gli elementi nel layer target attraversati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Crosses\" sottostante, come descritto nella funzione PostGIS ST_Crosses .","title":"overlay_crosses"},{"location":"gr_funzioni/geometria/overlay_crosses/#sintassi","text":"overlay_crosses( ayer ,expression ,limit ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/overlay_crosses/#argomenti","text":"layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali","title":"Argomenti"},{"location":"gr_funzioni/geometria/overlay_crosses/#esempi","text":"* overlay_crosses('regions') \u2192 true se l'elemento corrente attraversa spazialmente una regione * overlay_crosses('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente attraversa spazialmente una regione con una popolazione maggiore di 10000 * overlay_crosses('regions', name) \u2192 un array di nomi, per le regioni attraversate dall'elemento corrente * array_to_string(overlay_crosses('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni attraversate dall'elemento corrente * overlay_crosses('regions', name)[0] \u2192 una stringa con il nome della prima regioni attraversata dall'elemento corrente * array_sort(overlay_crosses(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni attraversate dall'elemento corrente e con una popolazione superiore a 10000 * overlay_crosses(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni attraversate dall'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/geometria/overlay_crosses/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/overlay_crosses/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/overlay_disjoint/","text":"overlay_disjoint \u21b5 Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer target, o un array di risultati basati su espressione per gli elementi nel layer target che sono disgiunti dall'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Disjoint\", come descritto nella funzione PostGIS ST_Disjoint . Sintassi \u21b5 overlay_disjoint( layer ,expression ,limit ) [ ] indica componenti opzionali Argomenti \u21b5 layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi \u21b5 * overlay_disjoint('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni * overlay_disjoint('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni con una popolazione maggiore di 10000 * overlay_disjoint('regions', name) \u2192 un array di nomi, per le regioni spazialmente disgiunte dall'elemento corrente * array_to_string(overlay_disjoint('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni spazialmente disgiunte dall'elemento corrente * overlay_disjoint('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente disgiunte dall'elemento corrente * array_sort(overlay_disjoint(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente disgiunte dall'elemento corrente e con una popolazione superiore a 10000 * overlay_disjoint(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente disgiunte dall'elemento corrente nota bene \u21b5 -- osservazionioverlay_disjoint \u21b5 --","title":"overlay_disjoint"},{"location":"gr_funzioni/geometria/overlay_disjoint/#overlay_disjoint","text":"Restituisce se l'elemento corrente \u00e8 spazialmente disgiunto da tutti gli elementi di un layer target, o un array di risultati basati su espressione per gli elementi nel layer target che sono disgiunti dall'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Disjoint\", come descritto nella funzione PostGIS ST_Disjoint .","title":"overlay_disjoint"},{"location":"gr_funzioni/geometria/overlay_disjoint/#sintassi","text":"overlay_disjoint( layer ,expression ,limit ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/overlay_disjoint/#argomenti","text":"layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali","title":"Argomenti"},{"location":"gr_funzioni/geometria/overlay_disjoint/#esempi","text":"* overlay_disjoint('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni * overlay_disjoint('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente disgiunto da tutte le regioni con una popolazione maggiore di 10000 * overlay_disjoint('regions', name) \u2192 un array di nomi, per le regioni spazialmente disgiunte dall'elemento corrente * array_to_string(overlay_disjoint('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni spazialmente disgiunte dall'elemento corrente * overlay_disjoint('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente disgiunte dall'elemento corrente * array_sort(overlay_disjoint(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente disgiunte dall'elemento corrente e con una popolazione superiore a 10000 * overlay_disjoint(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente disgiunte dall'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/geometria/overlay_disjoint/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/overlay_disjoint/#osservazionioverlay_disjoint","text":"--","title":"osservazionioverlay_disjoint"},{"location":"gr_funzioni/geometria/overlay_equals/","text":"overlay_equals \u21b5 Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target che sono spazialmente uguali all'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Equals\" sottostante, come descritto nella funzione PostGIS ST_Equals . Sintassi \u21b5 overlay_equals( layer ,expression ,limit ) [ ] indica componenti opzionali Argomenti \u21b5 layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali Esempi \u21b5 * overlay_equals('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente uguale ad una regione * overlay_equals('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente uguale ad una regione con una popolazione maggiore di 10000 * overlay_equals('regions', name) \u2192 un array di nomi, per le regioni spazialmente uguali all'elemento corrente * array_to_string(overlay_equals('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni spazialmente uguali all'elemento corrente * overlay_equals('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente uguale all'elemento corrente * array_sort(overlay_equals(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente uguali all'elemento corrente e con una popolazione superiore a 10000 * overlay_equals(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente uguali all'elemento corrente nota bene \u21b5 -- osservazioni \u21b5 --","title":"overlay_equals"},{"location":"gr_funzioni/geometria/overlay_equals/#overlay_equals","text":"Restituisce se l'elemento corrente \u00e8 spazialmente uguale ad almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target che sono spazialmente uguali all'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Equals\" sottostante, come descritto nella funzione PostGIS ST_Equals .","title":"overlay_equals"},{"location":"gr_funzioni/geometria/overlay_equals/#sintassi","text":"overlay_equals( layer ,expression ,limit ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/overlay_equals/#argomenti","text":"layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); [ ] indica componenti opzionali","title":"Argomenti"},{"location":"gr_funzioni/geometria/overlay_equals/#esempi","text":"* overlay_equals('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente uguale ad una regione * overlay_equals('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente uguale ad una regione con una popolazione maggiore di 10000 * overlay_equals('regions', name) \u2192 un array di nomi, per le regioni spazialmente uguali all'elemento corrente * array_to_string(overlay_equals('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni spazialmente uguali all'elemento corrente * overlay_equals('regions', name)[0] \u2192 una stringa con il nome della regione spazialmente uguale all'elemento corrente * array_sort(overlay_equals(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni spazialmente uguali all'elemento corrente e con una popolazione superiore a 10000 * overlay_equals(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni spazialmente uguali all'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/geometria/overlay_equals/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/overlay_equals/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/overlay_intersects/","text":"overlay_intersects \u21b5 Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target intersecati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Intersects\" sottostante, come descritto nella funzione PostGIS ST_INTERSECTS . Sintassi \u21b5 overlay_intersects( layer ,expression ,limit ) [ ] indica componenti opzionali Argomenti \u21b5 layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); Esempi \u21b5 * overlay_intersects('regions') \u2192 true se l'elemento corrente interseca spazialmente una regione * overlay_intersects('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente interseca spazialmente una regione con una popolazione maggiore di 10000 * overlay_intersects('regions', name) \u2192 un array di nomi, per le regioni intersecate dall'elemento corrente * array_to_string(overlay_intersects('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni intersecate dall'elemento corrente * overlay_intersects('regions', name)[0] \u2192 una stringa con il nome della regione intersecata dall'elemento corrente * array_sort(overlay_intersects(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni intersecate dall'elemento corrente e con una popolazione maggiore di 10000 * overlay_intersects(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni intersecate dall'elemento corrente nota bene \u21b5 -- osservazioni \u21b5 --","title":"overlay_intersects"},{"location":"gr_funzioni/geometria/overlay_intersects/#overlay_intersects","text":"Restituisce se l'elemento corrente interseca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target intersecati dall'elemento corrente. Ulteriori informazioni sul predicato GEOS \"Intersects\" sottostante, come descritto nella funzione PostGIS ST_INTERSECTS .","title":"overlay_intersects"},{"location":"gr_funzioni/geometria/overlay_intersects/#sintassi","text":"overlay_intersects( layer ,expression ,limit ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/overlay_intersects/#argomenti","text":"layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento);","title":"Argomenti"},{"location":"gr_funzioni/geometria/overlay_intersects/#esempi","text":"* overlay_intersects('regions') \u2192 true se l'elemento corrente interseca spazialmente una regione * overlay_intersects('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente interseca spazialmente una regione con una popolazione maggiore di 10000 * overlay_intersects('regions', name) \u2192 un array di nomi, per le regioni intersecate dall'elemento corrente * array_to_string(overlay_intersects('regions', name)) \u2192 una stringa come una lista di nomi separata da virgola, per le regioni intersecate dall'elemento corrente * overlay_intersects('regions', name)[0] \u2192 una stringa con il nome della regione intersecata dall'elemento corrente * array_sort(overlay_intersects(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni intersecate dall'elemento corrente e con una popolazione maggiore di 10000 * overlay_intersects(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni intersecate dall'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/geometria/overlay_intersects/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/overlay_intersects/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/overlay_nearest/","text":"overlay_nearest \u21b5 Restituisce se l'elemento corrente ha elementi da un layer target entro una data distanza o un array di risultati basati su espressioni per gli elementi nel layer di target entro una distanza dall'elemento corrente. Nota: questa funzione pu\u00f2 essere lenta e consuma molta memoria per layer con molte feature. Sintassi \u21b5 overlay_nearest( layer ,expression ,limit [,cache] ) [ ] indica componenti opzionali Argomenti \u21b5 layer layer target; expression un'espressione opzionale per valutare gli elementi del layer target. Se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza; filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi). Se impostato su -1, restituisce tutti gli elementi corrispondenti; max_distance una distanza massima opzionale per limitare il numero di elementi corrispondenti (se non impostato, verr\u00e0 restituita soltanto l'elemento pi\u00f9 vicino); cache imposta su \"true\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); Esempi \u21b5 * overlay_nearest('airports') \u2192 true se il layer \"airports\" ha almeno un elemento * overlay_nearest('airports', max_distance:= 5000) \u2192 vero se \u00e8 presente un aeroporto entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente * overlay_nearest('airports', name) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come array * array_to_string(overlay_nearest('airports', name)) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come stringa * overlay_nearest(layer:='airports', expression:= name, max_distance:= 5000) \u2192 il nome dell'aereoporto pi\u00f9 vicino entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, come array * overlay_nearest(layer:='airports', expression:=\"name\", filter:= \"Use\"='Civilian', limit:=3) \u2192 un array di nomi, per un massimo di tre aeroeporti civili pi\u00f9 vicini ordinati per distanza * overlay_nearest(layer:='airports', expression:=\"name\", limit:= -1, max_distance:= 5000) \u2192 un array di nomi, per tutti gli aeroporti entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, ordinato per distanza. nota bene \u21b5 -- osservazioni \u21b5 Esempio 45: http://hfcqgis.opendatasicilia.it/it/latest/esempi/linea_min_distanza2.html","title":"overlay_nearest"},{"location":"gr_funzioni/geometria/overlay_nearest/#overlay_nearest","text":"Restituisce se l'elemento corrente ha elementi da un layer target entro una data distanza o un array di risultati basati su espressioni per gli elementi nel layer di target entro una distanza dall'elemento corrente. Nota: questa funzione pu\u00f2 essere lenta e consuma molta memoria per layer con molte feature.","title":"overlay_nearest"},{"location":"gr_funzioni/geometria/overlay_nearest/#sintassi","text":"overlay_nearest( layer ,expression ,limit [,cache] ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/overlay_nearest/#argomenti","text":"layer layer target; expression un'espressione opzionale per valutare gli elementi del layer target. Se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza; filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi). Se impostato su -1, restituisce tutti gli elementi corrispondenti; max_distance una distanza massima opzionale per limitare il numero di elementi corrispondenti (se non impostato, verr\u00e0 restituita soltanto l'elemento pi\u00f9 vicino); cache imposta su \"true\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento);","title":"Argomenti"},{"location":"gr_funzioni/geometria/overlay_nearest/#esempi","text":"* overlay_nearest('airports') \u2192 true se il layer \"airports\" ha almeno un elemento * overlay_nearest('airports', max_distance:= 5000) \u2192 vero se \u00e8 presente un aeroporto entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente * overlay_nearest('airports', name) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come array * array_to_string(overlay_nearest('airports', name)) \u2192 il nome dell'aereoporto pi\u00f9 vicino all'elemento corrente, come stringa * overlay_nearest(layer:='airports', expression:= name, max_distance:= 5000) \u2192 il nome dell'aereoporto pi\u00f9 vicino entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, come array * overlay_nearest(layer:='airports', expression:=\"name\", filter:= \"Use\"='Civilian', limit:=3) \u2192 un array di nomi, per un massimo di tre aeroeporti civili pi\u00f9 vicini ordinati per distanza * overlay_nearest(layer:='airports', expression:=\"name\", limit:= -1, max_distance:= 5000) \u2192 un array di nomi, per tutti gli aeroporti entro una distanza di 5000 unit\u00e0 di mappa dall'elemento corrente, ordinato per distanza.","title":"Esempi"},{"location":"gr_funzioni/geometria/overlay_nearest/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/overlay_nearest/#osservazioni","text":"Esempio 45: http://hfcqgis.opendatasicilia.it/it/latest/esempi/linea_min_distanza2.html","title":"osservazioni"},{"location":"gr_funzioni/geometria/overlay_touches/","text":"overlay_touches \u21b5 Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target toccati dall'elemento corrente. Leggi ulteriori informazioni sul predicato GEOS \"Touches\", come descritto nella funzione PostGIS ST_TOUCHES . Sintassi \u21b5 overlay_touches( layer ,expression ,limit ) [ ] indica componenti opzionali Argomenti \u21b5 layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); Esempi \u21b5 * overlay_touches('regions') \u2192 true se l'elemento corrente tocca spazialmente una regione * overlay_touches('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente tocca spazialmente una regione con una popolazione maggiore di 10000 * overlay_touches('regions', name) \u2192 un array di nomi, per le regioni tocacte dall'elemento corrente * string_to_array(overlay_touches('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni toccate dall'elemento corrente * overlay_touches('regions', name)[0] \u2192 una stringa con il nome della regione toccata dall'elemento corrente * array_sort(overlay_touches(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni toccate dall'elemento attuale e con una popolazione superiore a 10000 * overlay_touches(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni toccate dall'elemento corrente nota bene \u21b5 -- osservazioni \u21b5 --","title":"overlay_touches"},{"location":"gr_funzioni/geometria/overlay_touches/#overlay_touches","text":"Restituisce se l'elemento corrente tocca spazialmente almeno un elemento da un layer target o un array di risultati basati su espressioni per gli elementi nel layer target toccati dall'elemento corrente. Leggi ulteriori informazioni sul predicato GEOS \"Touches\", come descritto nella funzione PostGIS ST_TOUCHES .","title":"overlay_touches"},{"location":"gr_funzioni/geometria/overlay_touches/#sintassi","text":"overlay_touches( layer ,expression ,limit ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/overlay_touches/#argomenti","text":"layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento);","title":"Argomenti"},{"location":"gr_funzioni/geometria/overlay_touches/#esempi","text":"* overlay_touches('regions') \u2192 true se l'elemento corrente tocca spazialmente una regione * overlay_touches('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente tocca spazialmente una regione con una popolazione maggiore di 10000 * overlay_touches('regions', name) \u2192 un array di nomi, per le regioni tocacte dall'elemento corrente * string_to_array(overlay_touches('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni toccate dall'elemento corrente * overlay_touches('regions', name)[0] \u2192 una stringa con il nome della regione toccata dall'elemento corrente * array_sort(overlay_touches(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni toccate dall'elemento attuale e con una popolazione superiore a 10000 * overlay_touches(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni toccate dall'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/geometria/overlay_touches/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/overlay_touches/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/overlay_within/","text":"overlay_within \u21b5 Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Within\", come descritto nella funzione PostGIS ST_WITHIN . Sintassi \u21b5 overlay_within( layer ,expression ,limit ) [ ] indica componenti opzionali Argomenti \u21b5 layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento); Esempi \u21b5 * overlay_within('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente all'interno di una regione * overlay_within('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente all'interno di una regione con una popolazione maggiore di 10000 * overlay_within('regions', name) \u2192 un array di nomi, per le regioni contenenti l'elemento corrente * array_to_string(overlay_within('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni che contengono l'elemento corrente * overlay_within('regions', name)[0] \u2192 una stringa con il nome della regione che contengono l'elemento corrente * array_sort(overlay_within(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenenti l'elemento corrente e con una popolazione superiore a 10000 * overlay_within(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenenti l'elemento corrente nota bene \u21b5 -- osservazioni \u21b5 --","title":"overlay_within"},{"location":"gr_funzioni/geometria/overlay_within/#overlay_within","text":"Restituisce se l'elemento corrente \u00e8 spazialmente all'interno di almeno un elemento da layer destinazione, o un array di risultati basati su espressione per gli elementi nel layer destinazione che contengono l'elemento corrente. Ulteriori informazioni sul sottostante predicato GEOS \"Within\", come descritto nella funzione PostGIS ST_WITHIN .","title":"overlay_within"},{"location":"gr_funzioni/geometria/overlay_within/#sintassi","text":"overlay_within( layer ,expression ,limit ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/overlay_within/#argomenti","text":"layer l'altro layer; expression un'espressione opzionale per valutare gli elementi dell'altro layer (se non impostata, la funzione restituisce semplicemente un booleano che indica se c'\u00e8 almeno una corrispondenza); filter un'espressione opzionale per filtrare gli elementi corrispondenti (se non impostata, verranno restituiti tutti gli elementi); limit un numero intero opzionale per limitare il numero di elementi corrispondenti (se non impostato, verranno restituiti tutti gli elementi); cache imposta su \"vero\" per creare un indice spaziale locale (il pi\u00f9 delle volte, questo \u00e8 indesiderato, a meno che tu non stia lavorando con un fornitore di dati particolarmente lento);","title":"Argomenti"},{"location":"gr_funzioni/geometria/overlay_within/#esempi","text":"* overlay_within('regions') \u2192 true se l'elemento corrente \u00e8 spazialmente all'interno di una regione * overlay_within('regions', filter:= population > 10000) \u2192 vero se l'elemento corrente \u00e8 spazialmente all'interno di una regione con una popolazione maggiore di 10000 * overlay_within('regions', name) \u2192 un array di nomi, per le regioni contenenti l'elemento corrente * array_to_string(overlay_within('regions', name)) \u2192 una stringa come lista di nomi separati da virgole, per le regioni che contengono l'elemento corrente * overlay_within('regions', name)[0] \u2192 una stringa con il nome della regione che contengono l'elemento corrente * array_sort(overlay_within(layer:='regions', expression:=\"name\", filter:= population > 10000)) \u2192 un array ordinato di nomi, per le regioni contenenti l'elemento corrente e con una popolazione superiore a 10000 * overlay_within(layer:='regions', expression:= geom_to_wkt($geometry), limit:=2) \u2192 un array di geometrie (in WKT), per un massimo di due regioni contenenti l'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/geometria/overlay_within/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/overlay_within/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/perimeter/","text":"perimeter \u21b5 Calcola il perimetro di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione \\$perimeter , la quale esegue calcoli ellissoidali basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura della distanza. Sintassi \u21b5 perimeter( geometry ) Argomenti \u21b5 geometry oggetto geometria poligono Esempi \u21b5 perimeter(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))')) \u2192 12.0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"perimeter"},{"location":"gr_funzioni/geometria/perimeter/#perimeter","text":"Calcola il perimetro di un oggetto a geometria poligonale. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione \\$perimeter , la quale esegue calcoli ellissoidali basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di misura della distanza.","title":"perimeter"},{"location":"gr_funzioni/geometria/perimeter/#sintassi","text":"perimeter( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/perimeter/#argomenti","text":"geometry oggetto geometria poligono","title":"Argomenti"},{"location":"gr_funzioni/geometria/perimeter/#esempi","text":"perimeter(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))')) \u2192 12.0","title":"Esempi"},{"location":"gr_funzioni/geometria/perimeter/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/perimeter/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/point_n/","text":"point_n \u21b5 Restituisce un nodo specifico da una geometria. Sintassi \u21b5 point_n(geometry, index) Argomenti \u21b5 geometry oggetto geometria index indice del nodo da restituire, dove 1 \u00e8 il primo nodo Esempi \u21b5 geom_to_wkt(point_n(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))'),2)) \u2192 'Point (4 0)' nota bene \u21b5 -- osservazioni \u21b5 -- Esempi correlati \u21b5 esempio nro 4 - Come aggiungere la quota Z alla tabella attributi","title":"point_n"},{"location":"gr_funzioni/geometria/point_n/#point_n","text":"Restituisce un nodo specifico da una geometria.","title":"point_n"},{"location":"gr_funzioni/geometria/point_n/#sintassi","text":"point_n(geometry, index)","title":"Sintassi"},{"location":"gr_funzioni/geometria/point_n/#argomenti","text":"geometry oggetto geometria index indice del nodo da restituire, dove 1 \u00e8 il primo nodo","title":"Argomenti"},{"location":"gr_funzioni/geometria/point_n/#esempi","text":"geom_to_wkt(point_n(geom_from_wkt('POLYGON((0 0, 4 0, 4 2, 0 2, 0 0))'),2)) \u2192 'Point (4 0)'","title":"Esempi"},{"location":"gr_funzioni/geometria/point_n/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/point_n/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/point_n/#esempi-correlati","text":"esempio nro 4 - Come aggiungere la quota Z alla tabella attributi","title":"Esempi correlati"},{"location":"gr_funzioni/geometria/point_on_surface/","text":"point_on_surface \u21b5 Restituisce un punto garantendo che sia giacente sulla superficie della geometria. Sintassi \u21b5 point_on_surface( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 point_on_surface($geometry) \u2192 una geometria punto nota bene \u21b5 -- osservazioni \u21b5 --","title":"point_on_surface"},{"location":"gr_funzioni/geometria/point_on_surface/#point_on_surface","text":"Restituisce un punto garantendo che sia giacente sulla superficie della geometria.","title":"point_on_surface"},{"location":"gr_funzioni/geometria/point_on_surface/#sintassi","text":"point_on_surface( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/point_on_surface/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/point_on_surface/#esempi","text":"point_on_surface($geometry) \u2192 una geometria punto","title":"Esempi"},{"location":"gr_funzioni/geometria/point_on_surface/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/point_on_surface/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/pole_of_inaccessibility/","text":"pole_of_inaccessibility \u21b5 Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie. Questa funzione usa l'algoritmo 'polylabel' (Vladimir Agafonkin, 2016), che \u00e8 un approccio iterativo garantito per trovare il vero polo dell'inaccessibilit\u00e0 all'interno di una tolleranza specificata. Tolleranze pi\u00f9 precise richiedono pi\u00f9 iterazioni e sar\u00e0 necessario pi\u00f9 tempo per il calcolo. Sintassi \u21b5 pole_of_inaccessibility( geometry, tolerance ) Argomenti \u21b5 geometry una geometria tolerance distanza massima tra il punto restituito e la vera posizione del polo Esempi \u21b5 geom_to_wkt(pole_of_inaccessibility( geom_from_wkt('POLYGON((0 1,0 9,3 10,3 3, 10 3, 10 1, 0 1))'), 0.1)) \u2192 'Point(1.55, 1.55)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"pole_of_inaccessibility"},{"location":"gr_funzioni/geometria/pole_of_inaccessibility/#pole_of_inaccessibility","text":"Calcola il polo dell'inaccessibilit\u00e0 approssimato per una superficie, che \u00e8 il punto interno pi\u00f9 distante dal contorno della superficie. Questa funzione usa l'algoritmo 'polylabel' (Vladimir Agafonkin, 2016), che \u00e8 un approccio iterativo garantito per trovare il vero polo dell'inaccessibilit\u00e0 all'interno di una tolleranza specificata. Tolleranze pi\u00f9 precise richiedono pi\u00f9 iterazioni e sar\u00e0 necessario pi\u00f9 tempo per il calcolo.","title":"pole_of_inaccessibility"},{"location":"gr_funzioni/geometria/pole_of_inaccessibility/#sintassi","text":"pole_of_inaccessibility( geometry, tolerance )","title":"Sintassi"},{"location":"gr_funzioni/geometria/pole_of_inaccessibility/#argomenti","text":"geometry una geometria tolerance distanza massima tra il punto restituito e la vera posizione del polo","title":"Argomenti"},{"location":"gr_funzioni/geometria/pole_of_inaccessibility/#esempi","text":"geom_to_wkt(pole_of_inaccessibility( geom_from_wkt('POLYGON((0 1,0 9,3 10,3 3, 10 3, 10 1, 0 1))'), 0.1)) \u2192 'Point(1.55, 1.55)'","title":"Esempi"},{"location":"gr_funzioni/geometria/pole_of_inaccessibility/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/pole_of_inaccessibility/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/project/","text":"project \u21b5 Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti. Sintassi \u21b5 project( point, distance, bearing ) Argomenti \u21b5 point punto di partenza distance distanza dal progetto bearing direzione di immersione in radianti in senso orario, dove 0 corrisponde al nord Esempi \u21b5 project(make_point(1, 2), 3, radians(270)) \u2192 Point(-2, 2) nota bene \u21b5 -- osservazioni \u21b5 --","title":"project"},{"location":"gr_funzioni/geometria/project/#project","text":"Restituisce un punto proiettato da un punto di partenza usando una distanza e una direzione di immersione (azimut) in radianti.","title":"project"},{"location":"gr_funzioni/geometria/project/#sintassi","text":"project( point, distance, bearing )","title":"Sintassi"},{"location":"gr_funzioni/geometria/project/#argomenti","text":"point punto di partenza distance distanza dal progetto bearing direzione di immersione in radianti in senso orario, dove 0 corrisponde al nord","title":"Argomenti"},{"location":"gr_funzioni/geometria/project/#esempi","text":"project(make_point(1, 2), 3, radians(270)) \u2192 Point(-2, 2)","title":"Esempi"},{"location":"gr_funzioni/geometria/project/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/project/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/relate/","text":"relate \u21b5 Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Variabile di relazione \u21b5 Restituisce la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie. Sintassi \u21b5 relate( geometry, geometry ) Argomenti \u21b5 geometry una geometria geometry una geometria Esempi \u21b5 relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ) ) \u2192 'FF1F00102' Variabile corrispondenza pattern \u21b5 Testa se la relazione DE-9IM tra due geometrie corrisponde a un pattern specificato: restituisc true Vero, false Falso. Sintassi \u21b5 relate( geometry, geometry, pattern ) Argomenti \u21b5 geometry una geometria geometry una geometria pattern Tratteggio DE-9IM da far corrispondere Esempio \u21b5 relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ), '**1F001**' ) \u2192 Vero nota bene \u21b5 -- osservazioni \u21b5 -- Link utili \u21b5 Wikipedia OpenGeo","title":"relate"},{"location":"gr_funzioni/geometria/relate/#relate","text":"Testa la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie.","title":"relate"},{"location":"gr_funzioni/geometria/relate/#variabile-di-relazione","text":"Restituisce la rappresentazione Dimensional Extended 9 Intersection Model (DE-9IM) della relazione tra due geometrie.","title":"Variabile di relazione"},{"location":"gr_funzioni/geometria/relate/#sintassi","text":"relate( geometry, geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/relate/#argomenti","text":"geometry una geometria geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/relate/#esempi","text":"relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ) ) \u2192 'FF1F00102'","title":"Esempi"},{"location":"gr_funzioni/geometria/relate/#variabile-corrispondenza-pattern","text":"Testa se la relazione DE-9IM tra due geometrie corrisponde a un pattern specificato: restituisc true Vero, false Falso.","title":"Variabile corrispondenza pattern"},{"location":"gr_funzioni/geometria/relate/#sintassi_1","text":"relate( geometry, geometry, pattern )","title":"Sintassi"},{"location":"gr_funzioni/geometria/relate/#argomenti_1","text":"geometry una geometria geometry una geometria pattern Tratteggio DE-9IM da far corrispondere","title":"Argomenti"},{"location":"gr_funzioni/geometria/relate/#esempio","text":"relate( geom_from_wkt( 'LINESTRING(40 40,120 120)' ), geom_from_wkt( 'LINESTRING(40 40,60 120)' ), '**1F001**' ) \u2192 Vero","title":"Esempio"},{"location":"gr_funzioni/geometria/relate/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/relate/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/relate/#link-utili","text":"Wikipedia OpenGeo","title":"Link utili"},{"location":"gr_funzioni/geometria/reverse/","text":"reverse \u21b5 Inverte il verso di una linestring invertendo l'ordine dei sui vertici Sintassi \u21b5 reverse( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 geom_to_wkt(reverse(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'LINESTRING(2 2, 1 1, 0 0)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"reverse"},{"location":"gr_funzioni/geometria/reverse/#reverse","text":"Inverte il verso di una linestring invertendo l'ordine dei sui vertici","title":"reverse"},{"location":"gr_funzioni/geometria/reverse/#sintassi","text":"reverse( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/reverse/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/reverse/#esempi","text":"geom_to_wkt(reverse(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'LINESTRING(2 2, 1 1, 0 0)'","title":"Esempi"},{"location":"gr_funzioni/geometria/reverse/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/reverse/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/rotate/","text":"rotate \u21b5 Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria. Sintassi \u21b5 rotate( geom[,point] ) Argomenti \u21b5 geom una geometria rotation rotazione oraria in gradi point punto centrale di rotazione. Se non specificato, viene utilizzato il centro del rettangolo di selezione della geometria. Esempi \u21b5 rotate($geometry, 45, make_point(4, 5)) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al punto (4, 5) rotate($geometry, 45) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al centro del riquadro di delimitazione nota bene \u21b5 -- osservazioni \u21b5","title":"rotate"},{"location":"gr_funzioni/geometria/rotate/#rotate","text":"Restituisce una versione ruotata di una geometria. I calcoli si trovano nel sistema di riferimento spaziale di questa geometria.","title":"rotate"},{"location":"gr_funzioni/geometria/rotate/#sintassi","text":"rotate( geom[,point] )","title":"Sintassi"},{"location":"gr_funzioni/geometria/rotate/#argomenti","text":"geom una geometria rotation rotazione oraria in gradi point punto centrale di rotazione. Se non specificato, viene utilizzato il centro del rettangolo di selezione della geometria.","title":"Argomenti"},{"location":"gr_funzioni/geometria/rotate/#esempi","text":"rotate($geometry, 45, make_point(4, 5)) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al punto (4, 5) rotate($geometry, 45) \u2192 la geometria ruotava di 45 gradi in senso orario attorno al centro del riquadro di delimitazione","title":"Esempi"},{"location":"gr_funzioni/geometria/rotate/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/rotate/#osservazioni","text":"","title":"osservazioni"},{"location":"gr_funzioni/geometria/segments_to_lines/","text":"segments_to_lines \u21b5 Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso. Sintassi \u21b5 segments_to_lines( geometry ) Argomenti \u21b5 geometry oggetto geometria Esempi \u21b5 geom_to_wkt(segments_to_lines(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiLineString ((0 0, 1 1),(1 1, 2 2))' nota bene \u21b5 -- osservazioni \u21b5 --","title":"segments_to_lines"},{"location":"gr_funzioni/geometria/segments_to_lines/#segments_to_lines","text":"Restituisce una geometria multi linea consistente in una linea per ogni segmento nella geometria in ingresso.","title":"segments_to_lines"},{"location":"gr_funzioni/geometria/segments_to_lines/#sintassi","text":"segments_to_lines( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/segments_to_lines/#argomenti","text":"geometry oggetto geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/segments_to_lines/#esempi","text":"geom_to_wkt(segments_to_lines(geom_from_wkt('LINESTRING(0 0, 1 1, 2 2)'))) \u2192 'MultiLineString ((0 0, 1 1),(1 1, 2 2))'","title":"Esempi"},{"location":"gr_funzioni/geometria/segments_to_lines/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/segments_to_lines/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/shortest_line/","text":"shortest_line \u21b5 Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2. La linea risultante partir\u00e0 dalla geometria 1 e finir\u00e0 nella geometria 2. Sintassi \u21b5 shortest_line( geometry 1, geometry 2 ) Argomenti \u21b5 geometry 1 geometria dalla quale cercare la linea pi\u00f9 corta geometry 2 geometria verso la quale cercare la linea pi\u00f9 corta Esempi \u21b5 geom_to_wkt(shortest_line(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 LineString(73.0769 115.384, 100 100) nota bene \u21b5 -- osservazioni \u21b5 --","title":"shortest_line"},{"location":"gr_funzioni/geometria/shortest_line/#shortest_line","text":"Restituisce la linea pi\u00f9 corta che unisce la geometria 1 alla geometria 2. La linea risultante partir\u00e0 dalla geometria 1 e finir\u00e0 nella geometria 2.","title":"shortest_line"},{"location":"gr_funzioni/geometria/shortest_line/#sintassi","text":"shortest_line( geometry 1, geometry 2 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/shortest_line/#argomenti","text":"geometry 1 geometria dalla quale cercare la linea pi\u00f9 corta geometry 2 geometria verso la quale cercare la linea pi\u00f9 corta","title":"Argomenti"},{"location":"gr_funzioni/geometria/shortest_line/#esempi","text":"geom_to_wkt(shortest_line(geom_from_wkt('LINESTRING (20 80, 98 190, 110 180, 50 75 )'),geom_from_wkt('POINT(100 100)'))) \u2192 LineString(73.0769 115.384, 100 100)","title":"Esempi"},{"location":"gr_funzioni/geometria/shortest_line/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/shortest_line/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/simplify/","text":"simplify \u21b5 Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker). L'algoritmo mantiene grandi deviazioni nelle geometrie e riduce il numero di vertici in segmenti quasi rettilinei. Sintassi \u21b5 simplify( geometry, tolerance ) Argomenti \u21b5 geometry una geometria tolerance deviazione massima dai segmenti rettilinei per i punti da rimuovere Esempi \u21b5 geom_to_wkt(simplify(geometry:=geom_from_wkt('LineString(0 0, 5 0.1, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"simplify"},{"location":"gr_funzioni/geometria/simplify/#simplify","text":"Semplifica una geometria rimuovendo nodi usando una soglia basata sulla distanza (cio\u00e8, l'algoritmo Douglas Peucker). L'algoritmo mantiene grandi deviazioni nelle geometrie e riduce il numero di vertici in segmenti quasi rettilinei.","title":"simplify"},{"location":"gr_funzioni/geometria/simplify/#sintassi","text":"simplify( geometry, tolerance )","title":"Sintassi"},{"location":"gr_funzioni/geometria/simplify/#argomenti","text":"geometry una geometria tolerance deviazione massima dai segmenti rettilinei per i punti da rimuovere","title":"Argomenti"},{"location":"gr_funzioni/geometria/simplify/#esempi","text":"geom_to_wkt(simplify(geometry:=geom_from_wkt('LineString(0 0, 5 0.1, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)'","title":"Esempi"},{"location":"gr_funzioni/geometria/simplify/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/simplify/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/simplify_vw/","text":"simplify_vw \u21b5 Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ). L'algoritmo rimuove i vertici che creano piccole aree nelle geometrie, ad esempio picchi stretti o segmenti quasi rettilinei. Sintassi \u21b5 simplify_vw( geometry , tolerance ) Argomenti \u21b5 geometry una geometria tolerance una misura dell'area massima creata da un nodo per il nodo da rimuovere Esempi \u21b5 geom_from_wkt('LineString(0 0, 5 0, 5.01 10, 5.02 0, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)' nota bene \u21b5 -- osservazioni \u21b5 --","title":"simplify_vw"},{"location":"gr_funzioni/geometria/simplify_vw/#simplify_vw","text":"Semplifica una geometria rimuovendo nodi usando una soglia basata sull'area (cio\u00e8, l'algoritmo Visvalingam-Whyatt ). L'algoritmo rimuove i vertici che creano piccole aree nelle geometrie, ad esempio picchi stretti o segmenti quasi rettilinei.","title":"simplify_vw"},{"location":"gr_funzioni/geometria/simplify_vw/#sintassi","text":"simplify_vw( geometry , tolerance )","title":"Sintassi"},{"location":"gr_funzioni/geometria/simplify_vw/#argomenti","text":"geometry una geometria tolerance una misura dell'area massima creata da un nodo per il nodo da rimuovere","title":"Argomenti"},{"location":"gr_funzioni/geometria/simplify_vw/#esempi","text":"geom_from_wkt('LineString(0 0, 5 0, 5.01 10, 5.02 0, 10 0)'),tolerance:=5)) \u2192 'LineString(0 0, 10 0)'","title":"Esempi"},{"location":"gr_funzioni/geometria/simplify_vw/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/simplify_vw/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/single_sided_buffer/","text":"single_sided_buffer \u21b5 Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring. Le distanze sono espresse nel SR di tale geometria. Sintassi \u21b5 single_sided_buffer( geometry, distance, segments, join, miter_limit ) Argomenti \u21b5 geometry una geometria (multi)linestring distance distanza di buffer. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate) Esempi \u21b5 single_sided_buffer($geometry, 10.5) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0 single_sided_buffer($geometry, -10.5) \u2192 linea bufferizzata a destra di 10.5 unit\u00e0 single_sided_buffer($geometry, 10.5, segments:=16, join:=1) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in un buffer pi\u00f9 morbido single_sided_buffer($geometry, 10.5, join:=3) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando un'unione smussata nota bene \u21b5 -- osservazioni \u21b5 --","title":"single_sided_buffer"},{"location":"gr_funzioni/geometria/single_sided_buffer/#single_sided_buffer","text":"Restituisce una geometria formata facendo un buffer solo da un lato di una geometria di tipo linestring. Le distanze sono espresse nel SR di tale geometria.","title":"single_sided_buffer"},{"location":"gr_funzioni/geometria/single_sided_buffer/#sintassi","text":"single_sided_buffer( geometry, distance, segments, join, miter_limit )","title":"Sintassi"},{"location":"gr_funzioni/geometria/single_sided_buffer/#argomenti","text":"geometry una geometria (multi)linestring distance distanza di buffer. Valori positivi saranno bufferizzati a sinistra delle linee, valori negativi a destra segments numero di segmenti da usare per rappresentare un quarto di cerchio quando \u00e8 utilizzato uno stile di unione arrotondato. Un numero grande risulta in un buffer pi\u00f9 morbido, con pi\u00f9 nodi. join stile di unione per gli angoli, dove 1 = arrotondato, 2 = seghettato e 3 = smussato miter_limit limite sul rapporto di seghettatura usato per angoli molto appuntiti (solamente quando si usano le unioni seghettate)","title":"Argomenti"},{"location":"gr_funzioni/geometria/single_sided_buffer/#esempi","text":"single_sided_buffer($geometry, 10.5) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0 single_sided_buffer($geometry, -10.5) \u2192 linea bufferizzata a destra di 10.5 unit\u00e0 single_sided_buffer($geometry, 10.5, segments:=16, join:=1) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando pi\u00f9 segmenti per risultare in un buffer pi\u00f9 morbido single_sided_buffer($geometry, 10.5, join:=3) \u2192 linea bufferizzata a sinistra di 10.5 unit\u00e0, usando un'unione smussata","title":"Esempi"},{"location":"gr_funzioni/geometria/single_sided_buffer/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/single_sided_buffer/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/smooth/","text":"smooth \u21b5 Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria. Sintassi \u21b5 smooth( geometry, iterations, offset, min_length, max_angle ) Argomenti \u21b5 geometry una geometria iterations Numero di iterazioni di smussatura da applicare. Valori pi\u00f9 alti fanno risultare geometria pi\u00f9 morbide, ma pi\u00f9 complesse. offset valore tra 0 e 0.5 che controlla quanto la geometria smussata segua strettamente la geometria originale. Valori pi\u00f9 piccoli risultano in una lisciatura pi\u00f9 stretta, valori pi\u00f9 grandi risultano in una lisciatura pi\u00f9 larga. min_length lunghezza minima dei segmenti ai quali applicare la smussatura. Questo parametro pu\u00f2 essere usato per evitare di posizionare nodi aggiuntivi eccessivi nei segmenti pi\u00f9 corti della geometria. max_angle angolo massimo (0-180) da applicare al nodo per la smussatura. Abbassando intenzionalmente l'angolo massimo si abbassa l'arrotondamento sugli angoli della geometria. Per esempio, un valore di 80 gradi preserver\u00e0 l'angolo nella geometria. Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"smooth"},{"location":"gr_funzioni/geometria/smooth/#smooth","text":"Smussa una geometria con l'aggiunta di ulteriori nodi che arrotondano gli angoli nella geometria.","title":"smooth"},{"location":"gr_funzioni/geometria/smooth/#sintassi","text":"smooth( geometry, iterations, offset, min_length, max_angle )","title":"Sintassi"},{"location":"gr_funzioni/geometria/smooth/#argomenti","text":"geometry una geometria iterations Numero di iterazioni di smussatura da applicare. Valori pi\u00f9 alti fanno risultare geometria pi\u00f9 morbide, ma pi\u00f9 complesse. offset valore tra 0 e 0.5 che controlla quanto la geometria smussata segua strettamente la geometria originale. Valori pi\u00f9 piccoli risultano in una lisciatura pi\u00f9 stretta, valori pi\u00f9 grandi risultano in una lisciatura pi\u00f9 larga. min_length lunghezza minima dei segmenti ai quali applicare la smussatura. Questo parametro pu\u00f2 essere usato per evitare di posizionare nodi aggiuntivi eccessivi nei segmenti pi\u00f9 corti della geometria. max_angle angolo massimo (0-180) da applicare al nodo per la smussatura. Abbassando intenzionalmente l'angolo massimo si abbassa l'arrotondamento sugli angoli della geometria. Per esempio, un valore di 80 gradi preserver\u00e0 l'angolo nella geometria.","title":"Argomenti"},{"location":"gr_funzioni/geometria/smooth/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/geometria/smooth/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/smooth/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/start_point/","text":"start_point \u21b5 Restituisce il primo nodo di una geometria. Sintassi \u21b5 start_point( geometry ) Argomenti \u21b5 geometry oggetto geometria Esempi \u21b5 geom_to_wkt(start_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (4 0)' nota bene \u21b5 -- osservazioni \u21b5 -- Start_point di geometria poligonale: Start_point di geometria lineare:","title":"start_point"},{"location":"gr_funzioni/geometria/start_point/#start_point","text":"Restituisce il primo nodo di una geometria.","title":"start_point"},{"location":"gr_funzioni/geometria/start_point/#sintassi","text":"start_point( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/start_point/#argomenti","text":"geometry oggetto geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/start_point/#esempi","text":"geom_to_wkt(start_point(geom_from_wkt('LINESTRING(4 0, 4 2, 0 2)'))) \u2192 'Point (4 0)'","title":"Esempi"},{"location":"gr_funzioni/geometria/start_point/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/start_point/#osservazioni","text":"-- Start_point di geometria poligonale: Start_point di geometria lineare:","title":"osservazioni"},{"location":"gr_funzioni/geometria/sym_difference/","text":"sym_difference \u21b5 Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca. Sintassi \u21b5 sym_difference( geometry1, geometry2 ) Argomenti \u21b5 geometry1 una geometria geometry2 una geometria Esempi \u21b5 geom_to_wkt( sym_difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 8 8)' ) ) ) \u2192 LINESTRING(5 5, 8 8) Espressione: -- differenza simmetrica tra le due linee sym_difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente prova tu \u21b5 Dati e progetto qgz nota bene \u21b5 -- osservazioni \u21b5 --","title":"sym_difference"},{"location":"gr_funzioni/geometria/sym_difference/#sym_difference","text":"Restituisce una geometria che rappresenta la porzione di due geometrie che non si interseca.","title":"sym_difference"},{"location":"gr_funzioni/geometria/sym_difference/#sintassi","text":"sym_difference( geometry1, geometry2 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/sym_difference/#argomenti","text":"geometry1 una geometria geometry2 una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/sym_difference/#esempi","text":"geom_to_wkt( sym_difference( geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ), geom_from_wkt( 'LINESTRING(3 3, 8 8)' ) ) ) \u2192 LINESTRING(5 5, 8 8) Espressione: -- differenza simmetrica tra le due linee sym_difference( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente","title":"Esempi"},{"location":"gr_funzioni/geometria/sym_difference/#prova-tu","text":"Dati e progetto qgz","title":"prova tu"},{"location":"gr_funzioni/geometria/sym_difference/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/sym_difference/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/tapered_buffer/","text":"tapered_buffer \u21b5 Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea. Sintassi \u21b5 tapered_buffer( geometry,start_width,end_width[,segments=8] ) [ ] contrassegna componenti opzionali Argomenti \u21b5 geometry input geometry. Deve essere una (multi) geometria della linea. start_width larghezza del buffer all'inizio della linea, end_width larghezza del buffer alla fine della riga. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer Esempi \u21b5 apered_buffer(geometry:=geom_from_wkt('LINESTRING(1 2, 4 2)'),start_width:=1,end_width:=2,segments:=8) \u2192 Un buffer rastremato che inizia con un diametro di 1 e termina con un diametro di 2 lungo la geometria della linea. nota bene \u21b5 -- osservazioni \u21b5 -- QGIS - feature","title":"tapered_buffer"},{"location":"gr_funzioni/geometria/tapered_buffer/#tapered_buffer","text":"Crea un buffer lungo una geometria della linea in cui il diametro del buffer varia in modo uniforme sulla lunghezza della linea.","title":"tapered_buffer"},{"location":"gr_funzioni/geometria/tapered_buffer/#sintassi","text":"tapered_buffer( geometry,start_width,end_width[,segments=8] ) [ ] contrassegna componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/tapered_buffer/#argomenti","text":"geometry input geometry. Deve essere una (multi) geometria della linea. start_width larghezza del buffer all'inizio della linea, end_width larghezza del buffer alla fine della riga. segments numero di segmenti per approssimare le curve del quarto di cerchio nel buffer","title":"Argomenti"},{"location":"gr_funzioni/geometria/tapered_buffer/#esempi","text":"apered_buffer(geometry:=geom_from_wkt('LINESTRING(1 2, 4 2)'),start_width:=1,end_width:=2,segments:=8) \u2192 Un buffer rastremato che inizia con un diametro di 1 e termina con un diametro di 2 lungo la geometria della linea.","title":"Esempi"},{"location":"gr_funzioni/geometria/tapered_buffer/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/tapered_buffer/#osservazioni","text":"-- QGIS - feature","title":"osservazioni"},{"location":"gr_funzioni/geometria/touches/","text":"touches \u21b5 Verifica se una geometria tocca un'altra. Restituisce vero (1) se le geometrie hanno almeno un punto in comune, ma i loro interni non si intersecano. Sintassi \u21b5 touches( geometry a, geometry b ) Argomenti \u21b5 geometry a una geometria geometry b una geometria Esempi \u21b5 touches( geom_from_wkt( 'LINESTRING(5 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 touches( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 0 nota bene \u21b5 -- osservazioni \u21b5 Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: touches(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','52')) geometry b \u00e8 $geometry seleziono tutti i comuni touches (toccati) dalla provincia con pk_uid 46 (Siena) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli toccati dalla provincia di Siena). NOT touches(geometry(get_feature( 'province_rt_rt','pk_uid','52')),$geometry)","title":"touches"},{"location":"gr_funzioni/geometria/touches/#touches","text":"Verifica se una geometria tocca un'altra. Restituisce vero (1) se le geometrie hanno almeno un punto in comune, ma i loro interni non si intersecano.","title":"touches"},{"location":"gr_funzioni/geometria/touches/#sintassi","text":"touches( geometry a, geometry b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/touches/#argomenti","text":"geometry a una geometria geometry b una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/touches/#esempi","text":"touches( geom_from_wkt( 'LINESTRING(5 3, 4 4)' ), geom_from_wkt( 'LINESTRING(3 3, 4 4, 5 5)' ) ) \u2192 1 touches( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) \u2192 0","title":"Esempi"},{"location":"gr_funzioni/geometria/touches/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/touches/#osservazioni","text":"Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: touches(geometry(get_feature( 'province_rt_rt','pk_uid','46')),$geometry) dove: geometry a \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','52')) geometry b \u00e8 $geometry seleziono tutti i comuni touches (toccati) dalla provincia con pk_uid 46 (Siena) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli toccati dalla provincia di Siena). NOT touches(geometry(get_feature( 'province_rt_rt','pk_uid','52')),$geometry)","title":"osservazioni"},{"location":"gr_funzioni/geometria/transform/","text":"transform \u21b5 Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione. Sintassi \u21b5 transform( geomometry, source_auth_id, dest_auth_id ) Argomenti \u21b5 geometry una geometria source_auth_id ID del SR sorgente dest_auth_id ID del SR destinazione Esempi \u21b5 geom_to_wkt( transform( $geometry, 'EPSG:2154', 'EPSG:4326' ) ) \u2192 POINT(0 51) nota bene \u21b5 -- osservazioni \u21b5 --","title":"transform"},{"location":"gr_funzioni/geometria/transform/#transform","text":"Restituisce la geometria trasformata da un SR sorgente ad un SR di destinazione.","title":"transform"},{"location":"gr_funzioni/geometria/transform/#sintassi","text":"transform( geomometry, source_auth_id, dest_auth_id )","title":"Sintassi"},{"location":"gr_funzioni/geometria/transform/#argomenti","text":"geometry una geometria source_auth_id ID del SR sorgente dest_auth_id ID del SR destinazione","title":"Argomenti"},{"location":"gr_funzioni/geometria/transform/#esempi","text":"geom_to_wkt( transform( $geometry, 'EPSG:2154', 'EPSG:4326' ) ) \u2192 POINT(0 51)","title":"Esempi"},{"location":"gr_funzioni/geometria/transform/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/transform/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/translate/","text":"translate \u21b5 Restituisce una versione traslata di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi \u21b5 translate( geometry, dx, dy ) Argomenti \u21b5 geometry una geometria dx delta x dy delta y Esempi \u21b5 translate($geometry, 5, 10) \u2192 una geometria dello stesso tipo come l'originale nota bene \u21b5 -- osservazioni \u21b5 --","title":"translate"},{"location":"gr_funzioni/geometria/translate/#translate","text":"Restituisce una versione traslata di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria.","title":"translate"},{"location":"gr_funzioni/geometria/translate/#sintassi","text":"translate( geometry, dx, dy )","title":"Sintassi"},{"location":"gr_funzioni/geometria/translate/#argomenti","text":"geometry una geometria dx delta x dy delta y","title":"Argomenti"},{"location":"gr_funzioni/geometria/translate/#esempi","text":"translate($geometry, 5, 10) \u2192 una geometria dello stesso tipo come l'originale","title":"Esempi"},{"location":"gr_funzioni/geometria/translate/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/translate/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/union/","text":"union \u21b5 Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie. Sintassi \u21b5 union( geometry1, geometry2 ) Argomenti \u21b5 geometry1 una geometria geometry2 una geometria Esempi \u21b5 geom_to_wkt( union( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) ) \u2192 MULTIPOINT(4 4, 5 5) Espressione: -- unione delle due linee union( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente prova tu \u21b5 Dati e progetto qgz nota bene \u21b5 -- osservazioni \u21b5 --","title":"union"},{"location":"gr_funzioni/geometria/union/#union","text":"Restituisce una geometria che rappresenta l'insieme dei punti dell'unione delle geometrie.","title":"union"},{"location":"gr_funzioni/geometria/union/#sintassi","text":"union( geometry1, geometry2 )","title":"Sintassi"},{"location":"gr_funzioni/geometria/union/#argomenti","text":"geometry1 una geometria geometry2 una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/union/#esempi","text":"geom_to_wkt( union( geom_from_wkt( 'POINT(4 4)' ), geom_from_wkt( 'POINT(5 5)' ) ) ) \u2192 MULTIPOINT(4 4, 5 5) Espressione: -- unione delle due linee union( make_line( -- linea a start_point(geometry(get_feature_by_id('linea_a',0))), start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0)))), make_line( -- linea b start_point($geometry), end_point(geometry(get_feature_by_id('linea_a',0))), end_point($geometry)) ) -- NB: -- l' ordine delle geometrie \u00e8 indifferente","title":"Esempi"},{"location":"gr_funzioni/geometria/union/#prova-tu","text":"Dati e progetto qgz","title":"prova tu"},{"location":"gr_funzioni/geometria/union/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/union/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/wedge_buffer/","text":"wedge_buffer \u21b5 Restituisce un buffer a forma di cuneo che origina da una geometria del punto. Sintassi \u21b5 wedge_buffer( center,azimuth,width,outer_radius[,inner_radius=0.0] ) [ ] contrassegna componenti opzionali Argomenti \u21b5 center punto centrale (origine) del buffer. Deve essere una geometria puntuale. azimuth (in gradi) per il centro del cuneo da puntare. width buffer w larghezza (in gradi). Si noti che il cuneo si estender\u00e0 fino a met\u00e0 della larghezza angolare su entrambi i lati della direzione dell'azimut. outer_radius raggio esterno per i buffers inner_radius raggio interno opzionale per i buffers Esempi \u21b5 wedge_buffer(center:=geom_from_wkt('POINT(1 2)'),azimuth:=90,width:=180,outer_radius:=1) \u2192 Un buffer a forma di cuneo centrato sul punto (1,2), rivolto verso est, con una larghezza di 180 gradi e raggio esterno di 1. nota bene \u21b5 -- osservazioni \u21b5 --","title":"wedge_buffer"},{"location":"gr_funzioni/geometria/wedge_buffer/#wedge_buffer","text":"Restituisce un buffer a forma di cuneo che origina da una geometria del punto.","title":"wedge_buffer"},{"location":"gr_funzioni/geometria/wedge_buffer/#sintassi","text":"wedge_buffer( center,azimuth,width,outer_radius[,inner_radius=0.0] ) [ ] contrassegna componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/geometria/wedge_buffer/#argomenti","text":"center punto centrale (origine) del buffer. Deve essere una geometria puntuale. azimuth (in gradi) per il centro del cuneo da puntare. width buffer w larghezza (in gradi). Si noti che il cuneo si estender\u00e0 fino a met\u00e0 della larghezza angolare su entrambi i lati della direzione dell'azimut. outer_radius raggio esterno per i buffers inner_radius raggio interno opzionale per i buffers","title":"Argomenti"},{"location":"gr_funzioni/geometria/wedge_buffer/#esempi","text":"wedge_buffer(center:=geom_from_wkt('POINT(1 2)'),azimuth:=90,width:=180,outer_radius:=1) \u2192 Un buffer a forma di cuneo centrato sul punto (1,2), rivolto verso est, con una larghezza di 180 gradi e raggio esterno di 1.","title":"Esempi"},{"location":"gr_funzioni/geometria/wedge_buffer/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/wedge_buffer/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/within/","text":"within \u21b5 Controlla qualora una geometria sia interna ad un'altra. Restituisce 1 (vero) se la geometria a \u00e8 completamente contenuta nella_ geometria b_. Sintassi \u21b5 within( geometry a, geometry b ) Argomenti \u21b5 geometry a una geometria geometry b una geometria Esempi \u21b5 within( geom_from_wkt( 'POINT( 0.5 0.5)' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ) ) \u2192 1 within( geom_from_wkt( 'POINT( 5 5 )' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ) ) \u2192 0 nota bene \u21b5 -- osservazioni \u21b5 Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) dove: geometry a \u00e8 $geometry geometry b \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','53')) seleziono tutti i comuni within (contenuti) nella provincia con pk_uid 53 (Grosseto) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Grosseto). NOT within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) Altro esempio con condizione sulle etichette \u21b5 CASE WHEN within( $geometry, geometry(get_feature('poligono','id',1))) = 1 THEN 'INTERNO' ELSE 'NON INTERNO' END","title":"within"},{"location":"gr_funzioni/geometria/within/#within","text":"Controlla qualora una geometria sia interna ad un'altra. Restituisce 1 (vero) se la geometria a \u00e8 completamente contenuta nella_ geometria b_.","title":"within"},{"location":"gr_funzioni/geometria/within/#sintassi","text":"within( geometry a, geometry b )","title":"Sintassi"},{"location":"gr_funzioni/geometria/within/#argomenti","text":"geometry a una geometria geometry b una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/within/#esempi","text":"within( geom_from_wkt( 'POINT( 0.5 0.5)' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))' ) ) \u2192 1 within( geom_from_wkt( 'POINT( 5 5 )' ), geom_from_wkt( 'POLYGON((0 0, 0 1, 1 1, 1 0, 0 0 ))' ) ) \u2192 0","title":"Esempi"},{"location":"gr_funzioni/geometria/within/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/within/#osservazioni","text":"Usando algoritmo Seleziona per espressione presente in strumenti di processing oppure (ctrl+F3): espressione usata: within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53'))) dove: geometry a \u00e8 $geometry geometry b \u00e8 geometry(get_feature( 'province_rt_rt','pk_uid','53')) seleziono tutti i comuni within (contenuti) nella provincia con pk_uid 53 (Grosseto) PS: potrei anche negare ( NOT ) l'espressione per selezionare il complementare (tutti i comuni tranne quelli contenuti nella provincia di Grosseto). NOT within($geometry,geometry(get_feature( 'province_rt_rt','pk_uid','53')))","title":"osservazioni"},{"location":"gr_funzioni/geometria/within/#altro-esempio-con-condizione-sulle-etichette","text":"CASE WHEN within( $geometry, geometry(get_feature('poligono','id',1))) = 1 THEN 'INTERNO' ELSE 'NON INTERNO' END","title":"Altro esempio con condizione sulle etichette"},{"location":"gr_funzioni/geometria/x/","text":"x \u21b5 Restituisce la minima coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale. Sintassi \u21b5 x( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 x( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 2 x( $geometry ) \u2192 coordinata x del centroide dell'elemento corrente nota bene \u21b5 -- osservazioni \u21b5 --","title":"x"},{"location":"gr_funzioni/geometria/x/#x","text":"Restituisce la minima coordinata x di una geometria punto, o la coordinata x del centroide di una geometria non puntuale.","title":"x"},{"location":"gr_funzioni/geometria/x/#sintassi","text":"x( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/x/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/x/#esempi","text":"x( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 2 x( $geometry ) \u2192 coordinata x del centroide dell'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/geometria/x/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/x/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/x_max/","text":"x_max \u21b5 Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi \u21b5 x_max( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 x_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 4 nota bene \u21b5 -- osservazioni \u21b5 --","title":"x_max"},{"location":"gr_funzioni/geometria/x_max/#x_max","text":"Restituisce la coordinata x massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria.","title":"x_max"},{"location":"gr_funzioni/geometria/x_max/#sintassi","text":"x_max( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/x_max/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/x_max/#esempi","text":"x_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 4","title":"Esempi"},{"location":"gr_funzioni/geometria/x_max/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/x_max/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/x_min/","text":"x_min \u21b5 Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi \u21b5 x_min( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 x_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 2 nota bene \u21b5 -- osservazioni \u21b5 --","title":"x_min"},{"location":"gr_funzioni/geometria/x_min/#x_min","text":"Restituisce la coordinata x minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria.","title":"x_min"},{"location":"gr_funzioni/geometria/x_min/#sintassi","text":"x_min( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/x_min/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/x_min/#esempi","text":"x_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 2","title":"Esempi"},{"location":"gr_funzioni/geometria/x_min/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/x_min/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/y/","text":"y \u21b5 Restituisce la coordinata y minima di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale. Sintassi \u21b5 y( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 y( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 5 y( $geometry ) \u2192 coordinata y del centroide dell'elemento corrente nota bene \u21b5 -- osservazioni \u21b5 --","title":"y"},{"location":"gr_funzioni/geometria/y/#y","text":"Restituisce la coordinata y minima di una geometria puntuale, o la coordinata y del centroide di una geometria non puntuale.","title":"y"},{"location":"gr_funzioni/geometria/y/#sintassi","text":"y( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/y/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/y/#esempi","text":"y( geom_from_wkt( 'POINT(2 5)' ) ) \u2192 5 y( $geometry ) \u2192 coordinata y del centroide dell'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/geometria/y/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/y/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/y_max/","text":"y_max \u21b5 Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi \u21b5 y_max( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 y_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 8 nota bene \u21b5 -- osservazioni \u21b5 --","title":"y_max"},{"location":"gr_funzioni/geometria/y_max/#y_max","text":"Restituisce la coordinata y massima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria.","title":"y_max"},{"location":"gr_funzioni/geometria/y_max/#sintassi","text":"y_max( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/y_max/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/y_max/#esempi","text":"y_max( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 8","title":"Esempi"},{"location":"gr_funzioni/geometria/y_max/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/y_max/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/y_min/","text":"y_min \u21b5 Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria. Sintassi \u21b5 y_min( geometry ) Argomenti \u21b5 geometry una geometria Esempi \u21b5 y_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"y_min"},{"location":"gr_funzioni/geometria/y_min/#y_min","text":"Restituisce la coordinata y minima di una geometria. I calcoli sono effettuati nel sistema di riferimento spaziale di tale geometria.","title":"y_min"},{"location":"gr_funzioni/geometria/y_min/#sintassi","text":"y_min( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/y_min/#argomenti","text":"geometry una geometria","title":"Argomenti"},{"location":"gr_funzioni/geometria/y_min/#esempi","text":"y_min( geom_from_wkt( 'LINESTRING(2 5, 3 6, 4 8)') ) \u2192 5","title":"Esempi"},{"location":"gr_funzioni/geometria/y_min/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/y_min/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/z/","text":"z \u21b5 Restituisce la coordinata z di una geometria puntuale. Sintassi \u21b5 z( geometry ) Argomenti \u21b5 geometry una geometria punto Esempi \u21b5 z( geom_from_wkt( 'POINTZ(2 5 7)' ) ) \u2192 7 nota bene \u21b5 -- osservazioni \u21b5 --","title":"z"},{"location":"gr_funzioni/geometria/z/#z","text":"Restituisce la coordinata z di una geometria puntuale.","title":"z"},{"location":"gr_funzioni/geometria/z/#sintassi","text":"z( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/z/#argomenti","text":"geometry una geometria punto","title":"Argomenti"},{"location":"gr_funzioni/geometria/z/#esempi","text":"z( geom_from_wkt( 'POINTZ(2 5 7)' ) ) \u2192 7","title":"Esempi"},{"location":"gr_funzioni/geometria/z/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/z/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/z_max/","text":"z_max \u21b5 Restituisce la coordinata z massima di una geometria. Sintassi \u21b5 z_max( geometry ) Argomenti \u21b5 geometry una geometria con z coordinata Esempi \u21b5 z_max( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 z_max( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2 nota bene \u21b5 -- osservazioni \u21b5 --","title":"z_max"},{"location":"gr_funzioni/geometria/z_max/#z_max","text":"Restituisce la coordinata z massima di una geometria.","title":"z_max"},{"location":"gr_funzioni/geometria/z_max/#sintassi","text":"z_max( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/z_max/#argomenti","text":"geometry una geometria con z coordinata","title":"Argomenti"},{"location":"gr_funzioni/geometria/z_max/#esempi","text":"z_max( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 z_max( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2","title":"Esempi"},{"location":"gr_funzioni/geometria/z_max/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/z_max/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/geometria/z_min/","text":"z_min \u21b5 Restituisce la coordinata z minima di una geometria. Sintassi \u21b5 z_min( geometry ) Argomenti \u21b5 geometry una geometria con z coordinata Esempi \u21b5 z_min( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 z_min( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2 nota bene \u21b5 -- osservazioni \u21b5 --","title":"z_min"},{"location":"gr_funzioni/geometria/z_min/#z_min","text":"Restituisce la coordinata z minima di una geometria.","title":"z_min"},{"location":"gr_funzioni/geometria/z_min/#sintassi","text":"z_min( geometry )","title":"Sintassi"},{"location":"gr_funzioni/geometria/z_min/#argomenti","text":"geometry una geometria con z coordinata","title":"Argomenti"},{"location":"gr_funzioni/geometria/z_min/#esempi","text":"z_min( geom_from_wkt( 'POINT ( 0 0 1 )' ) ) \u2192 1 z_min( make_line( make_point( 0,0,0 ), make_point( -1,-1,-2 ) ) ) \u2192 -2","title":"Esempi"},{"location":"gr_funzioni/geometria/z_min/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/geometria/z_min/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/lat_lon_tools/lat_lon_tools_unico/","text":"Lat Lon Tools \u21b5 Plugin Lat Lon Tools: https://plugins.qgis.org/plugins/latlontools/","title":"Lat Lon Tools"},{"location":"gr_funzioni/lat_lon_tools/lat_lon_tools_unico/#lat-lon-tools","text":"Plugin Lat Lon Tools: https://plugins.qgis.org/plugins/latlontools/","title":"Lat Lon Tools"},{"location":"gr_funzioni/layer_della_mappa/decode_uri/","text":"decode_uri \u21b5 Prende un livello e decodifica l'uri del fornitore di dati sottostante, i dati sonodisponibili dipendono dal dataprovider. Sintassi \u21b5 decode_uri( layer , [,part] ) [ ] contrassegna componenti opzionali Argomento \u21b5 layer Il layer per cui l'uri dovrebbe essere decodificato part La parte di uri da restituire. Se non specificata, verr\u00e0 restituita una mappa con tutte le parti uri Esempi \u21b5 decode_uri(@layer) \u2192 {'layerId': '0', 'layerName': '', 'path': '/home/qgis/shapefile.shp'} decode_uri(@layer) \u2192 {'layerId': NULL, 'layerName': 'layer', 'path': '/home/qgis/geopackage.gpkg'} decode_uri(@layer, 'path') \u2192 'C:\\my_data\\qgis\\shape.shp'","title":"decode_uri"},{"location":"gr_funzioni/layer_della_mappa/decode_uri/#decode_uri","text":"Prende un livello e decodifica l'uri del fornitore di dati sottostante, i dati sonodisponibili dipendono dal dataprovider.","title":"decode_uri"},{"location":"gr_funzioni/layer_della_mappa/decode_uri/#sintassi","text":"decode_uri( layer , [,part] ) [ ] contrassegna componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/layer_della_mappa/decode_uri/#argomento","text":"layer Il layer per cui l'uri dovrebbe essere decodificato part La parte di uri da restituire. Se non specificata, verr\u00e0 restituita una mappa con tutte le parti uri","title":"Argomento"},{"location":"gr_funzioni/layer_della_mappa/decode_uri/#esempi","text":"decode_uri(@layer) \u2192 {'layerId': '0', 'layerName': '', 'path': '/home/qgis/shapefile.shp'} decode_uri(@layer) \u2192 {'layerId': NULL, 'layerName': 'layer', 'path': '/home/qgis/geopackage.gpkg'} decode_uri(@layer, 'path') \u2192 'C:\\my_data\\qgis\\shape.shp'","title":"Esempi"},{"location":"gr_funzioni/layer_della_mappa/layer/","text":"Layer della mappa \u21b5 Questo gruppo contiene un elenco dei livelli disponibili nel progetto corrente. Questo offre un modo conveniente per scrivere espressioni che si riferiscono a pi\u00f9 livelli, ad esempio quando si eseguono aggregati, attributi o query spaziali. Funzione Descrizione Layer della mappa Questo gruppo contiene un elenco dei livelli disponibili nel progetto corrente decode_uri Prende un livello e decodifica l'uri del fornitore di dati sottostante","title":"Layer della mappa"},{"location":"gr_funzioni/layer_della_mappa/layer/#layer-della-mappa","text":"Questo gruppo contiene un elenco dei livelli disponibili nel progetto corrente. Questo offre un modo conveniente per scrivere espressioni che si riferiscono a pi\u00f9 livelli, ad esempio quando si eseguono aggregati, attributi o query spaziali. Funzione Descrizione Layer della mappa Questo gruppo contiene un elenco dei livelli disponibili nel progetto corrente decode_uri Prende un livello e decodifica l'uri del fornitore di dati sottostante","title":"Layer della mappa"},{"location":"gr_funzioni/layer_della_mappa/layer_della_mappa/","text":"Layer della mappa \u21b5 Questo gruppo contiene tutti i layer caricati nel progetto e presenti nel Layer Panel (TOC); con il doppio clic inserisce l'ID del layer per la relazione selezionata. Osservazione \u21b5 Utile per la funzione get_feature() Esempio \u21b5 utilizzando la funzione get_feature()","title":"Layer della mappa"},{"location":"gr_funzioni/layer_della_mappa/layer_della_mappa/#layer-della-mappa","text":"Questo gruppo contiene tutti i layer caricati nel progetto e presenti nel Layer Panel (TOC); con il doppio clic inserisce l'ID del layer per la relazione selezionata.","title":"Layer della mappa"},{"location":"gr_funzioni/layer_della_mappa/layer_della_mappa/#osservazione","text":"Utile per la funzione get_feature()","title":"Osservazione"},{"location":"gr_funzioni/layer_della_mappa/layer_della_mappa/#esempio","text":"utilizzando la funzione get_feature()","title":"Esempio"},{"location":"gr_funzioni/layer_mappa/layer_mappa_unico/","text":"Gruppo Layer Mappa \u21b5 Abstract Contiene una lista dei layer della mappa che sono disponibili nel progetto corrente. decode_uri \u21b5 Prende un livello e decodifica l'uri del fornitore di dati sottostante, i dati sonodisponibili dipendono dal dataprovider. Sintassi: decode_uri( layer ,[, part ]) [ ] contrassegna componenti opzionali Argomento: layer Il layer per cui l'uri dovrebbe essere decodificato part La parte di uri da restituire. Se non specificata, verr\u00e0 restituita una mappa con tutte le parti uri Esempi: decode_uri(@layer) \u2192 {'layerId': '0', 'layerName': '', 'path': '/home/qgis/shapefile.shp'} decode_uri(@layer) \u2192 {'layerId': NULL, 'layerName': 'layer', 'path': '/home/qgis/geopackage.gpkg'} decode_uri(@layer, 'path') \u2192 'C:\\my_data\\qgis\\shape.shp' layer_property \u21b5 Restituisce una propriet\u00e0 del layer corrispondente o un valore dei metadati. Sintassi: layer_property( layer , property ) Argomento: layer una stringa, rappresentante o un nome di un layer o un ID di layer property una stringa corrispondente alla propriet\u00e0 da restituire. Le opzioni valide sono: name : nome del layer id : layer ID title : titolo metadata abstract : metadata abstract string keywords : metadata keywords data_url : metadata URL attribution : stringa di attribuzione dei metadati attribution_url : URL di attribuzione dei metadati source : layer sorgente min_scale : minima scala di visualizzazione per strato max_scale : massima scala di visualizzazione per strato crs : layer CRS crs_definition : layer CRS definizione completa crs_description : layer CRS descrizione extent : estensione del layer (come oggetto geometrico) type : tipo di layer, ad esempio Vector o Raster storage_type : formato di archiviazione (solo livelli vettoriali) geometry_type : tipo di geometria, ad es. Punto (solo livelli vettoriali) feature_count : conteggio approssimativo delle caratteristiche per il livello (solo livelli vettoriali) Esempi: layer_property('streets','title') \u2192 'Basemap Streets' layer_property('airports','feature_count') \u2192 120 layer_property('landsat','crs') \u2192 'EPSG:4326'","title":"Layer Mappa"},{"location":"gr_funzioni/layer_mappa/layer_mappa_unico/#gruppo-layer-mappa","text":"Abstract Contiene una lista dei layer della mappa che sono disponibili nel progetto corrente.","title":"Gruppo Layer Mappa"},{"location":"gr_funzioni/layer_mappa/layer_mappa_unico/#decode_uri","text":"Prende un livello e decodifica l'uri del fornitore di dati sottostante, i dati sonodisponibili dipendono dal dataprovider. Sintassi: decode_uri( layer ,[, part ]) [ ] contrassegna componenti opzionali Argomento: layer Il layer per cui l'uri dovrebbe essere decodificato part La parte di uri da restituire. Se non specificata, verr\u00e0 restituita una mappa con tutte le parti uri Esempi: decode_uri(@layer) \u2192 {'layerId': '0', 'layerName': '', 'path': '/home/qgis/shapefile.shp'} decode_uri(@layer) \u2192 {'layerId': NULL, 'layerName': 'layer', 'path': '/home/qgis/geopackage.gpkg'} decode_uri(@layer, 'path') \u2192 'C:\\my_data\\qgis\\shape.shp'","title":"decode_uri"},{"location":"gr_funzioni/layer_mappa/layer_mappa_unico/#layer_property","text":"Restituisce una propriet\u00e0 del layer corrispondente o un valore dei metadati. Sintassi: layer_property( layer , property ) Argomento: layer una stringa, rappresentante o un nome di un layer o un ID di layer property una stringa corrispondente alla propriet\u00e0 da restituire. Le opzioni valide sono: name : nome del layer id : layer ID title : titolo metadata abstract : metadata abstract string keywords : metadata keywords data_url : metadata URL attribution : stringa di attribuzione dei metadati attribution_url : URL di attribuzione dei metadati source : layer sorgente min_scale : minima scala di visualizzazione per strato max_scale : massima scala di visualizzazione per strato crs : layer CRS crs_definition : layer CRS definizione completa crs_description : layer CRS descrizione extent : estensione del layer (come oggetto geometrico) type : tipo di layer, ad esempio Vector o Raster storage_type : formato di archiviazione (solo livelli vettoriali) geometry_type : tipo di geometria, ad es. Punto (solo livelli vettoriali) feature_count : conteggio approssimativo delle caratteristiche per il livello (solo livelli vettoriali) Esempi: layer_property('streets','title') \u2192 'Basemap Streets' layer_property('airports','feature_count') \u2192 120 layer_property('landsat','crs') \u2192 'EPSG:4326'","title":"layer_property"},{"location":"gr_funzioni/layout/layout_unico/","text":"Gruppo layout \u21b5 Abstract Questo gruppo contiene funzioni per manipolare le propriet\u00e0 degli oggetti del layout di stampa . item_variables \u21b5 Restituisce una mappa delle variabili da un oggetto del layout dentro il layout di stampa. Sintassi: item_variables( id ) Argomenti: id ID oggetto del layout Esempi: map_get( item_variables('Map 0'), 'map_scale') \u2192 scala dell'oggetto 'Map 0' nel layout di stampa corrente map_credits \u21b5 Restituisce un elenco di stringhe di credito (diritti di utilizzo) per i layer visualizzati in un oggetto della mappa di layout. Sintassi: map_credits_ id [, include_layer_names=false ][, layer_name_separator=': ' ]) [ ] indica componenti opzionali Argomenti: id ID oggetto mappa include_layer_names Imposta su vero per includere i nomi dei layer prima delle rispettive stringhe di credito layer_name_separator Stringa da inserire tra i nomi dei layer e le rispettive stringhe di credito, se include_layer_names \u00e8 vero Esempi: array_to_string( map_credits( 'Main Map' ) ) \u2192 lista separata da virgola di crediti layer per i layer mostrati nell'oggetto di layout 'Mappa principale', ad esempio 'CC-BY-NC, CC-BY-SA' array_to_string( map_credits( 'Main Map', include_layer_names := true, layer_name_separator := ': ' ) ) \u2192 lista separata da virgola di nomi di layer e relativi crediti per i layer mostrati nell'oggetto di layout 'Mappa principale', ad es 'Linee ferroviarie: CC-BY-NC, mappa di base: CC-BY-SA'","title":"Layout"},{"location":"gr_funzioni/layout/layout_unico/#gruppo-layout","text":"Abstract Questo gruppo contiene funzioni per manipolare le propriet\u00e0 degli oggetti del layout di stampa .","title":"Gruppo layout"},{"location":"gr_funzioni/layout/layout_unico/#item_variables","text":"Restituisce una mappa delle variabili da un oggetto del layout dentro il layout di stampa. Sintassi: item_variables( id ) Argomenti: id ID oggetto del layout Esempi: map_get( item_variables('Map 0'), 'map_scale') \u2192 scala dell'oggetto 'Map 0' nel layout di stampa corrente","title":"item_variables"},{"location":"gr_funzioni/layout/layout_unico/#map_credits","text":"Restituisce un elenco di stringhe di credito (diritti di utilizzo) per i layer visualizzati in un oggetto della mappa di layout. Sintassi: map_credits_ id [, include_layer_names=false ][, layer_name_separator=': ' ]) [ ] indica componenti opzionali Argomenti: id ID oggetto mappa include_layer_names Imposta su vero per includere i nomi dei layer prima delle rispettive stringhe di credito layer_name_separator Stringa da inserire tra i nomi dei layer e le rispettive stringhe di credito, se include_layer_names \u00e8 vero Esempi: array_to_string( map_credits( 'Main Map' ) ) \u2192 lista separata da virgola di crediti layer per i layer mostrati nell'oggetto di layout 'Mappa principale', ad esempio 'CC-BY-NC, CC-BY-SA' array_to_string( map_credits( 'Main Map', include_layer_names := true, layer_name_separator := ': ' ) ) \u2192 lista separata da virgola di nomi di layer e relativi crediti per i layer mostrati nell'oggetto di layout 'Mappa principale', ad es 'Linee ferroviarie: CC-BY-NC, mappa di base: CC-BY-SA'","title":"map_credits"},{"location":"gr_funzioni/maps/from_json/","text":"from_json \u21b5 Carica una stringa formattata JSON Sintassi \u21b5 from_json( string ) Argomenti \u21b5 string stringa json Esempi \u21b5 from_json('{\"qgis\":\"rocks\"}') \u2192 { \"qgis\" : \"rocks\" } from_json('[1,2,3]') \u2192 [1,2,3] nota bene \u21b5 -- osservazioni \u21b5 --","title":"from_json"},{"location":"gr_funzioni/maps/from_json/#from_json","text":"Carica una stringa formattata JSON","title":"from_json"},{"location":"gr_funzioni/maps/from_json/#sintassi","text":"from_json( string )","title":"Sintassi"},{"location":"gr_funzioni/maps/from_json/#argomenti","text":"string stringa json","title":"Argomenti"},{"location":"gr_funzioni/maps/from_json/#esempi","text":"from_json('{\"qgis\":\"rocks\"}') \u2192 { \"qgis\" : \"rocks\" } from_json('[1,2,3]') \u2192 [1,2,3]","title":"Esempi"},{"location":"gr_funzioni/maps/from_json/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/from_json/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/hstore_to_map/","text":"hstore_to_map \u21b5 Crea una mappa da una stringa formattata in hstore Sintassi \u21b5 hstore_to_map( string ) Argomenti \u21b5 string una stringa Esempi \u21b5 hstore_to_map('qgis=>rocks') \u2192 { \"qgis\" : \"rocks\" } nota bene \u21b5 osservazioni \u21b5 --","title":"hstore_to_map"},{"location":"gr_funzioni/maps/hstore_to_map/#hstore_to_map","text":"Crea una mappa da una stringa formattata in hstore","title":"hstore_to_map"},{"location":"gr_funzioni/maps/hstore_to_map/#sintassi","text":"hstore_to_map( string )","title":"Sintassi"},{"location":"gr_funzioni/maps/hstore_to_map/#argomenti","text":"string una stringa","title":"Argomenti"},{"location":"gr_funzioni/maps/hstore_to_map/#esempi","text":"hstore_to_map('qgis=>rocks') \u2192 { \"qgis\" : \"rocks\" }","title":"Esempi"},{"location":"gr_funzioni/maps/hstore_to_map/#nota-bene","text":"","title":"nota bene"},{"location":"gr_funzioni/maps/hstore_to_map/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/json_to_map/","text":"json_to_map \u21b5 Crea una mappa da una stringa formattata con json Sintassi \u21b5 json_to_map( string ) Argomenti \u21b5 string una stringa json Esempi \u21b5 json_to_map('{\"qgis\":\"rocks\"}') \u2192 { \"qgis\" : \"rocks\" } nota bene \u21b5 -- osservazioni \u21b5 --","title":"json_to_map"},{"location":"gr_funzioni/maps/json_to_map/#json_to_map","text":"Crea una mappa da una stringa formattata con json","title":"json_to_map"},{"location":"gr_funzioni/maps/json_to_map/#sintassi","text":"json_to_map( string )","title":"Sintassi"},{"location":"gr_funzioni/maps/json_to_map/#argomenti","text":"string una stringa json","title":"Argomenti"},{"location":"gr_funzioni/maps/json_to_map/#esempi","text":"json_to_map('{\"qgis\":\"rocks\"}') \u2192 { \"qgis\" : \"rocks\" }","title":"Esempi"},{"location":"gr_funzioni/maps/json_to_map/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/json_to_map/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map/","text":"map \u21b5 Restituisce una mappa con tutte le chiavi ed i valori passati come coppie di parametri. Sintassi \u21b5 map( key1, value1, key2, value2, , \u2026 ) Argomenti \u21b5 key una chiave (stringa) value un valore Esempi \u21b5 map('1','one','2', 'two') \u2192 map: 1: 'one', 2: 'two' \u21b5 osservazioni \u21b5 -- ALtri esempi: \u21b5 Definisco una map con: chiave Area_Ha -- Area in Ettari valore $area/10000 chiave Perimetro_km -- Perimetro in km valore $perimeter/1000","title":"map"},{"location":"gr_funzioni/maps/map/#map","text":"Restituisce una mappa con tutte le chiavi ed i valori passati come coppie di parametri.","title":"map"},{"location":"gr_funzioni/maps/map/#sintassi","text":"map( key1, value1, key2, value2, , \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/maps/map/#argomenti","text":"key una chiave (stringa) value un valore","title":"Argomenti"},{"location":"gr_funzioni/maps/map/#esempi","text":"map('1','one','2', 'two') \u2192 map: 1: 'one', 2: 'two'","title":"Esempi"},{"location":"gr_funzioni/maps/map/#_1","text":"","title":""},{"location":"gr_funzioni/maps/map/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map/#altri-esempi","text":"Definisco una map con: chiave Area_Ha -- Area in Ettari valore $area/10000 chiave Perimetro_km -- Perimetro in km valore $perimeter/1000","title":"ALtri esempi:"},{"location":"gr_funzioni/maps/map_akeys/","text":"map_akeys \u21b5 Restituisce tutte le chiavi di una mappa come un array. Sintassi \u21b5 map_akeys( map ) Argomenti \u21b5 map una mappa Esempi \u21b5 map_akeys(map('1','one','2','two')) \u2192 array: '1', '2' nota bene \u21b5 -- osservazioni \u21b5 -- Altri esempi \u21b5 map_akeys( map('Area_Ha',$area/10000,'Perimetro_km',$perimeter/1000)) \u2192 ['Area_Ha','Perimetro_km'] Compositore di stampe >= QGIS 3.0 \u21b5 akeys disponibili in ambito compositore stampe wordwrap( array_to_string( map_akeys( item_variables( 'm1') ) ),1,',')","title":"map_akeys"},{"location":"gr_funzioni/maps/map_akeys/#map_akeys","text":"Restituisce tutte le chiavi di una mappa come un array.","title":"map_akeys"},{"location":"gr_funzioni/maps/map_akeys/#sintassi","text":"map_akeys( map )","title":"Sintassi"},{"location":"gr_funzioni/maps/map_akeys/#argomenti","text":"map una mappa","title":"Argomenti"},{"location":"gr_funzioni/maps/map_akeys/#esempi","text":"map_akeys(map('1','one','2','two')) \u2192 array: '1', '2'","title":"Esempi"},{"location":"gr_funzioni/maps/map_akeys/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/map_akeys/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map_akeys/#altri-esempi","text":"map_akeys( map('Area_Ha',$area/10000,'Perimetro_km',$perimeter/1000)) \u2192 ['Area_Ha','Perimetro_km']","title":"Altri esempi"},{"location":"gr_funzioni/maps/map_akeys/#compositore-di-stampe-qgis-30","text":"akeys disponibili in ambito compositore stampe wordwrap( array_to_string( map_akeys( item_variables( 'm1') ) ),1,',')","title":"Compositore di stampe &gt;= QGIS 3.0"},{"location":"gr_funzioni/maps/map_avals/","text":"map_avals \u21b5 Restituisce tutti valori di una mappa come un array. Sintassi \u21b5 map_avals( map ) Argomenti \u21b5 map una mappa Esempi \u21b5 map_avals(map('1','one','2','two')) \u2192 array: 'one', 'two' nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_avals"},{"location":"gr_funzioni/maps/map_avals/#map_avals","text":"Restituisce tutti valori di una mappa come un array.","title":"map_avals"},{"location":"gr_funzioni/maps/map_avals/#sintassi","text":"map_avals( map )","title":"Sintassi"},{"location":"gr_funzioni/maps/map_avals/#argomenti","text":"map una mappa","title":"Argomenti"},{"location":"gr_funzioni/maps/map_avals/#esempi","text":"map_avals(map('1','one','2','two')) \u2192 array: 'one', 'two'","title":"Esempi"},{"location":"gr_funzioni/maps/map_avals/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/map_avals/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map_concat/","text":"map_concat \u21b5 Restituisce una mappa con tutte le entit\u00e0 della mappe fornite. Se due mappe contengono la stessa chiave, viene restituito il valore della seconda mappa. Sintassi \u21b5 map_concat( map1, map2, \u2026 ) Argomenti \u21b5 map una mappa Esempi \u21b5 map_concat(map('1','one', '2','overridden'),map('2','two', '3','three')) \u2192 map: 1: 'one, 2: 'two', 3: 'three' nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_concat"},{"location":"gr_funzioni/maps/map_concat/#map_concat","text":"Restituisce una mappa con tutte le entit\u00e0 della mappe fornite. Se due mappe contengono la stessa chiave, viene restituito il valore della seconda mappa.","title":"map_concat"},{"location":"gr_funzioni/maps/map_concat/#sintassi","text":"map_concat( map1, map2, \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/maps/map_concat/#argomenti","text":"map una mappa","title":"Argomenti"},{"location":"gr_funzioni/maps/map_concat/#esempi","text":"map_concat(map('1','one', '2','overridden'),map('2','two', '3','three')) \u2192 map: 1: 'one, 2: 'two', 3: 'three'","title":"Esempi"},{"location":"gr_funzioni/maps/map_concat/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/map_concat/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map_delete/","text":"map_delete \u21b5 Restituisce una mappa con il valore della corrispondente chiave passata rimosso. Sintassi \u21b5 map_delete( map, key ) Argomenti \u21b5 map una mappa key la chiave da rimuovere Esempi \u21b5 map_delete(map('1','one','2','two'),'2') \u2192 map: 1: 'one' nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_delete"},{"location":"gr_funzioni/maps/map_delete/#map_delete","text":"Restituisce una mappa con il valore della corrispondente chiave passata rimosso.","title":"map_delete"},{"location":"gr_funzioni/maps/map_delete/#sintassi","text":"map_delete( map, key )","title":"Sintassi"},{"location":"gr_funzioni/maps/map_delete/#argomenti","text":"map una mappa key la chiave da rimuovere","title":"Argomenti"},{"location":"gr_funzioni/maps/map_delete/#esempi","text":"map_delete(map('1','one','2','two'),'2') \u2192 map: 1: 'one'","title":"Esempi"},{"location":"gr_funzioni/maps/map_delete/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/map_delete/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map_exist/","text":"map_exist \u21b5 Restituisce vero se la chiave passata esiste in mappa. Sintassi \u21b5 map_exist( map, key ) Argomenti \u21b5 map una mappa key chiave da cercare Esempi \u21b5 map_exist(map('1','one','2','two'),'3') \u2192 falso nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_exist"},{"location":"gr_funzioni/maps/map_exist/#map_exist","text":"Restituisce vero se la chiave passata esiste in mappa.","title":"map_exist"},{"location":"gr_funzioni/maps/map_exist/#sintassi","text":"map_exist( map, key )","title":"Sintassi"},{"location":"gr_funzioni/maps/map_exist/#argomenti","text":"map una mappa key chiave da cercare","title":"Argomenti"},{"location":"gr_funzioni/maps/map_exist/#esempi","text":"map_exist(map('1','one','2','two'),'3') \u2192 falso","title":"Esempi"},{"location":"gr_funzioni/maps/map_exist/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/map_exist/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map_get/","text":"map_get \u21b5 Restituisce il valore di una mappa, passando la sua chiave. Sintassi \u21b5 map_get( map, key ) Argomenti \u21b5 map una mappa key chiave da cercare Esempi \u21b5 map_get(map('1','one','2','two'),'2') \u2192 'two' nota bene \u21b5 -- osservazioni \u21b5 -- Altri esempi \u21b5 map_get( map_concat(map('Area_Ha',$area/10000,'Perimetro_km',$perimeter/1000)), map(Proprietario','Pippo','CF','FNDCCCDDDEEEFFF'),'CF') \u2192 'FNDCCCDDDEEEFFF' Compositore di stampe >= QGIS 3.0 \u21b5 Nuova funzione item_variables presente, nel gruppo Layout, solo se utilizzate all'interno di un contesto di composizione. La funzione accetta un singolo argomento, l'id per un elemento all'interno della composizione e restituisce una mappa del nome della variabile sul valore per quell'elemento. Questo ti permette di fare cose come inserire il testo in un'etichetta che recuperi le propriet\u00e0 di un altro elemento nella composizione, ad es: Inserisci la scala della mappa in un'etichetta: map_get( item_variables('map'),'map_scale') Inserisci la coordinata x del centro della mappa in un'etichetta: x(map_get( item_variables('map'),'map_extent_center')) Changelog QGIS 3.0","title":"map_get"},{"location":"gr_funzioni/maps/map_get/#map_get","text":"Restituisce il valore di una mappa, passando la sua chiave.","title":"map_get"},{"location":"gr_funzioni/maps/map_get/#sintassi","text":"map_get( map, key )","title":"Sintassi"},{"location":"gr_funzioni/maps/map_get/#argomenti","text":"map una mappa key chiave da cercare","title":"Argomenti"},{"location":"gr_funzioni/maps/map_get/#esempi","text":"map_get(map('1','one','2','two'),'2') \u2192 'two'","title":"Esempi"},{"location":"gr_funzioni/maps/map_get/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/map_get/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map_get/#altri-esempi","text":"map_get( map_concat(map('Area_Ha',$area/10000,'Perimetro_km',$perimeter/1000)), map(Proprietario','Pippo','CF','FNDCCCDDDEEEFFF'),'CF') \u2192 'FNDCCCDDDEEEFFF'","title":"Altri esempi"},{"location":"gr_funzioni/maps/map_get/#compositore-di-stampe-qgis-30","text":"Nuova funzione item_variables presente, nel gruppo Layout, solo se utilizzate all'interno di un contesto di composizione. La funzione accetta un singolo argomento, l'id per un elemento all'interno della composizione e restituisce una mappa del nome della variabile sul valore per quell'elemento. Questo ti permette di fare cose come inserire il testo in un'etichetta che recuperi le propriet\u00e0 di un altro elemento nella composizione, ad es: Inserisci la scala della mappa in un'etichetta: map_get( item_variables('map'),'map_scale') Inserisci la coordinata x del centro della mappa in un'etichetta: x(map_get( item_variables('map'),'map_extent_center')) Changelog QGIS 3.0","title":"Compositore di stampe &gt;= QGIS 3.0"},{"location":"gr_funzioni/maps/map_insert/","text":"map_insert \u21b5 Restituisce una mappa con una chiave/valore aggiunto. Sintassi \u21b5 map_insert( map, key, value ) Argomenti \u21b5 map una mappa key la chiave da aggiungere value il valore da aggiungere Esempi \u21b5 map_insert(map('1','one'),'3','three') \u2192 map: 1: 'one', 3: 'three' nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_insert"},{"location":"gr_funzioni/maps/map_insert/#map_insert","text":"Restituisce una mappa con una chiave/valore aggiunto.","title":"map_insert"},{"location":"gr_funzioni/maps/map_insert/#sintassi","text":"map_insert( map, key, value )","title":"Sintassi"},{"location":"gr_funzioni/maps/map_insert/#argomenti","text":"map una mappa key la chiave da aggiungere value il valore da aggiungere","title":"Argomenti"},{"location":"gr_funzioni/maps/map_insert/#esempi","text":"map_insert(map('1','one'),'3','three') \u2192 map: 1: 'one', 3: 'three'","title":"Esempi"},{"location":"gr_funzioni/maps/map_insert/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/map_insert/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map_to_hstore/","text":"map_to_hstore \u21b5 Unisci gli elementi della mappa in una stringa formattata in hstore. Sintassi \u21b5 map_to_hstore( map ) Argomenti \u21b5 map una mappa Esempi \u21b5 map_to_hstore(map('qgis','rocks')) \u2192 \"qgis\"=>\"rocks\"} nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_to_hstore"},{"location":"gr_funzioni/maps/map_to_hstore/#map_to_hstore","text":"Unisci gli elementi della mappa in una stringa formattata in hstore.","title":"map_to_hstore"},{"location":"gr_funzioni/maps/map_to_hstore/#sintassi","text":"map_to_hstore( map )","title":"Sintassi"},{"location":"gr_funzioni/maps/map_to_hstore/#argomenti","text":"map una mappa","title":"Argomenti"},{"location":"gr_funzioni/maps/map_to_hstore/#esempi","text":"map_to_hstore(map('qgis','rocks')) \u2192 \"qgis\"=>\"rocks\"}","title":"Esempi"},{"location":"gr_funzioni/maps/map_to_hstore/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/map_to_hstore/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/map_to_json/","text":"map_to_json \u21b5 Unisci gli elementi della mappa in una stringa formattata con json. Sintassi \u21b5 map_to_json( map ) Argomenti \u21b5 map una mappa Esempi \u21b5 map_to_json(map('qgis','rocks')) \u2192 {\"qgis\":\"rocks\"} nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_to_json"},{"location":"gr_funzioni/maps/map_to_json/#map_to_json","text":"Unisci gli elementi della mappa in una stringa formattata con json.","title":"map_to_json"},{"location":"gr_funzioni/maps/map_to_json/#sintassi","text":"map_to_json( map )","title":"Sintassi"},{"location":"gr_funzioni/maps/map_to_json/#argomenti","text":"map una mappa","title":"Argomenti"},{"location":"gr_funzioni/maps/map_to_json/#esempi","text":"map_to_json(map('qgis','rocks')) \u2192 {\"qgis\":\"rocks\"}","title":"Esempi"},{"location":"gr_funzioni/maps/map_to_json/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/map_to_json/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/maps/maps/","text":"Maps - solo DB (es:PostGIS) \u21b5 Questo gruppo contiene funzioni espressione per la creazione e la manipolazione di strutture di dati 'a mappa' (noti anche come oggetti dizionario, coppie chiave-valore o array associative). Si possono assegnare valori a determinate chiavi. L'ordine delle coppie chiave valore nell'oggetto mappa non \u00e8 rilevante come per gli Arrays ( gruppo Arrays ). Funzione Descrizione Info from_json Carica una stringa formattata JSON >= QGIS 3.6 hstore_to_map Crea una mappa da una stringa formattata in hstore >= QGIS 3.4 json_to_map Crea una mappa da una stringa formattata con json >= QGIS 3.4 map Restituisce una mappa con tutte le chiavi ed i valori passati come coppie di parametri >= QGIS 3.0 map_akeys Restituisce tutte le chiavi di una mappa come un array >= QGIS 3.0 map_avals Restituisce tutti valori di una mappa come un array >= QGIS 3.0 map_concat Restituisce una mappa con tutte le entit\u00e0 della mappe fornite >= QGIS 3.0 map_delete Restituisce una mappa con il valore della corrispondente chiave passata rimosso >= QGIS 3.0 map_exist Restituisce vero se la chiave passata esiste in mappa >= QGIS 3.0 map_get Restituisce il valore di una mappa, passando la sua chiave >= QGIS 3.0 map_insert Restituisce una mappa con una chiave/valore aggiunto >= QGIS 3.0 map_to_hstore Unisci gli elementi della mappa in una stringa formattata in hstore >= QGIS 3.4 map_to_json Unisci gli elementi della mappa in una stringa formattata con json >= QGIS 3.4 to_json Creare una stringa in formato JSON da una mappa, array o altro valore >= QGIS 3.6","title":"Maps - solo DB (es:PostGIS)"},{"location":"gr_funzioni/maps/maps/#maps-solo-db-espostgis","text":"Questo gruppo contiene funzioni espressione per la creazione e la manipolazione di strutture di dati 'a mappa' (noti anche come oggetti dizionario, coppie chiave-valore o array associative). Si possono assegnare valori a determinate chiavi. L'ordine delle coppie chiave valore nell'oggetto mappa non \u00e8 rilevante come per gli Arrays ( gruppo Arrays ). Funzione Descrizione Info from_json Carica una stringa formattata JSON >= QGIS 3.6 hstore_to_map Crea una mappa da una stringa formattata in hstore >= QGIS 3.4 json_to_map Crea una mappa da una stringa formattata con json >= QGIS 3.4 map Restituisce una mappa con tutte le chiavi ed i valori passati come coppie di parametri >= QGIS 3.0 map_akeys Restituisce tutte le chiavi di una mappa come un array >= QGIS 3.0 map_avals Restituisce tutti valori di una mappa come un array >= QGIS 3.0 map_concat Restituisce una mappa con tutte le entit\u00e0 della mappe fornite >= QGIS 3.0 map_delete Restituisce una mappa con il valore della corrispondente chiave passata rimosso >= QGIS 3.0 map_exist Restituisce vero se la chiave passata esiste in mappa >= QGIS 3.0 map_get Restituisce il valore di una mappa, passando la sua chiave >= QGIS 3.0 map_insert Restituisce una mappa con una chiave/valore aggiunto >= QGIS 3.0 map_to_hstore Unisci gli elementi della mappa in una stringa formattata in hstore >= QGIS 3.4 map_to_json Unisci gli elementi della mappa in una stringa formattata con json >= QGIS 3.4 to_json Creare una stringa in formato JSON da una mappa, array o altro valore >= QGIS 3.6","title":"Maps - solo DB (es:PostGIS)"},{"location":"gr_funzioni/maps/maps_unico/","text":"Gruppo Maps \u21b5 Abstract Questo gruppo contiene funzioni per la creazione e la manipolazione di strutture di dati 'a mappa' (noti anche come oggetti dizionario, coppie chiave-valore o array associative). Si possono assegnare valori a determinate chiavi. L'ordine delle coppie chiave-valore nell'oggetto mappa non \u00e8 rilevante. from_json \u21b5 Carica una stringa formattata JSON Sintassi: from_json( string ) Argomenti: string stringa json Esempi: from_json('{\"qgis\":\"rocks\"}') \u2192 { \"qgis\" : \"rocks\" } from_json('[1,2,3]') \u2192 [1,2,3] hstore_to_map \u21b5 Crea una mappa da una stringa formattata in hstore Sintassi: hstore_to_map( string ) Argomenti: string una stringa Esempi: hstore_to_map('qgis=>rocks') \u2192 { \"qgis\" : \"rocks\" } json_to_map \u21b5 Crea una mappa da una stringa formattata con json Sintassi: json_to_map( string ) Argomenti: string una stringa json Esempi: json_to_map('{\"qgis\":\"rocks\"}') \u2192 { \"qgis\" : \"rocks\" }` nota bene: Funzione eliminata a partire da QGIS 3.18 https://github.com/qgis/QGIS/pull/42179 map \u21b5 Restituisce una mappa con tutte le chiavi ed i valori passati come coppie di parametri. Sintassi: map( key1 , value1 , key2 , value2 , \u2026_) Argomenti: key una chiave (stringa) value un valore Esempi: map('1','one','2', 'two') \u2192 map: 1: 'one', 2: 'two' \u21b5 Altri esempi: Definisco una map con: chiave Area_Ha -- Area in Ettari valore $area/10000 chiave Perimetro_km -- Perimetro in km valore $perimeter/1000 map_akeys \u21b5 Restituisce tutte le chiavi di una mappa come un array. Sintassi: map_akeys( map ) Argomenti: map una mappa Esempi: map_akeys(map('1','one','2','two')) \u2192 array: '1', '2' Altri esempi: map_akeys( map('Area_Ha',$area/10000,'Perimetro_km',$perimeter/1000)) \u2192 ['Area_Ha','Perimetro_km'] Compositore di stampe \u21b5 akeys utilizzabile in ambito compositore stampe per conoscere tutte le variabili disponibili per ogni Mappa inserita: wordwrap( array_to_string( map_akeys( item_variables( 'Mappa 1') ) ),1,',') risultato della espressione: _project_transform_context item_id item_uuid layer_ids layers layout_dpi layout_name layout_numpages layout_page layout_pageheight layout_pageoffsets layout_pagewidth logo_osgeo4w map_crs map_crs_acronym map_crs_definition map_crs_description map_crs_ellipsoid map_crs_proj4 map_crs_projection map_crs_wkt map_end_time map_extent map_extent_center map_extent_height map_extent_width map_id map_interval map_layer_ids map_layers map_rotation map_scale map_start_time map_units project_abstract project_area_units project_author project_basename project_creation_date project_crs project_crs_acronym project_crs_definition project_crs_description project_crs_ellipsoid project_crs_proj4 project_crs_wkt project_distance_units project_ellipsoid project_filename project_folder project_home project_identifier project_keywords project_last_saved project_path project_title project_units qgis_locale qgis_os_name qgis_platform qgis_release_name qgis_short_version qgis_version qgis_version_no user_account_name user_full_name map_avals \u21b5 Restituisce tutti valori di una mappa come un array. Sintassi: map_avals( map ) Argomenti: map una mappa Esempi: map_avals(map('1','one','2','two')) \u2192 array: 'one', 'two' -- map_concat \u21b5 Restituisce una mappa con tutte le entit\u00e0 della mappe fornite. Se due mappe contengono la stessa chiave, viene restituito il valore della seconda mappa. Sintassi: map_concat( map1, map2, \u2026 ) Argomenti: map una mappa Esempi: map_concat(map('1','one', '2','overridden'),map('2','two', '3','three')) \u2192 map: 1: 'one, 2: 'two', 3: 'three' -- map_delete \u21b5 Restituisce una mappa con il valore della corrispondente chiave passata rimosso. Sintassi: map_delete( map , key ) Argomenti: map una mappa key la chiave da rimuovere Esempi: map_delete(map('1','one','2','two'),'2') \u2192 map: 1: 'one' map_exist \u21b5 Restituisce vero se la chiave passata esiste in mappa. Sintassi: map_exist( map , key ) Argomenti: map una mappa key chiave da cercare Esempi: map_exist(map('1','one','2','two'),'3') \u2192 falso map_get \u21b5 Restituisce il valore di una mappa, passando la sua chiave. Sintassi: map_get( map , key ) Argomenti: map una mappa key chiave da cercare Esempi: map_get(map('1','one','2','two'),'2') \u2192 'two' Altri esempi: map_get( map_concat(map('Area_Ha',$area/10000,'Perimetro_km',$perimeter/1000)), map(Proprietario','Pippo','CF','FNDCCCDDDEEEFFF'),'CF') \u2192 'FNDCCCDDDEEEFFF' Compositore di stampe \u21b5 Nuova funzione item_variables presente, nel gruppo Layout, solo se utilizzate all'interno di un contesto di composizione. La funzione accetta un singolo argomento, l'id per un elemento all'interno della composizione e restituisce una mappa del nome della variabile sul valore per quell'elemento. Questo ti permette di fare cose come inserire il testo in un'etichetta che recuperi le propriet\u00e0 di un altro elemento nella composizione, ad es: Inserisci la scala della mappa ( Mappa 1 ) in un'etichetta: map_get( item_variables('Mappa 1'),'map_scale') Inserisci la coordinata x del centro della mappa ( Mappa 1 ) in un'etichetta: x(map_get( item_variables('Mappa 1'),'map_extent_center')) Changelog QGIS 3.0 map_insert \u21b5 Restituisce una mappa con una chiave/valore aggiunto. Se la chiave esiste gi\u00e0, il suo valore verr\u00e0 sovrascritto. Sintassi: map_insert( map , key , value ) Argomenti: map una mappa key la chiave da aggiungere value il valore da aggiungere Esempi: map_insert(map('1','one'),'3','three') \u2192 map: 1: 'one', 3: 'three' map_to_hstore \u21b5 Unisci gli elementi della mappa in una stringa formattata in hstore. Sintassi: map_to_hstore( map ) Argomenti: map una mappa Esempi: map_to_hstore(map('qgis','rocks')) \u2192 \"qgis\"=>\"rocks\"} map_to_json \u21b5 Unisci gli elementi della mappa in una stringa formattata con json. Sintassi: map_to_json( map ) Argomenti: map una mappa Esempi: map_to_json(map('qgis','rocks')) \u2192 {\"qgis\":\"rocks\"} nota bene: Funzione eliminata a partire da QGIS 3.18 https://github.com/qgis/QGIS/pull/42179 to_json \u21b5 Creare una stringa in formato JSON da una mappa, array o altro valore. Sintassi: to_json( value ) Argomenti: value valore di input Esempi: to_json(map('qgis','rocks')) \u2192 {\"qgis\":\"rocks\"} to_json(array(1,2,3)) \u2192 [1,2,3]","title":"Maps"},{"location":"gr_funzioni/maps/maps_unico/#gruppo-maps","text":"Abstract Questo gruppo contiene funzioni per la creazione e la manipolazione di strutture di dati 'a mappa' (noti anche come oggetti dizionario, coppie chiave-valore o array associative). Si possono assegnare valori a determinate chiavi. L'ordine delle coppie chiave-valore nell'oggetto mappa non \u00e8 rilevante.","title":"Gruppo Maps"},{"location":"gr_funzioni/maps/maps_unico/#from_json","text":"Carica una stringa formattata JSON Sintassi: from_json( string ) Argomenti: string stringa json Esempi: from_json('{\"qgis\":\"rocks\"}') \u2192 { \"qgis\" : \"rocks\" } from_json('[1,2,3]') \u2192 [1,2,3]","title":"from_json"},{"location":"gr_funzioni/maps/maps_unico/#hstore_to_map","text":"Crea una mappa da una stringa formattata in hstore Sintassi: hstore_to_map( string ) Argomenti: string una stringa Esempi: hstore_to_map('qgis=>rocks') \u2192 { \"qgis\" : \"rocks\" }","title":"hstore_to_map"},{"location":"gr_funzioni/maps/maps_unico/#json_to_map","text":"Crea una mappa da una stringa formattata con json Sintassi: json_to_map( string ) Argomenti: string una stringa json Esempi: json_to_map('{\"qgis\":\"rocks\"}') \u2192 { \"qgis\" : \"rocks\" }` nota bene: Funzione eliminata a partire da QGIS 3.18 https://github.com/qgis/QGIS/pull/42179","title":"json_to_map"},{"location":"gr_funzioni/maps/maps_unico/#map","text":"Restituisce una mappa con tutte le chiavi ed i valori passati come coppie di parametri. Sintassi: map( key1 , value1 , key2 , value2 , \u2026_) Argomenti: key una chiave (stringa) value un valore Esempi: map('1','one','2', 'two') \u2192 map: 1: 'one', 2: 'two'","title":"map"},{"location":"gr_funzioni/maps/maps_unico/#_1","text":"Altri esempi: Definisco una map con: chiave Area_Ha -- Area in Ettari valore $area/10000 chiave Perimetro_km -- Perimetro in km valore $perimeter/1000","title":""},{"location":"gr_funzioni/maps/maps_unico/#map_akeys","text":"Restituisce tutte le chiavi di una mappa come un array. Sintassi: map_akeys( map ) Argomenti: map una mappa Esempi: map_akeys(map('1','one','2','two')) \u2192 array: '1', '2' Altri esempi: map_akeys( map('Area_Ha',$area/10000,'Perimetro_km',$perimeter/1000)) \u2192 ['Area_Ha','Perimetro_km']","title":"map_akeys"},{"location":"gr_funzioni/maps/maps_unico/#compositore-di-stampe","text":"akeys utilizzabile in ambito compositore stampe per conoscere tutte le variabili disponibili per ogni Mappa inserita: wordwrap( array_to_string( map_akeys( item_variables( 'Mappa 1') ) ),1,',') risultato della espressione: _project_transform_context item_id item_uuid layer_ids layers layout_dpi layout_name layout_numpages layout_page layout_pageheight layout_pageoffsets layout_pagewidth logo_osgeo4w map_crs map_crs_acronym map_crs_definition map_crs_description map_crs_ellipsoid map_crs_proj4 map_crs_projection map_crs_wkt map_end_time map_extent map_extent_center map_extent_height map_extent_width map_id map_interval map_layer_ids map_layers map_rotation map_scale map_start_time map_units project_abstract project_area_units project_author project_basename project_creation_date project_crs project_crs_acronym project_crs_definition project_crs_description project_crs_ellipsoid project_crs_proj4 project_crs_wkt project_distance_units project_ellipsoid project_filename project_folder project_home project_identifier project_keywords project_last_saved project_path project_title project_units qgis_locale qgis_os_name qgis_platform qgis_release_name qgis_short_version qgis_version qgis_version_no user_account_name user_full_name","title":"Compositore di stampe"},{"location":"gr_funzioni/maps/maps_unico/#map_avals","text":"Restituisce tutti valori di una mappa come un array. Sintassi: map_avals( map ) Argomenti: map una mappa Esempi: map_avals(map('1','one','2','two')) \u2192 array: 'one', 'two' --","title":"map_avals"},{"location":"gr_funzioni/maps/maps_unico/#map_concat","text":"Restituisce una mappa con tutte le entit\u00e0 della mappe fornite. Se due mappe contengono la stessa chiave, viene restituito il valore della seconda mappa. Sintassi: map_concat( map1, map2, \u2026 ) Argomenti: map una mappa Esempi: map_concat(map('1','one', '2','overridden'),map('2','two', '3','three')) \u2192 map: 1: 'one, 2: 'two', 3: 'three' --","title":"map_concat"},{"location":"gr_funzioni/maps/maps_unico/#map_delete","text":"Restituisce una mappa con il valore della corrispondente chiave passata rimosso. Sintassi: map_delete( map , key ) Argomenti: map una mappa key la chiave da rimuovere Esempi: map_delete(map('1','one','2','two'),'2') \u2192 map: 1: 'one'","title":"map_delete"},{"location":"gr_funzioni/maps/maps_unico/#map_exist","text":"Restituisce vero se la chiave passata esiste in mappa. Sintassi: map_exist( map , key ) Argomenti: map una mappa key chiave da cercare Esempi: map_exist(map('1','one','2','two'),'3') \u2192 falso","title":"map_exist"},{"location":"gr_funzioni/maps/maps_unico/#map_get","text":"Restituisce il valore di una mappa, passando la sua chiave. Sintassi: map_get( map , key ) Argomenti: map una mappa key chiave da cercare Esempi: map_get(map('1','one','2','two'),'2') \u2192 'two' Altri esempi: map_get( map_concat(map('Area_Ha',$area/10000,'Perimetro_km',$perimeter/1000)), map(Proprietario','Pippo','CF','FNDCCCDDDEEEFFF'),'CF') \u2192 'FNDCCCDDDEEEFFF'","title":"map_get"},{"location":"gr_funzioni/maps/maps_unico/#compositore-di-stampe_1","text":"Nuova funzione item_variables presente, nel gruppo Layout, solo se utilizzate all'interno di un contesto di composizione. La funzione accetta un singolo argomento, l'id per un elemento all'interno della composizione e restituisce una mappa del nome della variabile sul valore per quell'elemento. Questo ti permette di fare cose come inserire il testo in un'etichetta che recuperi le propriet\u00e0 di un altro elemento nella composizione, ad es: Inserisci la scala della mappa ( Mappa 1 ) in un'etichetta: map_get( item_variables('Mappa 1'),'map_scale') Inserisci la coordinata x del centro della mappa ( Mappa 1 ) in un'etichetta: x(map_get( item_variables('Mappa 1'),'map_extent_center')) Changelog QGIS 3.0","title":"Compositore di stampe"},{"location":"gr_funzioni/maps/maps_unico/#map_insert","text":"Restituisce una mappa con una chiave/valore aggiunto. Se la chiave esiste gi\u00e0, il suo valore verr\u00e0 sovrascritto. Sintassi: map_insert( map , key , value ) Argomenti: map una mappa key la chiave da aggiungere value il valore da aggiungere Esempi: map_insert(map('1','one'),'3','three') \u2192 map: 1: 'one', 3: 'three'","title":"map_insert"},{"location":"gr_funzioni/maps/maps_unico/#map_to_hstore","text":"Unisci gli elementi della mappa in una stringa formattata in hstore. Sintassi: map_to_hstore( map ) Argomenti: map una mappa Esempi: map_to_hstore(map('qgis','rocks')) \u2192 \"qgis\"=>\"rocks\"}","title":"map_to_hstore"},{"location":"gr_funzioni/maps/maps_unico/#map_to_json","text":"Unisci gli elementi della mappa in una stringa formattata con json. Sintassi: map_to_json( map ) Argomenti: map una mappa Esempi: map_to_json(map('qgis','rocks')) \u2192 {\"qgis\":\"rocks\"} nota bene: Funzione eliminata a partire da QGIS 3.18 https://github.com/qgis/QGIS/pull/42179","title":"map_to_json"},{"location":"gr_funzioni/maps/maps_unico/#to_json","text":"Creare una stringa in formato JSON da una mappa, array o altro valore. Sintassi: to_json( value ) Argomenti: value valore di input Esempi: to_json(map('qgis','rocks')) \u2192 {\"qgis\":\"rocks\"} to_json(array(1,2,3)) \u2192 [1,2,3]","title":"to_json"},{"location":"gr_funzioni/maps/to_json/","text":"to_json \u21b5 Creare una stringa in formato JSON da una mappa, array o altro valore. Sintassi \u21b5 to_json( value ) Argomenti \u21b5 value valore di input Esempi \u21b5 to_json(map('qgis','rocks')) \u2192 {\"qgis\":\"rocks\"} to_json(array(1,2,3)) \u2192 [1,2,3] nota bene \u21b5 -- osservazioni \u21b5 --","title":"to_json"},{"location":"gr_funzioni/maps/to_json/#to_json","text":"Creare una stringa in formato JSON da una mappa, array o altro valore.","title":"to_json"},{"location":"gr_funzioni/maps/to_json/#sintassi","text":"to_json( value )","title":"Sintassi"},{"location":"gr_funzioni/maps/to_json/#argomenti","text":"value valore di input","title":"Argomenti"},{"location":"gr_funzioni/maps/to_json/#esempi","text":"to_json(map('qgis','rocks')) \u2192 {\"qgis\":\"rocks\"} to_json(array(1,2,3)) \u2192 [1,2,3]","title":"Esempi"},{"location":"gr_funzioni/maps/to_json/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/maps/to_json/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/abs/","text":"abs \u21b5 Restituisce il valore assoluto di un numero. Sintassi \u21b5 abs( value ) Argomenti \u21b5 value un numero Esempi \u21b5 abs(-2) \u2192 2 nota bene \u21b5 -- osservazioni \u21b5 --","title":"abs"},{"location":"gr_funzioni/matematica/abs/#abs","text":"Restituisce il valore assoluto di un numero.","title":"abs"},{"location":"gr_funzioni/matematica/abs/#sintassi","text":"abs( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/abs/#argomenti","text":"value un numero","title":"Argomenti"},{"location":"gr_funzioni/matematica/abs/#esempi","text":"abs(-2) \u2192 2","title":"Esempi"},{"location":"gr_funzioni/matematica/abs/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/abs/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/acos/","text":"acos \u21b5 Restituisce l'arcocoseno del valore in radianti. Sintassi \u21b5 acos( value ) Argomenti \u21b5 value coseno di un angolo in radianti Esempi \u21b5 acos(0.5) \u2192 1.0471975511966 nota bene \u21b5 -- osservazioni \u21b5 --","title":"acos"},{"location":"gr_funzioni/matematica/acos/#acos","text":"Restituisce l'arcocoseno del valore in radianti.","title":"acos"},{"location":"gr_funzioni/matematica/acos/#sintassi","text":"acos( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/acos/#argomenti","text":"value coseno di un angolo in radianti","title":"Argomenti"},{"location":"gr_funzioni/matematica/acos/#esempi","text":"acos(0.5) \u2192 1.0471975511966","title":"Esempi"},{"location":"gr_funzioni/matematica/acos/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/acos/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/asin/","text":"asin \u21b5 Restituisce l'arcoseno del valore in radianti. Sintassi \u21b5 asin( value ) Argomenti \u21b5 value seno di un angolo in radianti Esempi \u21b5 asin(1.0) \u2192 1.5707963267949 nota bene \u21b5 -- osservazioni \u21b5 --","title":"asin"},{"location":"gr_funzioni/matematica/asin/#asin","text":"Restituisce l'arcoseno del valore in radianti.","title":"asin"},{"location":"gr_funzioni/matematica/asin/#sintassi","text":"asin( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/asin/#argomenti","text":"value seno di un angolo in radianti","title":"Argomenti"},{"location":"gr_funzioni/matematica/asin/#esempi","text":"asin(1.0) \u2192 1.5707963267949","title":"Esempi"},{"location":"gr_funzioni/matematica/asin/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/asin/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/atan/","text":"atan \u21b5 Restituisce l'arcotangente del valore in radianti. Sintassi \u21b5 atan( value ) Argomenti \u21b5 value tangente di un angolo in radianti Esempi \u21b5 atan(0.5) \u2192 0.463647609000806 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atan"},{"location":"gr_funzioni/matematica/atan/#atan","text":"Restituisce l'arcotangente del valore in radianti.","title":"atan"},{"location":"gr_funzioni/matematica/atan/#sintassi","text":"atan( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/atan/#argomenti","text":"value tangente di un angolo in radianti","title":"Argomenti"},{"location":"gr_funzioni/matematica/atan/#esempi","text":"atan(0.5) \u2192 0.463647609000806","title":"Esempi"},{"location":"gr_funzioni/matematica/atan/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/atan/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/atan2/","text":"atan2 \u21b5 Restituisce la arcotangente di dy/dx usando i segni dei due argomenti per determinare il quadrante del risultato. Sintassi \u21b5 atan2( dy , dx ) Argomenti \u21b5 dy y differenza coordinata dx x differenza coordinata Esempi \u21b5 atan2(1.0, 1.732) \u2192 0.523611477769969 nota bene \u21b5 -- osservazioni \u21b5 -- Wikipedia","title":"atan2"},{"location":"gr_funzioni/matematica/atan2/#atan2","text":"Restituisce la arcotangente di dy/dx usando i segni dei due argomenti per determinare il quadrante del risultato.","title":"atan2"},{"location":"gr_funzioni/matematica/atan2/#sintassi","text":"atan2( dy , dx )","title":"Sintassi"},{"location":"gr_funzioni/matematica/atan2/#argomenti","text":"dy y differenza coordinata dx x differenza coordinata","title":"Argomenti"},{"location":"gr_funzioni/matematica/atan2/#esempi","text":"atan2(1.0, 1.732) \u2192 0.523611477769969","title":"Esempi"},{"location":"gr_funzioni/matematica/atan2/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/atan2/#osservazioni","text":"-- Wikipedia","title":"osservazioni"},{"location":"gr_funzioni/matematica/azimuth/","text":"azimuth \u21b5 Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi \u21b5 azimuth( point_a , point_b ) Argomenti \u21b5 point_a geometria punto point_b geometria punto Esempi \u21b5 degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689 nota bene \u21b5 -- osservazioni \u21b5 -- vedasi nel gruppo funzioni Geometria Azimuth","title":"azimuth"},{"location":"gr_funzioni/matematica/azimuth/#azimuth","text":"Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b.","title":"azimuth"},{"location":"gr_funzioni/matematica/azimuth/#sintassi","text":"azimuth( point_a , point_b )","title":"Sintassi"},{"location":"gr_funzioni/matematica/azimuth/#argomenti","text":"point_a geometria punto point_b geometria punto","title":"Argomenti"},{"location":"gr_funzioni/matematica/azimuth/#esempi","text":"degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689","title":"Esempi"},{"location":"gr_funzioni/matematica/azimuth/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/azimuth/#osservazioni","text":"-- vedasi nel gruppo funzioni Geometria Azimuth","title":"osservazioni"},{"location":"gr_funzioni/matematica/ceil/","text":"ceil \u21b5 Arrotonda un numero all'intero superiore. Sintassi \u21b5 ceil( value ) Argomenti \u21b5 value un numero Esempi \u21b5 ceil(4.9) \u2192 5 ceil(-4.9) \u2192 -4 nota bene \u21b5 -- osservazioni \u21b5 --","title":"ceil"},{"location":"gr_funzioni/matematica/ceil/#ceil","text":"Arrotonda un numero all'intero superiore.","title":"ceil"},{"location":"gr_funzioni/matematica/ceil/#sintassi","text":"ceil( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/ceil/#argomenti","text":"value un numero","title":"Argomenti"},{"location":"gr_funzioni/matematica/ceil/#esempi","text":"ceil(4.9) \u2192 5 ceil(-4.9) \u2192 -4","title":"Esempi"},{"location":"gr_funzioni/matematica/ceil/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/ceil/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/clamp/","text":"clamp \u21b5 Limita un valore in ingresso a un intervallo specificato. Sintassi \u21b5 clamp( minimum , input , maximum ) Argomenti \u21b5 minimum il pi\u00f9 piccolo valore in input che pu\u00f2 essere mantenuto. input un valore che sar\u00e0 compreso nell'intervallo specificato da minimo e massimo maximum il pi\u00f9 grande valore in input che pu\u00f2 essere mantenuto Esempi \u21b5 clamp(1,5,10) \u2192 5 (input \u00e8 compreso tra 1 e 10 per cui \u00e8 restituito invariato) clamp(1,0,10) \u2192 1 (input \u00e8 pi\u00f9 piccolo del valore minimo di 1, cos\u00ec la funzione restituisce 1) clamp(1,11,10) \u2192 10 (input \u00e8 pi\u00f9 grande del valore massimo di 10, cos\u00ec la funzione restituisce 10) nota bene \u21b5 -- osservazioni \u21b5 --","title":"clamp"},{"location":"gr_funzioni/matematica/clamp/#clamp","text":"Limita un valore in ingresso a un intervallo specificato.","title":"clamp"},{"location":"gr_funzioni/matematica/clamp/#sintassi","text":"clamp( minimum , input , maximum )","title":"Sintassi"},{"location":"gr_funzioni/matematica/clamp/#argomenti","text":"minimum il pi\u00f9 piccolo valore in input che pu\u00f2 essere mantenuto. input un valore che sar\u00e0 compreso nell'intervallo specificato da minimo e massimo maximum il pi\u00f9 grande valore in input che pu\u00f2 essere mantenuto","title":"Argomenti"},{"location":"gr_funzioni/matematica/clamp/#esempi","text":"clamp(1,5,10) \u2192 5 (input \u00e8 compreso tra 1 e 10 per cui \u00e8 restituito invariato) clamp(1,0,10) \u2192 1 (input \u00e8 pi\u00f9 piccolo del valore minimo di 1, cos\u00ec la funzione restituisce 1) clamp(1,11,10) \u2192 10 (input \u00e8 pi\u00f9 grande del valore massimo di 10, cos\u00ec la funzione restituisce 10)","title":"Esempi"},{"location":"gr_funzioni/matematica/clamp/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/clamp/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/cos/","text":"cos \u21b5 Restituisce il coseno di un angolo. Sintassi \u21b5 cos( angle ) Argomenti \u21b5 angle angolo in radianti Esempi \u21b5 cos( 1.5707963267948966 ) \u2192 0.0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"cos"},{"location":"gr_funzioni/matematica/cos/#cos","text":"Restituisce il coseno di un angolo.","title":"cos"},{"location":"gr_funzioni/matematica/cos/#sintassi","text":"cos( angle )","title":"Sintassi"},{"location":"gr_funzioni/matematica/cos/#argomenti","text":"angle angolo in radianti","title":"Argomenti"},{"location":"gr_funzioni/matematica/cos/#esempi","text":"cos( 1.5707963267948966 ) \u2192 0.0","title":"Esempi"},{"location":"gr_funzioni/matematica/cos/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/cos/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/degrees/","text":"degrees \u21b5 Converte da radianti a gradi decimali. Sintassi \u21b5 degrees( radians ) Argomenti \u21b5 radians numerico Esempi \u21b5 degrees(3.14159) \u2192 179.99984796050427 degrees(1) \u2192 57.2958 degrees(pi()) \u2192 180 nota bene \u21b5 -- osservazioni \u21b5 --","title":"degrees"},{"location":"gr_funzioni/matematica/degrees/#degrees","text":"Converte da radianti a gradi decimali.","title":"degrees"},{"location":"gr_funzioni/matematica/degrees/#sintassi","text":"degrees( radians )","title":"Sintassi"},{"location":"gr_funzioni/matematica/degrees/#argomenti","text":"radians numerico","title":"Argomenti"},{"location":"gr_funzioni/matematica/degrees/#esempi","text":"degrees(3.14159) \u2192 179.99984796050427 degrees(1) \u2192 57.2958 degrees(pi()) \u2192 180","title":"Esempi"},{"location":"gr_funzioni/matematica/degrees/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/degrees/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/exp/","text":"exp \u21b5 Restituisce l'esponenziale di un valore. Sintassi \u21b5 exp( value ) Argomenti \u21b5 value numero da restituire come esponente Esempi \u21b5 exp(1.0) \u2192 2.71828182845905 nota bene \u21b5 -- osservazioni \u21b5 --","title":"exp"},{"location":"gr_funzioni/matematica/exp/#exp","text":"Restituisce l'esponenziale di un valore.","title":"exp"},{"location":"gr_funzioni/matematica/exp/#sintassi","text":"exp( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/exp/#argomenti","text":"value numero da restituire come esponente","title":"Argomenti"},{"location":"gr_funzioni/matematica/exp/#esempi","text":"exp(1.0) \u2192 2.71828182845905","title":"Esempi"},{"location":"gr_funzioni/matematica/exp/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/exp/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/floor/","text":"floor \u21b5 Arrotonda un numero all'intero inferiore. Sintassi \u21b5 floor( value ) Argomenti \u21b5 value un numero Esempi \u21b5 floor(4.9) \u2192 4 floor(-4.9) \u2192 -5 Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 -- Vedi esempio conversione","title":"floor"},{"location":"gr_funzioni/matematica/floor/#floor","text":"Arrotonda un numero all'intero inferiore.","title":"floor"},{"location":"gr_funzioni/matematica/floor/#sintassi","text":"floor( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/floor/#argomenti","text":"value un numero","title":"Argomenti"},{"location":"gr_funzioni/matematica/floor/#esempi","text":"floor(4.9) \u2192 4 floor(-4.9) \u2192 -5","title":"Esempi"},{"location":"gr_funzioni/matematica/floor/#esempi_1","text":"","title":"Esempi"},{"location":"gr_funzioni/matematica/floor/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/floor/#osservazioni","text":"-- Vedi esempio conversione","title":"osservazioni"},{"location":"gr_funzioni/matematica/inclination/","text":"Inclination \u21b5 Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b. Sintassi \u21b5 inclination( point_a , point_b ) Argomenti \u21b5 point_a geometria punto point_b geometria punto Esempi \u21b5 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 nota bene \u21b5 -- osservazioni \u21b5 -- vedasi nel gruppo funzioni Geometria Inclination","title":"Inclination"},{"location":"gr_funzioni/matematica/inclination/#inclination","text":"Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b.","title":"Inclination"},{"location":"gr_funzioni/matematica/inclination/#sintassi","text":"inclination( point_a , point_b )","title":"Sintassi"},{"location":"gr_funzioni/matematica/inclination/#argomenti","text":"point_a geometria punto point_b geometria punto","title":"Argomenti"},{"location":"gr_funzioni/matematica/inclination/#esempi","text":"inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0","title":"Esempi"},{"location":"gr_funzioni/matematica/inclination/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/inclination/#osservazioni","text":"-- vedasi nel gruppo funzioni Geometria Inclination","title":"osservazioni"},{"location":"gr_funzioni/matematica/ln/","text":"ln \u21b5 Restituisce il logaritmo naturale di un valore. Sintassi \u21b5 ln( value ) Argomenti \u21b5 value valore numerico Esempi \u21b5 ln(1) \u2192 0 ln(2.7182818284590452354) \u2192 1 nota bene \u21b5 -- osservazioni \u21b5 --","title":"ln"},{"location":"gr_funzioni/matematica/ln/#ln","text":"Restituisce il logaritmo naturale di un valore.","title":"ln"},{"location":"gr_funzioni/matematica/ln/#sintassi","text":"ln( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/ln/#argomenti","text":"value valore numerico","title":"Argomenti"},{"location":"gr_funzioni/matematica/ln/#esempi","text":"ln(1) \u2192 0 ln(2.7182818284590452354) \u2192 1","title":"Esempi"},{"location":"gr_funzioni/matematica/ln/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/ln/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/log/","text":"log \u21b5 Restituisce il valore del logaritmo della base e valore passati. Sintassi \u21b5 log( base , value ) Argomenti \u21b5 base qualsiasi numero positivo value qualsiasi numero positivo Esempi \u21b5 log(2, 32) \u2192 5 log(0.5, 32) \u2192 -5 log(2.7182818284590452354, 1) = ln(1) \u2192 1 nota bene \u21b5 -- osservazioni \u21b5 --","title":"log"},{"location":"gr_funzioni/matematica/log/#log","text":"Restituisce il valore del logaritmo della base e valore passati.","title":"log"},{"location":"gr_funzioni/matematica/log/#sintassi","text":"log( base , value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/log/#argomenti","text":"base qualsiasi numero positivo value qualsiasi numero positivo","title":"Argomenti"},{"location":"gr_funzioni/matematica/log/#esempi","text":"log(2, 32) \u2192 5 log(0.5, 32) \u2192 -5 log(2.7182818284590452354, 1) = ln(1) \u2192 1","title":"Esempi"},{"location":"gr_funzioni/matematica/log/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/log/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/log10/","text":"log10 \u21b5 Restituisce il valore del logaritmo in base10 dell'espressione passata. Sintassi \u21b5 log10( value ) Argomenti \u21b5 value qualsiasi numero positivo Esempi \u21b5 log10(1) \u2192 0 log10(100) \u2192 2 nota bene \u21b5 -- osservazioni \u21b5 --","title":"log10"},{"location":"gr_funzioni/matematica/log10/#log10","text":"Restituisce il valore del logaritmo in base10 dell'espressione passata.","title":"log10"},{"location":"gr_funzioni/matematica/log10/#sintassi","text":"log10( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/log10/#argomenti","text":"value qualsiasi numero positivo","title":"Argomenti"},{"location":"gr_funzioni/matematica/log10/#esempi","text":"log10(1) \u2192 0 log10(100) \u2192 2","title":"Esempi"},{"location":"gr_funzioni/matematica/log10/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/log10/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/matematica/","text":"Matematica \u21b5 Questo gruppo contiene funzioni matematiche es. radice quadrata, seno e coseno. Funzione Descrizione abs Ritorna il valore assoluto del numero acos Restituisce l'arcocoseno del valore in radianti asin Restituisce l'arcoseno del valore in radianti. atan Restituisce l'arcotangente del valore in radianti. atan2(dy,dx) Restituisce la arcotangente di dy/dx usando i segni dei due argomenti per determinare il quadrante del risultato azimuth(a,b) Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b ceil Arrotonda un numero all'intero superiore clamp Limita un valore in ingresso a un intervallo specificato cos Restituisce il coseno di un angolo degrees Converte da radianti a gradi decimali exp Restituisce l'esponenziale di un valore floor Arrotonda un numero all'intero inferiore Inclination Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b ln Restituisce il logaritmo naturale di un valore log Restituisce il valore del logaritmo della base e valore passati log10 Restituisce il valore del logaritmo in base10 dell'espressione passata max Restituisce il valore maggiore di un insieme di valori min Restituisce il valore minore di un insieme di valori pi Restituisce il valore di Pi greco radians Converte da gradi decimali a radianti rand Restituisce un intero casuale nell'intervallo specificato fra un minimo ed un massimo (inclusi) randf Restituisce un numero in virgola mobile casuale nell'intervallo specificato da un minimo ed un massimo (inclusi) round Arrotonda un numero ad un numero di cifre decimali scale_exp Trasforma un valore dato da un dominio in ingresso in un intervallo in uscita usando una curva esponenziale. Questa funzione pu\u00f2 essere usata per agevolare gradualmente in entrata o in uscita i valori dell'intervallo in uscita specificato scale_linear Trasforma un dato valore da un dominio in ingresso ad un intervallo in uscita usando un'interpolazione lineare sin Restituisce il seno di un angolo sqrt Restituisce la radice quadrata di un valore tan Restituisce la tangente di un angolo","title":"Matematica"},{"location":"gr_funzioni/matematica/matematica/#matematica","text":"Questo gruppo contiene funzioni matematiche es. radice quadrata, seno e coseno. Funzione Descrizione abs Ritorna il valore assoluto del numero acos Restituisce l'arcocoseno del valore in radianti asin Restituisce l'arcoseno del valore in radianti. atan Restituisce l'arcotangente del valore in radianti. atan2(dy,dx) Restituisce la arcotangente di dy/dx usando i segni dei due argomenti per determinare il quadrante del risultato azimuth(a,b) Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b ceil Arrotonda un numero all'intero superiore clamp Limita un valore in ingresso a un intervallo specificato cos Restituisce il coseno di un angolo degrees Converte da radianti a gradi decimali exp Restituisce l'esponenziale di un valore floor Arrotonda un numero all'intero inferiore Inclination Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b ln Restituisce il logaritmo naturale di un valore log Restituisce il valore del logaritmo della base e valore passati log10 Restituisce il valore del logaritmo in base10 dell'espressione passata max Restituisce il valore maggiore di un insieme di valori min Restituisce il valore minore di un insieme di valori pi Restituisce il valore di Pi greco radians Converte da gradi decimali a radianti rand Restituisce un intero casuale nell'intervallo specificato fra un minimo ed un massimo (inclusi) randf Restituisce un numero in virgola mobile casuale nell'intervallo specificato da un minimo ed un massimo (inclusi) round Arrotonda un numero ad un numero di cifre decimali scale_exp Trasforma un valore dato da un dominio in ingresso in un intervallo in uscita usando una curva esponenziale. Questa funzione pu\u00f2 essere usata per agevolare gradualmente in entrata o in uscita i valori dell'intervallo in uscita specificato scale_linear Trasforma un dato valore da un dominio in ingresso ad un intervallo in uscita usando un'interpolazione lineare sin Restituisce il seno di un angolo sqrt Restituisce la radice quadrata di un valore tan Restituisce la tangente di un angolo","title":"Matematica"},{"location":"gr_funzioni/matematica/matematica_unico/","text":"Gruppo Matematica \u21b5 Abstract Questo gruppo contiene funzioni matematiche es. radice quadrata, seno e coseno. abs \u21b5 Restituisce il valore assoluto di un numero. Sintassi: abs( value ) Argomenti: value un numero Esempi: abs(-2) \u2192 2 acos \u21b5 Restituisce l'arcocoseno del valore in radianti. Sintassi: acos( value ) Argomenti: value coseno di un angolo in radianti Esempi: acos(0.5) \u2192 1.0471975511966 asin \u21b5 Restituisce l'arcoseno del valore in radianti. Sintassi: asin( value ) Argomenti: value seno di un angolo in radianti Esempi: asin(1.0) \u2192 1.5707963267949 atan \u21b5 Restituisce l'arcotangente del valore in radianti. Sintassi: atan( value ) Argomenti: value tangente di un angolo in radianti Esempi: atan(0.5) \u2192 0.463647609000806 atan2 \u21b5 Restituisce la arcotangente di dy/dx usando i segni dei due argomenti per determinare il quadrante del risultato. Sintassi: atan2( dy , dx ) Argomenti: dy y differenza coordinata dx x differenza coordinata Esempi: atan2(1.0, 1.732) \u2192 0.523611477769969 Wikipedia azimuth \u21b5 Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi: azimuth( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689 vedasi nel gruppo funzioni Geometria Azimuth ceil \u21b5 Arrotonda un numero all'intero superiore. Sintassi: ceil( value ) Argomenti: value un numero Esempi: ceil(4.9) \u2192 5 ceil(-4.9) \u2192 -4 clamp \u21b5 Limita un valore in ingresso a un intervallo specificato. Sintassi: clamp( minimum , input , maximum ) Argomenti: minimum il pi\u00f9 piccolo valore in input che pu\u00f2 essere mantenuto. input un valore che sar\u00e0 compreso nell'intervallo specificato da minimo e massimo maximum il pi\u00f9 grande valore in input che pu\u00f2 essere mantenuto Esempi: clamp(1,5,10) \u2192 5 (input \u00e8 compreso tra 1 e 10 per cui \u00e8 restituito invariato) clamp(1,0,10) \u2192 1 (input \u00e8 pi\u00f9 piccolo del valore minimo di 1, cos\u00ec la funzione restituisce 1) clamp(1,11,10) \u2192 10 (input \u00e8 pi\u00f9 grande del valore massimo di 10, cos\u00ec la funzione restituisce 10) cos \u21b5 Restituisce il coseno di un angolo. Sintassi: cos( angle ) Argomenti: angle angolo in radianti Esempi: cos( 1.5707963267948966 ) \u2192 0.0 degrees \u21b5 Converte da radianti a gradi decimali. Sintassi: degrees( radians ) Argomenti: radians numerico Esempi: degrees(3.14159) \u2192 179.99984796050427 degrees(1) \u2192 57.2958 degrees(pi()) \u2192 180 exp \u21b5 Restituisce l'esponenziale di un valore. Sintassi: exp( value ) Argomenti: value numero da restituire come esponente Esempi: exp(1.0) \u2192 2.71828182845905 floor \u21b5 Arrotonda un numero all'intero inferiore. Sintassi: floor( value ) Argomenti: value un numero Esempi: floor(4.9) \u2192 4 floor(-4.9) \u2192 -5 Esempi: Vedi esempio conversione Inclination \u21b5 Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b. Sintassi: inclination( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 vedasi nel gruppo funzioni Geometria Inclination ln \u21b5 Restituisce il logaritmo naturale di un valore. Sintassi: ln( value ) Argomenti: value valore numerico Esempi: ln(1) \u2192 0 ln(2.7182818284590452354) \u2192 1 log \u21b5 Restituisce il valore del logaritmo della base e valore passati. Sintassi: log( base , value ) Argomenti: base qualsiasi numero positivo value qualsiasi numero positivo Esempi: log(2, 32) \u2192 5 log(0.5, 32) \u2192 -5 log(2.7182818284590452354, 1) = ln(1) \u2192 1 log10 \u21b5 Restituisce il valore del logaritmo in base10 dell'espressione passata. Sintassi: log10( value ) Argomenti: value qualsiasi numero positivo Esempi: log10(1) \u2192 0 log10(100) \u2192 2 max \u21b5 Restituisce il valore maggiore di un insieme di valori. Sintassi: max( value1 , value2 , \u2026 ) Argomenti: value un numero Esempi: max(2,10.2,5.5) \u2192 10.2 max(20.5,NULL,6.2) \u2192 20.5 min \u21b5 Restituisce il valore minore di un insieme di valori. Sintassi: min( value1 , value2 , \u2026 ) Argomenti: value un numero Esempi: min(20.5,10,6.2) \u2192 6.2 min(2,-10.3,NULL) \u2192 -10.3 pi \u21b5 Restituisce il valore di Pi greco Sintassi: pi() Esempi: pi() \u2192 3.14159265358979 -- Wikipedia Pi greco Mai senza Il mio logo personale: L'unione di tre simboli matematici che hanno rivoluzionato il Mondo: Pi greco; Infinito; derivata prima '; Con un po' di fantasia dovreste leggere il mio nome Tot\u00f2 \ud83d\ude0e radians \u21b5 Converte da gradi decimali a radianti. Sintassi: radians( degrees ) Argomenti: degrees valore numerico Esempi: radians(180) \u2192 3.14159 radians(57.2958) \u2192 1 rand \u21b5 Restituisce un intero casuale nell'intervallo specificato fra un minimo ed un massimo (inclusi). Se viene fornito un seme, il reso sar\u00e0 sempre lo stesso, a seconda del seme. Sintassi: rand( min , max [,seed=null] ) [ ] indica componenti opzionali Argomenti: min un intero indicante il numero casuale pi\u00f9 piccolo desiderato max un intero che indica il numero casuale pi\u00f9 alto desiderato seed qualsiasi valore da utilizzare come seme ( >= QGIS 3.12 ) Esempi: rand(1, 10) \u2192 8 rand( 10, 100,1) \u2192 68 Osservazioni: Novit\u00e0 introdotta nella QGIS 3.12 randf \u21b5 Restituisce un numero in virgola mobile casuale nell'intervallo specificato da un minimo ed un massimo (inclusi). Se viene fornito un seme, il reso sar\u00e0 sempre lo stesso, a seconda del seme. Sintassi: randf( [min=0.0] [,max=1.0] [,seed=null] ) Argomenti: min un numero in virgola mobile indicante il numero casuale pi\u00f9 piccolo desiderato max un numero in virgola mobile indicante il numero casuale pi\u00f9 grande desiderato seed qualsiasi valore da utilizzare come seme ( >= QGIS 3.12 ) Esempi: randf(1, 10) \u2192 4.59258286403147 randf(1, 10,3) \u2192 6.028893906608612 Esempi: Osservazioni Novit\u00e0 introdotta nella QGIS 3.12 round \u21b5 Arrotonda un numero ad un numero di cifre decimali. Sintassi: round( value , places ) Argomenti: value numero di decimali a cui arrotondare places Intero opzionale che indica il numero di posizioni a cui arrotondare i decimali. Pu\u00f2 essere negativo. Esempi: round(1234.567, 2) \u2192 1234.57 round(1234.567) \u2192 1235 round(1234.567,-2) \u2192 1200 Esempi: scale_exp \u21b5 Trasforma un valore dato da un dominio in ingresso in un intervallo in uscita usando una curva esponenziale. Questa funzione pu\u00f2 essere usata per agevolare gradualmente in entrata o in uscita i valori dell'intervallo in uscita specificato. Sintassi: scale_exp( val , domain_min , domain_max , range_min , range_max , exponent ) Argomenti: val Un valore nel dominio in ingresso. La funzione restituir\u00e0 un valore scalato corrispondente nell'intervallo in uscita. domain_min Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 basso che il valore in ingresso pu\u00f2 assumere. domain_max Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 alto che il valore in ingresso pu\u00f2 assumere. range_min Specifica il valore minimo nell'intervallo in uscita, il valore pi\u00f9 basso che dovrebbe essere restituito in uscita dalla funzione. range_max Specifica il valore massimo nell'intervallo di uscita, il valore pi\u00f9 alto che dovrebbe essere restituito dalla funzione. exponent Un valore positivo (maggiore di 0), che determina il modo con cui i valori in ingresso sono mappati nell'intervallo in uscita. Esponenti grandi agevoleranno gradualmente l'entrata dei valori in uscita\u200b\u200b, partendo lentamente prima di accelerare allorquando i valori in ingresso se si avvicinino al punto di massimo del dominio. Esponenti pi\u00f9 piccoli (minori di 1) ne agevoleranno l'uscita, incominciando velocemente la mappatura per poi rallentare in prossimit\u00e0 del massimo del dominio. Esempi: scale_exp(5,0,10,0,100,2) \u2192 25 (agevolazione graduale in entrata, usando un esponente di 2) scale_exp(3,0,10,0,100,0.5) \u2192 54.772 (agevolazione graduale in uscita, usando un esponente di 0.5) scale_linear \u21b5 Trasforma un dato valore da un dominio in ingresso ad un intervallo in uscita usando un'interpolazione lineare. Sintassi: scale_linear( val , domain_min , domain_max , range_min , range_max ) Argomenti: val Un valore nel dominio in ingresso. La funzione restituir\u00e0 un valore scalato corrispondente nell'intervallo in uscita. domain_min Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 basso che il valore in ingresso pu\u00f2 assumere. domain_max Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 alto che il valore in ingresso pu\u00f2 assumere. range_min Specifica il valore minimo nell'intervallo in uscita, il valore pi\u00f9 basso che dovrebbe essere restituito in uscita dalla funzione. range_max Specifica il valore massimo nell'intervallo di uscita, il valore pi\u00f9 alto che dovrebbe essere restituito dalla funzione. Esempi: scale_linear(5,0,10,0,100) \u2192 72 scale_linear(0.2,0,1,0,360) \u2192 72 (per scalare un valore tra 0 e 1 in un angolo tra 0 e 360) scale_linear(1500,1000,10000,9,20) \u2192 10.22 (per scalare una popolazione che varia tra 1000 e 10000 in una dimensione del carattere tra 9 e 20) sin \u21b5 Restituisce il seno di un angolo. Sintassi: sin( angle ) Argomenti: angle angolo in radianti Esempi: sin(1.571) \u2192 0.999999682931835 sin(pi()/2) \u2192 1 sqrt \u21b5 Restituisce la radice quadrata di un valore. Sintassi: sqrt( value ) Argomenti: value un numero Esempi: sqrt(9) \u2192 3 tan \u21b5 Restituisce la tangente di un angolo. Sintassi: tan( angle ) Argomenti: angle angolo in radianti Esempi: tan(1.0) \u2192 1.5574077246549 tan(pi()/2) \u2192 infinito","title":"Matematica"},{"location":"gr_funzioni/matematica/matematica_unico/#gruppo-matematica","text":"Abstract Questo gruppo contiene funzioni matematiche es. radice quadrata, seno e coseno.","title":"Gruppo Matematica"},{"location":"gr_funzioni/matematica/matematica_unico/#abs","text":"Restituisce il valore assoluto di un numero. Sintassi: abs( value ) Argomenti: value un numero Esempi: abs(-2) \u2192 2","title":"abs"},{"location":"gr_funzioni/matematica/matematica_unico/#acos","text":"Restituisce l'arcocoseno del valore in radianti. Sintassi: acos( value ) Argomenti: value coseno di un angolo in radianti Esempi: acos(0.5) \u2192 1.0471975511966","title":"acos"},{"location":"gr_funzioni/matematica/matematica_unico/#asin","text":"Restituisce l'arcoseno del valore in radianti. Sintassi: asin( value ) Argomenti: value seno di un angolo in radianti Esempi: asin(1.0) \u2192 1.5707963267949","title":"asin"},{"location":"gr_funzioni/matematica/matematica_unico/#atan","text":"Restituisce l'arcotangente del valore in radianti. Sintassi: atan( value ) Argomenti: value tangente di un angolo in radianti Esempi: atan(0.5) \u2192 0.463647609000806","title":"atan"},{"location":"gr_funzioni/matematica/matematica_unico/#atan2","text":"Restituisce la arcotangente di dy/dx usando i segni dei due argomenti per determinare il quadrante del risultato. Sintassi: atan2( dy , dx ) Argomenti: dy y differenza coordinata dx x differenza coordinata Esempi: atan2(1.0, 1.732) \u2192 0.523611477769969 Wikipedia","title":"atan2"},{"location":"gr_funzioni/matematica/matematica_unico/#azimuth","text":"Restituisce l'azimut dal nord quale angolo in radianti misurato in senso orario dalla verticale del punto_a al punto_b. Sintassi: azimuth( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: degrees( azimuth( make_point(25, 45), make_point(75, 100) ) ) \u2192 42.273689 degrees( azimuth( make_point(75, 100), make_point(25,45) ) ) \u2192 222.273689 vedasi nel gruppo funzioni Geometria Azimuth","title":"azimuth"},{"location":"gr_funzioni/matematica/matematica_unico/#ceil","text":"Arrotonda un numero all'intero superiore. Sintassi: ceil( value ) Argomenti: value un numero Esempi: ceil(4.9) \u2192 5 ceil(-4.9) \u2192 -4","title":"ceil"},{"location":"gr_funzioni/matematica/matematica_unico/#clamp","text":"Limita un valore in ingresso a un intervallo specificato. Sintassi: clamp( minimum , input , maximum ) Argomenti: minimum il pi\u00f9 piccolo valore in input che pu\u00f2 essere mantenuto. input un valore che sar\u00e0 compreso nell'intervallo specificato da minimo e massimo maximum il pi\u00f9 grande valore in input che pu\u00f2 essere mantenuto Esempi: clamp(1,5,10) \u2192 5 (input \u00e8 compreso tra 1 e 10 per cui \u00e8 restituito invariato) clamp(1,0,10) \u2192 1 (input \u00e8 pi\u00f9 piccolo del valore minimo di 1, cos\u00ec la funzione restituisce 1) clamp(1,11,10) \u2192 10 (input \u00e8 pi\u00f9 grande del valore massimo di 10, cos\u00ec la funzione restituisce 10)","title":"clamp"},{"location":"gr_funzioni/matematica/matematica_unico/#cos","text":"Restituisce il coseno di un angolo. Sintassi: cos( angle ) Argomenti: angle angolo in radianti Esempi: cos( 1.5707963267948966 ) \u2192 0.0","title":"cos"},{"location":"gr_funzioni/matematica/matematica_unico/#degrees","text":"Converte da radianti a gradi decimali. Sintassi: degrees( radians ) Argomenti: radians numerico Esempi: degrees(3.14159) \u2192 179.99984796050427 degrees(1) \u2192 57.2958 degrees(pi()) \u2192 180","title":"degrees"},{"location":"gr_funzioni/matematica/matematica_unico/#exp","text":"Restituisce l'esponenziale di un valore. Sintassi: exp( value ) Argomenti: value numero da restituire come esponente Esempi: exp(1.0) \u2192 2.71828182845905","title":"exp"},{"location":"gr_funzioni/matematica/matematica_unico/#floor","text":"Arrotonda un numero all'intero inferiore. Sintassi: floor( value ) Argomenti: value un numero Esempi: floor(4.9) \u2192 4 floor(-4.9) \u2192 -5 Esempi: Vedi esempio conversione","title":"floor"},{"location":"gr_funzioni/matematica/matematica_unico/#inclination","text":"Restituisce l'inclinazione misurata dallo zenit (0) al nadir (180) del punto_a al punto_b. Sintassi: inclination( point_a , point_b ) Argomenti: point_a geometria punto point_b geometria punto Esempi: inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 5 ) ) \u2192 0.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 50, 100, 0 ) ) \u2192 90.0 inclination( make_point( 5, 10, 0 ), make_point( 5, 10, -5 ) ) \u2192 180.0 vedasi nel gruppo funzioni Geometria Inclination","title":"Inclination"},{"location":"gr_funzioni/matematica/matematica_unico/#ln","text":"Restituisce il logaritmo naturale di un valore. Sintassi: ln( value ) Argomenti: value valore numerico Esempi: ln(1) \u2192 0 ln(2.7182818284590452354) \u2192 1","title":"ln"},{"location":"gr_funzioni/matematica/matematica_unico/#log","text":"Restituisce il valore del logaritmo della base e valore passati. Sintassi: log( base , value ) Argomenti: base qualsiasi numero positivo value qualsiasi numero positivo Esempi: log(2, 32) \u2192 5 log(0.5, 32) \u2192 -5 log(2.7182818284590452354, 1) = ln(1) \u2192 1","title":"log"},{"location":"gr_funzioni/matematica/matematica_unico/#log10","text":"Restituisce il valore del logaritmo in base10 dell'espressione passata. Sintassi: log10( value ) Argomenti: value qualsiasi numero positivo Esempi: log10(1) \u2192 0 log10(100) \u2192 2","title":"log10"},{"location":"gr_funzioni/matematica/matematica_unico/#max","text":"Restituisce il valore maggiore di un insieme di valori. Sintassi: max( value1 , value2 , \u2026 ) Argomenti: value un numero Esempi: max(2,10.2,5.5) \u2192 10.2 max(20.5,NULL,6.2) \u2192 20.5","title":"max"},{"location":"gr_funzioni/matematica/matematica_unico/#min","text":"Restituisce il valore minore di un insieme di valori. Sintassi: min( value1 , value2 , \u2026 ) Argomenti: value un numero Esempi: min(20.5,10,6.2) \u2192 6.2 min(2,-10.3,NULL) \u2192 -10.3","title":"min"},{"location":"gr_funzioni/matematica/matematica_unico/#pi","text":"Restituisce il valore di Pi greco Sintassi: pi() Esempi: pi() \u2192 3.14159265358979 -- Wikipedia Pi greco Mai senza Il mio logo personale: L'unione di tre simboli matematici che hanno rivoluzionato il Mondo: Pi greco; Infinito; derivata prima '; Con un po' di fantasia dovreste leggere il mio nome Tot\u00f2 \ud83d\ude0e","title":"pi"},{"location":"gr_funzioni/matematica/matematica_unico/#radians","text":"Converte da gradi decimali a radianti. Sintassi: radians( degrees ) Argomenti: degrees valore numerico Esempi: radians(180) \u2192 3.14159 radians(57.2958) \u2192 1","title":"radians"},{"location":"gr_funzioni/matematica/matematica_unico/#rand","text":"Restituisce un intero casuale nell'intervallo specificato fra un minimo ed un massimo (inclusi). Se viene fornito un seme, il reso sar\u00e0 sempre lo stesso, a seconda del seme. Sintassi: rand( min , max [,seed=null] ) [ ] indica componenti opzionali Argomenti: min un intero indicante il numero casuale pi\u00f9 piccolo desiderato max un intero che indica il numero casuale pi\u00f9 alto desiderato seed qualsiasi valore da utilizzare come seme ( >= QGIS 3.12 ) Esempi: rand(1, 10) \u2192 8 rand( 10, 100,1) \u2192 68 Osservazioni: Novit\u00e0 introdotta nella QGIS 3.12","title":"rand"},{"location":"gr_funzioni/matematica/matematica_unico/#randf","text":"Restituisce un numero in virgola mobile casuale nell'intervallo specificato da un minimo ed un massimo (inclusi). Se viene fornito un seme, il reso sar\u00e0 sempre lo stesso, a seconda del seme. Sintassi: randf( [min=0.0] [,max=1.0] [,seed=null] ) Argomenti: min un numero in virgola mobile indicante il numero casuale pi\u00f9 piccolo desiderato max un numero in virgola mobile indicante il numero casuale pi\u00f9 grande desiderato seed qualsiasi valore da utilizzare come seme ( >= QGIS 3.12 ) Esempi: randf(1, 10) \u2192 4.59258286403147 randf(1, 10,3) \u2192 6.028893906608612 Esempi: Osservazioni Novit\u00e0 introdotta nella QGIS 3.12","title":"randf"},{"location":"gr_funzioni/matematica/matematica_unico/#round","text":"Arrotonda un numero ad un numero di cifre decimali. Sintassi: round( value , places ) Argomenti: value numero di decimali a cui arrotondare places Intero opzionale che indica il numero di posizioni a cui arrotondare i decimali. Pu\u00f2 essere negativo. Esempi: round(1234.567, 2) \u2192 1234.57 round(1234.567) \u2192 1235 round(1234.567,-2) \u2192 1200 Esempi:","title":"round"},{"location":"gr_funzioni/matematica/matematica_unico/#scale_exp","text":"Trasforma un valore dato da un dominio in ingresso in un intervallo in uscita usando una curva esponenziale. Questa funzione pu\u00f2 essere usata per agevolare gradualmente in entrata o in uscita i valori dell'intervallo in uscita specificato. Sintassi: scale_exp( val , domain_min , domain_max , range_min , range_max , exponent ) Argomenti: val Un valore nel dominio in ingresso. La funzione restituir\u00e0 un valore scalato corrispondente nell'intervallo in uscita. domain_min Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 basso che il valore in ingresso pu\u00f2 assumere. domain_max Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 alto che il valore in ingresso pu\u00f2 assumere. range_min Specifica il valore minimo nell'intervallo in uscita, il valore pi\u00f9 basso che dovrebbe essere restituito in uscita dalla funzione. range_max Specifica il valore massimo nell'intervallo di uscita, il valore pi\u00f9 alto che dovrebbe essere restituito dalla funzione. exponent Un valore positivo (maggiore di 0), che determina il modo con cui i valori in ingresso sono mappati nell'intervallo in uscita. Esponenti grandi agevoleranno gradualmente l'entrata dei valori in uscita\u200b\u200b, partendo lentamente prima di accelerare allorquando i valori in ingresso se si avvicinino al punto di massimo del dominio. Esponenti pi\u00f9 piccoli (minori di 1) ne agevoleranno l'uscita, incominciando velocemente la mappatura per poi rallentare in prossimit\u00e0 del massimo del dominio. Esempi: scale_exp(5,0,10,0,100,2) \u2192 25 (agevolazione graduale in entrata, usando un esponente di 2) scale_exp(3,0,10,0,100,0.5) \u2192 54.772 (agevolazione graduale in uscita, usando un esponente di 0.5)","title":"scale_exp"},{"location":"gr_funzioni/matematica/matematica_unico/#scale_linear","text":"Trasforma un dato valore da un dominio in ingresso ad un intervallo in uscita usando un'interpolazione lineare. Sintassi: scale_linear( val , domain_min , domain_max , range_min , range_max ) Argomenti: val Un valore nel dominio in ingresso. La funzione restituir\u00e0 un valore scalato corrispondente nell'intervallo in uscita. domain_min Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 basso che il valore in ingresso pu\u00f2 assumere. domain_max Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 alto che il valore in ingresso pu\u00f2 assumere. range_min Specifica il valore minimo nell'intervallo in uscita, il valore pi\u00f9 basso che dovrebbe essere restituito in uscita dalla funzione. range_max Specifica il valore massimo nell'intervallo di uscita, il valore pi\u00f9 alto che dovrebbe essere restituito dalla funzione. Esempi: scale_linear(5,0,10,0,100) \u2192 72 scale_linear(0.2,0,1,0,360) \u2192 72 (per scalare un valore tra 0 e 1 in un angolo tra 0 e 360) scale_linear(1500,1000,10000,9,20) \u2192 10.22 (per scalare una popolazione che varia tra 1000 e 10000 in una dimensione del carattere tra 9 e 20)","title":"scale_linear"},{"location":"gr_funzioni/matematica/matematica_unico/#sin","text":"Restituisce il seno di un angolo. Sintassi: sin( angle ) Argomenti: angle angolo in radianti Esempi: sin(1.571) \u2192 0.999999682931835 sin(pi()/2) \u2192 1","title":"sin"},{"location":"gr_funzioni/matematica/matematica_unico/#sqrt","text":"Restituisce la radice quadrata di un valore. Sintassi: sqrt( value ) Argomenti: value un numero Esempi: sqrt(9) \u2192 3","title":"sqrt"},{"location":"gr_funzioni/matematica/matematica_unico/#tan","text":"Restituisce la tangente di un angolo. Sintassi: tan( angle ) Argomenti: angle angolo in radianti Esempi: tan(1.0) \u2192 1.5574077246549 tan(pi()/2) \u2192 infinito","title":"tan"},{"location":"gr_funzioni/matematica/max/","text":"max \u21b5 Restituisce il valore maggiore di un insieme di valori. Sintassi \u21b5 max( value1 , value2 , \u2026 ) Argomenti \u21b5 value un numero Esempi \u21b5 max(2,10.2,5.5) \u2192 10.2 max(20.5,NULL,6.2) \u2192 20.5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"max"},{"location":"gr_funzioni/matematica/max/#max","text":"Restituisce il valore maggiore di un insieme di valori.","title":"max"},{"location":"gr_funzioni/matematica/max/#sintassi","text":"max( value1 , value2 , \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/matematica/max/#argomenti","text":"value un numero","title":"Argomenti"},{"location":"gr_funzioni/matematica/max/#esempi","text":"max(2,10.2,5.5) \u2192 10.2 max(20.5,NULL,6.2) \u2192 20.5","title":"Esempi"},{"location":"gr_funzioni/matematica/max/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/max/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/min/","text":"min \u21b5 Restituisce il valore minore di un insieme di valori. Sintassi \u21b5 min( value1 , value2 , \u2026 ) Argomenti \u21b5 value un numero Esempi \u21b5 min(20.5,10,6.2) \u2192 6.2 min(2,-10.3,NULL) \u2192 -10.3 Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"min"},{"location":"gr_funzioni/matematica/min/#min","text":"Restituisce il valore minore di un insieme di valori.","title":"min"},{"location":"gr_funzioni/matematica/min/#sintassi","text":"min( value1 , value2 , \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/matematica/min/#argomenti","text":"value un numero","title":"Argomenti"},{"location":"gr_funzioni/matematica/min/#esempi","text":"min(20.5,10,6.2) \u2192 6.2 min(2,-10.3,NULL) \u2192 -10.3","title":"Esempi"},{"location":"gr_funzioni/matematica/min/#esempi_1","text":"","title":"Esempi"},{"location":"gr_funzioni/matematica/min/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/min/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/pi/","text":"pi \u21b5 Restituisce il valore di Pi greco Sintassi \u21b5 pi() Esempi \u21b5 pi() \u2192 3.14159265358979 nota bene \u21b5 -- osservazioni \u21b5 -- Wikipedia Pi greco Mai senza Il mio logo personale: L'unione di tre simboli matematici che hanno rivoluzionato il Mondo: Pi greco; Infinito; derivata prima '; Con un po' di fantasia dovreste leggere il mio nome Tot\u00f2 \ud83d\ude0e","title":"pi"},{"location":"gr_funzioni/matematica/pi/#pi","text":"Restituisce il valore di Pi greco","title":"pi"},{"location":"gr_funzioni/matematica/pi/#sintassi","text":"pi()","title":"Sintassi"},{"location":"gr_funzioni/matematica/pi/#esempi","text":"pi() \u2192 3.14159265358979","title":"Esempi"},{"location":"gr_funzioni/matematica/pi/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/pi/#osservazioni","text":"-- Wikipedia Pi greco Mai senza Il mio logo personale: L'unione di tre simboli matematici che hanno rivoluzionato il Mondo: Pi greco; Infinito; derivata prima '; Con un po' di fantasia dovreste leggere il mio nome Tot\u00f2 \ud83d\ude0e","title":"osservazioni"},{"location":"gr_funzioni/matematica/radians/","text":"radians \u21b5 Converte da gradi decimali a radianti. Sintassi \u21b5 radians( degrees ) Argomenti \u21b5 degrees valore numerico Esempi \u21b5 radians(180) \u2192 3.14159 radians(57.2958) \u2192 1 nota bene \u21b5 -- osservazioni \u21b5 --","title":"radians"},{"location":"gr_funzioni/matematica/radians/#radians","text":"Converte da gradi decimali a radianti.","title":"radians"},{"location":"gr_funzioni/matematica/radians/#sintassi","text":"radians( degrees )","title":"Sintassi"},{"location":"gr_funzioni/matematica/radians/#argomenti","text":"degrees valore numerico","title":"Argomenti"},{"location":"gr_funzioni/matematica/radians/#esempi","text":"radians(180) \u2192 3.14159 radians(57.2958) \u2192 1","title":"Esempi"},{"location":"gr_funzioni/matematica/radians/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/radians/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/rand/","text":"rand \u21b5 Restituisce un intero casuale nell'intervallo specificato fra un minimo ed un massimo (inclusi). Se viene fornito un seme, il reso sar\u00e0 sempre lo stesso, a seconda del seme. Sintassi \u21b5 rand( min , max [,seed=null] ) [ ] indica componenti opzionali Argomenti \u21b5 min un intero indicante il numero casuale pi\u00f9 piccolo desiderato max un intero che indica il numero casuale pi\u00f9 alto desiderato seed qualsiasi valore da utilizzare come seme ( >= QGIS 3.12 ) Esempi \u21b5 rand(1, 10) \u2192 8 rand( 10, 100,1) \u2192 68 nota bene \u21b5 -- osservazioni \u21b5 Novit\u00e0 introdotta nella QGIS 3.12","title":"rand"},{"location":"gr_funzioni/matematica/rand/#rand","text":"Restituisce un intero casuale nell'intervallo specificato fra un minimo ed un massimo (inclusi). Se viene fornito un seme, il reso sar\u00e0 sempre lo stesso, a seconda del seme.","title":"rand"},{"location":"gr_funzioni/matematica/rand/#sintassi","text":"rand( min , max [,seed=null] ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/matematica/rand/#argomenti","text":"min un intero indicante il numero casuale pi\u00f9 piccolo desiderato max un intero che indica il numero casuale pi\u00f9 alto desiderato seed qualsiasi valore da utilizzare come seme ( >= QGIS 3.12 )","title":"Argomenti"},{"location":"gr_funzioni/matematica/rand/#esempi","text":"rand(1, 10) \u2192 8 rand( 10, 100,1) \u2192 68","title":"Esempi"},{"location":"gr_funzioni/matematica/rand/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/rand/#osservazioni","text":"Novit\u00e0 introdotta nella QGIS 3.12","title":"osservazioni"},{"location":"gr_funzioni/matematica/randf/","text":"randf \u21b5 Restituisce un numero in virgola mobile casuale nell'intervallo specificato da un minimo ed un massimo (inclusi). Se viene fornito un seme, il reso sar\u00e0 sempre lo stesso, a seconda del seme. Sintassi \u21b5 randf( [min=0.0] [,max=1.0] [,seed=null] ) Argomenti \u21b5 min un numero in virgola mobile indicante il numero casuale pi\u00f9 piccolo desiderato max un numero in virgola mobile indicante il numero casuale pi\u00f9 grande desiderato seed qualsiasi valore da utilizzare come seme ( >= QGIS 3.12 ) Esempi \u21b5 randf(1, 10) \u2192 4.59258286403147 randf(1, 10,3) \u2192 6.028893906608612 Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 Novit\u00e0 introdotta nella QGIS 3.12","title":"randf"},{"location":"gr_funzioni/matematica/randf/#randf","text":"Restituisce un numero in virgola mobile casuale nell'intervallo specificato da un minimo ed un massimo (inclusi). Se viene fornito un seme, il reso sar\u00e0 sempre lo stesso, a seconda del seme.","title":"randf"},{"location":"gr_funzioni/matematica/randf/#sintassi","text":"randf( [min=0.0] [,max=1.0] [,seed=null] )","title":"Sintassi"},{"location":"gr_funzioni/matematica/randf/#argomenti","text":"min un numero in virgola mobile indicante il numero casuale pi\u00f9 piccolo desiderato max un numero in virgola mobile indicante il numero casuale pi\u00f9 grande desiderato seed qualsiasi valore da utilizzare come seme ( >= QGIS 3.12 )","title":"Argomenti"},{"location":"gr_funzioni/matematica/randf/#esempi","text":"randf(1, 10) \u2192 4.59258286403147 randf(1, 10,3) \u2192 6.028893906608612","title":"Esempi"},{"location":"gr_funzioni/matematica/randf/#esempi_1","text":"","title":"Esempi"},{"location":"gr_funzioni/matematica/randf/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/randf/#osservazioni","text":"Novit\u00e0 introdotta nella QGIS 3.12","title":"osservazioni"},{"location":"gr_funzioni/matematica/round/","text":"round \u21b5 Arrotonda un numero ad un numero di cifre decimali. Sintassi \u21b5 round( value , places ) Argomenti \u21b5 value numero di decimali a cui arrotondare places Intero opzionale che indica il numero di posizioni a cui arrotondare i decimali. Pu\u00f2 essere negativo. Esempi \u21b5 round(1234.567, 2) \u2192 1234.57 round(1234.567) \u2192 1235 round(1234.567,-2) \u2192 1200 Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"round"},{"location":"gr_funzioni/matematica/round/#round","text":"Arrotonda un numero ad un numero di cifre decimali.","title":"round"},{"location":"gr_funzioni/matematica/round/#sintassi","text":"round( value , places )","title":"Sintassi"},{"location":"gr_funzioni/matematica/round/#argomenti","text":"value numero di decimali a cui arrotondare places Intero opzionale che indica il numero di posizioni a cui arrotondare i decimali. Pu\u00f2 essere negativo.","title":"Argomenti"},{"location":"gr_funzioni/matematica/round/#esempi","text":"round(1234.567, 2) \u2192 1234.57 round(1234.567) \u2192 1235 round(1234.567,-2) \u2192 1200","title":"Esempi"},{"location":"gr_funzioni/matematica/round/#esempi_1","text":"","title":"Esempi"},{"location":"gr_funzioni/matematica/round/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/round/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/scale_exp/","text":"scale_exp \u21b5 Trasforma un valore dato da un dominio in ingresso in un intervallo in uscita usando una curva esponenziale. Questa funzione pu\u00f2 essere usata per agevolare gradualmente in entrata o in uscita i valori dell'intervallo in uscita specificato. Sintassi \u21b5 scale_exp( val , domain_min , domain_max , range_min , range_max , exponent ) Argomenti \u21b5 val Un valore nel dominio in ingresso. La funzione restituir\u00e0 un valore scalato corrispondente nell'intervallo in uscita. domain_min Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 basso che il valore in ingresso pu\u00f2 assumere. domain_max Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 alto che il valore in ingresso pu\u00f2 assumere. range_min Specifica il valore minimo nell'intervallo in uscita, il valore pi\u00f9 basso che dovrebbe essere restituito in uscita dalla funzione. range_max Specifica il valore massimo nell'intervallo di uscita, il valore pi\u00f9 alto che dovrebbe essere restituito dalla funzione. exponent Un valore positivo (maggiore di 0), che determina il modo con cui i valori in ingresso sono mappati nell'intervallo in uscita. Esponenti grandi agevoleranno gradualmente l'entrata dei valori in uscita\u200b\u200b, partendo lentamente prima di accelerare allorquando i valori in ingresso se si avvicinino al punto di massimo del dominio. Esponenti pi\u00f9 piccoli (minori di 1) ne agevoleranno l'uscita, incominciando velocemente la mappatura per poi rallentare in prossimit\u00e0 del massimo del dominio. Esempi \u21b5 scale_exp(5,0,10,0,100,2) \u2192 25 (agevolazione graduale in entrata, usando un esponente di 2) scale_exp(3,0,10,0,100,0.5) \u2192 54.772 (agevolazione graduale in uscita, usando un esponente di 0.5) nota bene \u21b5 -- osservazioni \u21b5 --","title":"scale_exp"},{"location":"gr_funzioni/matematica/scale_exp/#scale_exp","text":"Trasforma un valore dato da un dominio in ingresso in un intervallo in uscita usando una curva esponenziale. Questa funzione pu\u00f2 essere usata per agevolare gradualmente in entrata o in uscita i valori dell'intervallo in uscita specificato.","title":"scale_exp"},{"location":"gr_funzioni/matematica/scale_exp/#sintassi","text":"scale_exp( val , domain_min , domain_max , range_min , range_max , exponent )","title":"Sintassi"},{"location":"gr_funzioni/matematica/scale_exp/#argomenti","text":"val Un valore nel dominio in ingresso. La funzione restituir\u00e0 un valore scalato corrispondente nell'intervallo in uscita. domain_min Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 basso che il valore in ingresso pu\u00f2 assumere. domain_max Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 alto che il valore in ingresso pu\u00f2 assumere. range_min Specifica il valore minimo nell'intervallo in uscita, il valore pi\u00f9 basso che dovrebbe essere restituito in uscita dalla funzione. range_max Specifica il valore massimo nell'intervallo di uscita, il valore pi\u00f9 alto che dovrebbe essere restituito dalla funzione. exponent Un valore positivo (maggiore di 0), che determina il modo con cui i valori in ingresso sono mappati nell'intervallo in uscita. Esponenti grandi agevoleranno gradualmente l'entrata dei valori in uscita\u200b\u200b, partendo lentamente prima di accelerare allorquando i valori in ingresso se si avvicinino al punto di massimo del dominio. Esponenti pi\u00f9 piccoli (minori di 1) ne agevoleranno l'uscita, incominciando velocemente la mappatura per poi rallentare in prossimit\u00e0 del massimo del dominio.","title":"Argomenti"},{"location":"gr_funzioni/matematica/scale_exp/#esempi","text":"scale_exp(5,0,10,0,100,2) \u2192 25 (agevolazione graduale in entrata, usando un esponente di 2) scale_exp(3,0,10,0,100,0.5) \u2192 54.772 (agevolazione graduale in uscita, usando un esponente di 0.5)","title":"Esempi"},{"location":"gr_funzioni/matematica/scale_exp/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/scale_exp/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/scale_linear/","text":"scale_linear \u21b5 Trasforma un dato valore da un dominio in ingresso ad un intervallo in uscita usando un'interpolazione lineare. Sintassi \u21b5 scale_linear( val , domain_min , domain_max , range_min , range_max ) Argomenti \u21b5 val Un valore nel dominio in ingresso. La funzione restituir\u00e0 un valore scalato corrispondente nell'intervallo in uscita. domain_min Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 basso che il valore in ingresso pu\u00f2 assumere. domain_max Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 alto che il valore in ingresso pu\u00f2 assumere. range_min Specifica il valore minimo nell'intervallo in uscita, il valore pi\u00f9 basso che dovrebbe essere restituito in uscita dalla funzione. range_max Specifica il valore massimo nell'intervallo di uscita, il valore pi\u00f9 alto che dovrebbe essere restituito dalla funzione. Esempi \u21b5 scale_linear(5,0,10,0,100) \u2192 72 scale_linear(0.2,0,1,0,360) \u2192 72 (per scalare un valore tra 0 e 1 in un angolo tra 0 e 360) scale_linear(1500,1000,10000,9,20) \u2192 10.22 (per scalare una popolazione che varia tra 1000 e 10000 in una dimensione del carattere tra 9 e 20) nota bene \u21b5 -- osservazioni \u21b5 --","title":"scale_linear"},{"location":"gr_funzioni/matematica/scale_linear/#scale_linear","text":"Trasforma un dato valore da un dominio in ingresso ad un intervallo in uscita usando un'interpolazione lineare.","title":"scale_linear"},{"location":"gr_funzioni/matematica/scale_linear/#sintassi","text":"scale_linear( val , domain_min , domain_max , range_min , range_max )","title":"Sintassi"},{"location":"gr_funzioni/matematica/scale_linear/#argomenti","text":"val Un valore nel dominio in ingresso. La funzione restituir\u00e0 un valore scalato corrispondente nell'intervallo in uscita. domain_min Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 basso che il valore in ingresso pu\u00f2 assumere. domain_max Specifica il valore massimo nel dominio in ingresso, il valore pi\u00f9 alto che il valore in ingresso pu\u00f2 assumere. range_min Specifica il valore minimo nell'intervallo in uscita, il valore pi\u00f9 basso che dovrebbe essere restituito in uscita dalla funzione. range_max Specifica il valore massimo nell'intervallo di uscita, il valore pi\u00f9 alto che dovrebbe essere restituito dalla funzione.","title":"Argomenti"},{"location":"gr_funzioni/matematica/scale_linear/#esempi","text":"scale_linear(5,0,10,0,100) \u2192 72 scale_linear(0.2,0,1,0,360) \u2192 72 (per scalare un valore tra 0 e 1 in un angolo tra 0 e 360) scale_linear(1500,1000,10000,9,20) \u2192 10.22 (per scalare una popolazione che varia tra 1000 e 10000 in una dimensione del carattere tra 9 e 20)","title":"Esempi"},{"location":"gr_funzioni/matematica/scale_linear/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/scale_linear/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/sin/","text":"sin \u21b5 Restituisce il seno di un angolo. Sintassi \u21b5 sin( angle ) Argomenti \u21b5 angle angolo in radianti Esempi \u21b5 sin(1.571) \u2192 0.999999682931835 sin(pi()/2) \u2192 1 nota bene \u21b5 -- osservazioni \u21b5 --","title":"sin"},{"location":"gr_funzioni/matematica/sin/#sin","text":"Restituisce il seno di un angolo.","title":"sin"},{"location":"gr_funzioni/matematica/sin/#sintassi","text":"sin( angle )","title":"Sintassi"},{"location":"gr_funzioni/matematica/sin/#argomenti","text":"angle angolo in radianti","title":"Argomenti"},{"location":"gr_funzioni/matematica/sin/#esempi","text":"sin(1.571) \u2192 0.999999682931835 sin(pi()/2) \u2192 1","title":"Esempi"},{"location":"gr_funzioni/matematica/sin/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/sin/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/sqrt/","text":"sqrt \u21b5 Restituisce la radice quadrata di un valore. Sintassi \u21b5 sqrt( value ) Argomenti \u21b5 value un numero Esempi \u21b5 sqrt(9) \u2192 3 nota bene \u21b5 -- osservazioni \u21b5 --","title":"sqrt"},{"location":"gr_funzioni/matematica/sqrt/#sqrt","text":"Restituisce la radice quadrata di un valore.","title":"sqrt"},{"location":"gr_funzioni/matematica/sqrt/#sintassi","text":"sqrt( value )","title":"Sintassi"},{"location":"gr_funzioni/matematica/sqrt/#argomenti","text":"value un numero","title":"Argomenti"},{"location":"gr_funzioni/matematica/sqrt/#esempi","text":"sqrt(9) \u2192 3","title":"Esempi"},{"location":"gr_funzioni/matematica/sqrt/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/sqrt/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/matematica/tan/","text":"tan \u21b5 Restituisce la tangente di un angolo. Sintassi \u21b5 tan( angle ) Argomenti \u21b5 angle angolo in radianti Esempi \u21b5 tan(1.0) \u2192 1.5574077246549 tan(pi()/2) \u2192 infinito nota bene \u21b5 -- osservazioni \u21b5 --","title":"tan"},{"location":"gr_funzioni/matematica/tan/#tan","text":"Restituisce la tangente di un angolo.","title":"tan"},{"location":"gr_funzioni/matematica/tan/#sintassi","text":"tan( angle )","title":"Sintassi"},{"location":"gr_funzioni/matematica/tan/#argomenti","text":"angle angolo in radianti","title":"Argomenti"},{"location":"gr_funzioni/matematica/tan/#esempi","text":"tan(1.0) \u2192 1.5574077246549 tan(pi()/2) \u2192 infinito","title":"Esempi"},{"location":"gr_funzioni/matematica/tan/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/matematica/tan/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/operatori/and/","text":"Operatore AND \u21b5 Restituisce 1 quando le condizioni a e b sono vere. Esempi \u21b5 * TRUE AND TRUE \u2192 1 * TRUE AND FALSE \u2192 0 * 4 = 2+2 AND 1 = 1 \u2192 1 * 4 = 2+2 AND 1 = 2 \u2192 0 Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore AND"},{"location":"gr_funzioni/operatori/and/#operatore-and","text":"Restituisce 1 quando le condizioni a e b sono vere.","title":"Operatore AND"},{"location":"gr_funzioni/operatori/and/#esempi","text":"* TRUE AND TRUE \u2192 1 * TRUE AND FALSE \u2192 0 * 4 = 2+2 AND 1 = 1 \u2192 1 * 4 = 2+2 AND 1 = 2 \u2192 0","title":"Esempi"},{"location":"gr_funzioni/operatori/and/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/diverso/","text":"Operatore <> (diverso) \u21b5 Confronta due valori e pone a 1 se essi non sono uguali. Esempi \u21b5 * 5 <> 4 \u2192 1 * 4 <> 4 \u2192 0 * 5 <> NULL \u2192 NULL * NULL <> NULL \u2192 NULL Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore <> (diverso)"},{"location":"gr_funzioni/operatori/diverso/#operatore-diverso","text":"Confronta due valori e pone a 1 se essi non sono uguali.","title":"Operatore &lt;&gt; (diverso)"},{"location":"gr_funzioni/operatori/diverso/#esempi","text":"* 5 <> 4 \u2192 1 * 4 <> 4 \u2192 0 * 5 <> NULL \u2192 NULL * NULL <> NULL \u2192 NULL","title":"Esempi"},{"location":"gr_funzioni/operatori/diverso/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/divisione/","text":"Operatore / (divisione) \u21b5 Divisione di due valori. Esempi \u21b5 * 5 / 4 \u2192 1.25 * 5 / NULL \u2192 NULL * NULL / 5 \u2192 NULL Osservazioni \u21b5 --","title":"Operatore / (divisione)"},{"location":"gr_funzioni/operatori/divisione/#operatore-divisione","text":"Divisione di due valori.","title":"Operatore / (divisione)"},{"location":"gr_funzioni/operatori/divisione/#esempi","text":"* 5 / 4 \u2192 1.25 * 5 / NULL \u2192 NULL * NULL / 5 \u2192 NULL","title":"Esempi"},{"location":"gr_funzioni/operatori/divisione/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/operatori/doppio_pipe/","text":"Operatore || (doppio pipe) \u21b5 Unisce due valori assieme in una stringa. Se uno dei valori \u00e8 NULL il risultato sar\u00e0 NULL. Vedi la funzione CONCAT con caratteristiche differenti. Esempi \u21b5 * 'Qui' || ' e ' || 'l\u00e0' \u2192 'Qui e l\u00e0' * 'Nothing' || NULL \u2192 NULL * 'Dia: ' || \"Diameter\" \u2192 'Dia: 25' (\"Diameter\" - un campo tabella attributi) * 1 || 2 \u2192 '12' Osservazioni \u21b5 Puoi concatenare stringhe usando || o +. Quest'ultimo significa anche somma nelle espressioni. Quindi se hai un intero (campo o valore numerico) questo pu\u00f2 essere soggetto a errori. In questo caso, dovresti usare ||. Se si concatenano due valori stringa, \u00e8 possibile utilizzare entrambi.","title":"Operatore || (doppio pipe)"},{"location":"gr_funzioni/operatori/doppio_pipe/#operatore-doppio-pipe","text":"Unisce due valori assieme in una stringa. Se uno dei valori \u00e8 NULL il risultato sar\u00e0 NULL. Vedi la funzione CONCAT con caratteristiche differenti.","title":"Operatore || (doppio pipe)"},{"location":"gr_funzioni/operatori/doppio_pipe/#esempi","text":"* 'Qui' || ' e ' || 'l\u00e0' \u2192 'Qui e l\u00e0' * 'Nothing' || NULL \u2192 NULL * 'Dia: ' || \"Diameter\" \u2192 'Dia: 25' (\"Diameter\" - un campo tabella attributi) * 1 || 2 \u2192 '12'","title":"Esempi"},{"location":"gr_funzioni/operatori/doppio_pipe/#osservazioni","text":"Puoi concatenare stringhe usando || o +. Quest'ultimo significa anche somma nelle espressioni. Quindi se hai un intero (campo o valore numerico) questo pu\u00f2 essere soggetto a errori. In questo caso, dovresti usare ||. Se si concatenano due valori stringa, \u00e8 possibile utilizzare entrambi.","title":"Osservazioni"},{"location":"gr_funzioni/operatori/ilike/","text":"Operatore ILIKE \u21b5 Restituisce 1 se il primo parametro soddisfa senza tener conto delle maiuscole o minuscole il modello fornito. LIKE pu\u00f2 essere usato al posto di ILIKE per eseguire una comparazione che tenga conto delle maiuscole e minuscole. Funziona anche con i numeri. Esempi \u21b5 * 'A' ILIKE 'A' \u2192 1 * 'A' ILIKE 'a' \u2192 1 * 'A' ILIKE 'B' \u2192 0 * 'ABC' ILIKE 'b' \u2192 0 * 'ABC' ILIKE 'B' \u2192 0 * 'ABC' ILIKE '_b_' \u2192 1 * 'ABC' ILIKE '_B_' \u2192 1 * 'ABCD' ILIKE '_b_' \u2192 0 * 'ABCD' ILIKE '_B_' \u2192 0 * 'ABCD' ILIKE '_b%' \u2192 1 * 'ABCD' ILIKE '_B%' \u2192 1 * 'ABCD' ILIKE '%b%' \u2192 1 * 'ABCD' ILIKE '%B%' \u2192 1 Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore ILIKE"},{"location":"gr_funzioni/operatori/ilike/#operatore-ilike","text":"Restituisce 1 se il primo parametro soddisfa senza tener conto delle maiuscole o minuscole il modello fornito. LIKE pu\u00f2 essere usato al posto di ILIKE per eseguire una comparazione che tenga conto delle maiuscole e minuscole. Funziona anche con i numeri.","title":"Operatore ILIKE"},{"location":"gr_funzioni/operatori/ilike/#esempi","text":"* 'A' ILIKE 'A' \u2192 1 * 'A' ILIKE 'a' \u2192 1 * 'A' ILIKE 'B' \u2192 0 * 'ABC' ILIKE 'b' \u2192 0 * 'ABC' ILIKE 'B' \u2192 0 * 'ABC' ILIKE '_b_' \u2192 1 * 'ABC' ILIKE '_B_' \u2192 1 * 'ABCD' ILIKE '_b_' \u2192 0 * 'ABCD' ILIKE '_B_' \u2192 0 * 'ABCD' ILIKE '_b%' \u2192 1 * 'ABCD' ILIKE '_B%' \u2192 1 * 'ABCD' ILIKE '%b%' \u2192 1 * 'ABCD' ILIKE '%B%' \u2192 1","title":"Esempi"},{"location":"gr_funzioni/operatori/ilike/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/in/","text":"Operatore IN \u21b5 Restituisce 1 se il valore viene trovato in una lista di valori. Esempi \u21b5 * 'A' IN ('A','B') \u2192 1 * 'A' IN ('C','B') \u2192 0 Osservazioni \u21b5 La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso","title":"Operatore IN"},{"location":"gr_funzioni/operatori/in/#operatore-in","text":"Restituisce 1 se il valore viene trovato in una lista di valori.","title":"Operatore IN"},{"location":"gr_funzioni/operatori/in/#esempi","text":"* 'A' IN ('A','B') \u2192 1 * 'A' IN ('C','B') \u2192 0","title":"Esempi"},{"location":"gr_funzioni/operatori/in/#osservazioni","text":"La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/is/","text":"Operatore IS \u21b5 Restituisce 1 se a \u00e8 uguale a b . Esempi \u21b5 * 'A' IS 'A' \u2192 1 *'A' IS 'a' \u2192 0 * 4 IS 4 \u2192 1 * 4 IS 2+2 \u2192 1 * 4 IS 2 \u2192 0 * $geometry IS NULL \u2192 0, se la tua geometria non \u00e8 NULL Osservazioni \u21b5 La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso","title":"Operatore IS"},{"location":"gr_funzioni/operatori/is/#operatore-is","text":"Restituisce 1 se a \u00e8 uguale a b .","title":"Operatore IS"},{"location":"gr_funzioni/operatori/is/#esempi","text":"* 'A' IS 'A' \u2192 1 *'A' IS 'a' \u2192 0 * 4 IS 4 \u2192 1 * 4 IS 2+2 \u2192 1 * 4 IS 2 \u2192 0 * $geometry IS NULL \u2192 0, se la tua geometria non \u00e8 NULL","title":"Esempi"},{"location":"gr_funzioni/operatori/is/#osservazioni","text":"La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/like/","text":"Operatore LIKE \u21b5 Restituisce 1 se il primo parametro soddisfa il modello fornito. Funziona anche con i numeri. Esempi \u21b5 * 'A' LIKE 'A' \u2192 1 * 'A' LIKE 'a' \u2192 0 * 'A' LIKE 'B' \u2192 0 * 'ABC' LIKE 'B' \u2192 0 * 'ABC' LIKE '_B_' \u2192 1 * 'ABCD' LIKE '_B_' \u2192 0 * 'ABCD' LIKE '_B%' \u2192 1 * 'ABCD' LIKE '%B%' \u2192 1 * '1%' LIKE '1\\%' \u2192 1 * '1_' LIKE '1\\%' \u2192 0 Osservazioni \u21b5 La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso","title":"Operatore LIKE"},{"location":"gr_funzioni/operatori/like/#operatore-like","text":"Restituisce 1 se il primo parametro soddisfa il modello fornito. Funziona anche con i numeri.","title":"Operatore LIKE"},{"location":"gr_funzioni/operatori/like/#esempi","text":"* 'A' LIKE 'A' \u2192 1 * 'A' LIKE 'a' \u2192 0 * 'A' LIKE 'B' \u2192 0 * 'ABC' LIKE 'B' \u2192 0 * 'ABC' LIKE '_B_' \u2192 1 * 'ABCD' LIKE '_B_' \u2192 0 * 'ABCD' LIKE '_B%' \u2192 1 * 'ABCD' LIKE '%B%' \u2192 1 * '1%' LIKE '1\\%' \u2192 1 * '1_' LIKE '1\\%' \u2192 0","title":"Esempi"},{"location":"gr_funzioni/operatori/like/#osservazioni","text":"La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/maggiore/","text":"Operatore > (maggiore) \u21b5 Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore del valore a destra. Esempi \u21b5 * 5 > 4 \u2192 1 * 5 > 5 \u2192 0 * 4 > 5 \u2192 0 Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore > (maggiore)"},{"location":"gr_funzioni/operatori/maggiore/#operatore-maggiore","text":"Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore del valore a destra.","title":"Operatore &gt; (maggiore)"},{"location":"gr_funzioni/operatori/maggiore/#esempi","text":"* 5 > 4 \u2192 1 * 5 > 5 \u2192 0 * 4 > 5 \u2192 0","title":"Esempi"},{"location":"gr_funzioni/operatori/maggiore/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/maggioreuguale/","text":"Operatore >= (maggiore uguale) \u21b5 Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore o uguale del valore a destra. Esempi \u21b5 * 5 >= 4 \u2192 1 * 5 >= 5 \u2192 1 * 4 >= 5 \u2192 0 Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore >= (maggiore uguale)"},{"location":"gr_funzioni/operatori/maggioreuguale/#operatore-maggiore-uguale","text":"Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore o uguale del valore a destra.","title":"Operatore &gt;= (maggiore uguale)"},{"location":"gr_funzioni/operatori/maggioreuguale/#esempi","text":"* 5 >= 4 \u2192 1 * 5 >= 5 \u2192 1 * 4 >= 5 \u2192 0","title":"Esempi"},{"location":"gr_funzioni/operatori/maggioreuguale/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/meno/","text":"Operatore - (meno) \u21b5 Sottrazione di due valori. Se uno dei due valori \u00e8 NULL il risultato sar\u00e0 NULL. Esempi \u21b5 * 5 - 4 \u2192 1 * 5 - NULL \u2192 NULL * NULL - 5 \u2192 NULL * 4 - 5 \u2192 -1 Osservazioni \u21b5 --","title":"Operatore - (meno)"},{"location":"gr_funzioni/operatori/meno/#operatore-meno","text":"Sottrazione di due valori. Se uno dei due valori \u00e8 NULL il risultato sar\u00e0 NULL.","title":"Operatore - (meno)"},{"location":"gr_funzioni/operatori/meno/#esempi","text":"* 5 - 4 \u2192 1 * 5 - NULL \u2192 NULL * NULL - 5 \u2192 NULL * 4 - 5 \u2192 -1","title":"Esempi"},{"location":"gr_funzioni/operatori/meno/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/operatori/minore/","text":"Operatore < (minore) \u21b5 Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore del valore a destra. Esempi \u21b5 * 5 < 4 \u2192 0 * 5 < 5 \u2192 0 * 4 < 5 \u2192 1 Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore < (minore)"},{"location":"gr_funzioni/operatori/minore/#operatore-minore","text":"Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore del valore a destra.","title":"Operatore &lt; (minore)"},{"location":"gr_funzioni/operatori/minore/#esempi","text":"* 5 < 4 \u2192 0 * 5 < 5 \u2192 0 * 4 < 5 \u2192 1","title":"Esempi"},{"location":"gr_funzioni/operatori/minore/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/minoreuguale/","text":"Operatore <= (minore uguale) \u21b5 Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore o uguale del valore a destra. Esempi \u21b5 * 5 <= 4 \u2192 0 * 5 <= 5 \u2192 1 * 4 <= 5 \u2192 1 Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore <= (minore uguale)"},{"location":"gr_funzioni/operatori/minoreuguale/#operatore-minore-uguale","text":"Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore o uguale del valore a destra.","title":"Operatore &lt;= (minore uguale)"},{"location":"gr_funzioni/operatori/minoreuguale/#esempi","text":"* 5 <= 4 \u2192 0 * 5 <= 5 \u2192 1 * 4 <= 5 \u2192 1","title":"Esempi"},{"location":"gr_funzioni/operatori/minoreuguale/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/not/","text":"Operatore NOT \u21b5 Nega una condizione. Esempi \u21b5 NOT 1 \u2192 0 NOT 0 \u2192 1 Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore NOT"},{"location":"gr_funzioni/operatori/not/#operatore-not","text":"Nega una condizione.","title":"Operatore NOT"},{"location":"gr_funzioni/operatori/not/#esempi","text":"NOT 1 \u2192 0 NOT 0 \u2192 1","title":"Esempi"},{"location":"gr_funzioni/operatori/not/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/operatori/","text":"Operatori \u21b5 Questo gruppo contiene operatori es. + - * Funzione Descrizione a + b Addizione di due valori a - b Sottrazione di due valori. a * b Moltiplicazione di due valori a / b Divisione di due valori a % b Resto della divisione a ^ b Elevazione a potenza di due valori a < b Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore del valore a destra a <= b Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore o uguale del valore a destra a <> b Confronta due valori e pone a 1 se essi non sono uguali a = b Confronta due valori e pone a 1 se essi sono uguali. a != b a and b are not equal a > b Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore del valore a destra a >= b Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore o uguale del valore a destra. a ~ b Esegue un'espressione regolare su di una stringa. || Unisce due valori assieme in una stringa. Se uno dei valori \u00e8 NULL il risultato sar\u00e0 NULL. Vedi la funzione CONCAT con caratteristiche differenti. \u2018\\n\u2019 Inserisce una nuova linea LIKE Restituisce 1 se il primo parametro soddisfa il modello fornito. Funziona anche con i numeri ILIKE Restituisce 1 se il primo parametro soddisfa senza tener conto delle maiuscole o minuscole il modello fornito. LIKE pu\u00f2 essere usato al posto di ILIKE per eseguire una comparazione che tenga conto delle maiuscole e minuscole. Funziona anche con i numeri a IS b Restituisce 1 se a \u00e8 uguale a b . a OR b Restituisce 1 quando la condizione a oppure b \u00e8 vera a AND b Restituisce 1 quando le condizioni a e b sono vere. NOT Nega una condizione \"column\" nome \"nome colonna\" nome della colonna del campo, fare attenzione a non confondere con la citazione semplice, vedere sotto \u2018string\u2019 un valore stringa, fare attenzione a non confondere con virgolette doppie, vedi sopra NULL null value a IS NULL a non \u00e8 valorizzato a IS NOT NULL a \u00e8 valorizzato a IN (a,b,..) Restituisce 1 se il valore viene trovato in una lista di valori a NOT IN (value[,value]) a non \u00e8 presente nella lista","title":"Operatori"},{"location":"gr_funzioni/operatori/operatori/#operatori","text":"Questo gruppo contiene operatori es. + - * Funzione Descrizione a + b Addizione di due valori a - b Sottrazione di due valori. a * b Moltiplicazione di due valori a / b Divisione di due valori a % b Resto della divisione a ^ b Elevazione a potenza di due valori a < b Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore del valore a destra a <= b Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore o uguale del valore a destra a <> b Confronta due valori e pone a 1 se essi non sono uguali a = b Confronta due valori e pone a 1 se essi sono uguali. a != b a and b are not equal a > b Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore del valore a destra a >= b Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore o uguale del valore a destra. a ~ b Esegue un'espressione regolare su di una stringa. || Unisce due valori assieme in una stringa. Se uno dei valori \u00e8 NULL il risultato sar\u00e0 NULL. Vedi la funzione CONCAT con caratteristiche differenti. \u2018\\n\u2019 Inserisce una nuova linea LIKE Restituisce 1 se il primo parametro soddisfa il modello fornito. Funziona anche con i numeri ILIKE Restituisce 1 se il primo parametro soddisfa senza tener conto delle maiuscole o minuscole il modello fornito. LIKE pu\u00f2 essere usato al posto di ILIKE per eseguire una comparazione che tenga conto delle maiuscole e minuscole. Funziona anche con i numeri a IS b Restituisce 1 se a \u00e8 uguale a b . a OR b Restituisce 1 quando la condizione a oppure b \u00e8 vera a AND b Restituisce 1 quando le condizioni a e b sono vere. NOT Nega una condizione \"column\" nome \"nome colonna\" nome della colonna del campo, fare attenzione a non confondere con la citazione semplice, vedere sotto \u2018string\u2019 un valore stringa, fare attenzione a non confondere con virgolette doppie, vedi sopra NULL null value a IS NULL a non \u00e8 valorizzato a IS NOT NULL a \u00e8 valorizzato a IN (a,b,..) Restituisce 1 se il valore viene trovato in una lista di valori a NOT IN (value[,value]) a non \u00e8 presente nella lista","title":"Operatori"},{"location":"gr_funzioni/operatori/operatori_unico/","text":"Gruppo Operatori \u21b5 Abstract Questo gruppo contiene operatori es. + - * AND \u21b5 Restituisce 1 quando le condizioni a e b sono vere. Sintassi: a AND b Argomenti: a condizione b condizione Esempi: TRUE AND TRUE \u2192 1 TRUE AND FALSE \u2192 0 4 = 2+2 AND 1 = 1 \u2192 1 4 = 2+2 AND 1 = 2 \u2192 0 Osservazioni: 1 significa Vero 0 significa falso <> (diverso) \u21b5 Confronta due valori e pone a 1 se essi non sono uguali. Sintassi: a <> b Argomenti: a valore b valore Esempi: 5 <> 4 \u2192 1 4 <> 4 \u2192 0 5 <> NULL \u2192 NULL NULL <> NULL \u2192 NULL Osservazioni: 1 significa Vero 0 significa falso / (diviso) \u21b5 Divisione di due valori. Sintassi: a / b Argomenti: a valore b valore Esempi: 5 / 4 \u2192 1.25 5 / NULL \u2192 NULL NULL / 5 \u2192 NULL || (doppio pipe) \u21b5 Unisce due valori assieme in una stringa. Se uno dei valori \u00e8 NULL il risultato sar\u00e0 NULL. Vedi la funzione CONCAT con caratteristiche differenti. Sintassi: a || b Argomenti: a valore b valore Esempi: 'Qui' || ' e ' || 'l\u00e0' \u2192 'Qui e l\u00e0' 'Nothing' || NULL \u2192 NULL 'Dia: ' || \"Diameter\" \u2192 'Dia: 25' (\"Diameter\" - un campo tabella attributi) 1 || 2 \u2192 '12' Osservazioni: Puoi concatenare stringhe usando || o + . Quest'ultimo significa anche somma nelle espressioni. Quindi se hai un intero (campo o valore numerico) questo pu\u00f2 essere soggetto a errori. In questo caso, dovresti usare || . Se si concatenano due valori stringa, \u00e8 possibile utilizzare entrambi. ILIKE \u21b5 Restituisce 1 se il primo parametro soddisfa senza tener conto delle maiuscole o minuscole il modello fornito. LIKE pu\u00f2 essere usato al posto di ILIKE per eseguire una comparazione che tenga conto delle maiuscole e minuscole. Funziona anche con i numeri. Sintassi: string/number ILIKE pattern Argomenti: string/number stringa da cercare pattern pattern di ricerca, puoi usare '%' come carattere jolly, '_' come un singolo carattere e '\\' per eseguire l'escape. Esempi: 'A' ILIKE 'A' \u2192 1 'A' ILIKE 'a' \u2192 1 'A' ILIKE 'B' \u2192 0 'ABC' ILIKE 'b' \u2192 0 'ABC' ILIKE 'B' \u2192 0 'ABC' ILIKE '_b_' \u2192 1 'ABC' ILIKE '_B_' \u2192 1 'ABCD' ILIKE '_b_' \u2192 0 'ABCD' ILIKE '_B_' \u2192 0 'ABCD' ILIKE '_b%' \u2192 1 'ABCD' ILIKE '_B%' \u2192 1 'ABCD' ILIKE '%b%' \u2192 1 'ABCD' ILIKE '%B%' \u2192 1 Osservazioni: 1 significa Vero 0 significa falso IN \u21b5 Restituisce 1 se il valore viene trovato in una lista di valori. Sintassi: a IN_ b _ Argomenti: a valore b lista di valori Esempi: 'A' IN ('A','B') \u2192 1 'A' IN ('C','B') \u2192 0 Osservazioni: La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso IS \u21b5 Restituisce 1 se a \u00e8 uguale a b . Sintassi: a IS b Argomenti: a qualsiasi valore b qualsiasi valore Esempi: 'A' IS 'A' \u2192 1 *'A' IS 'a' \u2192 0 4 IS 4 \u2192 1 4 IS 2+2 \u2192 1 4 IS 2 \u2192 0 $geometry IS NULL \u2192 0, se la tua geometria non \u00e8 NULL Osservazioni: La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso IS NOT \u21b5 Restituisce 1 se a non \u00e8 uguale a b. Sintassi: Sintassi: a IS NOT b Argomenti: a valore b valore Esempi: 'a' IS NOT 'b' \u2192 1 'a' IS NOT 'a' \u2192 0 4 IS NOT 2+2 \u2192 0 LIKE \u21b5 Restituisce 1 se il primo parametro soddisfa il modello fornito. Funziona anche con i numeri. Sintassi: string/number LIKE pattern Argomenti: string/number valore pattern pattern con cui confrontare il valore, puoi usare '%' come carattere jolly, '_' come un singolo carattere e '\\' per eseguire l'escape. Esempi: 'A' LIKE 'A' \u2192 1 'A' LIKE 'a' \u2192 0 'A' LIKE 'B' \u2192 0 'ABC' LIKE 'B' \u2192 0 'ABC' LIKE '_B_' \u2192 1 'ABCD' LIKE '_B_' \u2192 0 'ABCD' LIKE '_B%' \u2192 1 'ABCD' LIKE '%B%' \u2192 1 '1%' LIKE '1\\%' \u2192 1 '1_' LIKE '1\\%' \u2192 0 Osservazioni: La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso > (maggiore) \u21b5 Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore del valore a destra. Sintassi: a > b Argomenti: a valore b valore Esempi: 5 > 4 \u2192 1 5 > 5 \u2192 0 4 > 5 \u2192 0 Osservazioni: 1 significa Vero 0 significa falso >= (maggiore uguale) \u21b5 Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore o uguale del valore a destra. Sintassi: a >= b Argomenti: a valore b valore Esempi: 5 >= 4 \u2192 1 5 >= 5 \u2192 1 4 >= 5 \u2192 0 Osservazioni: 1 significa Vero 0 significa falso Operatore - (meno) \u21b5 Sottrazione di due valori. Se uno dei due valori \u00e8 NULL il risultato sar\u00e0 NULL. Sintassi a - b Argomenti: a valore b valore Esempi: 5 - 4 \u2192 1 5 - NULL \u2192 NULL to_datetime('2012-05-05 12:00:00') - to_interval('1 day 2 hours') \u2192 2012-05-04T10:00:00 < (minore) \u21b5 Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore del valore a destra. Sintassi: a < b Argomenti: a valore b valore Esempi: 5 < 4 \u2192 0 5 < 5 \u2192 0 4 < 5 \u2192 1 Osservazioni: 1 significa Vero 0 significa falso <= (minore uguale) \u21b5 Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore o uguale del valore a destra. Sintassi: a <= b Argomenti: a valore b valore Esempi: 5 <= 4 \u2192 0 5 <= 5 \u2192 1 4 <= 5 \u2192 1 Osservazioni: 1 significa Vero 0 significa falso NOT \u21b5 Nega una condizione. Sintassi NOT a Argomenti: a Esempi: NOT 1 \u2192 0 NOT 0 \u2192 1 Osservazioni: 1 significa Vero 0 significa falso OR \u21b5 Restituisce 1 quando la condizione a oppure b \u00e8 vera. Sintassi a OR b Argomenti: a condizione b condizione Esempi: 4 = 2+2 OR 1 = 1 \u2192 1 4 = 2+2 OR 1 = 2 \u2192 1 4 = 2 OR 1 = 2 \u2192 0 Osservazioni: 1 significa Vero 0 significa falso [] Indice operatore \u21b5 Restituisce un elemento da un array o valore mappa. Sintassi: [] index Argomenti: index indice array o valore chiave della mappa Esempi: array(1,2,3)[0] \u2192 1 array(1,2,3)[2] \u2192 3 array(1,2,3)[-1] \u2192 3 map('a',1,'b',2)['a'] \u2192 1 map('a',1,'b',2)['b'] \u2192 2 ^ (potenza) \u21b5 Elevazione a potenza di due valori. Sintassi: a ^ b Argomenti: a valore b valore Esempi: 5 ^ 4 \u2192 625 5 ^ NULL \u2192 NULL NULL ^ 5 \u2192 NULL -- * (prodotto) \u21b5 Moltiplicazione di due valori. Sintassi a * b Argomenti: a valore b valore Esempi: 5 * 4 \u2192 20 5 NULL \u2192 NULL NULL 5 \u2192 NULL % (resto divisione) \u21b5 Resto della divisione. In aritmetica il resto \u00e8 la quantit\u00e0 di *dividendoche \u00e8 avanzata dalla divisione, cio\u00e8 quella quantit\u00e0 che non \u00e8 stata possibile dividere per il divisore affinch\u00e9 il risultato rimanga nell'insieme dei numeri interi . Per definizione: Il resto di una divisione denota la quantit\u00e0 da sottrarre a un dividendo al fine di renderlo divisibile per un divisore. Sintassi a % b Argomenti: a valore b valore Esempio: 17 : 2 = 8 resto 1 Sottraendo a 17 il resto di 1 si ottiene 16, numero divisibile per due (la cui met\u00e0 \u00e8 8). Nella divisione tra 17 e 2, va tenuto da parte il resto, ossia quel numero che, se diviso, farebbe rientrare il risultato in un altro insieme numerico. Il resto di una divisione denota la quantit\u00e0 da sottrarre a un dividendo al fine di renderlo divisibile per un divisore. Esempi: 5 % 4 \u2192 1 5 % NULL \u2192 NULL NULL % 5 \u2192 NULL Altri esempi: Un esempio molto utile nel campo GIS riguarda l'etichettatura curve di livello: supponiamo di voler etichettare le curve di livello (con passo 50 m) e visualizzare solo le etichette con passo 200 m, l'espressione da usare \u00e8 la seguente: CASE WHEN ( \"ELEV\" % 200 ) = 0 THEN \"ELEV\" END ecco il risultato: PRIMA: DOPO: + (somma) \u21b5 Addizione di due valori. Se uno dei due valori \u00e8 NULL il risultato sar\u00e0 NULL. Sintassi a + b Argomenti: a valore b valore Esempi: 5 + 4 \u2192 9 5 + NULL \u2192 NULL 'QGIS ' + 'ROCKS' \u2192 'QGIS ROCKS' to_datetime('2020-08-01 12:00:00') + '1 day 2 hours' \u2192 2020-08-02T14:00:00 Osservazioni: Puoi concatenare stringhe usando || o + . Quest'ultimo significa anche somma nelle espressioni. Quindi se hai un intero (campo o valore numerico) questo pu\u00f2 essere soggetto a errori. In questo caso, dovresti usare || . Se si concatenano due valori stringa, \u00e8 possibile utilizzare entrambi. ~ (tilde) \u21b5 Esegue un'espressione regolare su di una stringa. Sintassi a ~ regex Argomenti: string Un valore stringa regex Un'espressione regolare. Le slash devono essere precedute da caratteri di escape, es. \\\\d Esempi: 'hello' ~ 'll' \u2192 1 'hello' ~ '^ll' \u2192 0 'hello' ~ 'llo$' \u2192 1 = (uguale) \u21b5 Confronta due valori e pone a 1 se essi sono uguali. Sintassi a = b Argomenti: a valore b valore Esempi: 5 = 4 \u2192 0 4 = 4 \u2192 1 5 = NULL \u2192 NULL NULL = NULL \u2192 NULL Osservazioni: 1 significa Vero 0 significa falso","title":"Operatori"},{"location":"gr_funzioni/operatori/operatori_unico/#gruppo-operatori","text":"Abstract Questo gruppo contiene operatori es. + - *","title":"Gruppo Operatori"},{"location":"gr_funzioni/operatori/operatori_unico/#and","text":"Restituisce 1 quando le condizioni a e b sono vere. Sintassi: a AND b Argomenti: a condizione b condizione Esempi: TRUE AND TRUE \u2192 1 TRUE AND FALSE \u2192 0 4 = 2+2 AND 1 = 1 \u2192 1 4 = 2+2 AND 1 = 2 \u2192 0 Osservazioni: 1 significa Vero 0 significa falso","title":"AND"},{"location":"gr_funzioni/operatori/operatori_unico/#diverso","text":"Confronta due valori e pone a 1 se essi non sono uguali. Sintassi: a <> b Argomenti: a valore b valore Esempi: 5 <> 4 \u2192 1 4 <> 4 \u2192 0 5 <> NULL \u2192 NULL NULL <> NULL \u2192 NULL Osservazioni: 1 significa Vero 0 significa falso","title":"&lt;&gt; (diverso)"},{"location":"gr_funzioni/operatori/operatori_unico/#diviso","text":"Divisione di due valori. Sintassi: a / b Argomenti: a valore b valore Esempi: 5 / 4 \u2192 1.25 5 / NULL \u2192 NULL NULL / 5 \u2192 NULL","title":"/ (diviso)"},{"location":"gr_funzioni/operatori/operatori_unico/#doppio-pipe","text":"Unisce due valori assieme in una stringa. Se uno dei valori \u00e8 NULL il risultato sar\u00e0 NULL. Vedi la funzione CONCAT con caratteristiche differenti. Sintassi: a || b Argomenti: a valore b valore Esempi: 'Qui' || ' e ' || 'l\u00e0' \u2192 'Qui e l\u00e0' 'Nothing' || NULL \u2192 NULL 'Dia: ' || \"Diameter\" \u2192 'Dia: 25' (\"Diameter\" - un campo tabella attributi) 1 || 2 \u2192 '12' Osservazioni: Puoi concatenare stringhe usando || o + . Quest'ultimo significa anche somma nelle espressioni. Quindi se hai un intero (campo o valore numerico) questo pu\u00f2 essere soggetto a errori. In questo caso, dovresti usare || . Se si concatenano due valori stringa, \u00e8 possibile utilizzare entrambi.","title":"|| (doppio pipe)"},{"location":"gr_funzioni/operatori/operatori_unico/#ilike","text":"Restituisce 1 se il primo parametro soddisfa senza tener conto delle maiuscole o minuscole il modello fornito. LIKE pu\u00f2 essere usato al posto di ILIKE per eseguire una comparazione che tenga conto delle maiuscole e minuscole. Funziona anche con i numeri. Sintassi: string/number ILIKE pattern Argomenti: string/number stringa da cercare pattern pattern di ricerca, puoi usare '%' come carattere jolly, '_' come un singolo carattere e '\\' per eseguire l'escape. Esempi: 'A' ILIKE 'A' \u2192 1 'A' ILIKE 'a' \u2192 1 'A' ILIKE 'B' \u2192 0 'ABC' ILIKE 'b' \u2192 0 'ABC' ILIKE 'B' \u2192 0 'ABC' ILIKE '_b_' \u2192 1 'ABC' ILIKE '_B_' \u2192 1 'ABCD' ILIKE '_b_' \u2192 0 'ABCD' ILIKE '_B_' \u2192 0 'ABCD' ILIKE '_b%' \u2192 1 'ABCD' ILIKE '_B%' \u2192 1 'ABCD' ILIKE '%b%' \u2192 1 'ABCD' ILIKE '%B%' \u2192 1 Osservazioni: 1 significa Vero 0 significa falso","title":"ILIKE"},{"location":"gr_funzioni/operatori/operatori_unico/#in","text":"Restituisce 1 se il valore viene trovato in una lista di valori. Sintassi: a IN_ b _ Argomenti: a valore b lista di valori Esempi: 'A' IN ('A','B') \u2192 1 'A' IN ('C','B') \u2192 0 Osservazioni: La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso","title":"IN"},{"location":"gr_funzioni/operatori/operatori_unico/#is","text":"Restituisce 1 se a \u00e8 uguale a b . Sintassi: a IS b Argomenti: a qualsiasi valore b qualsiasi valore Esempi: 'A' IS 'A' \u2192 1 *'A' IS 'a' \u2192 0 4 IS 4 \u2192 1 4 IS 2+2 \u2192 1 4 IS 2 \u2192 0 $geometry IS NULL \u2192 0, se la tua geometria non \u00e8 NULL Osservazioni: La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso","title":"IS"},{"location":"gr_funzioni/operatori/operatori_unico/#is-not","text":"Restituisce 1 se a non \u00e8 uguale a b. Sintassi: Sintassi: a IS NOT b Argomenti: a valore b valore Esempi: 'a' IS NOT 'b' \u2192 1 'a' IS NOT 'a' \u2192 0 4 IS NOT 2+2 \u2192 0","title":"IS NOT"},{"location":"gr_funzioni/operatori/operatori_unico/#like","text":"Restituisce 1 se il primo parametro soddisfa il modello fornito. Funziona anche con i numeri. Sintassi: string/number LIKE pattern Argomenti: string/number valore pattern pattern con cui confrontare il valore, puoi usare '%' come carattere jolly, '_' come un singolo carattere e '\\' per eseguire l'escape. Esempi: 'A' LIKE 'A' \u2192 1 'A' LIKE 'a' \u2192 0 'A' LIKE 'B' \u2192 0 'ABC' LIKE 'B' \u2192 0 'ABC' LIKE '_B_' \u2192 1 'ABCD' LIKE '_B_' \u2192 0 'ABCD' LIKE '_B%' \u2192 1 'ABCD' LIKE '%B%' \u2192 1 '1%' LIKE '1\\%' \u2192 1 '1_' LIKE '1\\%' \u2192 0 Osservazioni: La funzione distingue maiuscolo dal minuscolo!!! 1 significa Vero 0 significa falso","title":"LIKE"},{"location":"gr_funzioni/operatori/operatori_unico/#maggiore","text":"Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore del valore a destra. Sintassi: a > b Argomenti: a valore b valore Esempi: 5 > 4 \u2192 1 5 > 5 \u2192 0 4 > 5 \u2192 0 Osservazioni: 1 significa Vero 0 significa falso","title":"&gt; (maggiore)"},{"location":"gr_funzioni/operatori/operatori_unico/#maggiore-uguale","text":"Confronta due valori e pone a 1 se il valore a sinistra \u00e8 maggiore o uguale del valore a destra. Sintassi: a >= b Argomenti: a valore b valore Esempi: 5 >= 4 \u2192 1 5 >= 5 \u2192 1 4 >= 5 \u2192 0 Osservazioni: 1 significa Vero 0 significa falso","title":"&gt;= (maggiore uguale)"},{"location":"gr_funzioni/operatori/operatori_unico/#operatore-meno","text":"Sottrazione di due valori. Se uno dei due valori \u00e8 NULL il risultato sar\u00e0 NULL. Sintassi a - b Argomenti: a valore b valore Esempi: 5 - 4 \u2192 1 5 - NULL \u2192 NULL to_datetime('2012-05-05 12:00:00') - to_interval('1 day 2 hours') \u2192 2012-05-04T10:00:00","title":"Operatore - (meno)"},{"location":"gr_funzioni/operatori/operatori_unico/#minore","text":"Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore del valore a destra. Sintassi: a < b Argomenti: a valore b valore Esempi: 5 < 4 \u2192 0 5 < 5 \u2192 0 4 < 5 \u2192 1 Osservazioni: 1 significa Vero 0 significa falso","title":"&lt; (minore)"},{"location":"gr_funzioni/operatori/operatori_unico/#minore-uguale","text":"Confronta due valori e pone a 1 se il valore a sinistra \u00e8 minore o uguale del valore a destra. Sintassi: a <= b Argomenti: a valore b valore Esempi: 5 <= 4 \u2192 0 5 <= 5 \u2192 1 4 <= 5 \u2192 1 Osservazioni: 1 significa Vero 0 significa falso","title":"&lt;= (minore uguale)"},{"location":"gr_funzioni/operatori/operatori_unico/#not","text":"Nega una condizione. Sintassi NOT a Argomenti: a Esempi: NOT 1 \u2192 0 NOT 0 \u2192 1 Osservazioni: 1 significa Vero 0 significa falso","title":"NOT"},{"location":"gr_funzioni/operatori/operatori_unico/#or","text":"Restituisce 1 quando la condizione a oppure b \u00e8 vera. Sintassi a OR b Argomenti: a condizione b condizione Esempi: 4 = 2+2 OR 1 = 1 \u2192 1 4 = 2+2 OR 1 = 2 \u2192 1 4 = 2 OR 1 = 2 \u2192 0 Osservazioni: 1 significa Vero 0 significa falso","title":"OR"},{"location":"gr_funzioni/operatori/operatori_unico/#indice-operatore","text":"Restituisce un elemento da un array o valore mappa. Sintassi: [] index Argomenti: index indice array o valore chiave della mappa Esempi: array(1,2,3)[0] \u2192 1 array(1,2,3)[2] \u2192 3 array(1,2,3)[-1] \u2192 3 map('a',1,'b',2)['a'] \u2192 1 map('a',1,'b',2)['b'] \u2192 2","title":"[] Indice operatore"},{"location":"gr_funzioni/operatori/operatori_unico/#potenza","text":"Elevazione a potenza di due valori. Sintassi: a ^ b Argomenti: a valore b valore Esempi: 5 ^ 4 \u2192 625 5 ^ NULL \u2192 NULL NULL ^ 5 \u2192 NULL --","title":"^ (potenza)"},{"location":"gr_funzioni/operatori/operatori_unico/#prodotto","text":"Moltiplicazione di due valori. Sintassi a * b Argomenti: a valore b valore Esempi: 5 * 4 \u2192 20 5 NULL \u2192 NULL NULL 5 \u2192 NULL","title":"* (prodotto)"},{"location":"gr_funzioni/operatori/operatori_unico/#resto-divisione","text":"Resto della divisione. In aritmetica il resto \u00e8 la quantit\u00e0 di *dividendoche \u00e8 avanzata dalla divisione, cio\u00e8 quella quantit\u00e0 che non \u00e8 stata possibile dividere per il divisore affinch\u00e9 il risultato rimanga nell'insieme dei numeri interi . Per definizione: Il resto di una divisione denota la quantit\u00e0 da sottrarre a un dividendo al fine di renderlo divisibile per un divisore. Sintassi a % b Argomenti: a valore b valore Esempio: 17 : 2 = 8 resto 1 Sottraendo a 17 il resto di 1 si ottiene 16, numero divisibile per due (la cui met\u00e0 \u00e8 8). Nella divisione tra 17 e 2, va tenuto da parte il resto, ossia quel numero che, se diviso, farebbe rientrare il risultato in un altro insieme numerico. Il resto di una divisione denota la quantit\u00e0 da sottrarre a un dividendo al fine di renderlo divisibile per un divisore. Esempi: 5 % 4 \u2192 1 5 % NULL \u2192 NULL NULL % 5 \u2192 NULL Altri esempi: Un esempio molto utile nel campo GIS riguarda l'etichettatura curve di livello: supponiamo di voler etichettare le curve di livello (con passo 50 m) e visualizzare solo le etichette con passo 200 m, l'espressione da usare \u00e8 la seguente: CASE WHEN ( \"ELEV\" % 200 ) = 0 THEN \"ELEV\" END ecco il risultato: PRIMA: DOPO:","title":"% (resto divisione)"},{"location":"gr_funzioni/operatori/operatori_unico/#somma","text":"Addizione di due valori. Se uno dei due valori \u00e8 NULL il risultato sar\u00e0 NULL. Sintassi a + b Argomenti: a valore b valore Esempi: 5 + 4 \u2192 9 5 + NULL \u2192 NULL 'QGIS ' + 'ROCKS' \u2192 'QGIS ROCKS' to_datetime('2020-08-01 12:00:00') + '1 day 2 hours' \u2192 2020-08-02T14:00:00 Osservazioni: Puoi concatenare stringhe usando || o + . Quest'ultimo significa anche somma nelle espressioni. Quindi se hai un intero (campo o valore numerico) questo pu\u00f2 essere soggetto a errori. In questo caso, dovresti usare || . Se si concatenano due valori stringa, \u00e8 possibile utilizzare entrambi.","title":"+ (somma)"},{"location":"gr_funzioni/operatori/operatori_unico/#tilde","text":"Esegue un'espressione regolare su di una stringa. Sintassi a ~ regex Argomenti: string Un valore stringa regex Un'espressione regolare. Le slash devono essere precedute da caratteri di escape, es. \\\\d Esempi: 'hello' ~ 'll' \u2192 1 'hello' ~ '^ll' \u2192 0 'hello' ~ 'llo$' \u2192 1","title":"~ (tilde)"},{"location":"gr_funzioni/operatori/operatori_unico/#uguale","text":"Confronta due valori e pone a 1 se essi sono uguali. Sintassi a = b Argomenti: a valore b valore Esempi: 5 = 4 \u2192 0 4 = 4 \u2192 1 5 = NULL \u2192 NULL NULL = NULL \u2192 NULL Osservazioni: 1 significa Vero 0 significa falso","title":"= (uguale)"},{"location":"gr_funzioni/operatori/or/","text":"Operatore OR \u21b5 Restituisce 1 quando la condizione a oppure b \u00e8 vera. Esempi \u21b5 * 4 = 2+2 OR 1 = 1 \u2192 1 * 4 = 2+2 OR 1 = 2 \u2192 1 * 4 = 2 OR 1 = 2 \u2192 0 Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore OR"},{"location":"gr_funzioni/operatori/or/#operatore-or","text":"Restituisce 1 quando la condizione a oppure b \u00e8 vera.","title":"Operatore OR"},{"location":"gr_funzioni/operatori/or/#esempi","text":"* 4 = 2+2 OR 1 = 1 \u2192 1 * 4 = 2+2 OR 1 = 2 \u2192 1 * 4 = 2 OR 1 = 2 \u2192 0","title":"Esempi"},{"location":"gr_funzioni/operatori/or/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/operatori/potenza/","text":"Operatore ^ (potenza) \u21b5 Elevazione a potenza di due valori. Esempi \u21b5 * 5 ^ 4 \u2192 625 * 5 ^ NULL \u2192 NULL * NULL ^ 5 \u2192 NULL Osservazioni \u21b5 --","title":"Operatore ^ (potenza)"},{"location":"gr_funzioni/operatori/potenza/#operatore-potenza","text":"Elevazione a potenza di due valori.","title":"Operatore ^ (potenza)"},{"location":"gr_funzioni/operatori/potenza/#esempi","text":"* 5 ^ 4 \u2192 625 * 5 ^ NULL \u2192 NULL * NULL ^ 5 \u2192 NULL","title":"Esempi"},{"location":"gr_funzioni/operatori/potenza/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/operatori/prodotto/","text":"Operatore * (prodotto) \u21b5 Moltiplicazione di due valori. Esempi \u21b5 * 5 * 4 \u2192 20 * 5 * NULL \u2192 NULL * NULL * 5 \u2192 NULL Osservazioni \u21b5 --","title":"Operatore * (prodotto)"},{"location":"gr_funzioni/operatori/prodotto/#operatore-prodotto","text":"Moltiplicazione di due valori.","title":"Operatore * (prodotto)"},{"location":"gr_funzioni/operatori/prodotto/#esempi","text":"* 5 * 4 \u2192 20 * 5 * NULL \u2192 NULL * NULL * 5 \u2192 NULL","title":"Esempi"},{"location":"gr_funzioni/operatori/prodotto/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/operatori/resto_divisione/","text":"Operatore % (resto) \u21b5 Resto della divisione. In aritmetica il resto \u00e8 la quantit\u00e0 di dividendo che \u00e8 avanzata dalla divisione, cio\u00e8 quella quantit\u00e0 che non \u00e8 stata possibile dividere per il divisore affinch\u00e9 il risultato rimanga nell'insieme dei numeri interi . Per definizione: Il resto di una divisione denota la quantit\u00e0 da sottrarre a un dividendo al fine di renderlo divisibile per un divisore. Esempio: 17 : 2 = 8 resto 1 Sottraendo a 17 il resto di 1 si ottiene 16, numero divisibile per due (la cui met\u00e0 \u00e8 8). Nella divisione tra 17 e 2, va tenuto da parte il resto, ossia quel numero che, se diviso, farebbe rientrare il risultato in un altro insieme numerico. Il resto di una divisione denota la quantit\u00e0 da sottrarre a un dividendo al fine di renderlo divisibile per un divisore. Esempi \u21b5 * 5 % 4 \u2192 1 * 5 % NULL \u2192 NULL * NULL % 5 \u2192 NULL Osservazioni \u21b5 -- Altri esempi \u21b5 Un esempio molto utile nel campo GIS riguarda l'etichettatura curve di livello: supponiamo di voler etichettare le curve di livello (con passo 50 m) e visualizzare solo le etichette con passo 200 m, l'espressione da usare \u00e8 la seguente: CASE WHEN ( \"ELEV\" % 200 ) = 0 THEN \"ELEV\" END ecco il risultato: PRIMA: DOPO:","title":"Operatore % (resto)"},{"location":"gr_funzioni/operatori/resto_divisione/#operatore-resto","text":"Resto della divisione. In aritmetica il resto \u00e8 la quantit\u00e0 di dividendo che \u00e8 avanzata dalla divisione, cio\u00e8 quella quantit\u00e0 che non \u00e8 stata possibile dividere per il divisore affinch\u00e9 il risultato rimanga nell'insieme dei numeri interi . Per definizione: Il resto di una divisione denota la quantit\u00e0 da sottrarre a un dividendo al fine di renderlo divisibile per un divisore. Esempio: 17 : 2 = 8 resto 1 Sottraendo a 17 il resto di 1 si ottiene 16, numero divisibile per due (la cui met\u00e0 \u00e8 8). Nella divisione tra 17 e 2, va tenuto da parte il resto, ossia quel numero che, se diviso, farebbe rientrare il risultato in un altro insieme numerico. Il resto di una divisione denota la quantit\u00e0 da sottrarre a un dividendo al fine di renderlo divisibile per un divisore.","title":"Operatore % (resto)"},{"location":"gr_funzioni/operatori/resto_divisione/#esempi","text":"* 5 % 4 \u2192 1 * 5 % NULL \u2192 NULL * NULL % 5 \u2192 NULL","title":"Esempi"},{"location":"gr_funzioni/operatori/resto_divisione/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/operatori/resto_divisione/#altri-esempi","text":"Un esempio molto utile nel campo GIS riguarda l'etichettatura curve di livello: supponiamo di voler etichettare le curve di livello (con passo 50 m) e visualizzare solo le etichette con passo 200 m, l'espressione da usare \u00e8 la seguente: CASE WHEN ( \"ELEV\" % 200 ) = 0 THEN \"ELEV\" END ecco il risultato: PRIMA: DOPO:","title":"Altri esempi"},{"location":"gr_funzioni/operatori/somma/","text":"Operatore (somma) \u21b5 Addizione di due valori. Se uno dei due valori \u00e8 NULL il risultato sar\u00e0 NULL. Esempi \u21b5 5 + 4 \u2192 9 5 + NULL \u2192 NULL Osservazioni \u21b5 Puoi concatenare stringhe usando || o +. Quest'ultimo significa anche somma nelle espressioni. Quindi se hai un intero (campo o valore numerico) questo pu\u00f2 essere soggetto a errori. In questo caso, dovresti usare ||. Se si concatenano due valori stringa, \u00e8 possibile utilizzare entrambi.","title":"Operatore  (somma)"},{"location":"gr_funzioni/operatori/somma/#operatore-somma","text":"Addizione di due valori. Se uno dei due valori \u00e8 NULL il risultato sar\u00e0 NULL.","title":"Operatore  (somma)"},{"location":"gr_funzioni/operatori/somma/#esempi","text":"5 + 4 \u2192 9 5 + NULL \u2192 NULL","title":"Esempi"},{"location":"gr_funzioni/operatori/somma/#osservazioni","text":"Puoi concatenare stringhe usando || o +. Quest'ultimo significa anche somma nelle espressioni. Quindi se hai un intero (campo o valore numerico) questo pu\u00f2 essere soggetto a errori. In questo caso, dovresti usare ||. Se si concatenano due valori stringa, \u00e8 possibile utilizzare entrambi.","title":"Osservazioni"},{"location":"gr_funzioni/operatori/tilde/","text":"Operatore ~ (tilde) \u21b5 Esegue un'espressione regolare su di una stringa. Esempi \u21b5 * 'hello' ~ 'll' \u2192 1 * 'hello' ~ '^ll' \u2192 0 * 'hello' ~ 'llo$' \u2192 1 Osservazioni \u21b5 --","title":"Operatore ~ (tilde)"},{"location":"gr_funzioni/operatori/tilde/#operatore-tilde","text":"Esegue un'espressione regolare su di una stringa.","title":"Operatore ~ (tilde)"},{"location":"gr_funzioni/operatori/tilde/#esempi","text":"* 'hello' ~ 'll' \u2192 1 * 'hello' ~ '^ll' \u2192 0 * 'hello' ~ 'llo$' \u2192 1","title":"Esempi"},{"location":"gr_funzioni/operatori/tilde/#osservazioni","text":"--","title":"Osservazioni"},{"location":"gr_funzioni/operatori/uguale/","text":"Operatore = (uguale) \u21b5 Confronta due valori e pone a 1 se essi sono uguali. Esempi \u21b5 * 5 = 4 \u2192 0 * 4 = 4 \u2192 1 * 5 = NULL \u2192 NULL * NULL = NULL \u2192 NULL Osservazioni \u21b5 1 significa Vero 0 significa falso","title":"Operatore = (uguale)"},{"location":"gr_funzioni/operatori/uguale/#operatore-uguale","text":"Confronta due valori e pone a 1 se essi sono uguali.","title":"Operatore = (uguale)"},{"location":"gr_funzioni/operatori/uguale/#esempi","text":"* 5 = 4 \u2192 0 * 4 = 4 \u2192 1 * 5 = NULL \u2192 NULL * NULL = NULL \u2192 NULL","title":"Esempi"},{"location":"gr_funzioni/operatori/uguale/#osservazioni","text":"1 significa Vero 0 significa falso","title":"Osservazioni"},{"location":"gr_funzioni/raster/raster_unico/","text":"Gruppo Raster \u21b5 Abstract Contiene funzioni che calcolano statistiche e valori raster. raster_statistic \u21b5 Restituisce statistiche da un raster. Sintassi: raster_statistic( layer , band , property ) Argomento: layer una stringa, rappresentante o un nome di un raster o un ID di layer band intero rappresentante il numero di banda dal raster, partendo da 1 property una stringa che indica la propriet\u00e0 da restituire. Opzioni valide sono: min : valore minimo max : valore massimo avg : valore medio (media) stdev : deviazione standard dei valori range : intervallo dei valori (max - min) sum : somma di tutti i valori dal raster Esempi: raster_statistic('lc',1,'avg') \u2192 Valore medio per la banda 1 da un raster layer 'lc' raster_statistic('ac2010',3,'min') \u2192 Valore minimo dalla banda 3 da un layer raster 'ac2010' raster_statistic( 'sicilia_dtm40',1,'max') \u2192 valore massimo del DTM Nota bene Queste statistiche sono riferite sempre a tutto il raster anche se la geometria \u00e8 pi\u00f9 o meno estesa del raster. Nel caso che segue ho popolato il campo raster del vettore punto con il valore max dell'intero DTM raster_value \u21b5 Restituisce il valore raster trovato nel punto fornito. NOVIT\u00c0 QGIS 3.4 OTTOBRE 2018 Sintassi: raster_value( layer , band , point ) Argomento: layer il nome o l'id di un layer raster band il numero della banda da cui campionare il valore point geometria del punto (per geometrie multiparte aventi pi\u00f9 di una parte, verr\u00e0 restituito un valore nullo) Esempi: raster_value( 'DTM_Pescaglia',1,$geometry) \u2192 631.2899169921875 Nota bene Esempi: Animazione raster_value() con pi\u00f9 bande e pi\u00f9 layer espressione usata: 'R ' || raster_value( 'Italia_tinitaly',1, $geometry ) || '-' || 'G ' || raster_value( 'Italia_tinitaly',2, $geometry ) || '-' || 'B ' || raster_value( 'Italia_tinitaly',3, $geometry ) || '-' || 'Z ' || raster_value( 'dtm_20m_32',1, $geometry ) Video demo","title":"Raster"},{"location":"gr_funzioni/raster/raster_unico/#gruppo-raster","text":"Abstract Contiene funzioni che calcolano statistiche e valori raster.","title":"Gruppo Raster"},{"location":"gr_funzioni/raster/raster_unico/#raster_statistic","text":"Restituisce statistiche da un raster. Sintassi: raster_statistic( layer , band , property ) Argomento: layer una stringa, rappresentante o un nome di un raster o un ID di layer band intero rappresentante il numero di banda dal raster, partendo da 1 property una stringa che indica la propriet\u00e0 da restituire. Opzioni valide sono: min : valore minimo max : valore massimo avg : valore medio (media) stdev : deviazione standard dei valori range : intervallo dei valori (max - min) sum : somma di tutti i valori dal raster Esempi: raster_statistic('lc',1,'avg') \u2192 Valore medio per la banda 1 da un raster layer 'lc' raster_statistic('ac2010',3,'min') \u2192 Valore minimo dalla banda 3 da un layer raster 'ac2010' raster_statistic( 'sicilia_dtm40',1,'max') \u2192 valore massimo del DTM Nota bene Queste statistiche sono riferite sempre a tutto il raster anche se la geometria \u00e8 pi\u00f9 o meno estesa del raster. Nel caso che segue ho popolato il campo raster del vettore punto con il valore max dell'intero DTM","title":"raster_statistic"},{"location":"gr_funzioni/raster/raster_unico/#raster_value","text":"Restituisce il valore raster trovato nel punto fornito. NOVIT\u00c0 QGIS 3.4 OTTOBRE 2018 Sintassi: raster_value( layer , band , point ) Argomento: layer il nome o l'id di un layer raster band il numero della banda da cui campionare il valore point geometria del punto (per geometrie multiparte aventi pi\u00f9 di una parte, verr\u00e0 restituito un valore nullo) Esempi: raster_value( 'DTM_Pescaglia',1,$geometry) \u2192 631.2899169921875 Nota bene Esempi: Animazione raster_value() con pi\u00f9 bande e pi\u00f9 layer espressione usata: 'R ' || raster_value( 'Italia_tinitaly',1, $geometry ) || '-' || 'G ' || raster_value( 'Italia_tinitaly',2, $geometry ) || '-' || 'B ' || raster_value( 'Italia_tinitaly',3, $geometry ) || '-' || 'Z ' || raster_value( 'dtm_20m_32',1, $geometry ) Video demo","title":"raster_value"},{"location":"gr_funzioni/rasters/raster_statistic/","text":"raster_statistic \u21b5 Restituisce statistiche da un raster. Sintassi \u21b5 raster_statistic( layer , band , property ) Argomento \u21b5 layer una stringa, rappresentante o un nome di un raster o un ID di layer band intero rappresentante il numero di banda dal raster, partendo da 1 property una stringa che indica la propriet\u00e0 da restituire. Opzioni valide sono: min : valore minimo max : valore massimo avg : valore medio (media) stdev : deviazione standard dei valori range : intervallo dei valori (max - min) sum : somma di tutti i valori dal raster Esempi \u21b5 raster_statistic('lc',1,'avg') \u2192 Valore medio per la banda 1 da un raster layer 'lc' raster_statistic('ac2010',3,'min') \u2192 Valore minimo dalla banda 3 da un layer raster 'ac2010' raster_statistic( 'sicilia_dtm40',1,'max') \u2192 valore massimo del DTM Nota bene \u21b5 Queste statistiche sono riferite sempre a tutto il raster anche se la geometria \u00e8 pi\u00f9 o meno estesa del raster. Nel caso che segue ho popolato il campo raster del vettore punto con il valore max dell'intero DTM","title":"raster_statistic"},{"location":"gr_funzioni/rasters/raster_statistic/#raster_statistic","text":"Restituisce statistiche da un raster.","title":"raster_statistic"},{"location":"gr_funzioni/rasters/raster_statistic/#sintassi","text":"raster_statistic( layer , band , property )","title":"Sintassi"},{"location":"gr_funzioni/rasters/raster_statistic/#argomento","text":"layer una stringa, rappresentante o un nome di un raster o un ID di layer band intero rappresentante il numero di banda dal raster, partendo da 1 property una stringa che indica la propriet\u00e0 da restituire. Opzioni valide sono: min : valore minimo max : valore massimo avg : valore medio (media) stdev : deviazione standard dei valori range : intervallo dei valori (max - min) sum : somma di tutti i valori dal raster","title":"Argomento"},{"location":"gr_funzioni/rasters/raster_statistic/#esempi","text":"raster_statistic('lc',1,'avg') \u2192 Valore medio per la banda 1 da un raster layer 'lc' raster_statistic('ac2010',3,'min') \u2192 Valore minimo dalla banda 3 da un layer raster 'ac2010' raster_statistic( 'sicilia_dtm40',1,'max') \u2192 valore massimo del DTM","title":"Esempi"},{"location":"gr_funzioni/rasters/raster_statistic/#nota-bene","text":"Queste statistiche sono riferite sempre a tutto il raster anche se la geometria \u00e8 pi\u00f9 o meno estesa del raster. Nel caso che segue ho popolato il campo raster del vettore punto con il valore max dell'intero DTM","title":"Nota bene"},{"location":"gr_funzioni/rasters/raster_value/","text":"raster_value \u21b5 Restituisce il valore raster trovato nel punto fornito. NOVIT\u00c0 QGIS 3.4 OTTOBRE 2018 Sintassi \u21b5 raster_value( layer , band , point ) Argomento \u21b5 layer il nome o l'id di un layer raster band il numero della banda da cui campionare il valore point geometria del punto (per geometrie multiparte aventi pi\u00f9 di una parte, verr\u00e0 restituito un valore nullo) Esempi \u21b5 raster_value( 'DTM_Pescaglia',1,$geometry) \u2192 631.2899169921875 Nota bene \u21b5 Esempio \u21b5 Animazione raster_value() con pi\u00f9 bande e pi\u00f9 layer espressione usata: 'R ' || raster_value( 'Italia_tinitaly',1, $geometry ) || '-' || 'G ' || raster_value( 'Italia_tinitaly',2, $geometry ) || '-' || 'B ' || raster_value( 'Italia_tinitaly',3, $geometry ) || '-' || 'Z ' || raster_value( 'dtm_20m_32',1, $geometry ) Video demo","title":"raster_value"},{"location":"gr_funzioni/rasters/raster_value/#raster_value","text":"Restituisce il valore raster trovato nel punto fornito. NOVIT\u00c0 QGIS 3.4 OTTOBRE 2018","title":"raster_value"},{"location":"gr_funzioni/rasters/raster_value/#sintassi","text":"raster_value( layer , band , point )","title":"Sintassi"},{"location":"gr_funzioni/rasters/raster_value/#argomento","text":"layer il nome o l'id di un layer raster band il numero della banda da cui campionare il valore point geometria del punto (per geometrie multiparte aventi pi\u00f9 di una parte, verr\u00e0 restituito un valore nullo)","title":"Argomento"},{"location":"gr_funzioni/rasters/raster_value/#esempi","text":"raster_value( 'DTM_Pescaglia',1,$geometry) \u2192 631.2899169921875","title":"Esempi"},{"location":"gr_funzioni/rasters/raster_value/#nota-bene","text":"","title":"Nota bene"},{"location":"gr_funzioni/rasters/raster_value/#esempio","text":"Animazione raster_value() con pi\u00f9 bande e pi\u00f9 layer espressione usata: 'R ' || raster_value( 'Italia_tinitaly',1, $geometry ) || '-' || 'G ' || raster_value( 'Italia_tinitaly',2, $geometry ) || '-' || 'B ' || raster_value( 'Italia_tinitaly',3, $geometry ) || '-' || 'Z ' || raster_value( 'dtm_20m_32',1, $geometry ) Video demo","title":"Esempio"},{"location":"gr_funzioni/rasters/rasters/","text":"Rasters \u21b5 Funzione Descrizione raster_statistic Restituisce statistiche da un raster raster_value Restituisce il valore raster trovato nel punto fornito Questo gruppo contiene le funzioni da utilizzare con i raster. Gruppo presente dalla >= QGIS 3.4 - La funzione raster_statisc \u00e8 stata spostata qui dal gruppo generale.","title":"Rasters"},{"location":"gr_funzioni/rasters/rasters/#rasters","text":"Funzione Descrizione raster_statistic Restituisce statistiche da un raster raster_value Restituisce il valore raster trovato nel punto fornito Questo gruppo contiene le funzioni da utilizzare con i raster. Gruppo presente dalla >= QGIS 3.4 - La funzione raster_statisc \u00e8 stata spostata qui dal gruppo generale.","title":"Rasters"},{"location":"gr_funzioni/recente/recente/","text":"Recente \u21b5 Abstract Questo gruppo contiene funzioni usate di recente. A seconda del contesto del suo utilizzo (selezione delle funzionalit\u00e0, calcolatrice di campo, generico), qualsiasi espressione applicata viene aggiunta all'elenco corrispondente (fino a venti espressioni), ordinata dalla pi\u00f9 recente alla meno recente. Ci\u00f2 aiuta a recuperare e riapplicare rapidamente qualsiasi espressione utilizzata in precedenza.","title":"Recente"},{"location":"gr_funzioni/recente/recente/#recente","text":"Abstract Questo gruppo contiene funzioni usate di recente. A seconda del contesto del suo utilizzo (selezione delle funzionalit\u00e0, calcolatrice di campo, generico), qualsiasi espressione applicata viene aggiunta all'elenco corrispondente (fino a venti espressioni), ordinata dalla pi\u00f9 recente alla meno recente. Ci\u00f2 aiuta a recuperare e riapplicare rapidamente qualsiasi espressione utilizzata in precedenza.","title":"Recente"},{"location":"gr_funzioni/record_e_attributi/%24currentfeature/","text":"$currentfeature \u21b5 Restituisce l'elemento corrente corrente da valutare. Questo pu\u00f2 essere usato con la funzione 'attribute' per valutare i valori dell'attributo dall'elemento corrente. Sintassi \u21b5 $currentfeature Esempi \u21b5 attribute( $currentfeature, 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente","title":"$currentfeature"},{"location":"gr_funzioni/record_e_attributi/%24currentfeature/#currentfeature","text":"Restituisce l'elemento corrente corrente da valutare. Questo pu\u00f2 essere usato con la funzione 'attribute' per valutare i valori dell'attributo dall'elemento corrente.","title":"$currentfeature"},{"location":"gr_funzioni/record_e_attributi/%24currentfeature/#sintassi","text":"$currentfeature","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/%24currentfeature/#esempi","text":"attribute( $currentfeature, 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/record_e_attributi/%24id/","text":"$id \u21b5 Restituisce l'id geometria della riga corrente. Sintassi \u21b5 $id Esempi \u21b5 $id \u2192 71 Osservazioni \u21b5 Questa funzione inizia sempre da 0 con vettore shapefile da 1 con i database","title":"$id"},{"location":"gr_funzioni/record_e_attributi/%24id/#id","text":"Restituisce l'id geometria della riga corrente.","title":"$id"},{"location":"gr_funzioni/record_e_attributi/%24id/#sintassi","text":"$id","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/%24id/#esempi","text":"$id \u2192 71","title":"Esempi"},{"location":"gr_funzioni/record_e_attributi/%24id/#osservazioni","text":"Questa funzione inizia sempre da 0 con vettore shapefile da 1 con i database","title":"Osservazioni"},{"location":"gr_funzioni/record_e_attributi/attribute/","text":"attribute \u21b5 Restituisce il valore di un attributo specificato da una geometria. Sintassi \u21b5 attribute( feature , attribute_name ) Argomenti \u21b5 feature una geometria attribute_name nome dell'attributo da restituire Esempi \u21b5 * attribute( $currentfeature, 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente","title":"attribute"},{"location":"gr_funzioni/record_e_attributi/attribute/#attribute","text":"Restituisce il valore di un attributo specificato da una geometria.","title":"attribute"},{"location":"gr_funzioni/record_e_attributi/attribute/#sintassi","text":"attribute( feature , attribute_name )","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/attribute/#argomenti","text":"feature una geometria attribute_name nome dell'attributo da restituire","title":"Argomenti"},{"location":"gr_funzioni/record_e_attributi/attribute/#esempi","text":"* attribute( $currentfeature, 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente","title":"Esempi"},{"location":"gr_funzioni/record_e_attributi/attributes/","text":"attributes \u21b5 Restituisce una mappa contenente tutti gli attributi di una feature, con i nomi dei campi come chiavi della mappa. Variante 1 \u21b5 Restituisce una mappa di tutti gli attributi dalla feature corrente. esempio \u21b5 - attributes()['name'] \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente Variante 2 \u21b5 Consente di specificare la feature di destinazione. esempio \u21b5 attributes( @atlas_feature )['name'] \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente dell'atlante Sintassi \u21b5 attributes( feature ) Argomenti \u21b5 feature una geometria","title":"attributes"},{"location":"gr_funzioni/record_e_attributi/attributes/#attributes","text":"Restituisce una mappa contenente tutti gli attributi di una feature, con i nomi dei campi come chiavi della mappa.","title":"attributes"},{"location":"gr_funzioni/record_e_attributi/attributes/#variante-1","text":"Restituisce una mappa di tutti gli attributi dalla feature corrente.","title":"Variante 1"},{"location":"gr_funzioni/record_e_attributi/attributes/#esempio","text":"- attributes()['name'] \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente","title":"esempio"},{"location":"gr_funzioni/record_e_attributi/attributes/#variante-2","text":"Consente di specificare la feature di destinazione.","title":"Variante 2"},{"location":"gr_funzioni/record_e_attributi/attributes/#esempio_1","text":"attributes( @atlas_feature )['name'] \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente dell'atlante","title":"esempio"},{"location":"gr_funzioni/record_e_attributi/attributes/#sintassi","text":"attributes( feature )","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/attributes/#argomenti","text":"feature una geometria","title":"Argomenti"},{"location":"gr_funzioni/record_e_attributi/get_feature/","text":"get_feature \u21b5 Restituisce la prima geometria di un vettore che corrisponde a un determinato valore di attributo. Sintassi \u21b5 get_feature( layer , attribute , value ) Argomenti \u21b5 layer nome vettore o ID attribute nome attributo value valore attributo da far corrispondere Esempi \u21b5 get_feature('streets','name','main st') \u2192 prima geometria trovata nel vettore \"streets\" con valore \"main st\" nel campo \"name\" get_feature( 'streets', 'fid', attribute( $currentfeature, 'name') ) \u2192 Restituisce la prima feature nel layer \"streets\" il cui campo \"fid\" ha lo stesso valore del campo \"nome\" della feature corrente (una sorta di JOIN)","title":"get_feature"},{"location":"gr_funzioni/record_e_attributi/get_feature/#get_feature","text":"Restituisce la prima geometria di un vettore che corrisponde a un determinato valore di attributo.","title":"get_feature"},{"location":"gr_funzioni/record_e_attributi/get_feature/#sintassi","text":"get_feature( layer , attribute , value )","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/get_feature/#argomenti","text":"layer nome vettore o ID attribute nome attributo value valore attributo da far corrispondere","title":"Argomenti"},{"location":"gr_funzioni/record_e_attributi/get_feature/#esempi","text":"get_feature('streets','name','main st') \u2192 prima geometria trovata nel vettore \"streets\" con valore \"main st\" nel campo \"name\" get_feature( 'streets', 'fid', attribute( $currentfeature, 'name') ) \u2192 Restituisce la prima feature nel layer \"streets\" il cui campo \"fid\" ha lo stesso valore del campo \"nome\" della feature corrente (una sorta di JOIN)","title":"Esempi"},{"location":"gr_funzioni/record_e_attributi/get_feature_by_id/","text":"get_feature_by_id \u21b5 Restituisce l'id dell'elemento della riga corrente. Sintassi \u21b5 get_feature_by_id( layer , feature_id ) Argomenti \u21b5 layer layer, nome del layer o id del layer feature_id L'id dell'elemento che deve essere restituito (inizia da 0 per gli shapefile) Esempi \u21b5 et_feature_by_id('streets', 1) \u2192 l'elemento con id 1 nel vettore \"streets\"","title":"get_feature_by_id"},{"location":"gr_funzioni/record_e_attributi/get_feature_by_id/#get_feature_by_id","text":"Restituisce l'id dell'elemento della riga corrente.","title":"get_feature_by_id"},{"location":"gr_funzioni/record_e_attributi/get_feature_by_id/#sintassi","text":"get_feature_by_id( layer , feature_id )","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/get_feature_by_id/#argomenti","text":"layer layer, nome del layer o id del layer feature_id L'id dell'elemento che deve essere restituito (inizia da 0 per gli shapefile)","title":"Argomenti"},{"location":"gr_funzioni/record_e_attributi/get_feature_by_id/#esempi","text":"et_feature_by_id('streets', 1) \u2192 l'elemento con id 1 nel vettore \"streets\"","title":"Esempi"},{"location":"gr_funzioni/record_e_attributi/is_selected/","text":"is_selected \u21b5 Restituisce Vero se \u00e8 selezionata una funzione. Pu\u00f2 essere usato con zero, uno o due argomenti, vedi sotto per i dettagli. Senza parametri \u21b5 Se chiamata senza parametri, la funzione restituir\u00e0 vero se \u00e8 selezionata la feature corrente nel layer corrente. Esempi \u21b5 is_selected() \u2192 True (vero) se l'elemento corrente \u00e8 selezionato. Una Feature come parametro \u21b5 Se chiamata con solo un parametro 'feature', la funzione restituisce true se viene selezionata la funzione specificata dal layer corrente. Sintassi \u21b5 is_selected( feature ) Argomenti \u21b5 feature L'elemento che deve essere controllata per la selezione. Due parametri \u21b5 Se la funzione viene chiamata sia con un layer che con una feature, torner\u00e0 vera se la feature specificata dal layer specificato \u00e8 selezionata. Sintassi \u21b5 is_selected( layer , feature ) Argomenti \u21b5 layer Il layer (o il suo ID o nome) su cui verr\u00e0 selezionata la selezione. feature L'elemento che deve essere controllato per la selezione. Esempi \u21b5 is_selected ('streets', get_feature ('streets', 'name', \"street_name\")) \u2192 Vero se viene selezionata la strada corrente (supponendo che il layer della strada abbia un campo chiamato 'street_name' e il layer 'streets' abbia un campo chiamato 'nome'). Esempio etichettatura tramite regola: Esempio tematizzazione tramite regola:","title":"is_selected"},{"location":"gr_funzioni/record_e_attributi/is_selected/#is_selected","text":"Restituisce Vero se \u00e8 selezionata una funzione. Pu\u00f2 essere usato con zero, uno o due argomenti, vedi sotto per i dettagli.","title":"is_selected"},{"location":"gr_funzioni/record_e_attributi/is_selected/#senza-parametri","text":"Se chiamata senza parametri, la funzione restituir\u00e0 vero se \u00e8 selezionata la feature corrente nel layer corrente.","title":"Senza parametri"},{"location":"gr_funzioni/record_e_attributi/is_selected/#esempi","text":"is_selected() \u2192 True (vero) se l'elemento corrente \u00e8 selezionato.","title":"Esempi"},{"location":"gr_funzioni/record_e_attributi/is_selected/#una-feature-come-parametro","text":"Se chiamata con solo un parametro 'feature', la funzione restituisce true se viene selezionata la funzione specificata dal layer corrente.","title":"Una Feature come parametro"},{"location":"gr_funzioni/record_e_attributi/is_selected/#sintassi","text":"is_selected( feature )","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/is_selected/#argomenti","text":"feature L'elemento che deve essere controllata per la selezione.","title":"Argomenti"},{"location":"gr_funzioni/record_e_attributi/is_selected/#due-parametri","text":"Se la funzione viene chiamata sia con un layer che con una feature, torner\u00e0 vera se la feature specificata dal layer specificato \u00e8 selezionata.","title":"Due parametri"},{"location":"gr_funzioni/record_e_attributi/is_selected/#sintassi_1","text":"is_selected( layer , feature )","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/is_selected/#argomenti_1","text":"layer Il layer (o il suo ID o nome) su cui verr\u00e0 selezionata la selezione. feature L'elemento che deve essere controllato per la selezione.","title":"Argomenti"},{"location":"gr_funzioni/record_e_attributi/is_selected/#esempi_1","text":"is_selected ('streets', get_feature ('streets', 'name', \"street_name\")) \u2192 Vero se viene selezionata la strada corrente (supponendo che il layer della strada abbia un campo chiamato 'street_name' e il layer 'streets' abbia un campo chiamato 'nome'). Esempio etichettatura tramite regola: Esempio tematizzazione tramite regola:","title":"Esempi"},{"location":"gr_funzioni/record_e_attributi/num_selected/","text":"num_selected \u21b5 Restituisce il numero di geometrie selezionate in un vettore dato. Per impostazione predefinita funziona sul vettore sul quale l'espressione \u00e8 valutata. Sintassi \u21b5 num_selected( layer ) Argomenti \u21b5 layer Il vettore (o il suo id o nome) sul quale la selezione sar\u00e0 controllata. Esempi \u21b5 num_selected() \u2192 Il numero di geometrie selezionate nel vettore corrente. num_selected('streets') \u2192 Il numero di geometrie selezionate nel vettore streets","title":"num_selected"},{"location":"gr_funzioni/record_e_attributi/num_selected/#num_selected","text":"Restituisce il numero di geometrie selezionate in un vettore dato. Per impostazione predefinita funziona sul vettore sul quale l'espressione \u00e8 valutata.","title":"num_selected"},{"location":"gr_funzioni/record_e_attributi/num_selected/#sintassi","text":"num_selected( layer )","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/num_selected/#argomenti","text":"layer Il vettore (o il suo id o nome) sul quale la selezione sar\u00e0 controllata.","title":"Argomenti"},{"location":"gr_funzioni/record_e_attributi/num_selected/#esempi","text":"num_selected() \u2192 Il numero di geometrie selezionate nel vettore corrente. num_selected('streets') \u2192 Il numero di geometrie selezionate nel vettore streets","title":"Esempi"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi/","text":"Record ed attributi \u21b5 Questo gruppo contiene funzioni e/o espressioni che agiscono sui record o attributi. Es.: $id; get_feature(). Funzione Descrizione \\$currentfeature Restituisce l'elemento corrente corrente da valutare. Questo pu\u00f2 essere usato con la funzione 'attribute' per valutare i valori dell'attributo dall'elemento corrente \\$id Restituisce l'id geometria della riga corrente \\$map Restituisce l'id della voce della mappa corrente se la mappa viene disegnata in una composizione, o \"tela\" se la mappa viene disegnata all'interno della finestra principale di QGIS attribute Restituisce il valore di un attributo specificato da una geometria get_feature Restituisce la prima geometria di un vettore che corrisponde a un determinato valore di attributo get_feature_by_id Restituisce l'id dell'elemento della riga corrente is_selected Indica se una geometria \u00e8 selezionata. Se chiamata senza parametri, controlla la geometria corrente num_selected Restituisce il numero di geometrie selezionate in un vettore dato. Per impostazione predefinita funziona sul vettore sul quale l'espressione \u00e8 valutata represent_value Restituisce il valore di rappresentazione configurato per un valore di campo. Dipende dal tipo di widget configurato. Spesso, questo \u00e8 utile per i widget di 'Value Map' uuid Genera un Identificatore Universale Unico (UUID) per ogni riga usando il metodo Qt QUuid::createUuid. Aggiornato a QGIS 3.18","title":"Record ed attributi"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi/#record-ed-attributi","text":"Questo gruppo contiene funzioni e/o espressioni che agiscono sui record o attributi. Es.: $id; get_feature(). Funzione Descrizione \\$currentfeature Restituisce l'elemento corrente corrente da valutare. Questo pu\u00f2 essere usato con la funzione 'attribute' per valutare i valori dell'attributo dall'elemento corrente \\$id Restituisce l'id geometria della riga corrente \\$map Restituisce l'id della voce della mappa corrente se la mappa viene disegnata in una composizione, o \"tela\" se la mappa viene disegnata all'interno della finestra principale di QGIS attribute Restituisce il valore di un attributo specificato da una geometria get_feature Restituisce la prima geometria di un vettore che corrisponde a un determinato valore di attributo get_feature_by_id Restituisce l'id dell'elemento della riga corrente is_selected Indica se una geometria \u00e8 selezionata. Se chiamata senza parametri, controlla la geometria corrente num_selected Restituisce il numero di geometrie selezionate in un vettore dato. Per impostazione predefinita funziona sul vettore sul quale l'espressione \u00e8 valutata represent_value Restituisce il valore di rappresentazione configurato per un valore di campo. Dipende dal tipo di widget configurato. Spesso, questo \u00e8 utile per i widget di 'Value Map' uuid Genera un Identificatore Universale Unico (UUID) per ogni riga usando il metodo Qt QUuid::createUuid. Aggiornato a QGIS 3.18","title":"Record ed attributi"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/","text":"Gruppo Record e Attributi \u21b5 Abstract Questo gruppo contiene funzioni che operano sugli identificativi dei record. $currentfeature \u21b5 Restituisce l'elemento corrente corrente da valutare. Questo pu\u00f2 essere usato con la funzione 'attribute' per valutare i valori dell'attributo dall'elemento corrente. Sintassi: $currentfeature Esempi: attribute( $currentfeature, 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente $id \u21b5 Restituisce l'id geometria della riga corrente. Sintassi: $id Esempi: $id \u2192 71 Osservazioni: Questa funzione inizia sempre da 0 con vettore shapefile da 1 con i database attribute \u21b5 Restituisce un attributo da un elemento. Variante 1 \u21b5 Restituisce il valore di un attributo dall'elemento corrente. Sintassi: attribute( attribute_name ) Argomenti: attribute_name nome dell'attributo da restituire Esempi: attribute( 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente Variante 2 \u21b5 Consente di specificare l'elemento di destinazione e il nome dell'attributo. Sintassi: attribute( feature , attribute_name ) Argomenti: feature un elemento attribute_name nome dell'attributo da restituire Esempi: attribute( $currentfeature, 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente attributes \u21b5 Restituisce una mappa contenente tutti gli attributi di un elemento, con i nomi dei campi come chiavi della mappa. Variante 1 \u21b5 Restituisce una mappa di tutti gli attributi dall'attuale elemento. Sintassi: attributes() Esempi:o attributes()['name'] \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente per trasformare una feature (una riga di una tabella) in un array: Variante 2 \u21b5 Consente di specificare la feature di destinazione. Sintassi: attributes( feature ) Argomenti: feature un elemento Esempi: attributes( @atlas_feature )['name'] \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente dell'atlante display_expression \u21b5 Restituisce l'espressione visualizzata per un dato elemento in un layer. L'espressione \u00e8 sempre valutata. Pu\u00f2 essere usata con lo zero, uno o pi\u00f9 argomenti, vedi sotto per dettagli. Nessun parametro \u21b5 Se chiamata senza parametri, la funzione valuter\u00e0 l'espressione di visualizzazione dell'elemento corrente nel layer corrente. Sintassi: display_expression() Esempi: display_expression() \u2192 L'espressione visualizzata dell'elemento corrente nel layer corrente Un parametro 'feature' \u21b5 Se chiamata con il solo parametro 'feature', la funzione valuter\u00e0 l'elemento specificato nel layer corrente. Sintassi: display_expression( feature ) Argomenti: feature L'elemento che dovrebbe essere valutato. Esempi: display_expression(@atlas_feature) \u2192 L'espressione visualizzata dell'elemento corrente dell'atlante. Parametri del Layer ed elementi \u21b5 Se la funzione viene chiamata sia con un layer che con un elemento, valuter\u00e0 l'elemento specificato dal layer indicato. Sintassi: display_expression( layer , feature [, evaluate=true ]) [ ] indica componenti opzionali Argomenti: layer Il layer (o suo ID o nome) feature L'elemento che dovrebbe essere valutato. evaluate Se l'espressione deve essere valutata. Se false l'espressione sar\u00e0 restituita solo come stringa letterale (che potenzialmente potrebbe essere valutata a posteriori tramite la funzione 'eval'). Esempi: display_expression( 'streets', get_feature_by_id('streets', 1)) \u2192 L'espressione visualizzata dell'elemento con ID 1 sul layer 'streets'. display_expression('a_layer_id', $currentfeature, 'False') \u2192 L'espressione visualizzata del dato elemento non \u00e8 stata valutata. get_feature \u21b5 Restituisce la prima geometria di un vettore che corrisponde a un determinato valore di attributo. Sintassi: get_feature( layer , attribute , value ) Argomenti: layer nome vettore o ID attribute nome attributo value valore attributo da far corrispondere Esempi: get_feature('streets','name','main st') \u2192 prima geometria trovata nel vettore \"streets\" con valore \"main st\" nel campo \"name\" get_feature( 'streets', 'fid', attribute( $currentfeature, 'name') ) \u2192 Restituisce la prima feature nel layer \"streets\" il cui campo \"fid\" ha lo stesso valore del campo \"nome\" della feature corrente` (una sorta di JOIN) get_feature_by_id \u21b5 Restituisce l'id dell'elemento della riga corrente. Sintassi: get_feature_by_id( layer , feature_id ) Argomenti: layer layer, nome del layer o id del layer feature_id L'id dell'elemento che deve essere restituito (inizia da 0 per gli shapefile) Esempi: get_feature_by_id('streets', 1) \u2192 l'elemento con id 1 nel vettore \"streets\" is_selected \u21b5 Restituisce Vero se \u00e8 selezionata una funzione. Pu\u00f2 essere usato con zero, uno o due argomenti, vedi sotto per i dettagli. Senza parametri \u21b5 Se chiamata senza parametri, la funzione restituir\u00e0 vero se \u00e8 selezionata la feature corrente nel layer corrente. Sintassi: is_selected() Esempi: is_selected() \u2192 True (vero) se l'elemento corrente \u00e8 selezionato. Una Feature come parametro \u21b5 Se chiamata con il solo parametro 'feature', la funzione restituisce true se l'elemento specificato \u00e8 selezionato nel layer attuale. Sintassi: is_selected( feature ) Argomenti: feature L'elemento che deve essere controllata per la selezione. Esempi: is_selected(@atlas_feature) \u2192 Vero se l'elemento corrente dell'atlante \u00e8 selezionato. is_selected(get_feature('streets', 'name', 'Main St.'))) \u2192 Vero se l'unico elemento con nome \"Main St.\" sul layer \"streets\" attivo \u00e8 selezionato. is_selected(get_feature_by_id('streets', 1)) \u2192 Vero se l'elemento con l'ID 1 sul layer \"streets\" attivo \u00e8 selezionato. Due parametri \u21b5 Se la funzione \u00e8 chiamata sia con un layer che con un elemento, questa restituir\u00e0 vero se l'elemento specificato del layer specificato \u00e8 selezionato. Sintassi: is_selected( layer , feature ) Argomenti: layer Il layer (o il suo ID o nome) su cui verr\u00e0 controllata la selezione. feature L'elemento che deve essere controllato per la selezione. Esempi: is_selected( 'streets', get_feature('streets', 'name', \"street_name\")) \u2192 Vero se \u00e8 selezionata la strada dell'edificio corrente (supponendo che il layer edifici abbia un campo denominato 'street_name' e il layer strade abbia un campo denominato 'name' con valori univoci). is_selected( 'streets', get_feature_by_id('streets', 1)) \u2192 Vero se l'elemento con l'ID 1 nel layer \"streets\" \u00e8 selezionato. Esempio etichettatura tramite regola: Esempio tematizzazione tramite regola: maptip \u21b5 Restituisce il suggerimento mappa di un dato elemento in un vettore. Per impostazione predefinita, l'espressione \u00e8 valutata. Pu\u00f2 essere usata con zero, uno o pi\u00f9 argomenti, vedi sotto per dettagli. Nessun parametro \u21b5 Se chiamata senza parametri, la funzione valuter\u00e0 il suggerimento mappa dell'elemento corrente nel layer corrente. Sintassi: maptip() Esempi: maptip() \u2192 Il suggerimento mappa dell'elemento corrente nel layer corrente. Un parametro 'feature' \u21b5 Se chiamata con il solo parametro 'feature ', la funzione valuter\u00e0 l'elemento specificato nel layer corrente. Sintassi: maptip( feature ) Argomenti: feature L'elemento che dovrebbe essere valutato. Esempi: maptip(@atlas_feature) \u2192 Il suggerimento mappa dell'elemento corrente dell'atlante. Parametri del Layer ed elementi \u21b5 Se la funzione viene chiamata sia con un layer che con un elemento, valuter\u00e0 l'elemento specificato dal layer indicato. Sintassi: maptip( layer , feature [, evaluate=true ]) [ ] indica componenti opzionali Argomenti: layer Il layer (o suo ID o nome) feature L'elemento che dovrebbe essere valutato. evaluate Se l'espressione deve essere valutata. Se false l'espressione sar\u00e0 restituita solo come stringa letterale (che potenzialmente potrebbe essere valutata a posteriori tramite la funzione 'eval_template'). Esempi: maptip('streets', get_feature_by_id('streets', 1)) \u2192 Il suggerimento mappa dell'elemento con ID 1 sul vettore 'streets'. maptip('a_layer_id', $currentfeature, 'False') \u2192 Il suggerimento mappa del dato elemento non valutato. num_selected \u21b5 Restituisce il numero di geometrie selezionate in un vettore dato. Per impostazione predefinita funziona sul vettore sul quale l'espressione \u00e8 valutata. Sintassi: num_selected([ layer=current layer ]) Argomenti: layer Il vettore (o il suo id o nome) sul quale la selezione sar\u00e0 controllata. Esempi: num_selected() \u2192 Il numero di geometrie selezionate nel vettore corrente. num_selected('streets') \u2192 Il numero di geometrie selezionate nel vettore streets represent_value \u21b5 Restituisce il metodo di rappresentazione configurato per un valore di un campo. Esso dipende dal tipo di widget configurato. Spesso, questo \u00e8 molto utile per i widget 'Mappa Valore'. Sintassi: represent_value( value , fieldName ) Argomenti: value Il valore che dovrebbe essere risolto. Molto probabilmente un campo. fieldName Il nome del campo per cui la configurazione del widget dovrebbe essere caricata. (Opzionale) Esempi: represent_value(\"field_with_value_map\") \u2192 Descrizione per il valore represent_value('static value', 'field_name') \u2192 Descrizione per il valore statico sqlite_fetch_and_increment \u21b5 Gestisce i valori incrementali nei database sqlite. I valori predefiniti in SQlite possono essere applicati all'inserimento e non possono venir elaborati con il prefetch. Ci\u00f2 rende impossibile l'acquisizione e l'incremento della chiave primaria tramite l'AUTO_INCREMENT prima della creazione della riga nel database. Note a margine: con postgres, questo funziona tramite l'opzione valuta i valori predefiniti. Quando vengono aggiunti nuovi elementi che hanno relazioni, \u00e8 veramente grazioso poter aggiungere elementi figlio per un genitore, mentre il modulo dei genitori \u00e8 ancora aperto e l'elemento genitore non \u00e8 ancora salvato. Per sorpassare questa limitazione, questa funzione pu\u00f2 essere usata per gestire valori sequenziali in una tabella separata basata su un formato sqlite come il gpkg. La tabella sequenza sar\u00e0 filtrata per un id sequenziale (filter_attribute e filter_value) ed il valore attuale dell'id_field sar\u00e0 incrementato di 1 e verr\u00e0 restituto il valore incrementato. Se colonne aggiuntive richiedono che per esse debbano venir specificati valori, i default_values map possono essere usati per questo scopo. Nota \u21b5 Questa funzione modifica la tabella sqlite di destinazione. Essa \u00e8 intesa per l'uso con la configurazione predefinita per gli attributi. Quando il parametro \u00e8 un layer ed il layer \u00e8 in modo transazione, il valore viene recuperato solo una volta durante il tempo di vita di una transazione e memorizzato ed incrementato. Ci\u00f2 rende insicuro lavorare sullo stesso database con diversi processi in parallelo. Sintassi: sqlite_fetch_and_increment( database , table , id_field , filter_attribute , filter_value [, default_values ]) [ ] indica componenti opzionali Argomenti: database Percorso del file sqlite o del layer geopackage table Nome della tabella che gestisce le sequenze id_field Nome del campo che contiene il valore corrente filter_attribute Nome del campo che contiene un identificatore unico per questa sequenza. Deve avere un indice di tipo UNIQUE. filter_value Nome della sequenza da utilizzare. default_values Compila con i valori predefiniti per campi aggiuntivi sulla tabella. I valori necessitano di essere quotati. Sono consentite le funzioni. Esempi: sqlite_fetch_and_increment(@layer, 'sequence_table', 'last_unique_id', 'sequence_id', 'global', map('last_change', 'date(''now'')', 'user', '''' || @user_account_name || '''')) \u2192 0 sqlite_fetch_and_increment(layer_property(@layer, 'path'), 'sequence_table', 'last_unique_id', 'sequence_id', 'global', map('last_change', 'date(''now'')', 'user', '''' || @user_account_name || '''')) \u2192 0 uuid \u21b5 Genera un Universally Unique Identifier (UUID) per ciascun record usando il metodo Qt QUuid::createUuid . Aggiornato dalla QGIS 3.18 Sintassi: uuid([ format='WithBraces' ]) [ ] indica componenti opzionali Argomenti: format Il formato, come l'UUID verr\u00e0 formattato. 'WithBraces' (con parentesi {}), 'WithoutBraces' (senza parentesi) o 'Id128' (senza trattino). Esempi: uuid() \u2192 '{0bd2f60f-f157-4a6d-96af-d4ba4cb366a1}' uuid('WithoutBraces') \u2192 '0bd2f60f-f157-4a6d-96af-d4ba4cb366a1' uuid('Id128') \u2192 '0bd2f60ff1574a6d96afd4ba4cb366a1'","title":"Record e attributi"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#gruppo-record-e-attributi","text":"Abstract Questo gruppo contiene funzioni che operano sugli identificativi dei record.","title":"Gruppo Record e Attributi"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#currentfeature","text":"Restituisce l'elemento corrente corrente da valutare. Questo pu\u00f2 essere usato con la funzione 'attribute' per valutare i valori dell'attributo dall'elemento corrente. Sintassi: $currentfeature Esempi: attribute( $currentfeature, 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente","title":"$currentfeature"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#id","text":"Restituisce l'id geometria della riga corrente. Sintassi: $id Esempi: $id \u2192 71 Osservazioni: Questa funzione inizia sempre da 0 con vettore shapefile da 1 con i database","title":"$id"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#attribute","text":"Restituisce un attributo da un elemento.","title":"attribute"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#variante-1","text":"Restituisce il valore di un attributo dall'elemento corrente. Sintassi: attribute( attribute_name ) Argomenti: attribute_name nome dell'attributo da restituire Esempi: attribute( 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente","title":"Variante 1"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#variante-2","text":"Consente di specificare l'elemento di destinazione e il nome dell'attributo. Sintassi: attribute( feature , attribute_name ) Argomenti: feature un elemento attribute_name nome dell'attributo da restituire Esempi: attribute( $currentfeature, 'name' ) \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente","title":"Variante 2"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#attributes","text":"Restituisce una mappa contenente tutti gli attributi di un elemento, con i nomi dei campi come chiavi della mappa.","title":"attributes"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#variante-1_1","text":"Restituisce una mappa di tutti gli attributi dall'attuale elemento. Sintassi: attributes() Esempi:o attributes()['name'] \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente per trasformare una feature (una riga di una tabella) in un array:","title":"Variante 1"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#variante-2_1","text":"Consente di specificare la feature di destinazione. Sintassi: attributes( feature ) Argomenti: feature un elemento Esempi: attributes( @atlas_feature )['name'] \u2192 valore memorizzato nell'attributo 'name' per l'elemento corrente dell'atlante","title":"Variante 2"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#display_expression","text":"Restituisce l'espressione visualizzata per un dato elemento in un layer. L'espressione \u00e8 sempre valutata. Pu\u00f2 essere usata con lo zero, uno o pi\u00f9 argomenti, vedi sotto per dettagli.","title":"display_expression"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#nessun-parametro","text":"Se chiamata senza parametri, la funzione valuter\u00e0 l'espressione di visualizzazione dell'elemento corrente nel layer corrente. Sintassi: display_expression() Esempi: display_expression() \u2192 L'espressione visualizzata dell'elemento corrente nel layer corrente","title":"Nessun parametro"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#un-parametro-feature","text":"Se chiamata con il solo parametro 'feature', la funzione valuter\u00e0 l'elemento specificato nel layer corrente. Sintassi: display_expression( feature ) Argomenti: feature L'elemento che dovrebbe essere valutato. Esempi: display_expression(@atlas_feature) \u2192 L'espressione visualizzata dell'elemento corrente dell'atlante.","title":"Un parametro 'feature'"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#parametri-del-layer-ed-elementi","text":"Se la funzione viene chiamata sia con un layer che con un elemento, valuter\u00e0 l'elemento specificato dal layer indicato. Sintassi: display_expression( layer , feature [, evaluate=true ]) [ ] indica componenti opzionali Argomenti: layer Il layer (o suo ID o nome) feature L'elemento che dovrebbe essere valutato. evaluate Se l'espressione deve essere valutata. Se false l'espressione sar\u00e0 restituita solo come stringa letterale (che potenzialmente potrebbe essere valutata a posteriori tramite la funzione 'eval'). Esempi: display_expression( 'streets', get_feature_by_id('streets', 1)) \u2192 L'espressione visualizzata dell'elemento con ID 1 sul layer 'streets'. display_expression('a_layer_id', $currentfeature, 'False') \u2192 L'espressione visualizzata del dato elemento non \u00e8 stata valutata.","title":"Parametri del Layer ed elementi"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#get_feature","text":"Restituisce la prima geometria di un vettore che corrisponde a un determinato valore di attributo. Sintassi: get_feature( layer , attribute , value ) Argomenti: layer nome vettore o ID attribute nome attributo value valore attributo da far corrispondere Esempi: get_feature('streets','name','main st') \u2192 prima geometria trovata nel vettore \"streets\" con valore \"main st\" nel campo \"name\" get_feature( 'streets', 'fid', attribute( $currentfeature, 'name') ) \u2192 Restituisce la prima feature nel layer \"streets\" il cui campo \"fid\" ha lo stesso valore del campo \"nome\" della feature corrente` (una sorta di JOIN)","title":"get_feature"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#get_feature_by_id","text":"Restituisce l'id dell'elemento della riga corrente. Sintassi: get_feature_by_id( layer , feature_id ) Argomenti: layer layer, nome del layer o id del layer feature_id L'id dell'elemento che deve essere restituito (inizia da 0 per gli shapefile) Esempi: get_feature_by_id('streets', 1) \u2192 l'elemento con id 1 nel vettore \"streets\"","title":"get_feature_by_id"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#is_selected","text":"Restituisce Vero se \u00e8 selezionata una funzione. Pu\u00f2 essere usato con zero, uno o due argomenti, vedi sotto per i dettagli.","title":"is_selected"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#senza-parametri","text":"Se chiamata senza parametri, la funzione restituir\u00e0 vero se \u00e8 selezionata la feature corrente nel layer corrente. Sintassi: is_selected() Esempi: is_selected() \u2192 True (vero) se l'elemento corrente \u00e8 selezionato.","title":"Senza parametri"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#una-feature-come-parametro","text":"Se chiamata con il solo parametro 'feature', la funzione restituisce true se l'elemento specificato \u00e8 selezionato nel layer attuale. Sintassi: is_selected( feature ) Argomenti: feature L'elemento che deve essere controllata per la selezione. Esempi: is_selected(@atlas_feature) \u2192 Vero se l'elemento corrente dell'atlante \u00e8 selezionato. is_selected(get_feature('streets', 'name', 'Main St.'))) \u2192 Vero se l'unico elemento con nome \"Main St.\" sul layer \"streets\" attivo \u00e8 selezionato. is_selected(get_feature_by_id('streets', 1)) \u2192 Vero se l'elemento con l'ID 1 sul layer \"streets\" attivo \u00e8 selezionato.","title":"Una Feature come parametro"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#due-parametri","text":"Se la funzione \u00e8 chiamata sia con un layer che con un elemento, questa restituir\u00e0 vero se l'elemento specificato del layer specificato \u00e8 selezionato. Sintassi: is_selected( layer , feature ) Argomenti: layer Il layer (o il suo ID o nome) su cui verr\u00e0 controllata la selezione. feature L'elemento che deve essere controllato per la selezione. Esempi: is_selected( 'streets', get_feature('streets', 'name', \"street_name\")) \u2192 Vero se \u00e8 selezionata la strada dell'edificio corrente (supponendo che il layer edifici abbia un campo denominato 'street_name' e il layer strade abbia un campo denominato 'name' con valori univoci). is_selected( 'streets', get_feature_by_id('streets', 1)) \u2192 Vero se l'elemento con l'ID 1 nel layer \"streets\" \u00e8 selezionato. Esempio etichettatura tramite regola: Esempio tematizzazione tramite regola:","title":"Due parametri"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#maptip","text":"Restituisce il suggerimento mappa di un dato elemento in un vettore. Per impostazione predefinita, l'espressione \u00e8 valutata. Pu\u00f2 essere usata con zero, uno o pi\u00f9 argomenti, vedi sotto per dettagli.","title":"maptip"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#nessun-parametro_1","text":"Se chiamata senza parametri, la funzione valuter\u00e0 il suggerimento mappa dell'elemento corrente nel layer corrente. Sintassi: maptip() Esempi: maptip() \u2192 Il suggerimento mappa dell'elemento corrente nel layer corrente.","title":"Nessun parametro"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#un-parametro-feature_1","text":"Se chiamata con il solo parametro 'feature ', la funzione valuter\u00e0 l'elemento specificato nel layer corrente. Sintassi: maptip( feature ) Argomenti: feature L'elemento che dovrebbe essere valutato. Esempi: maptip(@atlas_feature) \u2192 Il suggerimento mappa dell'elemento corrente dell'atlante.","title":"Un parametro 'feature'"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#parametri-del-layer-ed-elementi_1","text":"Se la funzione viene chiamata sia con un layer che con un elemento, valuter\u00e0 l'elemento specificato dal layer indicato. Sintassi: maptip( layer , feature [, evaluate=true ]) [ ] indica componenti opzionali Argomenti: layer Il layer (o suo ID o nome) feature L'elemento che dovrebbe essere valutato. evaluate Se l'espressione deve essere valutata. Se false l'espressione sar\u00e0 restituita solo come stringa letterale (che potenzialmente potrebbe essere valutata a posteriori tramite la funzione 'eval_template'). Esempi: maptip('streets', get_feature_by_id('streets', 1)) \u2192 Il suggerimento mappa dell'elemento con ID 1 sul vettore 'streets'. maptip('a_layer_id', $currentfeature, 'False') \u2192 Il suggerimento mappa del dato elemento non valutato.","title":"Parametri del Layer ed elementi"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#num_selected","text":"Restituisce il numero di geometrie selezionate in un vettore dato. Per impostazione predefinita funziona sul vettore sul quale l'espressione \u00e8 valutata. Sintassi: num_selected([ layer=current layer ]) Argomenti: layer Il vettore (o il suo id o nome) sul quale la selezione sar\u00e0 controllata. Esempi: num_selected() \u2192 Il numero di geometrie selezionate nel vettore corrente. num_selected('streets') \u2192 Il numero di geometrie selezionate nel vettore streets","title":"num_selected"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#represent_value","text":"Restituisce il metodo di rappresentazione configurato per un valore di un campo. Esso dipende dal tipo di widget configurato. Spesso, questo \u00e8 molto utile per i widget 'Mappa Valore'. Sintassi: represent_value( value , fieldName ) Argomenti: value Il valore che dovrebbe essere risolto. Molto probabilmente un campo. fieldName Il nome del campo per cui la configurazione del widget dovrebbe essere caricata. (Opzionale) Esempi: represent_value(\"field_with_value_map\") \u2192 Descrizione per il valore represent_value('static value', 'field_name') \u2192 Descrizione per il valore statico","title":"represent_value"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#sqlite_fetch_and_increment","text":"Gestisce i valori incrementali nei database sqlite. I valori predefiniti in SQlite possono essere applicati all'inserimento e non possono venir elaborati con il prefetch. Ci\u00f2 rende impossibile l'acquisizione e l'incremento della chiave primaria tramite l'AUTO_INCREMENT prima della creazione della riga nel database. Note a margine: con postgres, questo funziona tramite l'opzione valuta i valori predefiniti. Quando vengono aggiunti nuovi elementi che hanno relazioni, \u00e8 veramente grazioso poter aggiungere elementi figlio per un genitore, mentre il modulo dei genitori \u00e8 ancora aperto e l'elemento genitore non \u00e8 ancora salvato. Per sorpassare questa limitazione, questa funzione pu\u00f2 essere usata per gestire valori sequenziali in una tabella separata basata su un formato sqlite come il gpkg. La tabella sequenza sar\u00e0 filtrata per un id sequenziale (filter_attribute e filter_value) ed il valore attuale dell'id_field sar\u00e0 incrementato di 1 e verr\u00e0 restituto il valore incrementato. Se colonne aggiuntive richiedono che per esse debbano venir specificati valori, i default_values map possono essere usati per questo scopo.","title":"sqlite_fetch_and_increment"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#nota","text":"Questa funzione modifica la tabella sqlite di destinazione. Essa \u00e8 intesa per l'uso con la configurazione predefinita per gli attributi. Quando il parametro \u00e8 un layer ed il layer \u00e8 in modo transazione, il valore viene recuperato solo una volta durante il tempo di vita di una transazione e memorizzato ed incrementato. Ci\u00f2 rende insicuro lavorare sullo stesso database con diversi processi in parallelo. Sintassi: sqlite_fetch_and_increment( database , table , id_field , filter_attribute , filter_value [, default_values ]) [ ] indica componenti opzionali Argomenti: database Percorso del file sqlite o del layer geopackage table Nome della tabella che gestisce le sequenze id_field Nome del campo che contiene il valore corrente filter_attribute Nome del campo che contiene un identificatore unico per questa sequenza. Deve avere un indice di tipo UNIQUE. filter_value Nome della sequenza da utilizzare. default_values Compila con i valori predefiniti per campi aggiuntivi sulla tabella. I valori necessitano di essere quotati. Sono consentite le funzioni. Esempi: sqlite_fetch_and_increment(@layer, 'sequence_table', 'last_unique_id', 'sequence_id', 'global', map('last_change', 'date(''now'')', 'user', '''' || @user_account_name || '''')) \u2192 0 sqlite_fetch_and_increment(layer_property(@layer, 'path'), 'sequence_table', 'last_unique_id', 'sequence_id', 'global', map('last_change', 'date(''now'')', 'user', '''' || @user_account_name || '''')) \u2192 0","title":"Nota"},{"location":"gr_funzioni/record_e_attributi/record_e_attributi_unico/#uuid","text":"Genera un Universally Unique Identifier (UUID) per ciascun record usando il metodo Qt QUuid::createUuid . Aggiornato dalla QGIS 3.18 Sintassi: uuid([ format='WithBraces' ]) [ ] indica componenti opzionali Argomenti: format Il formato, come l'UUID verr\u00e0 formattato. 'WithBraces' (con parentesi {}), 'WithoutBraces' (senza parentesi) o 'Id128' (senza trattino). Esempi: uuid() \u2192 '{0bd2f60f-f157-4a6d-96af-d4ba4cb366a1}' uuid('WithoutBraces') \u2192 '0bd2f60f-f157-4a6d-96af-d4ba4cb366a1' uuid('Id128') \u2192 '0bd2f60ff1574a6d96afd4ba4cb366a1'","title":"uuid"},{"location":"gr_funzioni/record_e_attributi/represent_value/","text":"represent_value \u21b5 Restituisce il valore di rappresentazione configurato per un valore di campo. Dipende dal tipo di widget configurato. Spesso, questo \u00e8 utile per i widget di 'Value Map'. Sintassi \u21b5 represent_value( value , fieldName ) Argomenti \u21b5 value Il valore che dovrebbe essere risolto. Molto probabilmente un campo. fieldName Il nome del campo per cui la configurazione del widget dovrebbe essere caricata. (Opzionale) Esempi \u21b5 represent_value(\"field_with_value_map\") \u2192 Descrizione per il valore represent_value('static value', 'field_name') \u2192 Descrizione per il valore statico","title":"represent_value"},{"location":"gr_funzioni/record_e_attributi/represent_value/#represent_value","text":"Restituisce il valore di rappresentazione configurato per un valore di campo. Dipende dal tipo di widget configurato. Spesso, questo \u00e8 utile per i widget di 'Value Map'.","title":"represent_value"},{"location":"gr_funzioni/record_e_attributi/represent_value/#sintassi","text":"represent_value( value , fieldName )","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/represent_value/#argomenti","text":"value Il valore che dovrebbe essere risolto. Molto probabilmente un campo. fieldName Il nome del campo per cui la configurazione del widget dovrebbe essere caricata. (Opzionale)","title":"Argomenti"},{"location":"gr_funzioni/record_e_attributi/represent_value/#esempi","text":"represent_value(\"field_with_value_map\") \u2192 Descrizione per il valore represent_value('static value', 'field_name') \u2192 Descrizione per il valore statico","title":"Esempi"},{"location":"gr_funzioni/record_e_attributi/uuid/","text":"uuid \u21b5 Genera un Universally Unique Identifier (UUID) per ciascun record usando il metodo Qt QUuid::createUuid . Aggiornato dalla QGIS 3.18 Sintassi \u21b5 uuid( [format='WithBraces'] ) [ ] indica componenti opzionali Argomenti \u21b5 format Il formato, come l'UUID verr\u00e0 formattato. 'WithBraces' (con parentesi {}), 'WithoutBraces' (senza parentesi) o 'Id128' (senza trattino). Esempi \u21b5 uuid() \u2192 '{0bd2f60f-f157-4a6d-96af-d4ba4cb366a1}' uuid('WithoutBraces') \u2192 '0bd2f60f-f157-4a6d-96af-d4ba4cb366a1' uuid('Id128') \u2192 '0bd2f60ff1574a6d96afd4ba4cb366a1'","title":"uuid"},{"location":"gr_funzioni/record_e_attributi/uuid/#uuid","text":"Genera un Universally Unique Identifier (UUID) per ciascun record usando il metodo Qt QUuid::createUuid . Aggiornato dalla QGIS 3.18","title":"uuid"},{"location":"gr_funzioni/record_e_attributi/uuid/#sintassi","text":"uuid( [format='WithBraces'] ) [ ] indica componenti opzionali","title":"Sintassi"},{"location":"gr_funzioni/record_e_attributi/uuid/#argomenti","text":"format Il formato, come l'UUID verr\u00e0 formattato. 'WithBraces' (con parentesi {}), 'WithoutBraces' (senza parentesi) o 'Id128' (senza trattino).","title":"Argomenti"},{"location":"gr_funzioni/record_e_attributi/uuid/#esempi","text":"uuid() \u2192 '{0bd2f60f-f157-4a6d-96af-d4ba4cb366a1}' uuid('WithoutBraces') \u2192 '0bd2f60f-f157-4a6d-96af-d4ba4cb366a1' uuid('Id128') \u2192 '0bd2f60ff1574a6d96afd4ba4cb366a1'","title":"Esempi"},{"location":"gr_funzioni/reference/dbquery/","text":"dbquery \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"dbquery"},{"location":"gr_funzioni/reference/dbquery/#dbquery","text":"--","title":"dbquery"},{"location":"gr_funzioni/reference/dbquery/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/dbquery/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/dbquery/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/dbquery/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/dbsql/","text":"dbsql \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"dbsql"},{"location":"gr_funzioni/reference/dbsql/#dbsql","text":"--","title":"dbsql"},{"location":"gr_funzioni/reference/dbsql/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/dbsql/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/dbsql/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/dbsql/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/dbvalue/","text":"dbvalue \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"dbvalue"},{"location":"gr_funzioni/reference/dbvalue/#dbvalue","text":"--","title":"dbvalue"},{"location":"gr_funzioni/reference/dbvalue/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/dbvalue/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/dbvalue/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/dbvalue/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/dbvaluebyid/","text":"dbvaluebyid \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"dbvaluebyid"},{"location":"gr_funzioni/reference/dbvaluebyid/#dbvaluebyid","text":"--","title":"dbvaluebyid"},{"location":"gr_funzioni/reference/dbvaluebyid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/dbvaluebyid/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/dbvaluebyid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/dbvaluebyid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomcontains/","text":"geomcontains \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomcontains"},{"location":"gr_funzioni/reference/geomcontains/#geomcontains","text":"--","title":"geomcontains"},{"location":"gr_funzioni/reference/geomcontains/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomcontains/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomcontains/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomcontains/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomcrosses/","text":"geomcrosses \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomcrosses"},{"location":"gr_funzioni/reference/geomcrosses/#geomcrosses","text":"--","title":"geomcrosses"},{"location":"gr_funzioni/reference/geomcrosses/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomcrosses/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomcrosses/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomcrosses/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomdisjoint/","text":"Funzione geomdisjoint \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"Geomdisjoint"},{"location":"gr_funzioni/reference/geomdisjoint/#funzione-geomdisjoint","text":"--","title":"Funzione geomdisjoint"},{"location":"gr_funzioni/reference/geomdisjoint/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomdisjoint/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomdisjoint/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomdisjoint/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomdistance/","text":"geomdistance \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomdistance"},{"location":"gr_funzioni/reference/geomdistance/#geomdistance","text":"--","title":"geomdistance"},{"location":"gr_funzioni/reference/geomdistance/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomdistance/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomdistance/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomdistance/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomequals/","text":"geomequals \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomequals"},{"location":"gr_funzioni/reference/geomequals/#geomequals","text":"--","title":"geomequals"},{"location":"gr_funzioni/reference/geomequals/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomequals/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomequals/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomequals/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomintersects/","text":"geomintersects \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomintersects"},{"location":"gr_funzioni/reference/geomintersects/#geomintersects","text":"--","title":"geomintersects"},{"location":"gr_funzioni/reference/geomintersects/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomintersects/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomintersects/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomintersects/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomnearest/","text":"geomnearest \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomnearest"},{"location":"gr_funzioni/reference/geomnearest/#geomnearest","text":"--","title":"geomnearest"},{"location":"gr_funzioni/reference/geomnearest/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomnearest/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomnearest/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomnearest/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomoverlaps/","text":"geomoverlaps \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomoverlaps"},{"location":"gr_funzioni/reference/geomoverlaps/#geomoverlaps","text":"--","title":"geomoverlaps"},{"location":"gr_funzioni/reference/geomoverlaps/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomoverlaps/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomoverlaps/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomoverlaps/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomredef/","text":"geomredef \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomredef"},{"location":"gr_funzioni/reference/geomredef/#geomredef","text":"--","title":"geomredef"},{"location":"gr_funzioni/reference/geomredef/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomredef/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomredef/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomredef/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomtouches/","text":"geomtouches \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomtouches"},{"location":"gr_funzioni/reference/geomtouches/#geomtouches","text":"--","title":"geomtouches"},{"location":"gr_funzioni/reference/geomtouches/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomtouches/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomtouches/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomtouches/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/geomwithin/","text":"geomwithin \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geomwithin"},{"location":"gr_funzioni/reference/geomwithin/#geomwithin","text":"--","title":"geomwithin"},{"location":"gr_funzioni/reference/geomwithin/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/geomwithin/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/geomwithin/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/geomwithin/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/intersecting_geom_count/","text":"Funzione intersecting_geom_count \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"Intersecting geom count"},{"location":"gr_funzioni/reference/intersecting_geom_count/#funzione-intersecting_geom_count","text":"--","title":"Funzione intersecting_geom_count"},{"location":"gr_funzioni/reference/intersecting_geom_count/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/intersecting_geom_count/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/intersecting_geom_count/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/intersecting_geom_count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/intersecting_geom_sum/","text":"Funzione intersecting_geom_sum \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"Intersecting geom sum"},{"location":"gr_funzioni/reference/intersecting_geom_sum/#funzione-intersecting_geom_sum","text":"--","title":"Funzione intersecting_geom_sum"},{"location":"gr_funzioni/reference/intersecting_geom_sum/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/intersecting_geom_sum/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/intersecting_geom_sum/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/intersecting_geom_sum/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/reference/","text":"Reference \u21b5 Questo gruppo \u00e8 presente SOLO dopo aver installato il plugin refFunctions . Plugin che aggiunge funzioni utente personalizzate al calcolatore di campi di QGIS per fare riferimento, analiticamente o spazialmente, tra i livelli, ad esempio recuperare un valore da un livello usando come valore di campo o una condizione spaziale (interseca, disgiunti ....) come parametro. Funzione Descrizione Funzioni della tabella: dbvalue Recupera il primo valore targetField da targetLayer quando keyField \u00e8 uguale a conditionValue dbvaluebyid Recupera il valore targetField da targetLayer usando l'ID della caratteristica interna dbquery Recupera il primo valore targetField da targetLayer quando whereClause \u00e8 true dbsql Recupera i risultati dalla query SQL Funzioni WKT: WKTcentroid Restituisce il centro di massa della geometria data come geometria del punto WKT WKTpointonsurface Restituisce il punto all'interno della geometria data WKTlenght Restituisce la lunghezza della geometria WKT fornita WKTarea Restituisce l'area della geometria WKT indicata Funzioni geometriche: geomRedef ridefinire la geometria della feature corrente con una nuova geometria WKT (sperimentale!) geomnearest Recupera il valore del campo target dalla funzione di destinazione pi\u00f9 vicina nel livello di destinazione geomdistance Recupera il valore del campo target dalla funzione target nel livello di destinazione se la funzione target \u00e8 in distanza geomwithin Recupera il valore del campo obiettivo quando la funzione di origine si trova all'interno della funzione di destinazione nel livello di destinazione geomtouches Recupera il valore del campo obiettivo quando la funzione sorgente tocca la funzione di destinazione nel livello di destinazione geomintersects Recupera il valore del campo obiettivo quando la caratteristica sorgente interseca la caratteristica obiettivo nel livello di destinazione geomcontains Recupera il valore del campo obiettivo quando la funzione di origine contiene la funzione di destinazione nel livello di destinazione geomcwithin Recupera il valore del campo obiettivo quando la funzione di origine \u00e8 disgiunta dalla funzione di destinazione nel livello di destinazione geomequals Recupera il valore del campo obiettivo quando la funzione di origine \u00e8 uguale alla funzione di destinazione nel livello di destinazione geomoverlaps Recupera il valore del campo obiettivo quando la funzione sorgente si sovrappone alla funzione di destinazione nel livello di destinazione geomcrosses Recupera il valore del campo obiettivo quando la caratteristica sorgente attraversa la caratteristica obiettivo nel livello di destinazione geomdisjoint Recupera il valore del campo obiettivo quando la funzione di origine \u00e8 disgiunta dalla funzione di destinazione nel livello di destinazione intersecting_geom_count Ottieni il conteggio delle funzionalit\u00e0 nel livello di destinazione intersecate dalla funzione di origine intersecting_geom_sum Somma gli attributi delle geometrie del livello di destinazione intersecati dalla funzione di origine","title":"Reference"},{"location":"gr_funzioni/reference/reference/#reference","text":"Questo gruppo \u00e8 presente SOLO dopo aver installato il plugin refFunctions . Plugin che aggiunge funzioni utente personalizzate al calcolatore di campi di QGIS per fare riferimento, analiticamente o spazialmente, tra i livelli, ad esempio recuperare un valore da un livello usando come valore di campo o una condizione spaziale (interseca, disgiunti ....) come parametro. Funzione Descrizione Funzioni della tabella: dbvalue Recupera il primo valore targetField da targetLayer quando keyField \u00e8 uguale a conditionValue dbvaluebyid Recupera il valore targetField da targetLayer usando l'ID della caratteristica interna dbquery Recupera il primo valore targetField da targetLayer quando whereClause \u00e8 true dbsql Recupera i risultati dalla query SQL Funzioni WKT: WKTcentroid Restituisce il centro di massa della geometria data come geometria del punto WKT WKTpointonsurface Restituisce il punto all'interno della geometria data WKTlenght Restituisce la lunghezza della geometria WKT fornita WKTarea Restituisce l'area della geometria WKT indicata Funzioni geometriche: geomRedef ridefinire la geometria della feature corrente con una nuova geometria WKT (sperimentale!) geomnearest Recupera il valore del campo target dalla funzione di destinazione pi\u00f9 vicina nel livello di destinazione geomdistance Recupera il valore del campo target dalla funzione target nel livello di destinazione se la funzione target \u00e8 in distanza geomwithin Recupera il valore del campo obiettivo quando la funzione di origine si trova all'interno della funzione di destinazione nel livello di destinazione geomtouches Recupera il valore del campo obiettivo quando la funzione sorgente tocca la funzione di destinazione nel livello di destinazione geomintersects Recupera il valore del campo obiettivo quando la caratteristica sorgente interseca la caratteristica obiettivo nel livello di destinazione geomcontains Recupera il valore del campo obiettivo quando la funzione di origine contiene la funzione di destinazione nel livello di destinazione geomcwithin Recupera il valore del campo obiettivo quando la funzione di origine \u00e8 disgiunta dalla funzione di destinazione nel livello di destinazione geomequals Recupera il valore del campo obiettivo quando la funzione di origine \u00e8 uguale alla funzione di destinazione nel livello di destinazione geomoverlaps Recupera il valore del campo obiettivo quando la funzione sorgente si sovrappone alla funzione di destinazione nel livello di destinazione geomcrosses Recupera il valore del campo obiettivo quando la caratteristica sorgente attraversa la caratteristica obiettivo nel livello di destinazione geomdisjoint Recupera il valore del campo obiettivo quando la funzione di origine \u00e8 disgiunta dalla funzione di destinazione nel livello di destinazione intersecting_geom_count Ottieni il conteggio delle funzionalit\u00e0 nel livello di destinazione intersecate dalla funzione di origine intersecting_geom_sum Somma gli attributi delle geometrie del livello di destinazione intersecati dalla funzione di origine","title":"Reference"},{"location":"gr_funzioni/reference/wktarea/","text":"wktarea \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"wktarea"},{"location":"gr_funzioni/reference/wktarea/#wktarea","text":"--","title":"wktarea"},{"location":"gr_funzioni/reference/wktarea/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/wktarea/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/wktarea/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/wktarea/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/wktcentroid/","text":"wktcentroid \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"wktcentroid"},{"location":"gr_funzioni/reference/wktcentroid/#wktcentroid","text":"--","title":"wktcentroid"},{"location":"gr_funzioni/reference/wktcentroid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/wktcentroid/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/wktcentroid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/wktcentroid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/wktlenght/","text":"wktlenght \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"wktlenght"},{"location":"gr_funzioni/reference/wktlenght/#wktlenght","text":"--","title":"wktlenght"},{"location":"gr_funzioni/reference/wktlenght/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/wktlenght/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/wktlenght/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/wktlenght/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/reference/wktpointonsurface/","text":"wktpointonsurface \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"wktpointonsurface"},{"location":"gr_funzioni/reference/wktpointonsurface/#wktpointonsurface","text":"--","title":"wktpointonsurface"},{"location":"gr_funzioni/reference/wktpointonsurface/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/reference/wktpointonsurface/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/reference/wktpointonsurface/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/reference/wktpointonsurface/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/relazioni/relazioni/","text":"Relazioni \u21b5 Abstract Questo gruppo contiene tutte le relazioni del progetto, sar\u00e0 visibile solo se il progetto ha delle relazioni tra layer.","title":"Relazioni"},{"location":"gr_funzioni/relazioni/relazioni/#relazioni","text":"Abstract Questo gruppo contiene tutte le relazioni del progetto, sar\u00e0 visibile solo se il progetto ha delle relazioni tra layer.","title":"Relazioni"},{"location":"gr_funzioni/stringhe_di_testo/ascii/","text":"ascii \u21b5 Restituisce il codice unicode associato al primo carattere di una stringa. Sintassi \u21b5 ascii( string ) Argomenti \u21b5 string la stringa da convertire in codice unicode Esempi \u21b5 ascii('Q') \u2192 81 nota bene \u21b5 -- osservazioni \u21b5 --","title":"ascii"},{"location":"gr_funzioni/stringhe_di_testo/ascii/#ascii","text":"Restituisce il codice unicode associato al primo carattere di una stringa.","title":"ascii"},{"location":"gr_funzioni/stringhe_di_testo/ascii/#sintassi","text":"ascii( string )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/ascii/#argomenti","text":"string la stringa da convertire in codice unicode","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/ascii/#esempi","text":"ascii('Q') \u2192 81","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/ascii/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/ascii/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/char/","text":"char \u21b5 Restituisce il carattere associato ad un codice unicode. Sintassi \u21b5 char( code ) Argomenti \u21b5 code un numero codice unicode Esempi \u21b5 char(81) \u2192 'Q' nota bene \u21b5 -- osservazioni \u21b5 --","title":"char"},{"location":"gr_funzioni/stringhe_di_testo/char/#char","text":"Restituisce il carattere associato ad un codice unicode.","title":"char"},{"location":"gr_funzioni/stringhe_di_testo/char/#sintassi","text":"char( code )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/char/#argomenti","text":"code un numero codice unicode","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/char/#esempi","text":"char(81) \u2192 'Q'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/char/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/char/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/concat/","text":"concat \u21b5 Concatena svariate stringhe in una sola. Valori NULL sono convertiti in stringhe vuote. Altri valori (come i numeri) sono convertiti in stringa. Sintassi \u21b5 concat( string1 , string2 , \u2026 ) Argomenti \u21b5 string un valore stringa Esempi \u21b5 concat('To', 't\u00f2') \u2192 'Tot\u00f2' concat('a','b','c','d','e') \u2192 'abcde' concat('Anno ', 2018) \u2192 'Anno 2018' concat('QGIS 3.0', NULL) \u2192 'QGIS 3.0' nota bene \u21b5 -- osservazioni \u21b5 --","title":"concat"},{"location":"gr_funzioni/stringhe_di_testo/concat/#concat","text":"Concatena svariate stringhe in una sola. Valori NULL sono convertiti in stringhe vuote. Altri valori (come i numeri) sono convertiti in stringa.","title":"concat"},{"location":"gr_funzioni/stringhe_di_testo/concat/#sintassi","text":"concat( string1 , string2 , \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/concat/#argomenti","text":"string un valore stringa","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/concat/#esempi","text":"concat('To', 't\u00f2') \u2192 'Tot\u00f2' concat('a','b','c','d','e') \u2192 'abcde' concat('Anno ', 2018) \u2192 'Anno 2018' concat('QGIS 3.0', NULL) \u2192 'QGIS 3.0'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/concat/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/concat/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/format/","text":"format \u21b5 Formatta una stringa usando gli argomenti forniti. Sintassi \u21b5 format( string , arg1 , arg2 , \u2026 ) Argomenti \u21b5 string Una stringa con segnaposti per argomenti. Usa %1, %2, etc. per i segnaposti. I segnaposti possono essere ripetuti. arg Qualsiasi tipo. Qualsiasi numero di argomenti. Esempi \u21b5 format('This %1 a %2','is', 'test') \u2192 'This is a test'' nota bene \u21b5 -- osservazioni \u21b5 --","title":"format"},{"location":"gr_funzioni/stringhe_di_testo/format/#format","text":"Formatta una stringa usando gli argomenti forniti.","title":"format"},{"location":"gr_funzioni/stringhe_di_testo/format/#sintassi","text":"format( string , arg1 , arg2 , \u2026 )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/format/#argomenti","text":"string Una stringa con segnaposti per argomenti. Usa %1, %2, etc. per i segnaposti. I segnaposti possono essere ripetuti. arg Qualsiasi tipo. Qualsiasi numero di argomenti.","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/format/#esempi","text":"format('This %1 a %2','is', 'test') \u2192 'This is a test''","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/format/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/format/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/format_date/","text":"format_date \u21b5 Formatta un tipo di data o stringa in un formato stringa personalizzato. Usa stringhe nel formato data/ora Sintassi \u21b5 Format_date( datetime , format ) Argomenti \u21b5 datetime valora data, ora, o data/ora format Modello di stringhe usato per formattare la stringa. Espressione In uscita d il giorno in numero senza lo zero iniziale (da 1 a 31) dd il giorno in numero con lo zero iniziale (da 01 a 31) ddd il nome locale del giorno abbreviato (es. da 'Mon' a 'Sun') dddd il nome locale del giorno per esteso (es. da 'Monday' a 'Sunday') M il mese in numero senza lo zero iniziale (1-12) MM il mese in numero con lo zero iniziale (01-12) MMM il nome locale del mese abbreviato (es. da 'Jan' a 'Dec') MMMM il nome locale del mese per esteso (es. da 'January' a 'December') yy l'anno come un numero a due cifre (00-99) yyyy l'anno come un numero a quattro cifre Queste espressioni possono essere usate per la parte time della stringa da formattare: Espressione In uscita h l'ora senza lo zero iniziale (da 0 a 23 o da 1 a 12 se visualizzi AM/PM) hh l'ora con lo zero iniziale (da 00 a 23 o da 01 a 12 se visualizzi AM/PM) H l'ora senza lo zero iniziale (da 0 a 23, anche se visualizzi AM/PM) HH l'ora con lo zero iniziale (da 00 a 23, anche se visualizzi AM/PM) m il minuto senza lo zero iniziale (da 0 a 59) mm il minuto con lo zero iniziale (da 00 a 59) s il secondo senza lo zero iniziale (da 0 a 59) ss il secondo con lo zero iniziale (da 00 a 59) z i millisecondi senza gli zeri iniziali (da 0 a 999) zzz i millisecondi con gli zeri iniziali (da 000 a 999) AP o A interpretato come un orario nel formato AM/PM. AP deve essere \"AM\" oppure \"PM\". ap o a interpretato come un orario nel formato AM/PM. ap deve essere \"am\" oppure \"pm\". Esempi \u21b5 format_date('2012-05-15','dd.MM.yyyy') \u2192 '15.05.2012' nota bene \u21b5 -- osservazioni \u21b5 --","title":"format_date"},{"location":"gr_funzioni/stringhe_di_testo/format_date/#format_date","text":"Formatta un tipo di data o stringa in un formato stringa personalizzato. Usa stringhe nel formato data/ora","title":"format_date"},{"location":"gr_funzioni/stringhe_di_testo/format_date/#sintassi","text":"Format_date( datetime , format )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/format_date/#argomenti","text":"datetime valora data, ora, o data/ora format Modello di stringhe usato per formattare la stringa. Espressione In uscita d il giorno in numero senza lo zero iniziale (da 1 a 31) dd il giorno in numero con lo zero iniziale (da 01 a 31) ddd il nome locale del giorno abbreviato (es. da 'Mon' a 'Sun') dddd il nome locale del giorno per esteso (es. da 'Monday' a 'Sunday') M il mese in numero senza lo zero iniziale (1-12) MM il mese in numero con lo zero iniziale (01-12) MMM il nome locale del mese abbreviato (es. da 'Jan' a 'Dec') MMMM il nome locale del mese per esteso (es. da 'January' a 'December') yy l'anno come un numero a due cifre (00-99) yyyy l'anno come un numero a quattro cifre Queste espressioni possono essere usate per la parte time della stringa da formattare: Espressione In uscita h l'ora senza lo zero iniziale (da 0 a 23 o da 1 a 12 se visualizzi AM/PM) hh l'ora con lo zero iniziale (da 00 a 23 o da 01 a 12 se visualizzi AM/PM) H l'ora senza lo zero iniziale (da 0 a 23, anche se visualizzi AM/PM) HH l'ora con lo zero iniziale (da 00 a 23, anche se visualizzi AM/PM) m il minuto senza lo zero iniziale (da 0 a 59) mm il minuto con lo zero iniziale (da 00 a 59) s il secondo senza lo zero iniziale (da 0 a 59) ss il secondo con lo zero iniziale (da 00 a 59) z i millisecondi senza gli zeri iniziali (da 0 a 999) zzz i millisecondi con gli zeri iniziali (da 000 a 999) AP o A interpretato come un orario nel formato AM/PM. AP deve essere \"AM\" oppure \"PM\". ap o a interpretato come un orario nel formato AM/PM. ap deve essere \"am\" oppure \"pm\".","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/format_date/#esempi","text":"format_date('2012-05-15','dd.MM.yyyy') \u2192 '15.05.2012'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/format_date/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/format_date/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/format_number/","text":"format_number \u21b5 Restituisce un numero formattato con il separatore locale per le migliaia. Inoltre tronca il numero al numero di posti forniti. Sintassi \u21b5 format_number( number , places ) Argomenti \u21b5 number numero da formattare places intero rappresentante il numero di posizioni decimali a cui troncare la stringa. Esempi \u21b5 format_number(10000000.332,2) \u2192 '10,000,000.33' nota bene \u21b5 -- osservazioni \u21b5 --","title":"format_number"},{"location":"gr_funzioni/stringhe_di_testo/format_number/#format_number","text":"Restituisce un numero formattato con il separatore locale per le migliaia. Inoltre tronca il numero al numero di posti forniti.","title":"format_number"},{"location":"gr_funzioni/stringhe_di_testo/format_number/#sintassi","text":"format_number( number , places )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/format_number/#argomenti","text":"number numero da formattare places intero rappresentante il numero di posizioni decimali a cui troncare la stringa.","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/format_number/#esempi","text":"format_number(10000000.332,2) \u2192 '10,000,000.33'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/format_number/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/format_number/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/left/","text":"left \u21b5 Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a sinistra della stringa. Sintassi \u21b5 left( string , length ) Argomenti \u21b5 string una stringa length intero. Il numero di caratteri da estrarre dalla parte sinistra della stringa. Esempi \u21b5 left('Hello World',5) \u2192 'Hello' nota bene \u21b5 -- osservazioni \u21b5 --","title":"left"},{"location":"gr_funzioni/stringhe_di_testo/left/#left","text":"Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a sinistra della stringa.","title":"left"},{"location":"gr_funzioni/stringhe_di_testo/left/#sintassi","text":"left( string , length )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/left/#argomenti","text":"string una stringa length intero. Il numero di caratteri da estrarre dalla parte sinistra della stringa.","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/left/#esempi","text":"left('Hello World',5) \u2192 'Hello'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/left/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/left/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/length/","text":"length \u21b5 Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring. Variabile stringa \u21b5 Restituisce il numero di caratteri contenuti in una stringa. Sintassi \u21b5 length( string ) Argomenti \u21b5 string stringa della quale calcolare la lunghezza Esempi \u21b5 length('hello') \u2192 5 Variabile geometria \u21b5 Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length, la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi \u21b5 length( geometry ) Argomenti \u21b5 geometry oggetto geometria linea Esempi \u21b5 length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4 nota bene \u21b5 -- osservazioni \u21b5 --","title":"length"},{"location":"gr_funzioni/stringhe_di_testo/length/#length","text":"Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring.","title":"length"},{"location":"gr_funzioni/stringhe_di_testo/length/#variabile-stringa","text":"Restituisce il numero di caratteri contenuti in una stringa.","title":"Variabile stringa"},{"location":"gr_funzioni/stringhe_di_testo/length/#sintassi","text":"length( string )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/length/#argomenti","text":"string stringa della quale calcolare la lunghezza","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/length/#esempi","text":"length('hello') \u2192 5","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/length/#variabile-geometria","text":"Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length, la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza.","title":"Variabile geometria"},{"location":"gr_funzioni/stringhe_di_testo/length/#sintassi_1","text":"length( geometry )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/length/#argomenti_1","text":"geometry oggetto geometria linea","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/length/#esempi_1","text":"length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/length/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/length/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/lower/","text":"lower \u21b5 Converte una stringa in lettere minuscole. Sintassi \u21b5 lower( string ) Argomenti \u21b5 string la stringa da convertire in minuscolo Esempi \u21b5 lower('HELLO World') \u2192 'hello world' nota bene \u21b5 -- osservazioni \u21b5 --","title":"lower"},{"location":"gr_funzioni/stringhe_di_testo/lower/#lower","text":"Converte una stringa in lettere minuscole.","title":"lower"},{"location":"gr_funzioni/stringhe_di_testo/lower/#sintassi","text":"lower( string )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/lower/#argomenti","text":"string la stringa da convertire in minuscolo","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/lower/#esempi","text":"lower('HELLO World') \u2192 'hello world'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/lower/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/lower/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/lpad/","text":"lpad \u21b5 Restituisce una stringa riempita a sinistra fino alla larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata. Sintassi \u21b5 lpad( string , width , fill ) Argomenti \u21b5 string stringa da riempire width lunghezza della nuova stringa fill carattere con il quale riempire lo spazio rimanente Esempi \u21b5 lpad('Hello', 10, 'x') \u2192 'xxxxxHello' lpad('Hello', 3, 'x') \u2192 'Hel' nota bene \u21b5 -- osservazioni \u21b5 -- Altri esempi utili \u21b5 se volessi popolare un campo in modo da ottenere segnale01.png, segnale02.png...segnale99.png \u21b5 id path 10 segnale01.png 15 segnale02.png 22 segnale03.png .. .. 520 segnale99.png 'segnale' || lpad( @row_number ,2, '00' )|| '.png' \u2192 'segnale01.png' per ricostruire un identificativo univoco CODICE_ASC \u21b5 CODICE_STR NUM_CIV BARRATO CODICE_ASC 000020 1 0000002000001 000575 1 0000057500001 001785 1 1 00001785000011 005495 38 1 00005495000381 001480 572 10 000014800057210 000150 1 0000015000001 lpad(\"CODICE_STR\",8,0)|| lpad( \"NUM_CIV\",5,0) || coalesce(\"BARRATO\",'')","title":"lpad"},{"location":"gr_funzioni/stringhe_di_testo/lpad/#lpad","text":"Restituisce una stringa riempita a sinistra fino alla larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata.","title":"lpad"},{"location":"gr_funzioni/stringhe_di_testo/lpad/#sintassi","text":"lpad( string , width , fill )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/lpad/#argomenti","text":"string stringa da riempire width lunghezza della nuova stringa fill carattere con il quale riempire lo spazio rimanente","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/lpad/#esempi","text":"lpad('Hello', 10, 'x') \u2192 'xxxxxHello' lpad('Hello', 3, 'x') \u2192 'Hel'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/lpad/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/lpad/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/lpad/#altri-esempi-utili","text":"","title":"Altri esempi utili"},{"location":"gr_funzioni/stringhe_di_testo/lpad/#se-volessi-popolare-un-campo-in-modo-da-ottenere-segnale01png-segnale02pngsegnale99png","text":"id path 10 segnale01.png 15 segnale02.png 22 segnale03.png .. .. 520 segnale99.png 'segnale' || lpad( @row_number ,2, '00' )|| '.png' \u2192 'segnale01.png'","title":"se volessi popolare un campo in modo da ottenere segnale01.png, segnale02.png...segnale99.png"},{"location":"gr_funzioni/stringhe_di_testo/lpad/#per-ricostruire-un-identificativo-univoco-codice_asc","text":"CODICE_STR NUM_CIV BARRATO CODICE_ASC 000020 1 0000002000001 000575 1 0000057500001 001785 1 1 00001785000011 005495 38 1 00005495000381 001480 572 10 000014800057210 000150 1 0000015000001 lpad(\"CODICE_STR\",8,0)|| lpad( \"NUM_CIV\",5,0) || coalesce(\"BARRATO\",'')","title":"per ricostruire un identificativo univoco CODICE_ASC"},{"location":"gr_funzioni/stringhe_di_testo/regexp_match/","text":"regexp_match \u21b5 Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata. Sintassi \u21b5 regexp_match( input_string , regex ) Argomenti \u21b5 input_string la stringa da confrontare con l'espressione regolare regex L'espressione regolare da confrontare. I caratteri backslash (\\) devono essere doppiamente escaped (es \"\\s\" per selezionare un carattere spazio bianco). Esempi \u21b5 regexp_match('QGIS ROCKS','\\\\sROCKS') \u2192 5 nota bene \u21b5 -- osservazioni \u21b5 link ^ \u00ab apice \u00bb ha due significati: se messo all\u2019inizio della regex impone che la linea cominci con quello che segue l\u2019apice; se usato con le parentesi quadre e messo prima di un carattere significa: tranne il carattere che segue, \u00e8 una negazione $ \u00ab dollaro \u00bb se messa alla fine della regex impone che la linea finisca con quello che precede il dollaro . \u00ab punto \u00bb qualunque carattere * \u00ab asterisco \u00bb accetta zero o pi\u00f9 ripetizioni del carattere precedente + \u00ab pi\u00f9 \u00bb accetta una o pi\u00f9 ripetizioni del carattere precedente [ ] \u00ab parentesi quadre \u00bb tutti i caratteri all\u2019interno delle [ ] sono accettati: le due parentesi si comportano come un singolo carattere [^ ] \u00ab parentesi quadre con apice \u00bb tutti i caratteri tranne quelli all\u2019interno delle [ ] sono accettati / \u00ab slash \u00bb inizia/termina l\u2019espressione regolare \u00ab barra rovesciata \u00bb tratta il carattere speciale che segue come un normale carattere testuale o viceversa tratta un normale carattere come un carattere speciale link1 link2 regexp_match('QGIS ROCKS ciao come stai','$')= length ('QGIS ROCKS ciao come stai')+1","title":"regexp_match"},{"location":"gr_funzioni/stringhe_di_testo/regexp_match/#regexp_match","text":"Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata.","title":"regexp_match"},{"location":"gr_funzioni/stringhe_di_testo/regexp_match/#sintassi","text":"regexp_match( input_string , regex )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/regexp_match/#argomenti","text":"input_string la stringa da confrontare con l'espressione regolare regex L'espressione regolare da confrontare. I caratteri backslash (\\) devono essere doppiamente escaped (es \"\\s\" per selezionare un carattere spazio bianco).","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/regexp_match/#esempi","text":"regexp_match('QGIS ROCKS','\\\\sROCKS') \u2192 5","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/regexp_match/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/regexp_match/#osservazioni","text":"link ^ \u00ab apice \u00bb ha due significati: se messo all\u2019inizio della regex impone che la linea cominci con quello che segue l\u2019apice; se usato con le parentesi quadre e messo prima di un carattere significa: tranne il carattere che segue, \u00e8 una negazione $ \u00ab dollaro \u00bb se messa alla fine della regex impone che la linea finisca con quello che precede il dollaro . \u00ab punto \u00bb qualunque carattere * \u00ab asterisco \u00bb accetta zero o pi\u00f9 ripetizioni del carattere precedente + \u00ab pi\u00f9 \u00bb accetta una o pi\u00f9 ripetizioni del carattere precedente [ ] \u00ab parentesi quadre \u00bb tutti i caratteri all\u2019interno delle [ ] sono accettati: le due parentesi si comportano come un singolo carattere [^ ] \u00ab parentesi quadre con apice \u00bb tutti i caratteri tranne quelli all\u2019interno delle [ ] sono accettati / \u00ab slash \u00bb inizia/termina l\u2019espressione regolare \u00ab barra rovesciata \u00bb tratta il carattere speciale che segue come un normale carattere testuale o viceversa tratta un normale carattere come un carattere speciale link1 link2 regexp_match('QGIS ROCKS ciao come stai','$')= length ('QGIS ROCKS ciao come stai')+1","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/","text":"regexp_replace \u21b5 Restituisce una stringa con la parte che soddisfa l'espressione regolare sostituita. Sintassi \u21b5 regexp_replace( input_string , regex , replacement ) Argomenti \u21b5 input_string la stringa in cui sostituire regex L'espressione regolare per sostituire. I caratteri backslash devono essere double escaped (es \"\\s\" per selezionare un carattere spazio bianco). replacement La stringa che sostituir\u00e0 qualsiasi occorrenza corrispondente dell'espressione regolare passata. I gruppi catturati possono essere inseriti nella stringa di sostituzione usando \\\\1 , \\\\2 , etc. Esempi \u21b5 Esempio 2 \u21b5 Tabella: id particella 1 00AXJ 2 000BBG 3 0JJU Aggiornare il campo particella togliendo gli zeri iniziali: espressione da usare: regexp_replace( \"particella\" ,'^0+','') risultato: id particella 1 AXJ 2 BBG 3 JJU ecco un tool dove provare le regexp: https://regex101.com/r/SSDBmj/1 Esempio 3 \u21b5 id valore 1 data20200224 2 data20200225 3 data20200226 eliminare data e inserire un simbolo tra anno, mese e giorno espressione da usare: regexp_replace(\"valore\" ,'(data)(....)(..)(..)','\\\\2-\\\\3-\\\\4') risultato: id valore 1 2020-02-24 2 2020-02-25 3 2020-02-26 Esempio 4 \u21b5 Tabella: id particella 1 00AXJ.su 2 000BBG.cot 3 0JJU.1234 Aggiornare il campo particella togliendo tutto quello dopo il punto (.): espressione da usare: regexp_replace( 'xxxxx.yyy','\\\\.(.+)$','') risultato: id particella 1 00AXJ 2 000BBG 3 0JJU nota bene \u21b5 -- osservazioni \u21b5 --","title":"regexp_replace"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/#regexp_replace","text":"Restituisce una stringa con la parte che soddisfa l'espressione regolare sostituita.","title":"regexp_replace"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/#sintassi","text":"regexp_replace( input_string , regex , replacement )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/#argomenti","text":"input_string la stringa in cui sostituire regex L'espressione regolare per sostituire. I caratteri backslash devono essere double escaped (es \"\\s\" per selezionare un carattere spazio bianco). replacement La stringa che sostituir\u00e0 qualsiasi occorrenza corrispondente dell'espressione regolare passata. I gruppi catturati possono essere inseriti nella stringa di sostituzione usando \\\\1 , \\\\2 , etc.","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/#esempio-2","text":"Tabella: id particella 1 00AXJ 2 000BBG 3 0JJU Aggiornare il campo particella togliendo gli zeri iniziali: espressione da usare: regexp_replace( \"particella\" ,'^0+','') risultato: id particella 1 AXJ 2 BBG 3 JJU ecco un tool dove provare le regexp: https://regex101.com/r/SSDBmj/1","title":"Esempio 2"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/#esempio-3","text":"id valore 1 data20200224 2 data20200225 3 data20200226 eliminare data e inserire un simbolo tra anno, mese e giorno espressione da usare: regexp_replace(\"valore\" ,'(data)(....)(..)(..)','\\\\2-\\\\3-\\\\4') risultato: id valore 1 2020-02-24 2 2020-02-25 3 2020-02-26","title":"Esempio 3"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/#esempio-4","text":"Tabella: id particella 1 00AXJ.su 2 000BBG.cot 3 0JJU.1234 Aggiornare il campo particella togliendo tutto quello dopo il punto (.): espressione da usare: regexp_replace( 'xxxxx.yyy','\\\\.(.+)$','') risultato: id particella 1 00AXJ 2 000BBG 3 0JJU","title":"Esempio 4"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/regexp_replace/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/regexp_substr/","text":"regexp_substr \u21b5 Restituisce la porzione di una stringa che soddisfa l'espressione regolare passata. Sintassi \u21b5 regexp_substr( input_string , regex ) Argomenti \u21b5 input_string la stringa in cui cercare regex L'espressione regolare da contro abbinare. I caratteri backslash devono essere \"double escaped\" ( es \"\\\\s\" per selezionare un carattere spazio). Esempi \u21b5 regexp_substr('abc123','(\\\\d+)') \u2192 '123' nota bene \u21b5 -- osservazioni \u21b5 --","title":"regexp_substr"},{"location":"gr_funzioni/stringhe_di_testo/regexp_substr/#regexp_substr","text":"Restituisce la porzione di una stringa che soddisfa l'espressione regolare passata.","title":"regexp_substr"},{"location":"gr_funzioni/stringhe_di_testo/regexp_substr/#sintassi","text":"regexp_substr( input_string , regex )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/regexp_substr/#argomenti","text":"input_string la stringa in cui cercare regex L'espressione regolare da contro abbinare. I caratteri backslash devono essere \"double escaped\" ( es \"\\\\s\" per selezionare un carattere spazio).","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/regexp_substr/#esempi","text":"regexp_substr('abc123','(\\\\d+)') \u2192 '123'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/regexp_substr/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/regexp_substr/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/replace/","text":"replace \u21b5 Restituisce una stringa con la stringa, array o mappa di stringhe passate sostituite. Variabile stringa & array \u21b5 Restituisce una stringa con la stringa o array di stringa passate sostituite da una stringa o un array di stringhe. Sintassi \u21b5 replace( string , before , after ) Argomenti \u21b5 string la stringa in ingresso before la stringa o array di stringhe da sostituire after la stringa o l'array di stringe da usare come sostituzione Esempi \u21b5 replace('QGIS SHOULD ROCK','SHOULD','DOES') \u2192 'QGIS DOES ROCK' replace('QGIS ABC',array('A','B','C'),array('X','Y','Z')) \u2192 'QGIS XYZ' replace('QGIS',array('Q','S'),'') \u2192 'GI' Variabile mappa \u21b5 Restituisce una stringa con le chiavi mappa fornite sostituite da valori accoppiati. Sintassi \u21b5 replace( string , map ) Argomenti \u21b5 string la stringa in ingresso map la mappa che contiene le chiavi e i valori Esempi \u21b5 replace('APP SHOULD ROCK',map('APP','QGIS','SHOULD','DOES')) \u2192 'QGIS DOES ROCK' nota bene \u21b5 -- osservazioni \u21b5 --","title":"replace"},{"location":"gr_funzioni/stringhe_di_testo/replace/#replace","text":"Restituisce una stringa con la stringa, array o mappa di stringhe passate sostituite.","title":"replace"},{"location":"gr_funzioni/stringhe_di_testo/replace/#variabile-stringa-array","text":"Restituisce una stringa con la stringa o array di stringa passate sostituite da una stringa o un array di stringhe.","title":"Variabile stringa &amp; array"},{"location":"gr_funzioni/stringhe_di_testo/replace/#sintassi","text":"replace( string , before , after )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/replace/#argomenti","text":"string la stringa in ingresso before la stringa o array di stringhe da sostituire after la stringa o l'array di stringe da usare come sostituzione","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/replace/#esempi","text":"replace('QGIS SHOULD ROCK','SHOULD','DOES') \u2192 'QGIS DOES ROCK' replace('QGIS ABC',array('A','B','C'),array('X','Y','Z')) \u2192 'QGIS XYZ' replace('QGIS',array('Q','S'),'') \u2192 'GI'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/replace/#variabile-mappa","text":"Restituisce una stringa con le chiavi mappa fornite sostituite da valori accoppiati.","title":"Variabile mappa"},{"location":"gr_funzioni/stringhe_di_testo/replace/#sintassi_1","text":"replace( string , map )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/replace/#argomenti_1","text":"string la stringa in ingresso map la mappa che contiene le chiavi e i valori","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/replace/#esempi_1","text":"replace('APP SHOULD ROCK',map('APP','QGIS','SHOULD','DOES')) \u2192 'QGIS DOES ROCK'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/replace/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/replace/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/right/","text":"right \u21b5 Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a destra della stringa. Sintassi \u21b5 right( string , length ) Argomenti \u21b5 string una stringa length intero. Il numero di caratteri da estrarre dalla parte destra della stringa. Esempi \u21b5 right('Hello World',5) \u2192 'World' nota bene \u21b5 -- osservazioni \u21b5 --","title":"right"},{"location":"gr_funzioni/stringhe_di_testo/right/#right","text":"Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a destra della stringa.","title":"right"},{"location":"gr_funzioni/stringhe_di_testo/right/#sintassi","text":"right( string , length )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/right/#argomenti","text":"string una stringa length intero. Il numero di caratteri da estrarre dalla parte destra della stringa.","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/right/#esempi","text":"right('Hello World',5) \u2192 'World'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/right/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/right/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/rpad/","text":"rpad \u21b5 Restituisce una stringa riempita a destra della larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata. Sintassi \u21b5 rpad( string , width , fill ) Argomenti \u21b5 string stringa da riempire width lunghezza della nuova stringa fill carattere con il quale riempire lo spazio rimanente Esempi \u21b5 rpad('Hello', 10, 'x') \u2192 'Helloxxxxx' rpad('Hello', 3, 'x') \u2192 'Hel' nota bene \u21b5 -- osservazioni \u21b5 --","title":"rpad"},{"location":"gr_funzioni/stringhe_di_testo/rpad/#rpad","text":"Restituisce una stringa riempita a destra della larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata.","title":"rpad"},{"location":"gr_funzioni/stringhe_di_testo/rpad/#sintassi","text":"rpad( string , width , fill )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/rpad/#argomenti","text":"string stringa da riempire width lunghezza della nuova stringa fill carattere con il quale riempire lo spazio rimanente","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/rpad/#esempi","text":"rpad('Hello', 10, 'x') \u2192 'Helloxxxxx' rpad('Hello', 3, 'x') \u2192 'Hel'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/rpad/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/rpad/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo/","text":"Stringhe di testo \u21b5 Questo gruppo contiene le funzioni che operano sulle stringhe es. sostituzione , conversione in maiuscolo . Funzione Descrizione ascii la stringa da convertire in codice unicode ( >=3.14 ) char Restituisce il carattere associato ad un codice unicode concat Concatena svariate stringhe in una sola. Valori NULL sono convertiti in stringhe vuote. Altri valori (come i numeri) sono convertiti in stringa format Formatta una stringa usando gli argomenti forniti format_date Formatta un tipo di data o stringa in un formato stringa personalizzato. Usa stringhe nel formato data/ora Qt format_number Restituisce un numero formattato con il separatore locale per le migliaia. Inoltre tronca il numero al numero di posti forniti left(string, n) Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a sinistra della stringa length Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring lower Converte una stringa in lettere minuscole lpad Restituisce una stringa riempita a sinistra fino alla larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata regexp_match Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata regexp_replace Restituisce una stringa con la parte che soddisfa l'espressione regolare sostituita regexp_substr Restituisce la porzione di una stringa che soddisfa l'espressione regolare passata replace Restituisce una stringa con la stringa o array di stringa passate sostituite da una stringa o un array di stringhe right(string, n) Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a destra della stringa rpad Restituisce una stringa riempita a destra della larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata strpos Restituisce la prima posizione di corrispondenza di una sottostringa dentro in un'altra stringa o 0 se la sottostringa non viene trovata substr Restituisce una parte di una stringa title Converte tutte le parole in \"title case\" (tutte le parole in minuscolo con la prima lettera maiuscola) to_string Converte un numero in stringa trim Rimuove tutti gli spazi vuoti (spazi, tabulazioni, etc.) all'inizio e alla fine di una stringa upper Converte una stringa in lettere maiuscole wordwrap Restituisce una stringa posta a capo ad un massimo/minimo numero di caratteri","title":"Stringhe di testo"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo/#stringhe-di-testo","text":"Questo gruppo contiene le funzioni che operano sulle stringhe es. sostituzione , conversione in maiuscolo . Funzione Descrizione ascii la stringa da convertire in codice unicode ( >=3.14 ) char Restituisce il carattere associato ad un codice unicode concat Concatena svariate stringhe in una sola. Valori NULL sono convertiti in stringhe vuote. Altri valori (come i numeri) sono convertiti in stringa format Formatta una stringa usando gli argomenti forniti format_date Formatta un tipo di data o stringa in un formato stringa personalizzato. Usa stringhe nel formato data/ora Qt format_number Restituisce un numero formattato con il separatore locale per le migliaia. Inoltre tronca il numero al numero di posti forniti left(string, n) Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a sinistra della stringa length Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring lower Converte una stringa in lettere minuscole lpad Restituisce una stringa riempita a sinistra fino alla larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata regexp_match Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata regexp_replace Restituisce una stringa con la parte che soddisfa l'espressione regolare sostituita regexp_substr Restituisce la porzione di una stringa che soddisfa l'espressione regolare passata replace Restituisce una stringa con la stringa o array di stringa passate sostituite da una stringa o un array di stringhe right(string, n) Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a destra della stringa rpad Restituisce una stringa riempita a destra della larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata strpos Restituisce la prima posizione di corrispondenza di una sottostringa dentro in un'altra stringa o 0 se la sottostringa non viene trovata substr Restituisce una parte di una stringa title Converte tutte le parole in \"title case\" (tutte le parole in minuscolo con la prima lettera maiuscola) to_string Converte un numero in stringa trim Rimuove tutti gli spazi vuoti (spazi, tabulazioni, etc.) all'inizio e alla fine di una stringa upper Converte una stringa in lettere maiuscole wordwrap Restituisce una stringa posta a capo ad un massimo/minimo numero di caratteri","title":"Stringhe di testo"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/","text":"Gruppo Stringhe di Testo \u21b5 Abstract Questo gruppo contiene le funzioni che operano sulle stringhe es. sostituzione, conversione in maiuscolo. ascii \u21b5 Restituisce il codice unicode associato al primo carattere di una stringa. Sintassi: ascii( string ) Argomenti: string la stringa da convertire in codice unicode Esempi: ascii('Q') \u2192 81 char \u21b5 Restituisce il carattere associato ad un codice unicode. Sintassi: char( code ) Argomenti: code un numero codice unicode Esempi: char(81) \u2192 'Q' concat \u21b5 Concatena svariate stringhe in una sola. Valori NULL sono convertiti in stringhe vuote. Altri valori (come i numeri) sono convertiti in stringa. Sintassi: concat( string1 , string2 , \u2026 ) Argomenti: string un valore stringa Esempi: concat('To', 't\u00f2') \u2192 'Tot\u00f2' concat('a','b','c','d','e') \u2192 'abcde' concat('Anno ', 2018) \u2192 'Anno 2018' concat('QGIS 3.0', NULL) \u2192 'QGIS 3.0' format \u21b5 Formatta una stringa usando gli argomenti forniti. Sintassi: format( string , arg1 , arg2 , \u2026 ) Argomenti: string Una stringa con segnaposto %1, %2 e cos\u00ec via per gli argomenti. I segnaposto possono essere ripetuti. Il segnaposto con il numero pi\u00f9 basso viene sostituito da arg1, il successivo da arg2, ecc. arg Qualsiasi tipo. Qualsiasi numero di argomenti. Esempi: format('This %1 a %2','is', 'test') \u2192 'Questo \u00e8 un test' format('This is %2','a bit unexpected but 2 is lowest number in string','normal') \u2192 'This is a bit unexpected but 2 is lowest number in string' format_date \u21b5 Formatta una data o una stringa in un formato stringa personalizzato. Usa le Qt date/time format strings. Vedi QDateTime::toString . Sintassi: Format_date( datetime , format [, language ] ) Argomenti: datetime valora data, ora, o data/ora format Modello di stringhe usato per formattare la stringa. Espressione Risultato d il giorno in numero senza lo zero iniziale (da 1 a 31) dd il giorno in numero con lo zero iniziale (da 01 a 31) ddd il nome locale del giorno abbreviato (es. da 'Mon' a 'Sun') dddd il nome locale del giorno per esteso (es. da 'Monday' a 'Sunday') M il mese in numero senza lo zero iniziale (1-12) MM il mese in numero con lo zero iniziale (01-12) MMM il nome locale del mese abbreviato (es. da 'Jan' a 'Dec') MMMM il nome locale del mese per esteso (es. da 'January' a 'December') yy l'anno come un numero a due cifre (00-99) yyyy l'anno come un numero a quattro cifre Queste espressioni possono essere usate per la parte time della stringa da formattare: Espressione Risultato h l'ora senza lo zero iniziale (da 0 a 23 o da 1 a 12 se visualizzi AM/PM) hh l'ora con lo zero iniziale (da 00 a 23 o da 01 a 12 se visualizzi AM/PM) H l'ora senza lo zero iniziale (da 0 a 23, anche se visualizzi AM/PM) HH l'ora con lo zero iniziale (da 00 a 23, anche se visualizzi AM/PM) m il minuto senza lo zero iniziale (da 0 a 59) mm il minuto con lo zero iniziale (da 00 a 59) s il secondo senza lo zero iniziale (da 0 a 59) ss il secondo con lo zero iniziale (da 00 a 59) z i millisecondi senza gli zeri iniziali (da 0 a 999) zzz i millisecondi con gli zeri iniziali (da 000 a 999) AP o A interpretato come un orario nel formato AM/PM. AP deve essere \"AM\" oppure \"PM\". ap o a interpretato come un orario nel formato AM/PM. ap deve essere \"am\" oppure \"pm\". language lingua (minuscolo, due o tre lettere, codice lingua ISO 639 ) utilizzata per formattare la data in una stringa personalizzata. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Esempi: format_date('2012-05-15','dd.MM.yyyy') \u2192 '15.05.2012' format_date('2012-05-15','d MMMM yyyy','fr') \u2192 '15 mai 2012' format_date('2012-05-15','dddd') \u2192 'Tuesday', se la lingua corrente \u00e8 una variante inglese format_date('2012-05-15 13:54:20','dd.MM.yy') \u2192 '15.05.12' format_date('13:54:20','hh:mm AP') \u2192 '01:54 PM' format_number \u21b5 Restituisce un numero formattato con il separatore locale per le migliaia. Inoltre tronca il numero al numero di posti forniti. Sintassi: format_number( number [, places ][, language ] ) [ ] indica componenti opzionali Argomenti: number numero da formattare places intero rappresentante il numero di posizioni decimali a cui troncare la stringa. language lingua (minuscolo, due o tre lettere, codice lingua ISO 639 ) utilizzata per formattare il numero in una stringa. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Esempi: format_number(10000000.332,2) \u2192 '10,000,000.33' se ad es. la locale corrente \u00e8 una variante inglese format_number(10000000.332,2,'fr') \u2192 '10 000 000,33' left \u21b5 Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a sinistra della stringa. Sintassi: left( string , length ) Argomenti: string una stringa length intero. Il numero di caratteri da estrarre dalla parte sinistra della stringa. Esempi: left('Hello World',5) \u2192 'Hello' length \u21b5 Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring. Variabile stringa \u21b5 Restituisce il numero di caratteri contenuti in una stringa. Sintassi: length( string ) Argomenti: string stringa della quale calcolare la lunghezza Esempi: length('hello') \u2192 5 Variabile geometria \u21b5 Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length, la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi: length( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4 lower \u21b5 Converte una stringa in lettere minuscole. Sintassi: lower( string ) Argomenti: string la stringa da convertire in minuscolo Esempi: lower('HELLO World') \u2192 'hello world' lpad \u21b5 Restituisce una stringa riempita a sinistra fino alla larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata. Sintassi: lpad( string , width , fill ) Argomenti: string stringa da riempire width lunghezza della nuova stringa fill carattere con il quale riempire lo spazio rimanente Esempi: lpad('Hello', 10, 'x') \u2192 'xxxxxHello' lpad('Hello', 3, 'x') \u2192 'Hel' Altri esempi utili \u21b5 se volessi popolare un campo in modo da ottenere segnale01.png, segnale02.png...segnale99.png id path 10 segnale01.png 15 segnale02.png 22 segnale03.png .. .. 520 segnale99.png espressione utilizzata: 'segnale' || lpad( @row_number ,2, '00' )|| '.png' \u2192 'segnale01.png' -- per ricostruire un identificativo univoco CODICE_ASC CODICE_STR NUM_CIV BARRATO CODICE_ASC 000020 1 0000002000001 000575 1 0000057500001 001785 1 1 00001785000011 005495 38 1 00005495000381 001480 572 10 000014800057210 000150 1 0000015000001 lpad(\"CODICE_STR\",8,0)|| lpad( \"NUM_CIV\",5,0) || coalesce(\"BARRATO\",'') regexp_match \u21b5 Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata. Sintassi: regexp_match( input_string , regex ) Argomenti: input_string la stringa da confrontare con l'espressione regolare regex L'espressione regolare da confrontare. I caratteri backslash (\\) devono essere doppiamente escaped (es \"\\s\" per selezionare un carattere spazio bianco). Esempi: regexp_match('QGIS ROCKS','\\\\sROCKS') \u2192 5 regexp_match('Buda\u010d','uda\u010d\\\\b') \u2192 2 Osservazioni: link Wikipedia ^ \u00abapice\u00bb ha due significati: se messo all\u2019inizio della regex impone che la linea cominci con quello che segue l\u2019apice; se usato con le parentesi quadre e messo prima di un carattere significa: tranne il carattere che segue, \u00e8 una negazione $ \u00abdollar \u00bb se messa alla fine della regex impone che la linea finisca con quello che precede il dollaro . \u00abpunto\u00bb qualunque carattere * \u00abasterisco\u00bb accetta zero o pi\u00f9 ripetizioni del carattere precedente + \u00abpi\u00f9\u00bb accetta una o pi\u00f9 ripetizioni del carattere precedente [ ] \u00abparentesi quadre\u00bb tutti i caratteri all\u2019interno delle [ ] sono accettati: le due parentesi si comportano come un singolo carattere [^ ] \u00abparentesi quadre con apice\u00bb tutti i caratteri tranne quelli all\u2019interno delle [ ] sono accettati / \u00abslash\u00bb inizia/termina l\u2019espressione regolare \u00abbarra rovesciata\u00bb tratta il carattere speciale che segue come un normale carattere testuale o viceversa tratta un normale carattere come un carattere speciale link1 link2 regexp_match('QGIS ROCKS ciao come stai','$') = length ('QGIS ROCKS ciao come stai')+1 -- Altri esempi \u21b5 vedi qui regexp_matches( \"catasto\" ,'^(.+)\\\\.(.+)\\\\.(.+)\\\\.(.+)_(.+)\\\\.(.+)$')[x] con x che varia da 0 a 5 regexp_replace \u21b5 Restituisce una stringa con la parte che soddisfa l'espressione regolare sostituita. Sintassi: regexp_replace( input_string , regex , replacement ) Argomenti: input_string la stringa in cui sostituire regex L'espressione regolare per sostituire. I caratteri backslash devono essere double escaped (es \"\\s\" per selezionare un carattere spazio bianco). replacement La stringa che sostituir\u00e0 qualsiasi occorrenza corrispondente dell'espressione regolare passata. I gruppi catturati possono essere inseriti nella stringa di sostituzione usando \\\\1 , \\\\2 , etc. Esempi: regexp_replace('QGIS SHOULD ROCK','\\\\sSHOULD\\\\s',' DOES ') \u2192 'QGIS DOES ROCK' regexp_replace('ABC123','\\\\d+','') \u2192 'ABC' regexp_replace('my name is John','(.*) is (.*)','\\\\2 is \\\\1') \u2192 'Il mio nome \u00e8 Giovanni' Esempi:o 2 Tabella: id particella 1 00AXJ 2 000BBG 3 0JJU Aggiornare il campo particella togliendo gli zeri iniziali: espressione da usare: regexp_replace( \"particella\" ,'^0+','')` risultato: id particella 1 AXJ 2 BBG 3 JJU ecco un tool dove provare le regexp: https://regex101.com/r/SSDBmj/1 Esempi:o 3 id valore 1 data20200224 2 data20200225 3 data20200226 eliminare data e inserire un simbolo tra anno, mese e giorno espressione da usare: regexp_replace(\"valore\" ,'(data)(....)(..)(..)','\\\\2-\\\\3-\\\\4')` risultato: id valore 1 2020-02-24 2 2020-02-25 3 2020-02-26 Esempi:o 4 Tabella: id particella 1 00AXJ.su 2 000BBG.cot 3 0JJU.1234 Aggiornare il campo particella togliendo tutto quello dopo il punto (.): espressione da usare: regexp_replace( 'xxxxx.yyy','\\\\.(.+)$','')` risultato: id particella 1 00AXJ 2 000BBG 3 0JJU qui altri esempi regexp_substr \u21b5 Restituisce la porzione di una stringa che soddisfa l'espressione regolare passata. Sintassi: regexp_substr( input_string , regex ) Argomenti: input_string la stringa in cui cercare regex L'espressione regolare da contro abbinare. I caratteri backslash devono essere \"double escaped\" ( es \"\\\\s\" per selezionare un carattere spazio). Esempi: regexp_substr('abc123','(\\\\d+)') \u2192 '123' replace \u21b5 Restituisce una stringa con la stringa, array o mappa di stringhe passate sostituite. Variabile stringa & array \u21b5 Restituisce una stringa con la stringa o array di stringa passate sostituite da una stringa o un array di stringhe. Sintassi: replace( string , before , after ) Argomenti: string la stringa in ingresso before la stringa o array di stringhe da sostituire after la stringa o l'array di stringe da usare come sostituzione Esempi: replace('QGIS SHOULD ROCK','SHOULD','DOES') \u2192 'QGIS DOES ROCK' replace('QGIS ABC',array('A','B','C'),array('X','Y','Z')) \u2192 'QGIS XYZ' replace('QGIS',array('Q','S'),'') \u2192 'GI' Variabile mappa \u21b5 Restituisce una stringa con le chiavi della mappa fornite sostituite dai valori abbinati. Sono valutate per prime le chiavi della mappa pi\u00f9 lunghe. Sintassi: replace( string , map ) Argomenti: string la stringa in ingresso map la mappa che contiene le chiavi e i valori Esempi: replace('APP SHOULD ROCK',map('APP','QGIS','SHOULD','DOES')) \u2192 'QGIS DOES ROCK' replace('forty two',map('for','4','two','2','forty two','42')) \u2192 '42' right \u21b5 Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a destra della stringa. Sintassi: right( string , length ) Argomenti: string una stringa length intero. Il numero di caratteri da estrarre dalla parte destra della stringa. Esempi: right('Hello World',5) \u2192 'World' rpad \u21b5 Restituisce una stringa riempita a destra della larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata. Sintassi: rpad( string , width , fill ) Argomenti: string stringa da riempire width lunghezza della nuova stringa fill carattere con il quale riempire lo spazio rimanente Esempi: rpad('Hello', 10, 'x') \u2192 'Helloxxxxx' rpad('Hello', 3, 'x') \u2192 'Hel' strpos \u21b5 Restituisce la prima posizione di corrispondenza di una sottostringa dentro in un'altra stringa o 0 se la sottostringa non viene trovata. Sintassi: strpos( haystack , needle ) Argomenti: haystack stringa in cui deve essere cercata needle stringa da cercare Esempi: strpos('HELLO WORLD','WORLD') \u2192 7 strpos('HELLO WORLD','GOODBYE') \u2192 0 substr \u21b5 Restituisce una parte di una stringa. Sintassi: substr( string , start [, length ] ) [ ] indica componenti opzionali Argomenti: string l'intera stringa in entrata start intero rappresentante la posizione di partenza dalla quale estrarre; se il valore di partenza \u00e8 negativo, la stringa restituita inizier\u00e0 dalla fine della stringa meno il valore di partenza length intero rappresentante la lunghezza della stringa da estrarre; se la lunghezza \u00e8 negativa, la stringa restituita ometter\u00e0 la lunghezza data di caratteri dalla fine della stringa Esempi: substr('HELLO WORLD',3,5) \u2192 'LLO W' substr('HELLO WORLD',3,5) {6)?} \u2192 'WORLD' substr('HELLO WORLD',-5) \u2192 'WORLD' substr('HELLO',3,-1) \u2192 'LL' substr('HELLO WORLD',-5,2) \u2192 'WO' substr('HELLO WORLD',-5,-1) \u2192 'WORL' title \u21b5 Converte tutte le parole in \"title case\" (tutte le parole in minuscolo con la prima lettera maiuscola) Sintassi: title( string ) Argomenti: string stringa da convertire in minuscolo con la prima lettera maiuscola Esempi: title('hello WOrld') \u2192 'Hello World' to_string \u21b5 Converte un numero in stringa. Sintassi: to_string( number ) Argomenti: number Valore intero o reale. Il numero da convertire in stringa. Esempi: to_string(123.23) \u2192 '123.23' trim \u21b5 Rimuove tutti gli spazi vuoti (spazi, tabulazioni, etc.) all'inizio e alla fine di una stringa. Sintassi: trim( string ) Argomenti: string stringa da troncare Esempi: trim(' hello world ') \u2192 'hello world' upper \u21b5 Converte una stringa in lettere maiuscole. Sintassi: upper( string ) Argomenti: string la stringa da convertire in maiuscolo Esempi: upper('hello WOrld') \u2192 'HELLO WORLD' wordwrap \u21b5 Restituisce una stringa posta a capo ad un massimo/minimo numero di caratteri. Sintassi: wordwrap( string , wrap_length , delimiter_string ) Argomenti: string la stringa da spezzare wrap_length un intero. Se wrap_length \u00e8 positivo il numero rappresenta il numero massimo ideale di caratteri a cui spezzare; se negativo, il numero rappresenta il numero minimo di caratteri a cui spezzare. delimiter_string il delimitatore stringa per spezzare in una nuova linea (opzionale). Esempi: wordwrap('UNIVERSITY OF QGIS',13) \u2192 'UNIVERSITY OF QGIS' wordwrap('UNIVERSITY OF QGIS',-3) \u2192 'UNIVERSITY OF QGIS'","title":"Stringhe di testo"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#gruppo-stringhe-di-testo","text":"Abstract Questo gruppo contiene le funzioni che operano sulle stringhe es. sostituzione, conversione in maiuscolo.","title":"Gruppo Stringhe di Testo"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#ascii","text":"Restituisce il codice unicode associato al primo carattere di una stringa. Sintassi: ascii( string ) Argomenti: string la stringa da convertire in codice unicode Esempi: ascii('Q') \u2192 81","title":"ascii"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#char","text":"Restituisce il carattere associato ad un codice unicode. Sintassi: char( code ) Argomenti: code un numero codice unicode Esempi: char(81) \u2192 'Q'","title":"char"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#concat","text":"Concatena svariate stringhe in una sola. Valori NULL sono convertiti in stringhe vuote. Altri valori (come i numeri) sono convertiti in stringa. Sintassi: concat( string1 , string2 , \u2026 ) Argomenti: string un valore stringa Esempi: concat('To', 't\u00f2') \u2192 'Tot\u00f2' concat('a','b','c','d','e') \u2192 'abcde' concat('Anno ', 2018) \u2192 'Anno 2018' concat('QGIS 3.0', NULL) \u2192 'QGIS 3.0'","title":"concat"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#format","text":"Formatta una stringa usando gli argomenti forniti. Sintassi: format( string , arg1 , arg2 , \u2026 ) Argomenti: string Una stringa con segnaposto %1, %2 e cos\u00ec via per gli argomenti. I segnaposto possono essere ripetuti. Il segnaposto con il numero pi\u00f9 basso viene sostituito da arg1, il successivo da arg2, ecc. arg Qualsiasi tipo. Qualsiasi numero di argomenti. Esempi: format('This %1 a %2','is', 'test') \u2192 'Questo \u00e8 un test' format('This is %2','a bit unexpected but 2 is lowest number in string','normal') \u2192 'This is a bit unexpected but 2 is lowest number in string'","title":"format"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#format_date","text":"Formatta una data o una stringa in un formato stringa personalizzato. Usa le Qt date/time format strings. Vedi QDateTime::toString . Sintassi: Format_date( datetime , format [, language ] ) Argomenti: datetime valora data, ora, o data/ora format Modello di stringhe usato per formattare la stringa. Espressione Risultato d il giorno in numero senza lo zero iniziale (da 1 a 31) dd il giorno in numero con lo zero iniziale (da 01 a 31) ddd il nome locale del giorno abbreviato (es. da 'Mon' a 'Sun') dddd il nome locale del giorno per esteso (es. da 'Monday' a 'Sunday') M il mese in numero senza lo zero iniziale (1-12) MM il mese in numero con lo zero iniziale (01-12) MMM il nome locale del mese abbreviato (es. da 'Jan' a 'Dec') MMMM il nome locale del mese per esteso (es. da 'January' a 'December') yy l'anno come un numero a due cifre (00-99) yyyy l'anno come un numero a quattro cifre Queste espressioni possono essere usate per la parte time della stringa da formattare: Espressione Risultato h l'ora senza lo zero iniziale (da 0 a 23 o da 1 a 12 se visualizzi AM/PM) hh l'ora con lo zero iniziale (da 00 a 23 o da 01 a 12 se visualizzi AM/PM) H l'ora senza lo zero iniziale (da 0 a 23, anche se visualizzi AM/PM) HH l'ora con lo zero iniziale (da 00 a 23, anche se visualizzi AM/PM) m il minuto senza lo zero iniziale (da 0 a 59) mm il minuto con lo zero iniziale (da 00 a 59) s il secondo senza lo zero iniziale (da 0 a 59) ss il secondo con lo zero iniziale (da 00 a 59) z i millisecondi senza gli zeri iniziali (da 0 a 999) zzz i millisecondi con gli zeri iniziali (da 000 a 999) AP o A interpretato come un orario nel formato AM/PM. AP deve essere \"AM\" oppure \"PM\". ap o a interpretato come un orario nel formato AM/PM. ap deve essere \"am\" oppure \"pm\". language lingua (minuscolo, due o tre lettere, codice lingua ISO 639 ) utilizzata per formattare la data in una stringa personalizzata. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Esempi: format_date('2012-05-15','dd.MM.yyyy') \u2192 '15.05.2012' format_date('2012-05-15','d MMMM yyyy','fr') \u2192 '15 mai 2012' format_date('2012-05-15','dddd') \u2192 'Tuesday', se la lingua corrente \u00e8 una variante inglese format_date('2012-05-15 13:54:20','dd.MM.yy') \u2192 '15.05.12' format_date('13:54:20','hh:mm AP') \u2192 '01:54 PM'","title":"format_date"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#format_number","text":"Restituisce un numero formattato con il separatore locale per le migliaia. Inoltre tronca il numero al numero di posti forniti. Sintassi: format_number( number [, places ][, language ] ) [ ] indica componenti opzionali Argomenti: number numero da formattare places intero rappresentante il numero di posizioni decimali a cui troncare la stringa. language lingua (minuscolo, due o tre lettere, codice lingua ISO 639 ) utilizzata per formattare il numero in una stringa. Per impostazione predefinita, viene utilizzata la locale dell'utente di QGIS corrente. Esempi: format_number(10000000.332,2) \u2192 '10,000,000.33' se ad es. la locale corrente \u00e8 una variante inglese format_number(10000000.332,2,'fr') \u2192 '10 000 000,33'","title":"format_number"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#left","text":"Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a sinistra della stringa. Sintassi: left( string , length ) Argomenti: string una stringa length intero. Il numero di caratteri da estrarre dalla parte sinistra della stringa. Esempi: left('Hello World',5) \u2192 'Hello'","title":"left"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#length","text":"Restituisce il numero di caratteri in una stringa o la lunghezza di una geometria di tipo linestring.","title":"length"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#variabile-stringa","text":"Restituisce il numero di caratteri contenuti in una stringa. Sintassi: length( string ) Argomenti: string stringa della quale calcolare la lunghezza Esempi: length('hello') \u2192 5","title":"Variabile stringa"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#variabile-geometria","text":"Calcola la lunghezza di un oggetto a geometria lineare. I calcoli sono sempre planimetrici nel Sistema di Riferimento Spaziale (SR) di detta geometria, e l'unit\u00e0 di misura della lunghezza restituita \u00e8 conforme all'unit\u00e0 di misura del SR. Ci\u00f2 differisce dal calcolo eseguito dalla funzione $length, la quale esegue calcoli ellissoidici basati sull'ellissoide del progetto e sulle impostazioni delle unit\u00e0 di distanza. Sintassi: length( geometry ) Argomenti: geometry oggetto geometria linea Esempi: length(geom_from_wkt('LINESTRING(0 0, 4 0)')) \u2192 4","title":"Variabile geometria"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#lower","text":"Converte una stringa in lettere minuscole. Sintassi: lower( string ) Argomenti: string la stringa da convertire in minuscolo Esempi: lower('HELLO World') \u2192 'hello world'","title":"lower"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#lpad","text":"Restituisce una stringa riempita a sinistra fino alla larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata. Sintassi: lpad( string , width , fill ) Argomenti: string stringa da riempire width lunghezza della nuova stringa fill carattere con il quale riempire lo spazio rimanente Esempi: lpad('Hello', 10, 'x') \u2192 'xxxxxHello' lpad('Hello', 3, 'x') \u2192 'Hel'","title":"lpad"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#altri-esempi-utili","text":"se volessi popolare un campo in modo da ottenere segnale01.png, segnale02.png...segnale99.png id path 10 segnale01.png 15 segnale02.png 22 segnale03.png .. .. 520 segnale99.png espressione utilizzata: 'segnale' || lpad( @row_number ,2, '00' )|| '.png' \u2192 'segnale01.png' -- per ricostruire un identificativo univoco CODICE_ASC CODICE_STR NUM_CIV BARRATO CODICE_ASC 000020 1 0000002000001 000575 1 0000057500001 001785 1 1 00001785000011 005495 38 1 00005495000381 001480 572 10 000014800057210 000150 1 0000015000001 lpad(\"CODICE_STR\",8,0)|| lpad( \"NUM_CIV\",5,0) || coalesce(\"BARRATO\",'')","title":"Altri esempi utili"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#regexp_match","text":"Restituisce la prima posizione di corrispondenza che soddisfa un'espressione regolare all'interno di una stringa, o 0 se la sottostringa non viene trovata. Sintassi: regexp_match( input_string , regex ) Argomenti: input_string la stringa da confrontare con l'espressione regolare regex L'espressione regolare da confrontare. I caratteri backslash (\\) devono essere doppiamente escaped (es \"\\s\" per selezionare un carattere spazio bianco). Esempi: regexp_match('QGIS ROCKS','\\\\sROCKS') \u2192 5 regexp_match('Buda\u010d','uda\u010d\\\\b') \u2192 2 Osservazioni: link Wikipedia ^ \u00abapice\u00bb ha due significati: se messo all\u2019inizio della regex impone che la linea cominci con quello che segue l\u2019apice; se usato con le parentesi quadre e messo prima di un carattere significa: tranne il carattere che segue, \u00e8 una negazione $ \u00abdollar \u00bb se messa alla fine della regex impone che la linea finisca con quello che precede il dollaro . \u00abpunto\u00bb qualunque carattere * \u00abasterisco\u00bb accetta zero o pi\u00f9 ripetizioni del carattere precedente + \u00abpi\u00f9\u00bb accetta una o pi\u00f9 ripetizioni del carattere precedente [ ] \u00abparentesi quadre\u00bb tutti i caratteri all\u2019interno delle [ ] sono accettati: le due parentesi si comportano come un singolo carattere [^ ] \u00abparentesi quadre con apice\u00bb tutti i caratteri tranne quelli all\u2019interno delle [ ] sono accettati / \u00abslash\u00bb inizia/termina l\u2019espressione regolare \u00abbarra rovesciata\u00bb tratta il carattere speciale che segue come un normale carattere testuale o viceversa tratta un normale carattere come un carattere speciale link1 link2 regexp_match('QGIS ROCKS ciao come stai','$') = length ('QGIS ROCKS ciao come stai')+1 --","title":"regexp_match"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#altri-esempi","text":"vedi qui regexp_matches( \"catasto\" ,'^(.+)\\\\.(.+)\\\\.(.+)\\\\.(.+)_(.+)\\\\.(.+)$')[x] con x che varia da 0 a 5","title":"Altri esempi"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#regexp_replace","text":"Restituisce una stringa con la parte che soddisfa l'espressione regolare sostituita. Sintassi: regexp_replace( input_string , regex , replacement ) Argomenti: input_string la stringa in cui sostituire regex L'espressione regolare per sostituire. I caratteri backslash devono essere double escaped (es \"\\s\" per selezionare un carattere spazio bianco). replacement La stringa che sostituir\u00e0 qualsiasi occorrenza corrispondente dell'espressione regolare passata. I gruppi catturati possono essere inseriti nella stringa di sostituzione usando \\\\1 , \\\\2 , etc. Esempi: regexp_replace('QGIS SHOULD ROCK','\\\\sSHOULD\\\\s',' DOES ') \u2192 'QGIS DOES ROCK' regexp_replace('ABC123','\\\\d+','') \u2192 'ABC' regexp_replace('my name is John','(.*) is (.*)','\\\\2 is \\\\1') \u2192 'Il mio nome \u00e8 Giovanni' Esempi:o 2 Tabella: id particella 1 00AXJ 2 000BBG 3 0JJU Aggiornare il campo particella togliendo gli zeri iniziali: espressione da usare: regexp_replace( \"particella\" ,'^0+','')` risultato: id particella 1 AXJ 2 BBG 3 JJU ecco un tool dove provare le regexp: https://regex101.com/r/SSDBmj/1 Esempi:o 3 id valore 1 data20200224 2 data20200225 3 data20200226 eliminare data e inserire un simbolo tra anno, mese e giorno espressione da usare: regexp_replace(\"valore\" ,'(data)(....)(..)(..)','\\\\2-\\\\3-\\\\4')` risultato: id valore 1 2020-02-24 2 2020-02-25 3 2020-02-26 Esempi:o 4 Tabella: id particella 1 00AXJ.su 2 000BBG.cot 3 0JJU.1234 Aggiornare il campo particella togliendo tutto quello dopo il punto (.): espressione da usare: regexp_replace( 'xxxxx.yyy','\\\\.(.+)$','')` risultato: id particella 1 00AXJ 2 000BBG 3 0JJU qui altri esempi","title":"regexp_replace"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#regexp_substr","text":"Restituisce la porzione di una stringa che soddisfa l'espressione regolare passata. Sintassi: regexp_substr( input_string , regex ) Argomenti: input_string la stringa in cui cercare regex L'espressione regolare da contro abbinare. I caratteri backslash devono essere \"double escaped\" ( es \"\\\\s\" per selezionare un carattere spazio). Esempi: regexp_substr('abc123','(\\\\d+)') \u2192 '123'","title":"regexp_substr"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#replace","text":"Restituisce una stringa con la stringa, array o mappa di stringhe passate sostituite.","title":"replace"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#variabile-stringa-array","text":"Restituisce una stringa con la stringa o array di stringa passate sostituite da una stringa o un array di stringhe. Sintassi: replace( string , before , after ) Argomenti: string la stringa in ingresso before la stringa o array di stringhe da sostituire after la stringa o l'array di stringe da usare come sostituzione Esempi: replace('QGIS SHOULD ROCK','SHOULD','DOES') \u2192 'QGIS DOES ROCK' replace('QGIS ABC',array('A','B','C'),array('X','Y','Z')) \u2192 'QGIS XYZ' replace('QGIS',array('Q','S'),'') \u2192 'GI'","title":"Variabile stringa &amp; array"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#variabile-mappa","text":"Restituisce una stringa con le chiavi della mappa fornite sostituite dai valori abbinati. Sono valutate per prime le chiavi della mappa pi\u00f9 lunghe. Sintassi: replace( string , map ) Argomenti: string la stringa in ingresso map la mappa che contiene le chiavi e i valori Esempi: replace('APP SHOULD ROCK',map('APP','QGIS','SHOULD','DOES')) \u2192 'QGIS DOES ROCK' replace('forty two',map('for','4','two','2','forty two','42')) \u2192 '42'","title":"Variabile mappa"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#right","text":"Restituisce una sottostringa che contiene gli n caratteri pi\u00f9 a destra della stringa. Sintassi: right( string , length ) Argomenti: string una stringa length intero. Il numero di caratteri da estrarre dalla parte destra della stringa. Esempi: right('Hello World',5) \u2192 'World'","title":"right"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#rpad","text":"Restituisce una stringa riempita a destra della larghezza specificata, utilizzando un carattere di riempimento. Se la larghezza della destinazione \u00e8 inferiore alla lunghezza della stringa, la stringa viene troncata. Sintassi: rpad( string , width , fill ) Argomenti: string stringa da riempire width lunghezza della nuova stringa fill carattere con il quale riempire lo spazio rimanente Esempi: rpad('Hello', 10, 'x') \u2192 'Helloxxxxx' rpad('Hello', 3, 'x') \u2192 'Hel'","title":"rpad"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#strpos","text":"Restituisce la prima posizione di corrispondenza di una sottostringa dentro in un'altra stringa o 0 se la sottostringa non viene trovata. Sintassi: strpos( haystack , needle ) Argomenti: haystack stringa in cui deve essere cercata needle stringa da cercare Esempi: strpos('HELLO WORLD','WORLD') \u2192 7 strpos('HELLO WORLD','GOODBYE') \u2192 0","title":"strpos"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#substr","text":"Restituisce una parte di una stringa. Sintassi: substr( string , start [, length ] ) [ ] indica componenti opzionali Argomenti: string l'intera stringa in entrata start intero rappresentante la posizione di partenza dalla quale estrarre; se il valore di partenza \u00e8 negativo, la stringa restituita inizier\u00e0 dalla fine della stringa meno il valore di partenza length intero rappresentante la lunghezza della stringa da estrarre; se la lunghezza \u00e8 negativa, la stringa restituita ometter\u00e0 la lunghezza data di caratteri dalla fine della stringa Esempi: substr('HELLO WORLD',3,5) \u2192 'LLO W' substr('HELLO WORLD',3,5) {6)?} \u2192 'WORLD' substr('HELLO WORLD',-5) \u2192 'WORLD' substr('HELLO',3,-1) \u2192 'LL' substr('HELLO WORLD',-5,2) \u2192 'WO' substr('HELLO WORLD',-5,-1) \u2192 'WORL'","title":"substr"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#title","text":"Converte tutte le parole in \"title case\" (tutte le parole in minuscolo con la prima lettera maiuscola) Sintassi: title( string ) Argomenti: string stringa da convertire in minuscolo con la prima lettera maiuscola Esempi: title('hello WOrld') \u2192 'Hello World'","title":"title"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#to_string","text":"Converte un numero in stringa. Sintassi: to_string( number ) Argomenti: number Valore intero o reale. Il numero da convertire in stringa. Esempi: to_string(123.23) \u2192 '123.23'","title":"to_string"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#trim","text":"Rimuove tutti gli spazi vuoti (spazi, tabulazioni, etc.) all'inizio e alla fine di una stringa. Sintassi: trim( string ) Argomenti: string stringa da troncare Esempi: trim(' hello world ') \u2192 'hello world'","title":"trim"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#upper","text":"Converte una stringa in lettere maiuscole. Sintassi: upper( string ) Argomenti: string la stringa da convertire in maiuscolo Esempi: upper('hello WOrld') \u2192 'HELLO WORLD'","title":"upper"},{"location":"gr_funzioni/stringhe_di_testo/stringhe_di_testo_unico/#wordwrap","text":"Restituisce una stringa posta a capo ad un massimo/minimo numero di caratteri. Sintassi: wordwrap( string , wrap_length , delimiter_string ) Argomenti: string la stringa da spezzare wrap_length un intero. Se wrap_length \u00e8 positivo il numero rappresenta il numero massimo ideale di caratteri a cui spezzare; se negativo, il numero rappresenta il numero minimo di caratteri a cui spezzare. delimiter_string il delimitatore stringa per spezzare in una nuova linea (opzionale). Esempi: wordwrap('UNIVERSITY OF QGIS',13) \u2192 'UNIVERSITY OF QGIS' wordwrap('UNIVERSITY OF QGIS',-3) \u2192 'UNIVERSITY OF QGIS'","title":"wordwrap"},{"location":"gr_funzioni/stringhe_di_testo/strpos/","text":"strpos \u21b5 Restituisce la prima posizione di corrispondenza di una sottostringa dentro in un'altra stringa o 0 se la sottostringa non viene trovata. Sintassi \u21b5 strpos( haystack , needle ) Argomenti \u21b5 haystack stringa in cui deve essere cercata needle stringa da cercare Esempi \u21b5 strpos('HELLO WORLD','WORLD') \u2192 7 strpos('HELLO WORLD','GOODBYE') \u2192 0 nota bene \u21b5 -- osservazioni \u21b5 --","title":"strpos"},{"location":"gr_funzioni/stringhe_di_testo/strpos/#strpos","text":"Restituisce la prima posizione di corrispondenza di una sottostringa dentro in un'altra stringa o 0 se la sottostringa non viene trovata.","title":"strpos"},{"location":"gr_funzioni/stringhe_di_testo/strpos/#sintassi","text":"strpos( haystack , needle )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/strpos/#argomenti","text":"haystack stringa in cui deve essere cercata needle stringa da cercare","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/strpos/#esempi","text":"strpos('HELLO WORLD','WORLD') \u2192 7 strpos('HELLO WORLD','GOODBYE') \u2192 0","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/strpos/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/strpos/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/substr/","text":"substr \u21b5 Restituisce una parte di una stringa. Sintassi \u21b5 substr( string , start , length ) Argomenti \u21b5 string l'intera stringa in entrata start intero rappresentante la posizione di partenza dalla quale estrarre; se il valore di partenza \u00e8 negativo, la stringa restituita inizier\u00e0 dalla fine della stringa meno il valore di partenza length intero rappresentante la lunghezza della stringa da estrarre; se la lunghezza \u00e8 negativa, la stringa restituita ometter\u00e0 la lunghezza data di caratteri dalla fine della stringa Esempi \u21b5 substr('HELLO WORLD',3,5) \u2192 'LLO W' substr('HELLO WORLD',3,5) {6)?} \u2192 'WORLD' substr('HELLO WORLD',-5) \u2192 'WORLD' substr('HELLO',3,-1) \u2192 'LL' substr('HELLO WORLD',-5,2) \u2192 'WO' substr('HELLO WORLD',-5,-1) \u2192 'WORL' nota bene \u21b5 -- osservazioni \u21b5 --","title":"substr"},{"location":"gr_funzioni/stringhe_di_testo/substr/#substr","text":"Restituisce una parte di una stringa.","title":"substr"},{"location":"gr_funzioni/stringhe_di_testo/substr/#sintassi","text":"substr( string , start , length )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/substr/#argomenti","text":"string l'intera stringa in entrata start intero rappresentante la posizione di partenza dalla quale estrarre; se il valore di partenza \u00e8 negativo, la stringa restituita inizier\u00e0 dalla fine della stringa meno il valore di partenza length intero rappresentante la lunghezza della stringa da estrarre; se la lunghezza \u00e8 negativa, la stringa restituita ometter\u00e0 la lunghezza data di caratteri dalla fine della stringa","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/substr/#esempi","text":"substr('HELLO WORLD',3,5) \u2192 'LLO W' substr('HELLO WORLD',3,5) {6)?} \u2192 'WORLD' substr('HELLO WORLD',-5) \u2192 'WORLD' substr('HELLO',3,-1) \u2192 'LL' substr('HELLO WORLD',-5,2) \u2192 'WO' substr('HELLO WORLD',-5,-1) \u2192 'WORL'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/substr/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/substr/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/title/","text":"title \u21b5 Converte tutte le parole in \"title case\" (tutte le parole in minuscolo con la prima lettera maiuscola) Sintassi \u21b5 title( string ) Argomenti \u21b5 string stringa da convertire in minuscolo con la prima lettera maiuscola Esempi \u21b5 title('hello WOrld') \u2192 'Hello World' nota bene \u21b5 -- osservazioni \u21b5 --","title":"title"},{"location":"gr_funzioni/stringhe_di_testo/title/#title","text":"Converte tutte le parole in \"title case\" (tutte le parole in minuscolo con la prima lettera maiuscola)","title":"title"},{"location":"gr_funzioni/stringhe_di_testo/title/#sintassi","text":"title( string )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/title/#argomenti","text":"string stringa da convertire in minuscolo con la prima lettera maiuscola","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/title/#esempi","text":"title('hello WOrld') \u2192 'Hello World'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/title/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/title/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/to_string/","text":"to_string \u21b5 Converte un numero in stringa. Sintassi \u21b5 to_string( number ) Argomenti \u21b5 number Valore intero o reale. Il numero da convertire in stringa. Esempi \u21b5 to_string(123.23) \u2192 '123.23' nota bene \u21b5 -- osservazioni \u21b5 --","title":"to_string"},{"location":"gr_funzioni/stringhe_di_testo/to_string/#to_string","text":"Converte un numero in stringa.","title":"to_string"},{"location":"gr_funzioni/stringhe_di_testo/to_string/#sintassi","text":"to_string( number )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/to_string/#argomenti","text":"number Valore intero o reale. Il numero da convertire in stringa.","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/to_string/#esempi","text":"to_string(123.23) \u2192 '123.23'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/to_string/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/to_string/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/trim/","text":"trim \u21b5 Rimuove tutti gli spazi vuoti (spazi, tabulazioni, etc.) all'inizio e alla fine di una stringa. Sintassi \u21b5 trim( string ) Argomenti \u21b5 string stringa da troncare Esempi \u21b5 trim(' hello world ') \u2192 'hello world' nota bene \u21b5 -- osservazioni \u21b5 --","title":"trim"},{"location":"gr_funzioni/stringhe_di_testo/trim/#trim","text":"Rimuove tutti gli spazi vuoti (spazi, tabulazioni, etc.) all'inizio e alla fine di una stringa.","title":"trim"},{"location":"gr_funzioni/stringhe_di_testo/trim/#sintassi","text":"trim( string )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/trim/#argomenti","text":"string stringa da troncare","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/trim/#esempi","text":"trim(' hello world ') \u2192 'hello world'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/trim/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/trim/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/upper/","text":"upper \u21b5 Converte una stringa in lettere maiuscole. Sintassi \u21b5 upper( string ) Argomenti \u21b5 string la stringa da convertire in maiuscolo Esempi \u21b5 upper('hello WOrld') \u2192 'HELLO WORLD' nota bene \u21b5 -- osservazioni \u21b5 --","title":"upper"},{"location":"gr_funzioni/stringhe_di_testo/upper/#upper","text":"Converte una stringa in lettere maiuscole.","title":"upper"},{"location":"gr_funzioni/stringhe_di_testo/upper/#sintassi","text":"upper( string )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/upper/#argomenti","text":"string la stringa da convertire in maiuscolo","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/upper/#esempi","text":"upper('hello WOrld') \u2192 'HELLO WORLD'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/upper/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/upper/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/stringhe_di_testo/wordwrap/","text":"wordwrap \u21b5 Restituisce una stringa posta a capo ad un massimo/minimo numero di caratteri. Sintassi \u21b5 wordwrap( string , wrap_length , delimiter_string ) Argomenti \u21b5 string la stringa da spezzare wrap_length un intero. Se wrap_length \u00e8 positivo il numero rappresenta il numero massimo ideale di caratteri a cui spezzare; se negativo, il numero rappresenta il numero minimo di caratteri a cui spezzare. delimiter_string il delimitatore stringa per spezzare in una nuova linea (opzionale). Esempi \u21b5 wordwrap('UNIVERSITY OF QGIS',13) \u2192 'UNIVERSITY OF QGIS' wordwrap('UNIVERSITY OF QGIS',-3) \u2192 'UNIVERSITY OF QGIS' nota bene \u21b5 -- osservazioni \u21b5 --","title":"wordwrap"},{"location":"gr_funzioni/stringhe_di_testo/wordwrap/#wordwrap","text":"Restituisce una stringa posta a capo ad un massimo/minimo numero di caratteri.","title":"wordwrap"},{"location":"gr_funzioni/stringhe_di_testo/wordwrap/#sintassi","text":"wordwrap( string , wrap_length , delimiter_string )","title":"Sintassi"},{"location":"gr_funzioni/stringhe_di_testo/wordwrap/#argomenti","text":"string la stringa da spezzare wrap_length un intero. Se wrap_length \u00e8 positivo il numero rappresenta il numero massimo ideale di caratteri a cui spezzare; se negativo, il numero rappresenta il numero minimo di caratteri a cui spezzare. delimiter_string il delimitatore stringa per spezzare in una nuova linea (opzionale).","title":"Argomenti"},{"location":"gr_funzioni/stringhe_di_testo/wordwrap/#esempi","text":"wordwrap('UNIVERSITY OF QGIS',13) \u2192 'UNIVERSITY OF QGIS' wordwrap('UNIVERSITY OF QGIS',-3) \u2192 'UNIVERSITY OF QGIS'","title":"Esempi"},{"location":"gr_funzioni/stringhe_di_testo/wordwrap/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/stringhe_di_testo/wordwrap/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/timemanager/timemanager/","text":"TimeManager \u21b5 Questo gruppo contiene le funzioni del plugin Time Manager","title":"TimeManager"},{"location":"gr_funzioni/timemanager/timemanager/#timemanager","text":"Questo gruppo contiene le funzioni del plugin Time Manager","title":"TimeManager"},{"location":"gr_funzioni/variabili/_file_tipo/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/_file_tipo/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/_file_tipo/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/_file_tipo/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/_file_tipo/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/_file_tipo/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/algorithm_id/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/algorithm_id/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/algorithm_id/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/algorithm_id/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/algorithm_id/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/algorithm_id/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/animation_end_time/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/animation_end_time/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/animation_end_time/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/animation_end_time/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/animation_end_time/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/animation_end_time/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/animation_interval/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/animation_interval/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/animation_interval/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/animation_interval/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/animation_interval/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/animation_interval/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/animation_start_time/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/animation_start_time/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/animation_start_time/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/animation_start_time/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/animation_start_time/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/animation_start_time/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/atlas_feature/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_feature/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_feature/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/atlas_feature/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/atlas_feature/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/atlas_feature/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/atlas_featureid/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_featureid/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_featureid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/atlas_featureid/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/atlas_featureid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/atlas_featureid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/atlas_featurenumber/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_featurenumber/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_featurenumber/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/atlas_featurenumber/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/atlas_featurenumber/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/atlas_featurenumber/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/atlas_filename/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_filename/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_filename/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/atlas_filename/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/atlas_filename/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/atlas_filename/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/atlas_geometry/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_geometry/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_geometry/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/atlas_geometry/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/atlas_geometry/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/atlas_geometry/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/atlas_layerid/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_layerid/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_layerid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/atlas_layerid/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/atlas_layerid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/atlas_layerid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/atlas_layername/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_layername/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_layername/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/atlas_layername/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/atlas_layername/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/atlas_layername/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/atlas_pagename/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_pagename/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_pagename/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/atlas_pagename/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/atlas_pagename/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/atlas_pagename/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/atlas_totalfeatures/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_totalfeatures/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/atlas_totalfeatures/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/atlas_totalfeatures/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/atlas_totalfeatures/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/atlas_totalfeatures/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/canvas_cursor_point/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/canvas_cursor_point/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/canvas_cursor_point/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/canvas_cursor_point/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/canvas_cursor_point/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/canvas_cursor_point/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/cluster_color/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/cluster_color/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/cluster_color/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/cluster_color/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/cluster_color/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/cluster_color/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/cluster_size/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/cluster_size/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/cluster_size/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/cluster_size/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/cluster_size/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/cluster_size/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/current_feature/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/current_feature/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/current_feature/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/current_feature/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/current_feature/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/current_feature/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/current_geometry/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/current_geometry/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/current_geometry/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/current_geometry/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/current_geometry/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/current_geometry/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/current_parent_feature/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/current_parent_feature/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/current_parent_feature/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/current_parent_feature/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/current_parent_feature/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/current_parent_feature/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/current_parent_geometry/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/current_parent_geometry/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/current_parent_geometry/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/current_parent_geometry/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/current_parent_geometry/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/current_parent_geometry/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/form_mode/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/form_mode/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/form_mode/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/form_mode/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/form_mode/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/form_mode/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/frame_duration/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/frame_duration/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/frame_duration/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/frame_duration/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/frame_duration/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/frame_duration/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/frame_number/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/frame_number/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/frame_number/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/frame_number/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/frame_number/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/frame_number/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/frame_rate/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/frame_rate/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/frame_rate/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/frame_rate/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/frame_rate/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/frame_rate/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/fullextent_maxx/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/fullextent_maxx/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/fullextent_maxx/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/fullextent_maxx/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/fullextent_maxx/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/fullextent_maxx/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/fullextent_maxy/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/fullextent_maxy/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/fullextent_maxy/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/fullextent_maxy/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/fullextent_maxy/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/fullextent_maxy/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/fullextent_minx/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/fullextent_minx/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/fullextent_minx/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/fullextent_minx/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/fullextent_minx/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/fullextent_minx/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/fullextent_miny/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/fullextent_miny/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/fullextent_miny/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/fullextent_miny/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/fullextent_miny/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/fullextent_miny/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/geometry_part_count/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_part_count/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_part_count/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/geometry_part_count/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/geometry_part_count/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/geometry_part_count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/geometry_part_num/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_part_num/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_part_num/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/geometry_part_num/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/geometry_part_num/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/geometry_part_num/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/geometry_point_count/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_point_count/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_point_count/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/geometry_point_count/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/geometry_point_count/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/geometry_point_count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/geometry_point_num/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_point_num/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_point_num/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/geometry_point_num/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/geometry_point_num/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/geometry_point_num/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/geometry_ring_num/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_ring_num/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/geometry_ring_num/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/geometry_ring_num/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/geometry_ring_num/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/geometry_ring_num/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/grid_axis/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/grid_axis/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/grid_axis/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/grid_axis/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/grid_axis/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/grid_axis/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/grid_number/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/grid_number/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/grid_number/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/grid_number/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/grid_number/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/grid_number/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/item_id/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/item_id/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/item_id/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/item_id/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/item_id/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/item_id/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/item_uuid/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/item_uuid/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/item_uuid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/item_uuid/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/item_uuid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/item_uuid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layer/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layer/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layer/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layer/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layer_crs/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer_crs/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer_crs/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layer_crs/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layer_crs/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layer_crs/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layer_id/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer_id/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer_id/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layer_id/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layer_id/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layer_id/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layer_ids/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer_ids/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer_ids/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layer_ids/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layer_ids/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layer_ids/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layer_name/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer_name/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layer_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layer_name/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layer_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layer_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layers/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layers/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layers/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layers/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layers/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layers/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layout_dpi/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_dpi/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_dpi/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layout_dpi/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layout_dpi/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layout_dpi/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layout_name/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_name/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layout_name/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layout_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layout_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layout_numpages/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_numpages/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_numpages/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layout_numpages/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layout_numpages/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layout_numpages/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layout_page/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_page/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_page/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layout_page/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layout_page/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layout_page/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layout_pageheight/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_pageheight/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_pageheight/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layout_pageheight/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layout_pageheight/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layout_pageheight/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layout_pageoffsets/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_pageoffsets/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_pageoffsets/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layout_pageoffsets/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layout_pageoffsets/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layout_pageoffsets/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/layout_pagewidth/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_pagewidth/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/layout_pagewidth/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/layout_pagewidth/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/layout_pagewidth/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/layout_pagewidth/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/legend_column_count/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_column_count/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_column_count/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/legend_column_count/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/legend_column_count/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/legend_column_count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/legend_filter_by_map/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_filter_by_map/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_filter_by_map/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/legend_filter_by_map/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/legend_filter_by_map/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/legend_filter_by_map/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/legend_filter_out_atlas/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_filter_out_atlas/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_filter_out_atlas/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/legend_filter_out_atlas/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/legend_filter_out_atlas/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/legend_filter_out_atlas/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/legend_split_layers/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_split_layers/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_split_layers/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/legend_split_layers/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/legend_split_layers/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/legend_split_layers/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/legend_title/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_title/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_title/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/legend_title/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/legend_title/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/legend_title/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/legend_wrap_string/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_wrap_string/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/legend_wrap_string/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/legend_wrap_string/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/legend_wrap_string/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/legend_wrap_string/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_crs/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_crs/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_crs/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_crs/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_crs_acronym/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_acronym/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_acronym/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_crs_acronym/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_crs_acronym/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_crs_acronym/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_crs_definition/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_definition/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_definition/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_crs_definition/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_crs_definition/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_crs_definition/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_crs_description/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_description/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_description/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_crs_description/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_crs_description/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_crs_description/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_crs_ellipsoid/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_ellipsoid/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_ellipsoid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_crs_ellipsoid/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_crs_ellipsoid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_crs_ellipsoid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_crs_proj4/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_proj4/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_proj4/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_crs_proj4/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_crs_proj4/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_crs_proj4/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_crs_projection/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_projection/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_projection/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_crs_projection/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_crs_projection/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_crs_projection/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_crs_wkt/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_wkt/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_crs_wkt/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_crs_wkt/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_crs_wkt/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_crs_wkt/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_end_time/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_end_time/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_end_time/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_end_time/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_end_time/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_end_time/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_extent/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_extent/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_extent/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_extent/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_extent/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_extent/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_extent_center/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_extent_center/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_extent_center/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_extent_center/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_extent_center/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_extent_center/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_extent_height/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_extent_height/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_extent_height/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_extent_height/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_extent_height/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_extent_height/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_extent_width/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_extent_width/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_extent_width/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_extent_width/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_extent_width/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_extent_width/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_id/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_id/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_id/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_id/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_id/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_id/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_interval/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_interval/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_interval/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_interval/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_interval/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_interval/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_layer_ids/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_layer_ids/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_layer_ids/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_layer_ids/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_layer_ids/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_layer_ids/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_layers/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_layers/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_layers/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_layers/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_layers/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_layers/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_rotation/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_rotation/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_rotation/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_rotation/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_rotation/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_rotation/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_scale/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_scale/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_scale/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_scale/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_scale/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_scale/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_start_time/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_start_time/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_start_time/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_start_time/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_start_time/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_start_time/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/map_units/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_units/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/map_units/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/map_units/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/map_units/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/map_units/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/model_folder/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/model_folder/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/model_folder/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/model_folder/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/model_folder/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/model_folder/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/model_group/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/model_group/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/model_group/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/model_group/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/model_group/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/model_group/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/model_name/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/model_name/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/model_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/model_name/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/model_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/model_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/model_path/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/model_path/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/model_path/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/model_path/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/model_path/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/model_path/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/notification_message/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/notification_message/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/notification_message/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/notification_message/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/notification_message/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/notification_message/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/parent/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/parent/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/parent/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/parent/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/parent/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/parent/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_abstract/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_abstract/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_abstract/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_abstract/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_abstract/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_abstract/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_area_units/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_area_units/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_area_units/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_area_units/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_area_units/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_area_units/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_author/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_author/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_author/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_author/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_author/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_author/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_basename/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_basename/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_basename/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_basename/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_basename/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_basename/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_creation_date/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_creation_date/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_creation_date/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_creation_date/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_creation_date/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_creation_date/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_crs/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_crs/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_crs/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_crs/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_crs_arconym/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_arconym/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_arconym/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_crs_arconym/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_crs_arconym/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_crs_arconym/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_crs_definition/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_definition/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_definition/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_crs_definition/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_crs_definition/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_crs_definition/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_crs_description/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_description/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_description/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_crs_description/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_crs_description/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_crs_description/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_crs_ellipsoid/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_ellipsoid/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_ellipsoid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_crs_ellipsoid/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_crs_ellipsoid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_crs_ellipsoid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_crs_proj4/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_proj4/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_proj4/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_crs_proj4/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_crs_proj4/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_crs_proj4/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_crs_wkt/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_wkt/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_crs_wkt/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_crs_wkt/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_crs_wkt/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_crs_wkt/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_distance_units/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_distance_units/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_distance_units/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_distance_units/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_distance_units/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_distance_units/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_ellipsoid/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_ellipsoid/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_ellipsoid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_ellipsoid/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_ellipsoid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_ellipsoid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_filename/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_filename/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_filename/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_filename/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_filename/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_filename/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_folder/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_folder/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_folder/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_folder/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_folder/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_folder/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_home/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_home/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_home/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_home/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_home/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_home/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_identifier/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_identifier/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_identifier/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_identifier/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_identifier/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_identifier/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_keywords/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_keywords/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_keywords/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_keywords/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_keywords/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_keywords/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_last_saved/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_last_saved/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_last_saved/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_last_saved/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_last_saved/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_last_saved/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_path/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_path/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_path/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_path/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_path/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_path/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_title/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_title/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_title/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_title/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_title/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_title/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/project_units/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_units/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/project_units/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/project_units/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/project_units/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/project_units/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/qgis_locale/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_locale/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_locale/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/qgis_locale/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/qgis_locale/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/qgis_locale/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/qgis_os_name/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_os_name/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_os_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/qgis_os_name/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/qgis_os_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/qgis_os_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/qgis_platform/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_platform/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_platform/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/qgis_platform/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/qgis_platform/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/qgis_platform/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/qgis_release_name/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_release_name/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_release_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/qgis_release_name/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/qgis_release_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/qgis_release_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/qgis_short_version/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_short_version/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_short_version/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/qgis_short_version/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/qgis_short_version/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/qgis_short_version/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/qgis_version/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_version/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_version/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/qgis_version/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/qgis_version/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/qgis_version/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/qgis_version_no/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_version_no/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/qgis_version_no/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/qgis_version_no/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/qgis_version_no/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/qgis_version_no/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/row_number/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/row_number/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/row_number/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/row_number/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/row_number/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/row_number/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/scale_value/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/scale_value/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/scale_value/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/scale_value/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/scale_value/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/scale_value/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/snapping_results/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/snapping_results/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/snapping_results/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/snapping_results/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/snapping_results/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/snapping_results/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/symbol_angle/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_angle/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_angle/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/symbol_angle/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/symbol_angle/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/symbol_angle/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/symbol_color/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_color/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_color/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/symbol_color/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/symbol_color/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/symbol_color/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/symbol_count/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_count/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_count/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/symbol_count/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/symbol_count/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/symbol_count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/symbol_id/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_id/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_id/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/symbol_id/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/symbol_id/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/symbol_id/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/symbol_label/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_label/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_label/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/symbol_label/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/symbol_label/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/symbol_label/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/symbol_layer_count/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_layer_count/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_layer_count/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/symbol_layer_count/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/symbol_layer_count/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/symbol_layer_count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/symbol_layer_index/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_layer_index/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_layer_index/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/symbol_layer_index/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/symbol_layer_index/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/symbol_layer_index/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/symbol_marker_column/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_marker_column/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_marker_column/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/symbol_marker_column/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/symbol_marker_column/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/symbol_marker_column/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/symbol_marker_row/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_marker_row/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/symbol_marker_row/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/symbol_marker_row/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/symbol_marker_row/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/symbol_marker_row/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/user_account_name/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/user_account_name/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/user_account_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/user_account_name/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/user_account_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/user_account_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/user_full_name/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/user_full_name/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/user_full_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/user_full_name/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/user_full_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/user_full_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/value/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/value/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/value/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/value/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/value/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/value/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/variabili/","text":"Variabili \u21b5 Funzionalit\u00e0 introdotta da Nyall Dawson nella QGIS 2.12 Lyon Questo gruppo contiene variabili dinamiche relative all'applicazione, al file di progetto e ad altre impostazioni. Significa che alcune funzioni potrebbero non essere disponibili in base al contesto: seleziona per espressione calcolatore di campi geometry generator propriet\u00e0 del layer compositore di stampe In QGIS , puoi utilizzare le variabili per memorizzare dati utili con valori ricorrenti (ad esempio il titolo del progetto o il nome completo dell\u2019utente) che possono essere utilizzati nelle espressioni. Le variabili possono essere definite a livello globale dell\u2019 applicazione , a livello di progetto , a livello di layer , a livello di composizione e a livello di elemento del compositore . Proprio come le regole CSS a cascata, le variabili possono essere sovrascritte, ad esempio una variabile a livello di progetto sovrascrive le variabili di livello globale di qualsiasi applicazione impostate con lo stesso nome. Puoi utilizzare queste variabili per creare stringhe di testo o altre espressioni personalizzate utilizzando il carattere '@' prima del nome della variabile. Elenco variabili \u21b5 Riguardano (aggiornato a QGIS 3.20 Odense): Variable Description algorithm_id The unique ID of an algorithm animation_end_time End of the animation\u2019s overall temporal time range (as a datetime value) animation_interval Duration of the animation\u2019s overall temporal time range (as an interval value) animation_start_time Start of the animation\u2019s overall temporal time range (as a datetime value) atlas_feature The current atlas feature (as feature object) atlas_featureid The current atlas feature ID atlas_featurenumber The current atlas feature number in the layout atlas_filename The current atlas file name atlas_geometry The current atlas feature geometry atlas_layerid The current atlas coverage layer ID atlas_layername The current atlas coverage layer name atlas_pagename The current atlas page name atlas_totalfeatures The total number of features in atlas canvas_cursor_point The last cursor position on the canvas in the project\u2019s geographical coordinates cluster_color The color of symbols within a cluster, or NULL if symbols have mixed colors cluster_size The number of symbols contained within a cluster current_feature The feature currently being edited in the attribute form or table row current_geometry The geometry of the feature currently being edited in the form or the table row current_parent_feature represents the feature currently being edited in the parent form. Only usable in an embedded form context. current_parent_geometry represents the geometry of the feature currently being edited in the parent form. Only usable in an embedded form context. form_mode What the form is used for, like AddFeatureMode, SingleEditMode, MultiEditMode, SearchMode, AggregateSearchMode or IdentifyMode as string. frame_duration Temporal duration of each animation frame (as an interval value) frame_number Current frame number during animation playback frame_rate Number of frames per second during animation playback fullextent_maxx Maximum x value from full canvas extent (including all layers) fullextent_maxy Maximum y value from full canvas extent (including all layers) fullextent_minx Minimum x value from full canvas extent (including all layers) fullextent_miny Minimum y value from full canvas extent (including all layers) geometry_part_count The number of parts in rendered feature\u2019s geometry geometry_part_num The current geometry part number for feature being rendered geometry_point_count The number of points in the rendered geometry\u2019s part geometry_point_num The current point number in the rendered geometry\u2019s part geometry_ring_num Current geometry ring number for feature being rendered (for polygon features only). The exterior ring has a value of 0. grid_axis The current grid annotation axis (eg, \u2018x\u2019 for longitude, \u2018y\u2019 for latitude) grid_number The current grid annotation value item_id The layout item user ID (not necessarily unique) item_uuid The layout item unique ID layer The current layer layer_crs The Coordinate Reference System Authority ID of the current layer layer_id The ID of current layer layer_ids The IDs of all the map layers in the current project as a list layer_name The name of current layer layers All the map layers in the current project as a list layout_dpi The composition resolution (DPI) layout_name The layout name layout_numpages The number of pages in the layout layout_page The page number of the current item in the layout layout_pageheight The active page height in the layout (in mm for standard paper sizes, or whatever unit was used for custom paper size) layout_pageoffsets Array of Y coordinate of the top of each page. Allows to dynamically position items on pages in a context where page sizes may change layout_pagewidth The active page width in the layout (in mm for standard paper sizes, or whatever unit was used for custom paper size) legend_column_count The number of columns in the legend legend_filter_by_map Indicates if the content of the legend is filtered by the map legend_filter_out_atlas Indicates if the atlas is filtered out of the legend legend_split_layers Indicates if layers can be split in the legend legend_title The title of the legend legend_wrap_string The character(s) used to wrap the legend text map_crs The Coordinate reference system of the current map map_crs_acronym The acronym of the Coordinate reference system of the current map map_crs_definition The full definition of the Coordinate reference system of the current map map_crs_description The name of the Coordinate reference system of the current map map_crs_ellipsoid The acronym of the ellipsoid of the Coordinate reference system of the current map map_crs_proj4 The Proj4 definition of the Coordinate reference system of the current map map_crs_projection The descriptive name of the projection method used by the Coordinate reference system of the map (e.g. \u2018Albers Equal Area\u2019) map_crs_wkt The WKT definition of the Coordinate reference system of the current map map_end_time The end of the map\u2019s temporal time range (as a datetime value) map_extent The geometry representing the current extent of the map map_extent_center The point feature at the center of the map map_extent_height The current height of the map map_extent_width The current width of the map map_id The ID of current map destination. This will be \u2018canvas\u2019 for canvas renders, and the item ID for layout map renders map_interval The duration of the map\u2019s temporal time range (as an interval value) map_layer_ids The list of map layer IDs visible in the map map_layers The list of map layers visible in the map map_rotation The current rotation of the map map_scale The current scale of the map map_start_time The start of the map\u2019s temporal time range (as a datetime value) map_units The units of map measurements model_path Full path (including file name) of current model (or project path if model is embedded in a project). model_folder Folder containing current model (or project folder if model is embedded in a project). model_name Name of current model model_group Group for current model notification_message Content of the notification message sent by the provider (available only for actions triggered by provider notifications). parent Refers to the current feature in the parent layer, providing access to its attributes and geometry when filtering an aggregate function project_abstract The project abstract, taken from project metadata project_area_units The area unit for the current project, used when calculating areas of geometries project_author The project author, taken from project metadata project_basename The basename of current project\u2019s filename (without path and extension) project_creation_date The project creation date, taken from project metadata project_crs The Coordinate reference system of the project project_crs_arconym The acronym of the Coordinate reference system of the project project_crs_definition The full definition of the Coordinate reference system of the project project_crs_description The description of the Coordinate reference system of the project project_crs_ellipsoid The ellipsoid of the Coordinate reference system of the project project_crs_proj4 The Proj4 representation of the Coordinate reference system of the project project_crs_wkt The WKT (well known text) representation of the coordinate reference system of the project project_distance_units The distance unit for the current project, used when calculating lengths of geometries and distances project_ellipsoid The name of the ellipsoid of the current project, used when calculating geodetic areas or lengths of geometries project_filename The filename of the current project project_folder The folder of the current project project_home The home path of the current project project_identifier The project identifier, taken from the project\u2019s metadata project_keywords The project keywords, taken from the project\u2019s metadata project_last_saved Date/time when project was last saved. project_path The full path (including file name) of the current project project_title The title of current project project_units The units of the project\u2019s CRS qgis_locale The current language of QGIS qgis_os_name The current Operating system name, eg \u2018windows\u2019, \u2018linux\u2019 or \u2018osx\u2019 qgis_platform The QGIS platform, eg \u2018desktop\u2019 or \u2018server\u2019 qgis_release_name The current QGIS release name qgis_short_version The current QGIS version short string qgis_version The current QGIS version string qgis_version_no The current QGIS version number row_number Stores the number of the current row snapping_results Gives access to snapping results while digitizing a feature (only available in add feature) scale_value The current scale bar distance value symbol_angle The angle of the symbol used to render the feature (valid for marker symbols only) symbol_color The color of the symbol used to render the feature symbol_count The number of features represented by the symbol (in the layout legend) symbol_id The Internal ID of the symbol (in the layout legend) symbol_label The label for the symbol (either a user defined label or the default autogenerated label - in the layout legend) symbol_layer_count Total number of symbol layers in the symbol symbol_layer_index Current symbol layer index symbol_marker_column Column number for marker (valid for point pattern fills only). symbol_marker_row Row number for marker (valid for point pattern fills only). user_account_name The current user\u2019s operating system account name user_full_name The current user\u2019s operating system user name value The current value with_variable Allows setting a variable for usage within an expression and avoid recalculating the same value repeatedly zoom_level Zoom level of the tile that is being rendered (derived from the current map scale). Normally in interval [0, 20]. Screenshot livelli \u21b5 Propriet\u00e0 Progetto Gruppo sul calcolatore di campi,Seleziona per espressione Generatore di geometria- stile Selezione per espressione Calcolatore di campi,Seleziona per espressione Compositore di stampe","title":"Variabili"},{"location":"gr_funzioni/variabili/variabili/#variabili","text":"Funzionalit\u00e0 introdotta da Nyall Dawson nella QGIS 2.12 Lyon Questo gruppo contiene variabili dinamiche relative all'applicazione, al file di progetto e ad altre impostazioni. Significa che alcune funzioni potrebbero non essere disponibili in base al contesto: seleziona per espressione calcolatore di campi geometry generator propriet\u00e0 del layer compositore di stampe In QGIS , puoi utilizzare le variabili per memorizzare dati utili con valori ricorrenti (ad esempio il titolo del progetto o il nome completo dell\u2019utente) che possono essere utilizzati nelle espressioni. Le variabili possono essere definite a livello globale dell\u2019 applicazione , a livello di progetto , a livello di layer , a livello di composizione e a livello di elemento del compositore . Proprio come le regole CSS a cascata, le variabili possono essere sovrascritte, ad esempio una variabile a livello di progetto sovrascrive le variabili di livello globale di qualsiasi applicazione impostate con lo stesso nome. Puoi utilizzare queste variabili per creare stringhe di testo o altre espressioni personalizzate utilizzando il carattere '@' prima del nome della variabile.","title":"Variabili"},{"location":"gr_funzioni/variabili/variabili/#elenco-variabili","text":"Riguardano (aggiornato a QGIS 3.20 Odense): Variable Description algorithm_id The unique ID of an algorithm animation_end_time End of the animation\u2019s overall temporal time range (as a datetime value) animation_interval Duration of the animation\u2019s overall temporal time range (as an interval value) animation_start_time Start of the animation\u2019s overall temporal time range (as a datetime value) atlas_feature The current atlas feature (as feature object) atlas_featureid The current atlas feature ID atlas_featurenumber The current atlas feature number in the layout atlas_filename The current atlas file name atlas_geometry The current atlas feature geometry atlas_layerid The current atlas coverage layer ID atlas_layername The current atlas coverage layer name atlas_pagename The current atlas page name atlas_totalfeatures The total number of features in atlas canvas_cursor_point The last cursor position on the canvas in the project\u2019s geographical coordinates cluster_color The color of symbols within a cluster, or NULL if symbols have mixed colors cluster_size The number of symbols contained within a cluster current_feature The feature currently being edited in the attribute form or table row current_geometry The geometry of the feature currently being edited in the form or the table row current_parent_feature represents the feature currently being edited in the parent form. Only usable in an embedded form context. current_parent_geometry represents the geometry of the feature currently being edited in the parent form. Only usable in an embedded form context. form_mode What the form is used for, like AddFeatureMode, SingleEditMode, MultiEditMode, SearchMode, AggregateSearchMode or IdentifyMode as string. frame_duration Temporal duration of each animation frame (as an interval value) frame_number Current frame number during animation playback frame_rate Number of frames per second during animation playback fullextent_maxx Maximum x value from full canvas extent (including all layers) fullextent_maxy Maximum y value from full canvas extent (including all layers) fullextent_minx Minimum x value from full canvas extent (including all layers) fullextent_miny Minimum y value from full canvas extent (including all layers) geometry_part_count The number of parts in rendered feature\u2019s geometry geometry_part_num The current geometry part number for feature being rendered geometry_point_count The number of points in the rendered geometry\u2019s part geometry_point_num The current point number in the rendered geometry\u2019s part geometry_ring_num Current geometry ring number for feature being rendered (for polygon features only). The exterior ring has a value of 0. grid_axis The current grid annotation axis (eg, \u2018x\u2019 for longitude, \u2018y\u2019 for latitude) grid_number The current grid annotation value item_id The layout item user ID (not necessarily unique) item_uuid The layout item unique ID layer The current layer layer_crs The Coordinate Reference System Authority ID of the current layer layer_id The ID of current layer layer_ids The IDs of all the map layers in the current project as a list layer_name The name of current layer layers All the map layers in the current project as a list layout_dpi The composition resolution (DPI) layout_name The layout name layout_numpages The number of pages in the layout layout_page The page number of the current item in the layout layout_pageheight The active page height in the layout (in mm for standard paper sizes, or whatever unit was used for custom paper size) layout_pageoffsets Array of Y coordinate of the top of each page. Allows to dynamically position items on pages in a context where page sizes may change layout_pagewidth The active page width in the layout (in mm for standard paper sizes, or whatever unit was used for custom paper size) legend_column_count The number of columns in the legend legend_filter_by_map Indicates if the content of the legend is filtered by the map legend_filter_out_atlas Indicates if the atlas is filtered out of the legend legend_split_layers Indicates if layers can be split in the legend legend_title The title of the legend legend_wrap_string The character(s) used to wrap the legend text map_crs The Coordinate reference system of the current map map_crs_acronym The acronym of the Coordinate reference system of the current map map_crs_definition The full definition of the Coordinate reference system of the current map map_crs_description The name of the Coordinate reference system of the current map map_crs_ellipsoid The acronym of the ellipsoid of the Coordinate reference system of the current map map_crs_proj4 The Proj4 definition of the Coordinate reference system of the current map map_crs_projection The descriptive name of the projection method used by the Coordinate reference system of the map (e.g. \u2018Albers Equal Area\u2019) map_crs_wkt The WKT definition of the Coordinate reference system of the current map map_end_time The end of the map\u2019s temporal time range (as a datetime value) map_extent The geometry representing the current extent of the map map_extent_center The point feature at the center of the map map_extent_height The current height of the map map_extent_width The current width of the map map_id The ID of current map destination. This will be \u2018canvas\u2019 for canvas renders, and the item ID for layout map renders map_interval The duration of the map\u2019s temporal time range (as an interval value) map_layer_ids The list of map layer IDs visible in the map map_layers The list of map layers visible in the map map_rotation The current rotation of the map map_scale The current scale of the map map_start_time The start of the map\u2019s temporal time range (as a datetime value) map_units The units of map measurements model_path Full path (including file name) of current model (or project path if model is embedded in a project). model_folder Folder containing current model (or project folder if model is embedded in a project). model_name Name of current model model_group Group for current model notification_message Content of the notification message sent by the provider (available only for actions triggered by provider notifications). parent Refers to the current feature in the parent layer, providing access to its attributes and geometry when filtering an aggregate function project_abstract The project abstract, taken from project metadata project_area_units The area unit for the current project, used when calculating areas of geometries project_author The project author, taken from project metadata project_basename The basename of current project\u2019s filename (without path and extension) project_creation_date The project creation date, taken from project metadata project_crs The Coordinate reference system of the project project_crs_arconym The acronym of the Coordinate reference system of the project project_crs_definition The full definition of the Coordinate reference system of the project project_crs_description The description of the Coordinate reference system of the project project_crs_ellipsoid The ellipsoid of the Coordinate reference system of the project project_crs_proj4 The Proj4 representation of the Coordinate reference system of the project project_crs_wkt The WKT (well known text) representation of the coordinate reference system of the project project_distance_units The distance unit for the current project, used when calculating lengths of geometries and distances project_ellipsoid The name of the ellipsoid of the current project, used when calculating geodetic areas or lengths of geometries project_filename The filename of the current project project_folder The folder of the current project project_home The home path of the current project project_identifier The project identifier, taken from the project\u2019s metadata project_keywords The project keywords, taken from the project\u2019s metadata project_last_saved Date/time when project was last saved. project_path The full path (including file name) of the current project project_title The title of current project project_units The units of the project\u2019s CRS qgis_locale The current language of QGIS qgis_os_name The current Operating system name, eg \u2018windows\u2019, \u2018linux\u2019 or \u2018osx\u2019 qgis_platform The QGIS platform, eg \u2018desktop\u2019 or \u2018server\u2019 qgis_release_name The current QGIS release name qgis_short_version The current QGIS version short string qgis_version The current QGIS version string qgis_version_no The current QGIS version number row_number Stores the number of the current row snapping_results Gives access to snapping results while digitizing a feature (only available in add feature) scale_value The current scale bar distance value symbol_angle The angle of the symbol used to render the feature (valid for marker symbols only) symbol_color The color of the symbol used to render the feature symbol_count The number of features represented by the symbol (in the layout legend) symbol_id The Internal ID of the symbol (in the layout legend) symbol_label The label for the symbol (either a user defined label or the default autogenerated label - in the layout legend) symbol_layer_count Total number of symbol layers in the symbol symbol_layer_index Current symbol layer index symbol_marker_column Column number for marker (valid for point pattern fills only). symbol_marker_row Row number for marker (valid for point pattern fills only). user_account_name The current user\u2019s operating system account name user_full_name The current user\u2019s operating system user name value The current value with_variable Allows setting a variable for usage within an expression and avoid recalculating the same value repeatedly zoom_level Zoom level of the tile that is being rendered (derived from the current map scale). Normally in interval [0, 20].","title":"Elenco variabili"},{"location":"gr_funzioni/variabili/variabili/#screenshot-livelli","text":"Propriet\u00e0 Progetto Gruppo sul calcolatore di campi,Seleziona per espressione Generatore di geometria- stile Selezione per espressione Calcolatore di campi,Seleziona per espressione Compositore di stampe","title":"Screenshot livelli"},{"location":"gr_funzioni/variabili/with_variable/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/with_variable/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/with_variable/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/with_variable/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/with_variable/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/with_variable/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/zoom_level/","text":"nome_variabile \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 bla bla nota bene \u21b5 -- osservazioni \u21b5 --","title":"nome_variabile"},{"location":"gr_funzioni/variabili/zoom_level/#nome_variabile","text":"--","title":"nome_variabile"},{"location":"gr_funzioni/variabili/zoom_level/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/zoom_level/#esempi","text":"bla bla","title":"Esempi"},{"location":"gr_funzioni/variabili/zoom_level/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/zoom_level/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/atlas_feature/","text":"atlas_feature \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atlas_feature"},{"location":"gr_funzioni/variabili/old/atlas_feature/#atlas_feature","text":"--","title":"atlas_feature"},{"location":"gr_funzioni/variabili/old/atlas_feature/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/atlas_feature/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/atlas_feature/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/atlas_feature/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/atlas_featureid/","text":"atlas_featureid \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atlas_featureid"},{"location":"gr_funzioni/variabili/old/atlas_featureid/#atlas_featureid","text":"--","title":"atlas_featureid"},{"location":"gr_funzioni/variabili/old/atlas_featureid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/atlas_featureid/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/atlas_featureid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/atlas_featureid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/atlas_featurenumber/","text":"atlas_featurenumber \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atlas_featurenumber"},{"location":"gr_funzioni/variabili/old/atlas_featurenumber/#atlas_featurenumber","text":"--","title":"atlas_featurenumber"},{"location":"gr_funzioni/variabili/old/atlas_featurenumber/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/atlas_featurenumber/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/atlas_featurenumber/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/atlas_featurenumber/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/atlas_filename/","text":"atlas_filename \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atlas_filename"},{"location":"gr_funzioni/variabili/old/atlas_filename/#atlas_filename","text":"--","title":"atlas_filename"},{"location":"gr_funzioni/variabili/old/atlas_filename/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/atlas_filename/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/atlas_filename/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/atlas_filename/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/atlas_geometry/","text":"atlas_geometry \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atlas_geometry"},{"location":"gr_funzioni/variabili/old/atlas_geometry/#atlas_geometry","text":"--","title":"atlas_geometry"},{"location":"gr_funzioni/variabili/old/atlas_geometry/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/atlas_geometry/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/atlas_geometry/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/atlas_geometry/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/atlas_layerid/","text":"atlas_layerid \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atlas_layerid"},{"location":"gr_funzioni/variabili/old/atlas_layerid/#atlas_layerid","text":"--","title":"atlas_layerid"},{"location":"gr_funzioni/variabili/old/atlas_layerid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/atlas_layerid/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/atlas_layerid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/atlas_layerid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/atlas_layername/","text":"atlas_layername \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atlas_layername"},{"location":"gr_funzioni/variabili/old/atlas_layername/#atlas_layername","text":"--","title":"atlas_layername"},{"location":"gr_funzioni/variabili/old/atlas_layername/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/atlas_layername/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/atlas_layername/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/atlas_layername/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/atlas_pagename/","text":"atlas_layername \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atlas_layername"},{"location":"gr_funzioni/variabili/old/atlas_pagename/#atlas_layername","text":"--","title":"atlas_layername"},{"location":"gr_funzioni/variabili/old/atlas_pagename/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/atlas_pagename/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/atlas_pagename/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/atlas_pagename/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/atlas_totalfeatures/","text":"atlas_totalfeatures \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"atlas_totalfeatures"},{"location":"gr_funzioni/variabili/old/atlas_totalfeatures/#atlas_totalfeatures","text":"--","title":"atlas_totalfeatures"},{"location":"gr_funzioni/variabili/old/atlas_totalfeatures/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/atlas_totalfeatures/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/atlas_totalfeatures/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/atlas_totalfeatures/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/cluster_color/","text":"cluster_color \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"cluster_color"},{"location":"gr_funzioni/variabili/old/cluster_color/#cluster_color","text":"--","title":"cluster_color"},{"location":"gr_funzioni/variabili/old/cluster_color/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/cluster_color/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/cluster_color/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/cluster_color/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/cluster_size/","text":"cluster_size \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"cluster_size"},{"location":"gr_funzioni/variabili/old/cluster_size/#cluster_size","text":"--","title":"cluster_size"},{"location":"gr_funzioni/variabili/old/cluster_size/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/cluster_size/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/cluster_size/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/cluster_size/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/geometry_part_count/","text":"geometry_part_count \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geometry_part_count"},{"location":"gr_funzioni/variabili/old/geometry_part_count/#geometry_part_count","text":"--","title":"geometry_part_count"},{"location":"gr_funzioni/variabili/old/geometry_part_count/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/geometry_part_count/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/geometry_part_count/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/geometry_part_count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/geometry_part_num/","text":"geometry_part_num \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geometry_part_num"},{"location":"gr_funzioni/variabili/old/geometry_part_num/#geometry_part_num","text":"--","title":"geometry_part_num"},{"location":"gr_funzioni/variabili/old/geometry_part_num/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/geometry_part_num/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/geometry_part_num/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/geometry_part_num/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/geometry_point_count/","text":"geometry_point_count \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geometry_point_count"},{"location":"gr_funzioni/variabili/old/geometry_point_count/#geometry_point_count","text":"--","title":"geometry_point_count"},{"location":"gr_funzioni/variabili/old/geometry_point_count/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/geometry_point_count/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/geometry_point_count/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/geometry_point_count/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/geometry_point_num/","text":"geometry_point_num \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"geometry_point_num"},{"location":"gr_funzioni/variabili/old/geometry_point_num/#geometry_point_num","text":"--","title":"geometry_point_num"},{"location":"gr_funzioni/variabili/old/geometry_point_num/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/geometry_point_num/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/geometry_point_num/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/geometry_point_num/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/grid_axis/","text":"grid_axis \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"grid_axis"},{"location":"gr_funzioni/variabili/old/grid_axis/#grid_axis","text":"--","title":"grid_axis"},{"location":"gr_funzioni/variabili/old/grid_axis/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/grid_axis/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/grid_axis/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/grid_axis/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/grid_number/","text":"grid_number \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"grid_number"},{"location":"gr_funzioni/variabili/old/grid_number/#grid_number","text":"--","title":"grid_number"},{"location":"gr_funzioni/variabili/old/grid_number/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/grid_number/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/grid_number/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/grid_number/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/item_id/","text":"item_id \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"item_id"},{"location":"gr_funzioni/variabili/old/item_id/#item_id","text":"--","title":"item_id"},{"location":"gr_funzioni/variabili/old/item_id/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/item_id/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/item_id/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/item_id/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/item_uuid/","text":"item_uuid \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"item_uuid"},{"location":"gr_funzioni/variabili/old/item_uuid/#item_uuid","text":"--","title":"item_uuid"},{"location":"gr_funzioni/variabili/old/item_uuid/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/item_uuid/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/item_uuid/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/item_uuid/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/layer/","text":"layer \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"layer"},{"location":"gr_funzioni/variabili/old/layer/#layer","text":"--","title":"layer"},{"location":"gr_funzioni/variabili/old/layer/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/layer/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/layer/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/layer/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/layer_id/","text":"layer_id \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"layer_id"},{"location":"gr_funzioni/variabili/old/layer_id/#layer_id","text":"--","title":"layer_id"},{"location":"gr_funzioni/variabili/old/layer_id/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/layer_id/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/layer_id/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/layer_id/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/layer_name/","text":"layer_name \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"layer_name"},{"location":"gr_funzioni/variabili/old/layer_name/#layer_name","text":"--","title":"layer_name"},{"location":"gr_funzioni/variabili/old/layer_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/layer_name/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/layer_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/layer_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/layout_dpi/","text":"layout_dpi \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"layout_dpi"},{"location":"gr_funzioni/variabili/old/layout_dpi/#layout_dpi","text":"--","title":"layout_dpi"},{"location":"gr_funzioni/variabili/old/layout_dpi/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/layout_dpi/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/layout_dpi/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/layout_dpi/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/layout_name/","text":"layout_name \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"layout_name"},{"location":"gr_funzioni/variabili/old/layout_name/#layout_name","text":"--","title":"layout_name"},{"location":"gr_funzioni/variabili/old/layout_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/layout_name/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/layout_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/layout_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/layout_numpages/","text":"layout_numpages \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"layout_numpages"},{"location":"gr_funzioni/variabili/old/layout_numpages/#layout_numpages","text":"--","title":"layout_numpages"},{"location":"gr_funzioni/variabili/old/layout_numpages/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/layout_numpages/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/layout_numpages/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/layout_numpages/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/layout_page/","text":"layout_page \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"layout_page"},{"location":"gr_funzioni/variabili/old/layout_page/#layout_page","text":"--","title":"layout_page"},{"location":"gr_funzioni/variabili/old/layout_page/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/layout_page/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/layout_page/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/layout_page/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/layout_pageheight/","text":"layout_pageheight \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"layout_pageheight"},{"location":"gr_funzioni/variabili/old/layout_pageheight/#layout_pageheight","text":"--","title":"layout_pageheight"},{"location":"gr_funzioni/variabili/old/layout_pageheight/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/layout_pageheight/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/layout_pageheight/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/layout_pageheight/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/layout_pagewidth/","text":"layout_pagewidth \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"layout_pagewidth"},{"location":"gr_funzioni/variabili/old/layout_pagewidth/#layout_pagewidth","text":"--","title":"layout_pagewidth"},{"location":"gr_funzioni/variabili/old/layout_pagewidth/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/layout_pagewidth/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/layout_pagewidth/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/layout_pagewidth/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_crs/","text":"map_crs \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_crs"},{"location":"gr_funzioni/variabili/old/map_crs/#map_crs","text":"--","title":"map_crs"},{"location":"gr_funzioni/variabili/old/map_crs/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_crs/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_crs/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_crs/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_crs_definition/","text":"map_crs_definition \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_crs_definition"},{"location":"gr_funzioni/variabili/old/map_crs_definition/#map_crs_definition","text":"--","title":"map_crs_definition"},{"location":"gr_funzioni/variabili/old/map_crs_definition/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_crs_definition/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_crs_definition/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_crs_definition/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_extent/","text":"map_extent \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_extent"},{"location":"gr_funzioni/variabili/old/map_extent/#map_extent","text":"--","title":"map_extent"},{"location":"gr_funzioni/variabili/old/map_extent/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_extent/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_extent/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_extent/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_extent_center/","text":"map_extent_center \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_extent_center"},{"location":"gr_funzioni/variabili/old/map_extent_center/#map_extent_center","text":"--","title":"map_extent_center"},{"location":"gr_funzioni/variabili/old/map_extent_center/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_extent_center/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_extent_center/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_extent_center/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_extent_height/","text":"map_extent_height \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_extent_height"},{"location":"gr_funzioni/variabili/old/map_extent_height/#map_extent_height","text":"--","title":"map_extent_height"},{"location":"gr_funzioni/variabili/old/map_extent_height/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_extent_height/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_extent_height/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_extent_height/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_extent_width/","text":"map_extent_width \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_extent_width"},{"location":"gr_funzioni/variabili/old/map_extent_width/#map_extent_width","text":"--","title":"map_extent_width"},{"location":"gr_funzioni/variabili/old/map_extent_width/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_extent_width/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_extent_width/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_extent_width/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_id/","text":"map_id \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_id"},{"location":"gr_funzioni/variabili/old/map_id/#map_id","text":"--","title":"map_id"},{"location":"gr_funzioni/variabili/old/map_id/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_id/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_id/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_id/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_rotation/","text":"map_rotation \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_rotation"},{"location":"gr_funzioni/variabili/old/map_rotation/#map_rotation","text":"--","title":"map_rotation"},{"location":"gr_funzioni/variabili/old/map_rotation/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_rotation/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_rotation/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_rotation/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_scale/","text":"map_scale \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_scale"},{"location":"gr_funzioni/variabili/old/map_scale/#map_scale","text":"--","title":"map_scale"},{"location":"gr_funzioni/variabili/old/map_scale/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_scale/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_scale/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_scale/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/map_units/","text":"map_units \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"map_units"},{"location":"gr_funzioni/variabili/old/map_units/#map_units","text":"--","title":"map_units"},{"location":"gr_funzioni/variabili/old/map_units/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/map_units/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/map_units/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/map_units/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/parent/","text":"parent \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"parent"},{"location":"gr_funzioni/variabili/old/parent/#parent","text":"--","title":"parent"},{"location":"gr_funzioni/variabili/old/parent/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/parent/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/parent/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/parent/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_abstract/","text":"project_abstract \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_abstract"},{"location":"gr_funzioni/variabili/old/project_abstract/#project_abstract","text":"--","title":"project_abstract"},{"location":"gr_funzioni/variabili/old/project_abstract/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_abstract/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_abstract/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_abstract/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_author/","text":"project_author \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_author"},{"location":"gr_funzioni/variabili/old/project_author/#project_author","text":"--","title":"project_author"},{"location":"gr_funzioni/variabili/old/project_author/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_author/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_author/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_author/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_creation_date/","text":"project_creation_date \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_creation_date"},{"location":"gr_funzioni/variabili/old/project_creation_date/#project_creation_date","text":"--","title":"project_creation_date"},{"location":"gr_funzioni/variabili/old/project_creation_date/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_creation_date/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_creation_date/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_creation_date/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_crs/","text":"project_crs \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_crs"},{"location":"gr_funzioni/variabili/old/project_crs/#project_crs","text":"--","title":"project_crs"},{"location":"gr_funzioni/variabili/old/project_crs/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_crs/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_crs/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_crs/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_crs_definition/","text":"project_crs_definition \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_crs_definition"},{"location":"gr_funzioni/variabili/old/project_crs_definition/#project_crs_definition","text":"--","title":"project_crs_definition"},{"location":"gr_funzioni/variabili/old/project_crs_definition/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_crs_definition/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_crs_definition/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_crs_definition/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_filename/","text":"project_filename \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_filename"},{"location":"gr_funzioni/variabili/old/project_filename/#project_filename","text":"--","title":"project_filename"},{"location":"gr_funzioni/variabili/old/project_filename/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_filename/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_filename/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_filename/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_folder/","text":"project_folder \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_folder"},{"location":"gr_funzioni/variabili/old/project_folder/#project_folder","text":"--","title":"project_folder"},{"location":"gr_funzioni/variabili/old/project_folder/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_folder/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_folder/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_folder/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_identifier/","text":"project_identifier \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_identifier"},{"location":"gr_funzioni/variabili/old/project_identifier/#project_identifier","text":"--","title":"project_identifier"},{"location":"gr_funzioni/variabili/old/project_identifier/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_identifier/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_identifier/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_identifier/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_keywords/","text":"project_keywords \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_keywords"},{"location":"gr_funzioni/variabili/old/project_keywords/#project_keywords","text":"--","title":"project_keywords"},{"location":"gr_funzioni/variabili/old/project_keywords/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_keywords/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_keywords/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_keywords/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_path/","text":"project_path \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_path"},{"location":"gr_funzioni/variabili/old/project_path/#project_path","text":"--","title":"project_path"},{"location":"gr_funzioni/variabili/old/project_path/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_path/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_path/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_path/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/project_title/","text":"project_title \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"project_title"},{"location":"gr_funzioni/variabili/old/project_title/#project_title","text":"--","title":"project_title"},{"location":"gr_funzioni/variabili/old/project_title/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/project_title/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/project_title/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/project_title/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/qgis_locale/","text":"qgis_locale \u21b5 Restituisce la sigla 'it_IT' Sintassi \u21b5 @qgis_locale Esempi \u21b5 Valore attuale: 'it_IT' nota bene \u21b5 -- osservazioni \u21b5 --","title":"qgis_locale"},{"location":"gr_funzioni/variabili/old/qgis_locale/#qgis_locale","text":"Restituisce la sigla 'it_IT'","title":"qgis_locale"},{"location":"gr_funzioni/variabili/old/qgis_locale/#sintassi","text":"@qgis_locale","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/qgis_locale/#esempi","text":"Valore attuale: 'it_IT'","title":"Esempi"},{"location":"gr_funzioni/variabili/old/qgis_locale/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/qgis_locale/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/qgis_os_name/","text":"qgis_os_name \u21b5 Nome del sistema operativo, es. 'windows', 'linux' o 'osx'. Sintassi \u21b5 qgis_os_name Esempi \u21b5 Valore attuale: 'windows' nota bene \u21b5 -- osservazioni \u21b5 --","title":"qgis_os_name"},{"location":"gr_funzioni/variabili/old/qgis_os_name/#qgis_os_name","text":"Nome del sistema operativo, es. 'windows', 'linux' o 'osx'.","title":"qgis_os_name"},{"location":"gr_funzioni/variabili/old/qgis_os_name/#sintassi","text":"qgis_os_name","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/qgis_os_name/#esempi","text":"Valore attuale: 'windows'","title":"Esempi"},{"location":"gr_funzioni/variabili/old/qgis_os_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/qgis_os_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/qgis_platform/","text":"qgis_platform \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"qgis_platform"},{"location":"gr_funzioni/variabili/old/qgis_platform/#qgis_platform","text":"--","title":"qgis_platform"},{"location":"gr_funzioni/variabili/old/qgis_platform/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/qgis_platform/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/qgis_platform/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/qgis_platform/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/qgis_release_name/","text":"qgis_release_name \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"qgis_release_name"},{"location":"gr_funzioni/variabili/old/qgis_release_name/#qgis_release_name","text":"--","title":"qgis_release_name"},{"location":"gr_funzioni/variabili/old/qgis_release_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/qgis_release_name/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/qgis_release_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/qgis_release_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/qgis_short_version/","text":"qgis_short_version \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"qgis_short_version"},{"location":"gr_funzioni/variabili/old/qgis_short_version/#qgis_short_version","text":"--","title":"qgis_short_version"},{"location":"gr_funzioni/variabili/old/qgis_short_version/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/qgis_short_version/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/qgis_short_version/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/qgis_short_version/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/qgis_version/","text":"qgis_version \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"qgis_version"},{"location":"gr_funzioni/variabili/old/qgis_version/#qgis_version","text":"--","title":"qgis_version"},{"location":"gr_funzioni/variabili/old/qgis_version/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/qgis_version/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/qgis_version/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/qgis_version/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/qgis_version_no/","text":"qgis_version_no \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"qgis_version_no"},{"location":"gr_funzioni/variabili/old/qgis_version_no/#qgis_version_no","text":"--","title":"qgis_version_no"},{"location":"gr_funzioni/variabili/old/qgis_version_no/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/qgis_version_no/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/qgis_version_no/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/qgis_version_no/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/row_number/","text":"row_number \u21b5 Memorizza il numero della riga corrente. Sintassi \u21b5 @row_number Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"row_number"},{"location":"gr_funzioni/variabili/old/row_number/#row_number","text":"Memorizza il numero della riga corrente.","title":"row_number"},{"location":"gr_funzioni/variabili/old/row_number/#sintassi","text":"@row_number","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/row_number/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/row_number/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/row_number/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/snapping_results/","text":"snapping_results \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"snapping_results"},{"location":"gr_funzioni/variabili/old/snapping_results/#snapping_results","text":"--","title":"snapping_results"},{"location":"gr_funzioni/variabili/old/snapping_results/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/snapping_results/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/snapping_results/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/snapping_results/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/symbol_angle/","text":"symbol_angle \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"symbol_angle"},{"location":"gr_funzioni/variabili/old/symbol_angle/#symbol_angle","text":"--","title":"symbol_angle"},{"location":"gr_funzioni/variabili/old/symbol_angle/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/symbol_angle/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/symbol_angle/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/symbol_angle/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/symbol_color/","text":"symbol_color \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"symbol_color"},{"location":"gr_funzioni/variabili/old/symbol_color/#symbol_color","text":"--","title":"symbol_color"},{"location":"gr_funzioni/variabili/old/symbol_color/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/symbol_color/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/symbol_color/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/symbol_color/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/user_account_name/","text":"user_account_name \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"user_account_name"},{"location":"gr_funzioni/variabili/old/user_account_name/#user_account_name","text":"--","title":"user_account_name"},{"location":"gr_funzioni/variabili/old/user_account_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/user_account_name/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/user_account_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/user_account_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/user_full_name/","text":"user_full_name \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"user_full_name"},{"location":"gr_funzioni/variabili/old/user_full_name/#user_full_name","text":"--","title":"user_full_name"},{"location":"gr_funzioni/variabili/old/user_full_name/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/user_full_name/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/user_full_name/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/user_full_name/#osservazioni","text":"--","title":"osservazioni"},{"location":"gr_funzioni/variabili/old/value/","text":"value \u21b5 -- Sintassi \u21b5 -- Esempi \u21b5 nota bene \u21b5 -- osservazioni \u21b5 --","title":"value"},{"location":"gr_funzioni/variabili/old/value/#value","text":"--","title":"value"},{"location":"gr_funzioni/variabili/old/value/#sintassi","text":"--","title":"Sintassi"},{"location":"gr_funzioni/variabili/old/value/#esempi","text":"","title":"Esempi"},{"location":"gr_funzioni/variabili/old/value/#nota-bene","text":"--","title":"nota bene"},{"location":"gr_funzioni/variabili/old/value/#osservazioni","text":"--","title":"osservazioni"},{"location":"img/","text":"Cartella Immagini \u21b5 Questo cartella contiene gli screenshot, suddivisi per argomento, utilizzati nei vari gruppi di funzioni e/o espressioni.","title":"Index"},{"location":"img/#cartella-immagini","text":"Questo cartella contiene gli screenshot, suddivisi per argomento, utilizzati nei vari gruppi di funzioni e/o espressioni.","title":"Cartella Immagini"},{"location":"release/intro_novita/","text":"Novit\u00e0 \u21b5 Abstract In questa sezione verranno documentate le principali novit\u00e0 implementate nel calcolatore di campi e tabella degli attributi , come per esempio nuove funzioni o nuove funzionalit\u00e0 legate alle tabelle. Release \u21b5 Release Data changelog nuove funzioni QGIS 3.20 Odense 21/06/2021 length3D, array_count, array_priorize, array_replace, mime_type QGIS 3.18 Z\u00fcrich 22/02/2021 UUID, array_get, array_min, arra_max, array_majority, array_sum, array_mean, array_median, map_credits, @layer_crs QGIS 3.16 Hannover 23/10/2020 main_angle, to_decimal, overlay_* QGIS 3.14 Pi 19/06/2020 ascii, is_multipart, min_z, maax_z, min_m, max_m, close_line, make_date, make_time, make_datetime, make_interval QGIS 3.12 Bucure\u0219ti 21/02/2020 ascii, is_multipart, min_z, maax_z, min_m, max_m, close_line, make_date, make_time, make_datetime, make_interval QGIS 3.10 A Coru\u00f1a 25/10/2019 attributes, to_date, to_datetime, to_time, collect_geometries, make_line QGIS 3.8 Zanzibar 21/06/2019 concatenate_unique, array_all, ecc... QGIS 3.6 Noosa 22/02/2019 force_rhr,make_rectangle_3points, make_square, decode_uri, nullif, try, from_jsom, to_json, sqlite_fecth_and_increment ecc... QGIS 3.4 Madeira 26/10/2018 raster_value(), line_substring, array_foreach, generate_series, array_filter, to_dm, to_dms, hstore_to_map, json_to_map, map_to_hstore, map_to_json, ecc... QGIS 3.2 Bonn 22/06/2018 nuove variabili, ecc... QGIS 3.0 Girona 23/02/2018 vedi changelog","title":"Introduzione"},{"location":"release/intro_novita/#novita","text":"Abstract In questa sezione verranno documentate le principali novit\u00e0 implementate nel calcolatore di campi e tabella degli attributi , come per esempio nuove funzioni o nuove funzionalit\u00e0 legate alle tabelle.","title":"Novit\u00e0"},{"location":"release/intro_novita/#release","text":"Release Data changelog nuove funzioni QGIS 3.20 Odense 21/06/2021 length3D, array_count, array_priorize, array_replace, mime_type QGIS 3.18 Z\u00fcrich 22/02/2021 UUID, array_get, array_min, arra_max, array_majority, array_sum, array_mean, array_median, map_credits, @layer_crs QGIS 3.16 Hannover 23/10/2020 main_angle, to_decimal, overlay_* QGIS 3.14 Pi 19/06/2020 ascii, is_multipart, min_z, maax_z, min_m, max_m, close_line, make_date, make_time, make_datetime, make_interval QGIS 3.12 Bucure\u0219ti 21/02/2020 ascii, is_multipart, min_z, maax_z, min_m, max_m, close_line, make_date, make_time, make_datetime, make_interval QGIS 3.10 A Coru\u00f1a 25/10/2019 attributes, to_date, to_datetime, to_time, collect_geometries, make_line QGIS 3.8 Zanzibar 21/06/2019 concatenate_unique, array_all, ecc... QGIS 3.6 Noosa 22/02/2019 force_rhr,make_rectangle_3points, make_square, decode_uri, nullif, try, from_jsom, to_json, sqlite_fecth_and_increment ecc... QGIS 3.4 Madeira 26/10/2018 raster_value(), line_substring, array_foreach, generate_series, array_filter, to_dm, to_dms, hstore_to_map, json_to_map, map_to_hstore, map_to_json, ecc... QGIS 3.2 Bonn 22/06/2018 nuove variabili, ecc... QGIS 3.0 Girona 23/02/2018 vedi changelog","title":"Release"},{"location":"release/novita_30/","text":"Novit\u00e0 rilevanti introdotte nella 3.0 Girona \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog30/index.html Changelog \u21b5 Expressions","title":"QGIS 3.0  | 23/02/2018"},{"location":"release/novita_30/#novita-rilevanti-introdotte-nella-30-girona","text":"https://www.qgis.org/it/site/forusers/visualchangelog30/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.0 Girona"},{"location":"release/novita_30/#changelog","text":"Expressions","title":"Changelog"},{"location":"release/novita_310/","text":"Novit\u00e0 rilevanti introdotte nella 3.10 A Coru\u00f1a \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog310/index.html Nuove funzioni \u21b5 Gruppo Record e Attributi \u21b5 https://github.com/qgis/QGIS/pull/30440 Aggiorna campi \u21b5 [https://github.com/qgis/QGIS/pull/31065 Gruppo Data \u21b5 https://github.com/qgis/QGIS/pull/31231 Memorizza Filtro tabella attributi \u21b5 https://github.com/qgis/QGIS/pull/31349 Gruppo Geometria \u21b5 make_line , ora accetta anche array collect_geometries https://github.com/qgis/QGIS/pull/31480","title":"QGIS 3.10 | 25/10/2019"},{"location":"release/novita_310/#novita-rilevanti-introdotte-nella-310-a-coruna","text":"https://www.qgis.org/it/site/forusers/visualchangelog310/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.10 A Coru\u00f1a"},{"location":"release/novita_310/#nuove-funzioni","text":"","title":"Nuove funzioni"},{"location":"release/novita_310/#gruppo-record-e-attributi","text":"https://github.com/qgis/QGIS/pull/30440","title":"Gruppo Record e Attributi"},{"location":"release/novita_310/#aggiorna-campi","text":"[https://github.com/qgis/QGIS/pull/31065","title":"Aggiorna campi"},{"location":"release/novita_310/#gruppo-data","text":"https://github.com/qgis/QGIS/pull/31231","title":"Gruppo Data"},{"location":"release/novita_310/#memorizza-filtro-tabella-attributi","text":"https://github.com/qgis/QGIS/pull/31349","title":"Memorizza Filtro tabella attributi"},{"location":"release/novita_310/#gruppo-geometria","text":"make_line , ora accetta anche array collect_geometries https://github.com/qgis/QGIS/pull/31480","title":"Gruppo Geometria"},{"location":"release/novita_312/","text":"Novit\u00e0 rilevanti introdotte nella 3.12 Bucaresti \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog312/index.html Nuove funzioni \u21b5 https://github.com/qgis/QGIS/pull/32630 (chiuso) Gruppo Matematica \u21b5 rand randf qui PR: https://github.com/qgis/QGIS/pull/33204 Gruppo Geometria \u21b5 is_valid qui PR: https://github.com/qgis/QGIS/pull/32900 geom_from_wkb geom_to_wkb qui PR: https://github.com/qgis/QGIS/pull/32561 is_empy is_empty_or_null qui PR: https://github.com/qgis/QGIS/pull/33333 rotate qui PR: https://github.com/qgis/QGIS/pull/33125 Gruppo Data e ora \u21b5 datetime_from_epoch qui PR: https://github.com/qgis/QGIS/pull/32551 format_date qui PR: https://github.com/qgis/QGIS/pull/32908 Gruppo Conversioni \u21b5 hash (value, method) md5 (value) sha256 (value) qui PR: https://github.com/qgis/QGIS/pull/31726 tag espressioni \u21b5 PR: https://github.com/qgis/QGIS/pull/33197 Tabella attributi \u21b5 PR: https://github.com/qgis/QGIS/pull/33322 -- chiusa Interfaccia \u21b5 List referenced layer values qui PR: https://github.com/qgis/QGIS/pull/33436 Stored expressions https://github.com/qgis/QGIS/pull/33437 -- IDEATA DA ME!!! Organize Columns https://github.com/qgis/QGIS/pull/33918 -- ANCORA APERTA!!!","title":"QGIS 3.12 | 21/02/2020"},{"location":"release/novita_312/#novita-rilevanti-introdotte-nella-312-bucaresti","text":"https://www.qgis.org/it/site/forusers/visualchangelog312/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.12 Bucaresti"},{"location":"release/novita_312/#nuove-funzioni","text":"https://github.com/qgis/QGIS/pull/32630 (chiuso)","title":"Nuove funzioni"},{"location":"release/novita_312/#gruppo-matematica","text":"rand randf qui PR: https://github.com/qgis/QGIS/pull/33204","title":"Gruppo Matematica"},{"location":"release/novita_312/#gruppo-geometria","text":"is_valid qui PR: https://github.com/qgis/QGIS/pull/32900 geom_from_wkb geom_to_wkb qui PR: https://github.com/qgis/QGIS/pull/32561 is_empy is_empty_or_null qui PR: https://github.com/qgis/QGIS/pull/33333 rotate qui PR: https://github.com/qgis/QGIS/pull/33125","title":"Gruppo Geometria"},{"location":"release/novita_312/#gruppo-data-e-ora","text":"datetime_from_epoch qui PR: https://github.com/qgis/QGIS/pull/32551 format_date qui PR: https://github.com/qgis/QGIS/pull/32908","title":"Gruppo Data e ora"},{"location":"release/novita_312/#gruppo-conversioni","text":"hash (value, method) md5 (value) sha256 (value) qui PR: https://github.com/qgis/QGIS/pull/31726","title":"Gruppo Conversioni"},{"location":"release/novita_312/#tag-espressioni","text":"PR: https://github.com/qgis/QGIS/pull/33197","title":"tag espressioni"},{"location":"release/novita_312/#tabella-attributi","text":"PR: https://github.com/qgis/QGIS/pull/33322 -- chiusa","title":"Tabella attributi"},{"location":"release/novita_312/#interfaccia","text":"List referenced layer values qui PR: https://github.com/qgis/QGIS/pull/33436 Stored expressions https://github.com/qgis/QGIS/pull/33437 -- IDEATA DA ME!!! Organize Columns https://github.com/qgis/QGIS/pull/33918 -- ANCORA APERTA!!!","title":"Interfaccia"},{"location":"release/novita_314/","text":"Novit\u00e0 rilevanti introdotte nella 3.14 Pi \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog314/index.html Nuove funzioni \u21b5 Ascii : https://github.com/qgis/QGIS/pull/35839 is_multipart : https://github.com/qgis/QGIS/pull/35889 min/max z : https://github.com/qgis/QGIS/pull/35928 min/max m : https://github.com/qgis/QGIS/pull/35928 close_line : https://github.com/qgis/QGIS/pull/36069 make_date : https://github.com/qgis/QGIS/pull/36245 make_time : https://github.com/qgis/QGIS/pull/36245 make_datetime : https://github.com/qgis/QGIS/pull/36245 make_interval : https://github.com/qgis/QGIS/pull/36303 Fix \u21b5 geom_from_gml: https://github.com/qgis/QGIS/pull/34931 GUI/UI/Forms \u21b5 form: https://github.com/qgis/QGIS/pull/34827 current_feature; current_geometry; current_parent_feature; current_parent_geometry; currente_parent_value; current_value; Edit,Import, export: https://github.com/qgis/QGIS/pull/34997 sorting: https://github.com/qgis/QGIS/pull/36199 widget tabs: https://github.com/qgis/QGIS/pull/35933 Organize Columns: https://github.com/qgis/QGIS/pull/33918 Allinea All Unique: https://github.com/qgis/QGIS/pull/34930 preview: https://github.com/qgis/QGIS/pull/36089 Variabili \u21b5 @frame_ : https://github.com/qgis/QGIS/pull/36300 @frame_number : numero del frame corrente; @frame_rate : frame al secondo; @frame_duration : lunghezza di frame; is_editable: https://github.com/qgis/QGIS/pull/35415 @layer,@layer_ids: https://github.com/qgis/QGIS/pull/35208 @layers @layer_ids expressions: https://github.com/qgis/QGIS/pull/34898 @map_start_time: Start of the map's temporal time range (as a datetime value) @map_end_time: End of the map's temporal time range (as a datetime value) @map_interval: Duration of the map's temporal time range (as an interval value) animation : https://github.com/qgis/QGIS/pull/36324 @animation_start_time; @animation_end_time Miglioramenti funzioni \u21b5 https://github.com/qgis/QGIS/pull/36988","title":"QGIS 3.14 | 19/06/2020"},{"location":"release/novita_314/#novita-rilevanti-introdotte-nella-314-pi","text":"https://www.qgis.org/it/site/forusers/visualchangelog314/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.14 Pi"},{"location":"release/novita_314/#nuove-funzioni","text":"Ascii : https://github.com/qgis/QGIS/pull/35839 is_multipart : https://github.com/qgis/QGIS/pull/35889 min/max z : https://github.com/qgis/QGIS/pull/35928 min/max m : https://github.com/qgis/QGIS/pull/35928 close_line : https://github.com/qgis/QGIS/pull/36069 make_date : https://github.com/qgis/QGIS/pull/36245 make_time : https://github.com/qgis/QGIS/pull/36245 make_datetime : https://github.com/qgis/QGIS/pull/36245 make_interval : https://github.com/qgis/QGIS/pull/36303","title":"Nuove funzioni"},{"location":"release/novita_314/#fix","text":"geom_from_gml: https://github.com/qgis/QGIS/pull/34931","title":"Fix"},{"location":"release/novita_314/#guiuiforms","text":"form: https://github.com/qgis/QGIS/pull/34827 current_feature; current_geometry; current_parent_feature; current_parent_geometry; currente_parent_value; current_value; Edit,Import, export: https://github.com/qgis/QGIS/pull/34997 sorting: https://github.com/qgis/QGIS/pull/36199 widget tabs: https://github.com/qgis/QGIS/pull/35933 Organize Columns: https://github.com/qgis/QGIS/pull/33918 Allinea All Unique: https://github.com/qgis/QGIS/pull/34930 preview: https://github.com/qgis/QGIS/pull/36089","title":"GUI/UI/Forms"},{"location":"release/novita_314/#variabili","text":"@frame_ : https://github.com/qgis/QGIS/pull/36300 @frame_number : numero del frame corrente; @frame_rate : frame al secondo; @frame_duration : lunghezza di frame; is_editable: https://github.com/qgis/QGIS/pull/35415 @layer,@layer_ids: https://github.com/qgis/QGIS/pull/35208 @layers @layer_ids expressions: https://github.com/qgis/QGIS/pull/34898 @map_start_time: Start of the map's temporal time range (as a datetime value) @map_end_time: End of the map's temporal time range (as a datetime value) @map_interval: Duration of the map's temporal time range (as an interval value) animation : https://github.com/qgis/QGIS/pull/36324 @animation_start_time; @animation_end_time","title":"Variabili"},{"location":"release/novita_314/#miglioramenti-funzioni","text":"https://github.com/qgis/QGIS/pull/36988","title":"Miglioramenti funzioni"},{"location":"release/novita_316/","text":"Novit\u00e0 rilevanti introdotte nella 3.16 Hannover \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog316/index.html Miglioramenti help in linea \u21b5 help in linea: https://github.com/qgis/QGIS/pull/37532 help in linea : https://github.com/qgis/QGIS/pull/37771 Nuove funzioni \u21b5 main_angle : https://github.com/qgis/QGIS/pull/37798 to_decimal() : https://github.com/qgis/QGIS/pull/38025 refFunction: https://github.com/qgis/QGIS/pull/38405 overlay_intersects(layer[,expression][,filter][,limit][,cache]) overlay_contains(layer[,expression][,filter][,limit][,cache]) overlay_crosses(layer[,expression][,filter][,limit][,cache]) overlay_equals(layer[,expression][,filter][,limit][,cache]) overlay_touches(layer[,expression][,filter][,limit][,cache]) overlay_disjoint(layer[,expression][,filter][,limit][,cache]) overlay_within(layer[,expression][,filter][,limit][,cache]) overlay_nearest(layer[,expression][,filter][,limit][,max_distance][,cache]) rename: https://github.com/qgis/QGIS/pull/39174","title":"QGIS 3.16 | 23/10/2020"},{"location":"release/novita_316/#novita-rilevanti-introdotte-nella-316-hannover","text":"https://www.qgis.org/it/site/forusers/visualchangelog316/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.16 Hannover"},{"location":"release/novita_316/#miglioramenti-help-in-linea","text":"help in linea: https://github.com/qgis/QGIS/pull/37532 help in linea : https://github.com/qgis/QGIS/pull/37771","title":"Miglioramenti help in linea"},{"location":"release/novita_316/#nuove-funzioni","text":"main_angle : https://github.com/qgis/QGIS/pull/37798 to_decimal() : https://github.com/qgis/QGIS/pull/38025 refFunction: https://github.com/qgis/QGIS/pull/38405 overlay_intersects(layer[,expression][,filter][,limit][,cache]) overlay_contains(layer[,expression][,filter][,limit][,cache]) overlay_crosses(layer[,expression][,filter][,limit][,cache]) overlay_equals(layer[,expression][,filter][,limit][,cache]) overlay_touches(layer[,expression][,filter][,limit][,cache]) overlay_disjoint(layer[,expression][,filter][,limit][,cache]) overlay_within(layer[,expression][,filter][,limit][,cache]) overlay_nearest(layer[,expression][,filter][,limit][,max_distance][,cache]) rename: https://github.com/qgis/QGIS/pull/39174","title":"Nuove funzioni"},{"location":"release/novita_318/","text":"Novit\u00e0 rilevanti introdotte nella 3.18 Z\u00fcrich \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog318/index.html Espressioni \u21b5 UUID https://github.com/qgis/QGIS/pull/39414 Array_get (supporta indici negativi) https://github.com/qgis/QGIS/pull/39921 array_min/max , array_majority , array_sum/mean/median https://github.com/qgis/QGIS/pull/40364 map_credits https://github.com/qgis/QGIS/pull/40919 variabile @layer_crs GUI/UX \u21b5 Gruppo recente singola linea https://github.com/qgis/QGIS/pull/41545","title":"QGIS 3.18 | 22/02/2021"},{"location":"release/novita_318/#novita-rilevanti-introdotte-nella-318-zurich","text":"https://www.qgis.org/it/site/forusers/visualchangelog318/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.18 Z\u00fcrich"},{"location":"release/novita_318/#espressioni","text":"UUID https://github.com/qgis/QGIS/pull/39414 Array_get (supporta indici negativi) https://github.com/qgis/QGIS/pull/39921 array_min/max , array_majority , array_sum/mean/median https://github.com/qgis/QGIS/pull/40364 map_credits https://github.com/qgis/QGIS/pull/40919 variabile @layer_crs","title":"Espressioni"},{"location":"release/novita_318/#guiux","text":"Gruppo recente singola linea https://github.com/qgis/QGIS/pull/41545","title":"GUI/UX"},{"location":"release/novita_32/","text":"Novit\u00e0 rilevanti introdotte nella 3.2 Bonn \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog32/index.html Generatore di espressioni pi\u00f9 utile. \u21b5 Il generatore di espressioni ora semplifica la creazione di espressioni in QGIS! Il builder ora mostra la descrizione per i valori definiti dai dati, compreso l'intervallo di valori attesi dall'espressione Ctrl + clic su un nome di funzione nell'espressione corrente aprir\u00e0 automaticamente l'aiuto per quella funzione Ora mostra gli indicatori per parti di espressioni con errori Mostra un elenco completo dei messaggi di errore ottenuti dall'analisi dell'espressione Form drill-down (a cascata) WIDGET Value Relation (Relazione valore): \u21b5 consente l'implementazione di filtri complessi e dinamici all'interno di moduli di attributo QGIS. La funzionalit\u00e0 pu\u00f2 essere utilizzata per implementare moduli \"drill-down\" all'interno di QGIS, in cui i valori disponibili in un campo dipendono dai valori di altri campi: Questa funzionalit\u00e0 consente agli utenti di creare espressioni \"value-relation\" basate sul valore corrente di un altro campo nella stessa form. Quando l'utente modifica il valore di un campo, le scelte disponibili in tutti i campi correlati vengono filtrate in modo che corrispondano al nuovo valore, consentendo una strategia di filtraggio gerarchica (drill down o cascading) all'interno di un modulo o nella tabella degli attributi. qui un video di Alessandro Pasotti Le espressioni implementate per realizzare quanto descritto sopra sono tre, una funzione e due variabili: current_value() ; Restituisce il valore corrente non salvato di un campo nel modulo o riga della tabella attualmente in fase di modifica. Questo sar\u00e0 diverso dai valori attuali dell'attributo della funzione per le funzioni che sono attualmente in fase di modifica o che non sono ancora state aggiunte a un livello. currente_feature ; Rappresenta la funzione attualmente in fase di modifica nel modulo o nella riga della tabella. Pu\u00f2 essere utilizzato in un contesto modulo / riga per filtrare le funzionalit\u00e0 correlate. current_geometry ; Rappresenta la geometria della feature attualmente in fase di modifica nel modulo o nella riga della tabella. Pu\u00f2 essere utilizzato in un contesto modulo / riga per filtrare le funzionalit\u00e0 correlate. intersects( buffer(@current_geometry ,1000),$geometry) NB: nella cartella esempi trovate un geopackage con i dati e un progetto esempio video:","title":"QGIS 3.2  | 22/06/2018"},{"location":"release/novita_32/#novita-rilevanti-introdotte-nella-32-bonn","text":"https://www.qgis.org/it/site/forusers/visualchangelog32/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.2 Bonn"},{"location":"release/novita_32/#generatore-di-espressioni-piu-utile","text":"Il generatore di espressioni ora semplifica la creazione di espressioni in QGIS! Il builder ora mostra la descrizione per i valori definiti dai dati, compreso l'intervallo di valori attesi dall'espressione Ctrl + clic su un nome di funzione nell'espressione corrente aprir\u00e0 automaticamente l'aiuto per quella funzione Ora mostra gli indicatori per parti di espressioni con errori Mostra un elenco completo dei messaggi di errore ottenuti dall'analisi dell'espressione","title":"Generatore di espressioni pi\u00f9 utile."},{"location":"release/novita_32/#form-drill-down-a-cascata-widget-value-relation-relazione-valore","text":"consente l'implementazione di filtri complessi e dinamici all'interno di moduli di attributo QGIS. La funzionalit\u00e0 pu\u00f2 essere utilizzata per implementare moduli \"drill-down\" all'interno di QGIS, in cui i valori disponibili in un campo dipendono dai valori di altri campi: Questa funzionalit\u00e0 consente agli utenti di creare espressioni \"value-relation\" basate sul valore corrente di un altro campo nella stessa form. Quando l'utente modifica il valore di un campo, le scelte disponibili in tutti i campi correlati vengono filtrate in modo che corrispondano al nuovo valore, consentendo una strategia di filtraggio gerarchica (drill down o cascading) all'interno di un modulo o nella tabella degli attributi. qui un video di Alessandro Pasotti Le espressioni implementate per realizzare quanto descritto sopra sono tre, una funzione e due variabili: current_value() ; Restituisce il valore corrente non salvato di un campo nel modulo o riga della tabella attualmente in fase di modifica. Questo sar\u00e0 diverso dai valori attuali dell'attributo della funzione per le funzioni che sono attualmente in fase di modifica o che non sono ancora state aggiunte a un livello. currente_feature ; Rappresenta la funzione attualmente in fase di modifica nel modulo o nella riga della tabella. Pu\u00f2 essere utilizzato in un contesto modulo / riga per filtrare le funzionalit\u00e0 correlate. current_geometry ; Rappresenta la geometria della feature attualmente in fase di modifica nel modulo o nella riga della tabella. Pu\u00f2 essere utilizzato in un contesto modulo / riga per filtrare le funzionalit\u00e0 correlate. intersects( buffer(@current_geometry ,1000),$geometry) NB: nella cartella esempi trovate un geopackage con i dati e un progetto esempio video:","title":"Form drill-down (a cascata)  WIDGET Value Relation (Relazione valore):"},{"location":"release/novita_320/","text":"Novit\u00e0 rilevanti introdotte nella 3.20 Odense \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog320/index.html espressioni \u21b5 length3D : https://github.com/qgis/QGIS/pull/41127 array_count : https://github.com/qgis/QGIS/pull/41338 array_priorize : https://github.com/qgis/QGIS/pull/41338 array_replace : https://github.com/qgis/QGIS/pull/41338 mime_type : https://github.com/qgis/QGIS/pull/41191 alias : https://github.com/qgis/QGIS/pull/42179 tabella attributi \u21b5 https://github.com/qgis/QGIS/pull/41276 GUI/UI \u21b5 icone : https://github.com/qgis/QGIS/pull/42168 finestra dialogo: https://github.com/qgis/QGIS/pull/42745 sintassi operatori: https://github.com/qgis/QGIS/pull/43134","title":"QGIS 3.20 | 21/06/2021"},{"location":"release/novita_320/#novita-rilevanti-introdotte-nella-320-odense","text":"https://www.qgis.org/it/site/forusers/visualchangelog320/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.20 Odense"},{"location":"release/novita_320/#espressioni","text":"length3D : https://github.com/qgis/QGIS/pull/41127 array_count : https://github.com/qgis/QGIS/pull/41338 array_priorize : https://github.com/qgis/QGIS/pull/41338 array_replace : https://github.com/qgis/QGIS/pull/41338 mime_type : https://github.com/qgis/QGIS/pull/41191 alias : https://github.com/qgis/QGIS/pull/42179","title":"espressioni"},{"location":"release/novita_320/#tabella-attributi","text":"https://github.com/qgis/QGIS/pull/41276","title":"tabella attributi"},{"location":"release/novita_320/#guiui","text":"icone : https://github.com/qgis/QGIS/pull/42168 finestra dialogo: https://github.com/qgis/QGIS/pull/42745 sintassi operatori: https://github.com/qgis/QGIS/pull/43134","title":"GUI/UI"},{"location":"release/novita_34/","text":"Novit\u00e0 rilevanti introdotte nella 3.4 Madeira \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog34/index.html Nuovo/i gruppo/i funzione/i nel calcolatore di campi \u21b5 Nuove funzioni \u21b5 raster_value() line_substring array_foreach generate_series array_filter to_dm to_dms hstore_to_map json_to_map map_to_hstore map_to_json Completamento codice per il costruttore di espressioni \u21b5 Cambiata la rappresentazione di array e map nelle espressioni \u21b5 array rappresentazione: prima \u2192 ora array: 1, 2, 3 \u2192 [ 1, 2, 3 ] map rappresentazione: prima \u2192 ora map: one: 1, two: 2, 3: three \u2192 {'one': 1, 'two': 2, 3: 'three'} Icone per i tipi di campo nel widget di espressioni \u21b5 Miglioramenti del field calc \u21b5 Miglioramenti help in linea di alcune funzioni \u21b5","title":"QGIS 3.4  | 26/10/2018"},{"location":"release/novita_34/#novita-rilevanti-introdotte-nella-34-madeira","text":"https://www.qgis.org/it/site/forusers/visualchangelog34/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.4 Madeira"},{"location":"release/novita_34/#nuovoi-gruppoi-funzionei-nel-calcolatore-di-campi","text":"","title":"Nuovo/i gruppo/i funzione/i nel calcolatore di campi"},{"location":"release/novita_34/#nuove-funzioni","text":"raster_value() line_substring array_foreach generate_series array_filter to_dm to_dms hstore_to_map json_to_map map_to_hstore map_to_json","title":"Nuove funzioni"},{"location":"release/novita_34/#completamento-codice-per-il-costruttore-di-espressioni","text":"","title":"Completamento codice per il costruttore di espressioni"},{"location":"release/novita_34/#cambiata-la-rappresentazione-di-array-e-map-nelle-espressioni","text":"array rappresentazione: prima \u2192 ora array: 1, 2, 3 \u2192 [ 1, 2, 3 ] map rappresentazione: prima \u2192 ora map: one: 1, two: 2, 3: three \u2192 {'one': 1, 'two': 2, 3: 'three'}","title":"Cambiata la rappresentazione di array e map nelle espressioni"},{"location":"release/novita_34/#icone-per-i-tipi-di-campo-nel-widget-di-espressioni","text":"","title":"Icone per i tipi di campo nel widget di espressioni"},{"location":"release/novita_34/#miglioramenti-del-field-calc","text":"","title":"Miglioramenti del field calc"},{"location":"release/novita_34/#miglioramenti-help-in-linea-di-alcune-funzioni","text":"","title":"Miglioramenti help in linea di alcune funzioni"},{"location":"release/novita_36/","text":"Novit\u00e0 rilevanti introdotte nella 3.6 Noosa \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog36/index.html Nuove funzioni \u21b5 Gruppo Geometria \u21b5 force_rhr make_rectangle_3points make_square Gruppo layer della mappa \u21b5 decode_uri Gruppo Condizioni \u21b5 nullif try Gruppo maps \u21b5 from_json to_json Gruppo Record e Attributi \u21b5 sqlite_fetch_and_increment Interfaccia calcolatore campi \u21b5 sposta la casella di gruppo valore nell'area di aiuto \u21b5 Show Help-Values \u21b5 Abilita l'uso di parentesi quadre per le map e array \u21b5","title":"QGIS 3.6  | 22/02/2019"},{"location":"release/novita_36/#novita-rilevanti-introdotte-nella-36-noosa","text":"https://www.qgis.org/it/site/forusers/visualchangelog36/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.6 Noosa"},{"location":"release/novita_36/#nuove-funzioni","text":"","title":"Nuove funzioni"},{"location":"release/novita_36/#gruppo-geometria","text":"force_rhr make_rectangle_3points make_square","title":"Gruppo Geometria"},{"location":"release/novita_36/#gruppo-layer-della-mappa","text":"decode_uri","title":"Gruppo layer della mappa"},{"location":"release/novita_36/#gruppo-condizioni","text":"nullif try","title":"Gruppo Condizioni"},{"location":"release/novita_36/#gruppo-maps","text":"from_json to_json","title":"Gruppo maps"},{"location":"release/novita_36/#gruppo-record-e-attributi","text":"sqlite_fetch_and_increment","title":"Gruppo Record e Attributi"},{"location":"release/novita_36/#interfaccia-calcolatore-campi","text":"","title":"Interfaccia calcolatore campi"},{"location":"release/novita_36/#sposta-la-casella-di-gruppo-valore-nellarea-di-aiuto","text":"","title":"sposta la casella di gruppo valore nell'area di aiuto"},{"location":"release/novita_36/#show-help-values","text":"","title":"Show Help-Values"},{"location":"release/novita_36/#abilita-luso-di-parentesi-quadre-per-le-map-e-array","text":"","title":"Abilita l'uso di parentesi quadre per le map e array"},{"location":"release/novita_38/","text":"Novit\u00e0 rilevanti introdotte nella 3.8 Zanzibar \u21b5 https://www.qgis.org/it/site/forusers/visualchangelog38/index.html Nuove funzioni \u21b5 Gruppo Aggregates \u21b5 concatenate_unique - PR #9714 Gruppo Arrays \u21b5 array_all - PR #9756 Negative index support \u21b5 [ Negative index support ] PR #9490 Gruppo Files and Paths \u21b5 [ Files and Paths ] PR #9885 Anteprima valori Expression builder \u21b5 PR 10037","title":"QGIS 3.8  | 21/06/2019"},{"location":"release/novita_38/#novita-rilevanti-introdotte-nella-38-zanzibar","text":"https://www.qgis.org/it/site/forusers/visualchangelog38/index.html","title":"Novit\u00e0 rilevanti introdotte nella 3.8 Zanzibar"},{"location":"release/novita_38/#nuove-funzioni","text":"","title":"Nuove funzioni"},{"location":"release/novita_38/#gruppo-aggregates","text":"concatenate_unique - PR #9714","title":"Gruppo Aggregates"},{"location":"release/novita_38/#gruppo-arrays","text":"array_all - PR #9756","title":"Gruppo Arrays"},{"location":"release/novita_38/#negative-index-support","text":"[ Negative index support ] PR #9490","title":"Negative index support"},{"location":"release/novita_38/#gruppo-files-and-paths","text":"[ Files and Paths ] PR #9885","title":"Gruppo Files and Paths"},{"location":"release/novita_38/#anteprima-valori-expression-builder","text":"PR 10037","title":"Anteprima valori Expression builder"},{"location":"theme_override/index_old/","text":"","title":"HfcQGIS"},{"location":"webmaster/gbvitrano/","text":"Webmaster \u21b5 Questo sito \u00e8 stato realizzato da: Giovan Battista Vitrano \u21b5 Giovan Battista Vitrano \u00e8 famoso con il nikname gbvitrano . Contatti \u21b5 Twitter Facebook coseerobe.gbvitrano.it","title":"Webmaster"},{"location":"webmaster/gbvitrano/#webmaster","text":"Questo sito \u00e8 stato realizzato da:","title":"Webmaster"},{"location":"webmaster/gbvitrano/#giovan-battista-vitrano","text":"Giovan Battista Vitrano \u00e8 famoso con il nikname gbvitrano .","title":"Giovan Battista Vitrano"},{"location":"webmaster/gbvitrano/#contatti","text":"Twitter Facebook coseerobe.gbvitrano.it","title":"Contatti"}]}